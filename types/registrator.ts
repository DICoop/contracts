// Generated by eosio-abi2ts 1.2.2 - eosio::abi/1.2

export type Asset = string
export type Name = string
export type PublicKey = string
export type TimePointSec = string
export type Uint64 = number | string

export interface Accounts {
  username: Name
  referer: Name
  registrator: Name
  type: Name
  status: Name
  meta: string
  reputation: Uint64
  registration_amount: Asset
  registered_at: TimePointSec
  signature_expires_at: TimePointSec
}

export interface Balances extends BalancesBase {
}

export interface BalancesBase {
  id: Uint64
  contract: Name
  quantity: Asset
}

export interface Changekey {
  username: Name
  public_key: PublicKey
}

export interface Confirmreg {
  coopname: Name
  member: Name
}

export interface Document {
  hash: string
  pkey: string
  sign: string
  meta: string
}

export interface Joincoop {
  coopname: Name
  username: Name
  document: Document
}

export interface Newaccount {
  registrator: Name
  referer: Name
  username: Name
  public_key: PublicKey
  signature_hash: string
  meta: string
}

export interface OrgData {
  storage: Storage
  is_cooperative: boolean
  coop_type: Name
  token_contract: Name
  announce: string
  description: string
  initial: Asset
  minimum: Asset
}

export interface Orgs {
  username: Name
  parent_username: Name
  verifications: Verification[]
  storages: Storage[]
  is_cooperative: boolean
  is_active: boolean
  coop_type: Name
  token_contract: Name
  announce: string
  description: string
  registration: Asset
  initial: Asset
  minimum: Asset
}

export interface PlotData {
  storage: Storage
  announce: string
  description: string
}

export interface Regorg {
  coopname: Name
  username: Name
  params: OrgData
}

export interface Regplot {
  coopname: Name
  username: Name
  params: PlotData
}

export interface Reguser {
  coopname: Name
  username: Name
  storage: Storage
}

export interface Storage {
  storage_username: Name
}

export interface Update {
  username: Name
  meta: string
}

export interface Users {
  username: Name
  is_active: boolean
  storages: Storage[]
  verifications: Verification[]
}

export interface Verificate {
  username: Name
  procedure: Name
}

export interface Verification {
  verificator: Name
  is_verified: boolean
  procedure: Name
  created_at: TimePointSec
  last_update: TimePointSec
  notice: string
}

