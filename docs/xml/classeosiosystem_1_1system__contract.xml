<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="ru">
  <compounddef id="classeosiosystem_1_1system__contract" kind="class" language="C++" prot="public">
    <compoundname>eosiosystem::system_contract</compoundname>
    <basecompoundref refid="classeosiosystem_1_1native" prot="public" virt="non-virtual">eosiosystem::native</basecompoundref>
    <includes refid="eosio_8system_8hpp" local="no">eosio.system.hpp</includes>
    <innerclass refid="classeosiosystem_1_1system__contract_1_1registration" prot="private">eosiosystem::system_contract::registration</innerclass>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classeosiosystem_1_1system__contract_1aba8828e31f9dc03a30c0888689f91d86" prot="public" static="no">
        <type>eosio::action_wrapper&lt;&quot;init&quot;_n, &amp;<ref refid="classeosiosystem_1_1system__contract_1a63afe62bd82d52230be1e0ded1bdb644" kindref="member">system_contract::init</ref> &gt;</type>
        <definition>using eosiosystem::system_contract::init_action =  eosio::action_wrapper&lt;&quot;init&quot;_n, &amp;system_contract::init&gt;</definition>
        <argsstring></argsstring>
        <name>init_action</name>
        <qualifiedname>eosiosystem::system_contract::init_action</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1365" column="10" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="1365" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classeosiosystem_1_1system__contract_1a04f177dce6521eb90e5a3b39a384abda" prot="public" static="no">
        <type>eosio::action_wrapper&lt;&quot;init&quot;_n, &amp;<ref refid="classeosiosystem_1_1native_1a225a51ac200eb80061ecbea5980e0b7b" kindref="member">system_contract::setcode</ref> &gt;</type>
        <definition>using eosiosystem::system_contract::setcode_action =  eosio::action_wrapper&lt;&quot;init&quot;_n, &amp;system_contract::setcode&gt;</definition>
        <argsstring></argsstring>
        <name>setcode_action</name>
        <qualifiedname>eosiosystem::system_contract::setcode_action</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1366" column="10" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="1366" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classeosiosystem_1_1system__contract_1ac0dff966e1b20b198bd7057c2d643538" prot="public" static="no">
        <type>eosio::action_wrapper&lt;&quot;initemission&quot;_n, &amp;<ref refid="classeosiosystem_1_1system__contract_1af6ed697e2d198ca5bce29cbacb682490" kindref="member">system_contract::initemission</ref> &gt;</type>
        <definition>using eosiosystem::system_contract::initemission_action =  eosio::action_wrapper&lt;&quot;initemission&quot;_n, &amp;system_contract::initemission&gt;</definition>
        <argsstring></argsstring>
        <name>initemission_action</name>
        <qualifiedname>eosiosystem::system_contract::initemission_action</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1367" column="10" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="1367" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classeosiosystem_1_1system__contract_1a405cf7f71120642d5d043fa4648be9b1" prot="public" static="no">
        <type>eosio::action_wrapper&lt;&quot;setacctram&quot;_n, &amp;<ref refid="classeosiosystem_1_1system__contract_1acdd7c75402f43876338d33649d2e6903" kindref="member">system_contract::setacctram</ref> &gt;</type>
        <definition>using eosiosystem::system_contract::setacctram_action =  eosio::action_wrapper&lt;&quot;setacctram&quot;_n, &amp;system_contract::setacctram&gt;</definition>
        <argsstring></argsstring>
        <name>setacctram_action</name>
        <qualifiedname>eosiosystem::system_contract::setacctram_action</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1368" column="10" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="1368" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classeosiosystem_1_1system__contract_1add114cf85734d0c85edacb0eb7167883" prot="public" static="no">
        <type>eosio::action_wrapper&lt;&quot;setacctnet&quot;_n, &amp;<ref refid="classeosiosystem_1_1system__contract_1aa4559928f468c62867916d1251fa33b3" kindref="member">system_contract::setacctnet</ref> &gt;</type>
        <definition>using eosiosystem::system_contract::setacctnet_action =  eosio::action_wrapper&lt;&quot;setacctnet&quot;_n, &amp;system_contract::setacctnet&gt;</definition>
        <argsstring></argsstring>
        <name>setacctnet_action</name>
        <qualifiedname>eosiosystem::system_contract::setacctnet_action</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1369" column="10" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="1369" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classeosiosystem_1_1system__contract_1a7a538179a1332d7f139e881cff0c04cc" prot="public" static="no">
        <type>eosio::action_wrapper&lt;&quot;setacctcpu&quot;_n, &amp;<ref refid="classeosiosystem_1_1system__contract_1a9a005d230746b68cafa934a067f287af" kindref="member">system_contract::setacctcpu</ref> &gt;</type>
        <definition>using eosiosystem::system_contract::setacctcpu_action =  eosio::action_wrapper&lt;&quot;setacctcpu&quot;_n, &amp;system_contract::setacctcpu&gt;</definition>
        <argsstring></argsstring>
        <name>setacctcpu_action</name>
        <qualifiedname>eosiosystem::system_contract::setacctcpu_action</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1370" column="10" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="1370" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classeosiosystem_1_1system__contract_1a0cca489c98b5874f5493f4447e7c52a9" prot="public" static="no">
        <type>eosio::action_wrapper&lt;&quot;activate&quot;_n, &amp;<ref refid="classeosiosystem_1_1system__contract_1a1873247483b285e19010b7469419a60d" kindref="member">system_contract::activate</ref> &gt;</type>
        <definition>using eosiosystem::system_contract::activate_action =  eosio::action_wrapper&lt;&quot;activate&quot;_n, &amp;system_contract::activate&gt;</definition>
        <argsstring></argsstring>
        <name>activate_action</name>
        <qualifiedname>eosiosystem::system_contract::activate_action</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1371" column="10" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="1371" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classeosiosystem_1_1system__contract_1a1f08c7b7252348f1b64ad4f2699c4de5" prot="public" static="no">
        <type>eosio::action_wrapper&lt;&quot;delegatebw&quot;_n, &amp;<ref refid="classeosiosystem_1_1system__contract_1aa54b498595abb1a3ad9c62c597d4f7b5" kindref="member">system_contract::delegatebw</ref> &gt;</type>
        <definition>using eosiosystem::system_contract::delegatebw_action =  eosio::action_wrapper&lt;&quot;delegatebw&quot;_n, &amp;system_contract::delegatebw&gt;</definition>
        <argsstring></argsstring>
        <name>delegatebw_action</name>
        <qualifiedname>eosiosystem::system_contract::delegatebw_action</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1372" column="10" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="1372" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classeosiosystem_1_1system__contract_1af86584ee57497b9c74b031060416f63b" prot="public" static="no">
        <type>eosio::action_wrapper&lt;&quot;deposit&quot;_n, &amp;<ref refid="classeosiosystem_1_1system__contract_1a99e6b1b401c6a8a023f61ed2b52e98d7" kindref="member">system_contract::deposit</ref> &gt;</type>
        <definition>using eosiosystem::system_contract::deposit_action =  eosio::action_wrapper&lt;&quot;deposit&quot;_n, &amp;system_contract::deposit&gt;</definition>
        <argsstring></argsstring>
        <name>deposit_action</name>
        <qualifiedname>eosiosystem::system_contract::deposit_action</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1373" column="10" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="1373" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classeosiosystem_1_1system__contract_1a8234e4f9251f7d72ba750d507e2db304" prot="public" static="no">
        <type>eosio::action_wrapper&lt;&quot;withdraw&quot;_n, &amp;<ref refid="classeosiosystem_1_1system__contract_1a45eea3c4ce35174eb1c3ad1e64954d5e" kindref="member">system_contract::withdraw</ref> &gt;</type>
        <definition>using eosiosystem::system_contract::withdraw_action =  eosio::action_wrapper&lt;&quot;withdraw&quot;_n, &amp;system_contract::withdraw&gt;</definition>
        <argsstring></argsstring>
        <name>withdraw_action</name>
        <qualifiedname>eosiosystem::system_contract::withdraw_action</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1374" column="10" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="1374" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classeosiosystem_1_1system__contract_1a6d5c3ebf5382ac0b4d56869192e9823f" prot="public" static="no">
        <type>eosio::action_wrapper&lt;&quot;buyrex&quot;_n, &amp;<ref refid="classeosiosystem_1_1system__contract_1a36aebc85b90ecf7e5389f8daea64592a" kindref="member">system_contract::buyrex</ref> &gt;</type>
        <definition>using eosiosystem::system_contract::buyrex_action =  eosio::action_wrapper&lt;&quot;buyrex&quot;_n, &amp;system_contract::buyrex&gt;</definition>
        <argsstring></argsstring>
        <name>buyrex_action</name>
        <qualifiedname>eosiosystem::system_contract::buyrex_action</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1375" column="10" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="1375" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classeosiosystem_1_1system__contract_1a0894cc0e8e2fa25b39e02d4127071677" prot="public" static="no">
        <type>eosio::action_wrapper&lt;&quot;unstaketorex&quot;_n, &amp;<ref refid="classeosiosystem_1_1system__contract_1a94675167323c97d0dcdc92c5b7f0df60" kindref="member">system_contract::unstaketorex</ref> &gt;</type>
        <definition>using eosiosystem::system_contract::unstaketorex_action =  eosio::action_wrapper&lt;&quot;unstaketorex&quot;_n, &amp;system_contract::unstaketorex&gt;</definition>
        <argsstring></argsstring>
        <name>unstaketorex_action</name>
        <qualifiedname>eosiosystem::system_contract::unstaketorex_action</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1376" column="10" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="1376" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classeosiosystem_1_1system__contract_1a89e8fd4a28f19fe76c015bdaacc8cb74" prot="public" static="no">
        <type>eosio::action_wrapper&lt;&quot;sellrex&quot;_n, &amp;<ref refid="classeosiosystem_1_1system__contract_1a9ee2d79b7e9c1432f312535936e4848f" kindref="member">system_contract::sellrex</ref> &gt;</type>
        <definition>using eosiosystem::system_contract::sellrex_action =  eosio::action_wrapper&lt;&quot;sellrex&quot;_n, &amp;system_contract::sellrex&gt;</definition>
        <argsstring></argsstring>
        <name>sellrex_action</name>
        <qualifiedname>eosiosystem::system_contract::sellrex_action</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1377" column="10" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="1377" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classeosiosystem_1_1system__contract_1a9e06226a106c361f7847b2070ccfb136" prot="public" static="no">
        <type>eosio::action_wrapper&lt;&quot;cnclrexorder&quot;_n, &amp;<ref refid="classeosiosystem_1_1system__contract_1ac4bc1aa3fe5d72c9b1ed8af258c9f935" kindref="member">system_contract::cnclrexorder</ref> &gt;</type>
        <definition>using eosiosystem::system_contract::cnclrexorder_action =  eosio::action_wrapper&lt;&quot;cnclrexorder&quot;_n, &amp;system_contract::cnclrexorder&gt;</definition>
        <argsstring></argsstring>
        <name>cnclrexorder_action</name>
        <qualifiedname>eosiosystem::system_contract::cnclrexorder_action</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1378" column="10" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="1378" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classeosiosystem_1_1system__contract_1a766a5521fa602588324d62ede1c3bda9" prot="public" static="no">
        <type>eosio::action_wrapper&lt;&quot;rentcpu&quot;_n, &amp;<ref refid="classeosiosystem_1_1system__contract_1a2babe24ecc07b5576ce48c0b7220e7f4" kindref="member">system_contract::rentcpu</ref> &gt;</type>
        <definition>using eosiosystem::system_contract::rentcpu_action =  eosio::action_wrapper&lt;&quot;rentcpu&quot;_n, &amp;system_contract::rentcpu&gt;</definition>
        <argsstring></argsstring>
        <name>rentcpu_action</name>
        <qualifiedname>eosiosystem::system_contract::rentcpu_action</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1379" column="10" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="1379" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classeosiosystem_1_1system__contract_1aa6235054ddca972ad4ecd1eff6e3d589" prot="public" static="no">
        <type>eosio::action_wrapper&lt;&quot;rentnet&quot;_n, &amp;<ref refid="classeosiosystem_1_1system__contract_1a89b5465c60b08ecb06538ea162751319" kindref="member">system_contract::rentnet</ref> &gt;</type>
        <definition>using eosiosystem::system_contract::rentnet_action =  eosio::action_wrapper&lt;&quot;rentnet&quot;_n, &amp;system_contract::rentnet&gt;</definition>
        <argsstring></argsstring>
        <name>rentnet_action</name>
        <qualifiedname>eosiosystem::system_contract::rentnet_action</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1380" column="10" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="1380" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classeosiosystem_1_1system__contract_1a66a4dbb5b96180f562f5e1823fea993e" prot="public" static="no">
        <type>eosio::action_wrapper&lt;&quot;fundcpuloan&quot;_n, &amp;<ref refid="classeosiosystem_1_1system__contract_1aed60ee281d5277819ed1335322b2d53f" kindref="member">system_contract::fundcpuloan</ref> &gt;</type>
        <definition>using eosiosystem::system_contract::fundcpuloan_action =  eosio::action_wrapper&lt;&quot;fundcpuloan&quot;_n, &amp;system_contract::fundcpuloan&gt;</definition>
        <argsstring></argsstring>
        <name>fundcpuloan_action</name>
        <qualifiedname>eosiosystem::system_contract::fundcpuloan_action</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1381" column="10" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="1381" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classeosiosystem_1_1system__contract_1a155a34b110e71371cc288e13d7078220" prot="public" static="no">
        <type>eosio::action_wrapper&lt;&quot;fundnetloan&quot;_n, &amp;<ref refid="classeosiosystem_1_1system__contract_1a8e99bf65da50dc92089140618112db27" kindref="member">system_contract::fundnetloan</ref> &gt;</type>
        <definition>using eosiosystem::system_contract::fundnetloan_action =  eosio::action_wrapper&lt;&quot;fundnetloan&quot;_n, &amp;system_contract::fundnetloan&gt;</definition>
        <argsstring></argsstring>
        <name>fundnetloan_action</name>
        <qualifiedname>eosiosystem::system_contract::fundnetloan_action</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1382" column="10" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="1382" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classeosiosystem_1_1system__contract_1a0b36044d4918b6220e81221039df8ea9" prot="public" static="no">
        <type>eosio::action_wrapper&lt;&quot;defcpuloan&quot;_n, &amp;<ref refid="classeosiosystem_1_1system__contract_1a94e2f4698dd0ad80e4252a772d424481" kindref="member">system_contract::defcpuloan</ref> &gt;</type>
        <definition>using eosiosystem::system_contract::defcpuloan_action =  eosio::action_wrapper&lt;&quot;defcpuloan&quot;_n, &amp;system_contract::defcpuloan&gt;</definition>
        <argsstring></argsstring>
        <name>defcpuloan_action</name>
        <qualifiedname>eosiosystem::system_contract::defcpuloan_action</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1383" column="10" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="1383" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classeosiosystem_1_1system__contract_1a57a2eb14c8fe00b86261c2664cc35148" prot="public" static="no">
        <type>eosio::action_wrapper&lt;&quot;defnetloan&quot;_n, &amp;<ref refid="classeosiosystem_1_1system__contract_1a56a54ec0ca8f37271fbcbc9cc5181145" kindref="member">system_contract::defnetloan</ref> &gt;</type>
        <definition>using eosiosystem::system_contract::defnetloan_action =  eosio::action_wrapper&lt;&quot;defnetloan&quot;_n, &amp;system_contract::defnetloan&gt;</definition>
        <argsstring></argsstring>
        <name>defnetloan_action</name>
        <qualifiedname>eosiosystem::system_contract::defnetloan_action</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1384" column="10" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="1384" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classeosiosystem_1_1system__contract_1a3b0c64a9fcbc3446a2ca563ffcbce106" prot="public" static="no">
        <type>eosio::action_wrapper&lt;&quot;updaterex&quot;_n, &amp;<ref refid="classeosiosystem_1_1system__contract_1a33a33fedadd8b07f8b9fcee22e1a966d" kindref="member">system_contract::updaterex</ref> &gt;</type>
        <definition>using eosiosystem::system_contract::updaterex_action =  eosio::action_wrapper&lt;&quot;updaterex&quot;_n, &amp;system_contract::updaterex&gt;</definition>
        <argsstring></argsstring>
        <name>updaterex_action</name>
        <qualifiedname>eosiosystem::system_contract::updaterex_action</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1385" column="10" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="1385" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classeosiosystem_1_1system__contract_1a7484d9db011093f3eec1b6de9e98a51b" prot="public" static="no">
        <type>eosio::action_wrapper&lt;&quot;rexexec&quot;_n, &amp;<ref refid="classeosiosystem_1_1system__contract_1a21d675936f040b2dcdcebff3765a60a7" kindref="member">system_contract::rexexec</ref> &gt;</type>
        <definition>using eosiosystem::system_contract::rexexec_action =  eosio::action_wrapper&lt;&quot;rexexec&quot;_n, &amp;system_contract::rexexec&gt;</definition>
        <argsstring></argsstring>
        <name>rexexec_action</name>
        <qualifiedname>eosiosystem::system_contract::rexexec_action</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1386" column="10" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="1386" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classeosiosystem_1_1system__contract_1aeae78fbfa51ce68d6a58711007a83177" prot="public" static="no">
        <type>eosio::action_wrapper&lt;&quot;setrex&quot;_n, &amp;<ref refid="classeosiosystem_1_1system__contract_1a1b875a922b7ab8079b742eb8e714ae48" kindref="member">system_contract::setrex</ref> &gt;</type>
        <definition>using eosiosystem::system_contract::setrex_action =  eosio::action_wrapper&lt;&quot;setrex&quot;_n, &amp;system_contract::setrex&gt;</definition>
        <argsstring></argsstring>
        <name>setrex_action</name>
        <qualifiedname>eosiosystem::system_contract::setrex_action</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1387" column="10" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="1387" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classeosiosystem_1_1system__contract_1af03ad94c5ca5fd992199e686f075a2ba" prot="public" static="no">
        <type>eosio::action_wrapper&lt;&quot;mvtosavings&quot;_n, &amp;<ref refid="classeosiosystem_1_1system__contract_1ac673c662e873032e4a67b1d888b23e6f" kindref="member">system_contract::mvtosavings</ref> &gt;</type>
        <definition>using eosiosystem::system_contract::mvtosavings_action =  eosio::action_wrapper&lt;&quot;mvtosavings&quot;_n, &amp;system_contract::mvtosavings&gt;</definition>
        <argsstring></argsstring>
        <name>mvtosavings_action</name>
        <qualifiedname>eosiosystem::system_contract::mvtosavings_action</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1388" column="10" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="1388" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classeosiosystem_1_1system__contract_1adfb546aed7a8a0100202440f5fd5b619" prot="public" static="no">
        <type>eosio::action_wrapper&lt;&quot;mvfrsavings&quot;_n, &amp;<ref refid="classeosiosystem_1_1system__contract_1a975cbc9b4670f245c76b0e3f3c86136f" kindref="member">system_contract::mvfrsavings</ref> &gt;</type>
        <definition>using eosiosystem::system_contract::mvfrsavings_action =  eosio::action_wrapper&lt;&quot;mvfrsavings&quot;_n, &amp;system_contract::mvfrsavings&gt;</definition>
        <argsstring></argsstring>
        <name>mvfrsavings_action</name>
        <qualifiedname>eosiosystem::system_contract::mvfrsavings_action</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1389" column="10" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="1389" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classeosiosystem_1_1system__contract_1a583814bb86c124ededb026ad4589de1c" prot="public" static="no">
        <type>eosio::action_wrapper&lt;&quot;consolidate&quot;_n, &amp;<ref refid="classeosiosystem_1_1system__contract_1ac6c59d9470ffe96336455b92804aa4de" kindref="member">system_contract::consolidate</ref> &gt;</type>
        <definition>using eosiosystem::system_contract::consolidate_action =  eosio::action_wrapper&lt;&quot;consolidate&quot;_n, &amp;system_contract::consolidate&gt;</definition>
        <argsstring></argsstring>
        <name>consolidate_action</name>
        <qualifiedname>eosiosystem::system_contract::consolidate_action</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1390" column="10" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="1390" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classeosiosystem_1_1system__contract_1aee3673f21c82028044f3368ada9186f2" prot="public" static="no">
        <type>eosio::action_wrapper&lt;&quot;closerex&quot;_n, &amp;<ref refid="classeosiosystem_1_1system__contract_1a0a1b64d68fa08a63ee570a58d45e5626" kindref="member">system_contract::closerex</ref> &gt;</type>
        <definition>using eosiosystem::system_contract::closerex_action =  eosio::action_wrapper&lt;&quot;closerex&quot;_n, &amp;system_contract::closerex&gt;</definition>
        <argsstring></argsstring>
        <name>closerex_action</name>
        <qualifiedname>eosiosystem::system_contract::closerex_action</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1391" column="10" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="1391" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classeosiosystem_1_1system__contract_1a5751bdd1f68be3270595b4bba1a241f4" prot="public" static="no">
        <type>eosio::action_wrapper&lt;&quot;undelegatebw&quot;_n, &amp;<ref refid="classeosiosystem_1_1system__contract_1a4db0be2c90d342ecd269fdbb57c51091" kindref="member">system_contract::undelegatebw</ref> &gt;</type>
        <definition>using eosiosystem::system_contract::undelegatebw_action =  eosio::action_wrapper&lt;&quot;undelegatebw&quot;_n, &amp;system_contract::undelegatebw&gt;</definition>
        <argsstring></argsstring>
        <name>undelegatebw_action</name>
        <qualifiedname>eosiosystem::system_contract::undelegatebw_action</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1392" column="10" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="1392" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classeosiosystem_1_1system__contract_1a379cc18be05f0d81a71f15a52f7c6f48" prot="public" static="no">
        <type>eosio::action_wrapper&lt;&quot;buyram&quot;_n, &amp;<ref refid="classeosiosystem_1_1system__contract_1a04be77ea83f87d1533606390c37cf5d1" kindref="member">system_contract::buyram</ref> &gt;</type>
        <definition>using eosiosystem::system_contract::buyram_action =  eosio::action_wrapper&lt;&quot;buyram&quot;_n, &amp;system_contract::buyram&gt;</definition>
        <argsstring></argsstring>
        <name>buyram_action</name>
        <qualifiedname>eosiosystem::system_contract::buyram_action</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1393" column="10" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="1393" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classeosiosystem_1_1system__contract_1af7ddbe541c404f6a8d1094b8278e6128" prot="public" static="no">
        <type>eosio::action_wrapper&lt;&quot;buyrambytes&quot;_n, &amp;<ref refid="classeosiosystem_1_1system__contract_1a93950629ac6f931b47542727a5411097" kindref="member">system_contract::buyrambytes</ref> &gt;</type>
        <definition>using eosiosystem::system_contract::buyrambytes_action =  eosio::action_wrapper&lt;&quot;buyrambytes&quot;_n, &amp;system_contract::buyrambytes&gt;</definition>
        <argsstring></argsstring>
        <name>buyrambytes_action</name>
        <qualifiedname>eosiosystem::system_contract::buyrambytes_action</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1394" column="10" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="1394" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classeosiosystem_1_1system__contract_1a5ef59ea3e3db4bb9bbe075531109d687" prot="public" static="no">
        <type>eosio::action_wrapper&lt;&quot;refund&quot;_n, &amp;<ref refid="classeosiosystem_1_1system__contract_1a10a63e006f9869caeaf2592bdfbccc42" kindref="member">system_contract::refund</ref> &gt;</type>
        <definition>using eosiosystem::system_contract::refund_action =  eosio::action_wrapper&lt;&quot;refund&quot;_n, &amp;system_contract::refund&gt;</definition>
        <argsstring></argsstring>
        <name>refund_action</name>
        <qualifiedname>eosiosystem::system_contract::refund_action</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1395" column="10" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="1395" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classeosiosystem_1_1system__contract_1ab5efbdbade110f33fed3c39083d3f76f" prot="public" static="no">
        <type>eosio::action_wrapper&lt;&quot;regproducer&quot;_n, &amp;<ref refid="classeosiosystem_1_1system__contract_1a252441c7b5811068d336f37ab627ecd9" kindref="member">system_contract::regproducer</ref> &gt;</type>
        <definition>using eosiosystem::system_contract::regproducer_action =  eosio::action_wrapper&lt;&quot;regproducer&quot;_n, &amp;system_contract::regproducer&gt;</definition>
        <argsstring></argsstring>
        <name>regproducer_action</name>
        <qualifiedname>eosiosystem::system_contract::regproducer_action</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1396" column="10" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="1396" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classeosiosystem_1_1system__contract_1ae39dfe220205b48d192a90abc3e790da" prot="public" static="no">
        <type>eosio::action_wrapper&lt;&quot;regproducer2&quot;_n, &amp;<ref refid="classeosiosystem_1_1system__contract_1a6c1143de786b7d7601ac0b0968cb0f19" kindref="member">system_contract::regproducer2</ref> &gt;</type>
        <definition>using eosiosystem::system_contract::regproducer2_action =  eosio::action_wrapper&lt;&quot;regproducer2&quot;_n, &amp;system_contract::regproducer2&gt;</definition>
        <argsstring></argsstring>
        <name>regproducer2_action</name>
        <qualifiedname>eosiosystem::system_contract::regproducer2_action</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1397" column="10" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="1397" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classeosiosystem_1_1system__contract_1a34d06c5e737193d6cf707edc7d57407e" prot="public" static="no">
        <type>eosio::action_wrapper&lt;&quot;unregprod&quot;_n, &amp;<ref refid="classeosiosystem_1_1system__contract_1a0b8c45d3226929472bc5785742c05152" kindref="member">system_contract::unregprod</ref> &gt;</type>
        <definition>using eosiosystem::system_contract::unregprod_action =  eosio::action_wrapper&lt;&quot;unregprod&quot;_n, &amp;system_contract::unregprod&gt;</definition>
        <argsstring></argsstring>
        <name>unregprod_action</name>
        <qualifiedname>eosiosystem::system_contract::unregprod_action</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1398" column="10" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="1398" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classeosiosystem_1_1system__contract_1a4caad060672784b32a36a2d634a5f3b3" prot="public" static="no">
        <type>eosio::action_wrapper&lt;&quot;setram&quot;_n, &amp;<ref refid="classeosiosystem_1_1system__contract_1ad8a6eb47fd97c9f243019d93916ff78f" kindref="member">system_contract::setram</ref> &gt;</type>
        <definition>using eosiosystem::system_contract::setram_action =  eosio::action_wrapper&lt;&quot;setram&quot;_n, &amp;system_contract::setram&gt;</definition>
        <argsstring></argsstring>
        <name>setram_action</name>
        <qualifiedname>eosiosystem::system_contract::setram_action</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1399" column="10" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="1399" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classeosiosystem_1_1system__contract_1aad4ad84241c38c3541a0438fbca0cc9b" prot="public" static="no">
        <type>eosio::action_wrapper&lt;&quot;setramrate&quot;_n, &amp;<ref refid="classeosiosystem_1_1system__contract_1a7d984add31b6060bb59d472f9f1bd1a1" kindref="member">system_contract::setramrate</ref> &gt;</type>
        <definition>using eosiosystem::system_contract::setramrate_action =  eosio::action_wrapper&lt;&quot;setramrate&quot;_n, &amp;system_contract::setramrate&gt;</definition>
        <argsstring></argsstring>
        <name>setramrate_action</name>
        <qualifiedname>eosiosystem::system_contract::setramrate_action</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1400" column="10" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="1400" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classeosiosystem_1_1system__contract_1aab2cd194b5dbe033163f2ed21c28ebc4" prot="public" static="no">
        <type>eosio::action_wrapper&lt;&quot;voteproducer&quot;_n, &amp;<ref refid="classeosiosystem_1_1system__contract_1a19d51a2b9b57ffb656612c280ee4ab4e" kindref="member">system_contract::voteproducer</ref> &gt;</type>
        <definition>using eosiosystem::system_contract::voteproducer_action =  eosio::action_wrapper&lt;&quot;voteproducer&quot;_n, &amp;system_contract::voteproducer&gt;</definition>
        <argsstring></argsstring>
        <name>voteproducer_action</name>
        <qualifiedname>eosiosystem::system_contract::voteproducer_action</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1401" column="10" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="1401" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classeosiosystem_1_1system__contract_1aad3da6aae1bb02b7c177b98796a5107a" prot="public" static="no">
        <type>eosio::action_wrapper&lt;&quot;voteupdate&quot;_n, &amp;<ref refid="classeosiosystem_1_1system__contract_1afd8f9ea7890c647010bc9bccdcda6ba9" kindref="member">system_contract::voteupdate</ref> &gt;</type>
        <definition>using eosiosystem::system_contract::voteupdate_action =  eosio::action_wrapper&lt;&quot;voteupdate&quot;_n, &amp;system_contract::voteupdate&gt;</definition>
        <argsstring></argsstring>
        <name>voteupdate_action</name>
        <qualifiedname>eosiosystem::system_contract::voteupdate_action</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1402" column="10" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="1402" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classeosiosystem_1_1system__contract_1a8b1c5e40db2dd35043dc289fec274da2" prot="public" static="no">
        <type>eosio::action_wrapper&lt;&quot;regproxy&quot;_n, &amp;<ref refid="classeosiosystem_1_1system__contract_1a7192c64e5a9d0b9b202390dbfade0858" kindref="member">system_contract::regproxy</ref> &gt;</type>
        <definition>using eosiosystem::system_contract::regproxy_action =  eosio::action_wrapper&lt;&quot;regproxy&quot;_n, &amp;system_contract::regproxy&gt;</definition>
        <argsstring></argsstring>
        <name>regproxy_action</name>
        <qualifiedname>eosiosystem::system_contract::regproxy_action</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1403" column="10" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="1403" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classeosiosystem_1_1system__contract_1a6fb5d3547618397ee9411fe31c549565" prot="public" static="no">
        <type>eosio::action_wrapper&lt;&quot;claimrewards&quot;_n, &amp;<ref refid="classeosiosystem_1_1system__contract_1a34b35d1f073383e599d4e2bb56e20524" kindref="member">system_contract::claimrewards</ref> &gt;</type>
        <definition>using eosiosystem::system_contract::claimrewards_action =  eosio::action_wrapper&lt;&quot;claimrewards&quot;_n, &amp;system_contract::claimrewards&gt;</definition>
        <argsstring></argsstring>
        <name>claimrewards_action</name>
        <qualifiedname>eosiosystem::system_contract::claimrewards_action</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1404" column="10" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="1404" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classeosiosystem_1_1system__contract_1a9cd7fa6413479ac6ffe3e548b847ea64" prot="public" static="no">
        <type>eosio::action_wrapper&lt;&quot;rmvproducer&quot;_n, &amp;<ref refid="classeosiosystem_1_1system__contract_1a2a41dc1871059a536a55626b8c76f5b9" kindref="member">system_contract::rmvproducer</ref> &gt;</type>
        <definition>using eosiosystem::system_contract::rmvproducer_action =  eosio::action_wrapper&lt;&quot;rmvproducer&quot;_n, &amp;system_contract::rmvproducer&gt;</definition>
        <argsstring></argsstring>
        <name>rmvproducer_action</name>
        <qualifiedname>eosiosystem::system_contract::rmvproducer_action</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1405" column="10" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="1405" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classeosiosystem_1_1system__contract_1a56315050770b4f79af95042a95b58507" prot="public" static="no">
        <type>eosio::action_wrapper&lt;&quot;updtrevision&quot;_n, &amp;<ref refid="classeosiosystem_1_1system__contract_1a0af4a55018801131ae7dc7a923bead0b" kindref="member">system_contract::updtrevision</ref> &gt;</type>
        <definition>using eosiosystem::system_contract::updtrevision_action =  eosio::action_wrapper&lt;&quot;updtrevision&quot;_n, &amp;system_contract::updtrevision&gt;</definition>
        <argsstring></argsstring>
        <name>updtrevision_action</name>
        <qualifiedname>eosiosystem::system_contract::updtrevision_action</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1406" column="10" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="1406" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classeosiosystem_1_1system__contract_1a4061267666d68ba49beda47dc1440194" prot="public" static="no">
        <type>eosio::action_wrapper&lt;&quot;bidname&quot;_n, &amp;<ref refid="classeosiosystem_1_1system__contract_1af1c329fbf0e3e45b62b729e6ee743c62" kindref="member">system_contract::bidname</ref> &gt;</type>
        <definition>using eosiosystem::system_contract::bidname_action =  eosio::action_wrapper&lt;&quot;bidname&quot;_n, &amp;system_contract::bidname&gt;</definition>
        <argsstring></argsstring>
        <name>bidname_action</name>
        <qualifiedname>eosiosystem::system_contract::bidname_action</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1407" column="10" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="1407" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classeosiosystem_1_1system__contract_1a6d35995c9e7932d40ea91609744c9aa3" prot="public" static="no">
        <type>eosio::action_wrapper&lt;&quot;bidrefund&quot;_n, &amp;<ref refid="classeosiosystem_1_1system__contract_1a1ad9f05ad7242412bf5ad87706f923ff" kindref="member">system_contract::bidrefund</ref> &gt;</type>
        <definition>using eosiosystem::system_contract::bidrefund_action =  eosio::action_wrapper&lt;&quot;bidrefund&quot;_n, &amp;system_contract::bidrefund&gt;</definition>
        <argsstring></argsstring>
        <name>bidrefund_action</name>
        <qualifiedname>eosiosystem::system_contract::bidrefund_action</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1408" column="10" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="1408" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classeosiosystem_1_1system__contract_1a7c19bb1d99d1abbd00be825f69fbfc3f" prot="public" static="no">
        <type>eosio::action_wrapper&lt;&quot;setpriv&quot;_n, &amp;<ref refid="classeosiosystem_1_1system__contract_1a648ec27a9bc3bf7e36c5c88f6932b9ca" kindref="member">system_contract::setpriv</ref> &gt;</type>
        <definition>using eosiosystem::system_contract::setpriv_action =  eosio::action_wrapper&lt;&quot;setpriv&quot;_n, &amp;system_contract::setpriv&gt;</definition>
        <argsstring></argsstring>
        <name>setpriv_action</name>
        <qualifiedname>eosiosystem::system_contract::setpriv_action</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1409" column="10" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="1409" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classeosiosystem_1_1system__contract_1a5546364ddc017d87f96ed0e9a6b1f931" prot="public" static="no">
        <type>eosio::action_wrapper&lt;&quot;setalimits&quot;_n, &amp;<ref refid="classeosiosystem_1_1system__contract_1ad5b9178dfbe60ba6059c52d488ecf303" kindref="member">system_contract::setalimits</ref> &gt;</type>
        <definition>using eosiosystem::system_contract::setalimits_action =  eosio::action_wrapper&lt;&quot;setalimits&quot;_n, &amp;system_contract::setalimits&gt;</definition>
        <argsstring></argsstring>
        <name>setalimits_action</name>
        <qualifiedname>eosiosystem::system_contract::setalimits_action</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1410" column="10" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="1410" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classeosiosystem_1_1system__contract_1ae0cbe561757f43c3856caf74ff58ea2b" prot="public" static="no">
        <type>eosio::action_wrapper&lt;&quot;setparams&quot;_n, &amp;<ref refid="classeosiosystem_1_1system__contract_1aa4ea1b93cfb3d99fcaaabb994c711bee" kindref="member">system_contract::setparams</ref> &gt;</type>
        <definition>using eosiosystem::system_contract::setparams_action =  eosio::action_wrapper&lt;&quot;setparams&quot;_n, &amp;system_contract::setparams&gt;</definition>
        <argsstring></argsstring>
        <name>setparams_action</name>
        <qualifiedname>eosiosystem::system_contract::setparams_action</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1411" column="10" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="1411" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classeosiosystem_1_1system__contract_1addda8e74a2c1657fbde05113951e05a3" prot="public" static="no">
        <type>eosio::action_wrapper&lt;&quot;setinflation&quot;_n, &amp;<ref refid="classeosiosystem_1_1system__contract_1ac2cab12a3c2a1d20a3215124100cf3e1" kindref="member">system_contract::setinflation</ref> &gt;</type>
        <definition>using eosiosystem::system_contract::setinflation_action =  eosio::action_wrapper&lt;&quot;setinflation&quot;_n, &amp;system_contract::setinflation&gt;</definition>
        <argsstring></argsstring>
        <name>setinflation_action</name>
        <qualifiedname>eosiosystem::system_contract::setinflation_action</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1412" column="10" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="1412" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classeosiosystem_1_1system__contract_1a752504e09e8196326e836ef099588650" prot="public" static="no">
        <type>eosio::action_wrapper&lt;&quot;cfgpowerup&quot;_n, &amp;<ref refid="classeosiosystem_1_1system__contract_1ae71212071f747832a2a56eb4868d9c81" kindref="member">system_contract::cfgpowerup</ref> &gt;</type>
        <definition>using eosiosystem::system_contract::cfgpowerup_action =  eosio::action_wrapper&lt;&quot;cfgpowerup&quot;_n, &amp;system_contract::cfgpowerup&gt;</definition>
        <argsstring></argsstring>
        <name>cfgpowerup_action</name>
        <qualifiedname>eosiosystem::system_contract::cfgpowerup_action</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1413" column="10" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="1413" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classeosiosystem_1_1system__contract_1ac85b9bef9b3fc161a14712f52ec31e5b" prot="public" static="no">
        <type>eosio::action_wrapper&lt;&quot;powerupexec&quot;_n, &amp;<ref refid="classeosiosystem_1_1system__contract_1aa573d628b237c167aa99fc71cb150736" kindref="member">system_contract::powerupexec</ref> &gt;</type>
        <definition>using eosiosystem::system_contract::powerupexec_action =  eosio::action_wrapper&lt;&quot;powerupexec&quot;_n, &amp;system_contract::powerupexec&gt;</definition>
        <argsstring></argsstring>
        <name>powerupexec_action</name>
        <qualifiedname>eosiosystem::system_contract::powerupexec_action</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1414" column="10" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="1414" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classeosiosystem_1_1system__contract_1ac3cd9f92205bbc3ba9fdfdaacdeedf61" prot="public" static="no">
        <type>eosio::action_wrapper&lt;&quot;powerup&quot;_n, &amp;<ref refid="classeosiosystem_1_1system__contract_1ab3d6d9e77d6b9ac63b79e6d8104d8312" kindref="member">system_contract::powerup</ref> &gt;</type>
        <definition>using eosiosystem::system_contract::powerup_action =  eosio::action_wrapper&lt;&quot;powerup&quot;_n, &amp;system_contract::powerup&gt;</definition>
        <argsstring></argsstring>
        <name>powerup_action</name>
        <qualifiedname>eosiosystem::system_contract::powerup_action</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1415" column="10" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="1415" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classeosiosystem_1_1system__contract_1a41105c20306ae2478d91e0fab56f2e58" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceeosiosystem_1a129e3f7382aec9aeb9122766f5490ea6" kindref="member">voters_table</ref></type>
        <definition>voters_table eosiosystem::system_contract::_voters</definition>
        <argsstring></argsstring>
        <name>_voters</name>
        <qualifiedname>eosiosystem::system_contract::_voters</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="648" column="35" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="648" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeosiosystem_1_1system__contract_1a668decff73ee059f8e89cd885e85f3ce" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceeosiosystem_1aef9278e2c0a2a94a5ca2da72768058f9" kindref="member">producers_table</ref></type>
        <definition>producers_table eosiosystem::system_contract::_producers</definition>
        <argsstring></argsstring>
        <name>_producers</name>
        <qualifiedname>eosiosystem::system_contract::_producers</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="649" column="35" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="649" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeosiosystem_1_1system__contract_1a685072073da57c3ccf5d4611fb157a33" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceeosiosystem_1aec03ff9b9e26842a0ae7543b729b4eb8" kindref="member">producers_table2</ref></type>
        <definition>producers_table2 eosiosystem::system_contract::_producers2</definition>
        <argsstring></argsstring>
        <name>_producers2</name>
        <qualifiedname>eosiosystem::system_contract::_producers2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="650" column="35" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="650" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeosiosystem_1_1system__contract_1ae0fead4e6333fb6ff81b38c873beb484" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceeosiosystem_1a2757bc4c835154772dce0d5891c93b58" kindref="member">global_state_singleton</ref></type>
        <definition>global_state_singleton eosiosystem::system_contract::_global</definition>
        <argsstring></argsstring>
        <name>_global</name>
        <qualifiedname>eosiosystem::system_contract::_global</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="651" column="35" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="651" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeosiosystem_1_1system__contract_1ae2f5d5c5de33662921eca488a4c2bcb1" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceeosiosystem_1adb616b32d645551d19e31961316dee14" kindref="member">global_state2_singleton</ref></type>
        <definition>global_state2_singleton eosiosystem::system_contract::_global2</definition>
        <argsstring></argsstring>
        <name>_global2</name>
        <qualifiedname>eosiosystem::system_contract::_global2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="652" column="35" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="652" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeosiosystem_1_1system__contract_1a3a9a6e276267b4c193005eedd13c386f" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceeosiosystem_1a958a67bf9b36e7cfba8b3e2ba38ed6cd" kindref="member">global_state3_singleton</ref></type>
        <definition>global_state3_singleton eosiosystem::system_contract::_global3</definition>
        <argsstring></argsstring>
        <name>_global3</name>
        <qualifiedname>eosiosystem::system_contract::_global3</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="653" column="35" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="653" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeosiosystem_1_1system__contract_1af82e0e1fecce0302f8e6ff4f4bc1b164" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceeosiosystem_1ab4454fd166d16430c6918051bef3af56" kindref="member">global_state4_singleton</ref></type>
        <definition>global_state4_singleton eosiosystem::system_contract::_global4</definition>
        <argsstring></argsstring>
        <name>_global4</name>
        <qualifiedname>eosiosystem::system_contract::_global4</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="654" column="35" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="654" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeosiosystem_1_1system__contract_1a40e74853eda24e1b15d8f5b6499c8820" prot="private" static="no" mutable="no">
        <type><ref refid="structeosiosystem_1_1eosio__global__state" kindref="compound">eosio_global_state</ref></type>
        <definition>eosio_global_state eosiosystem::system_contract::_gstate</definition>
        <argsstring></argsstring>
        <name>_gstate</name>
        <qualifiedname>eosiosystem::system_contract::_gstate</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="655" column="35" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="655" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeosiosystem_1_1system__contract_1a11360303e4449a02eb87ccab4cb0e219" prot="private" static="no" mutable="no">
        <type><ref refid="structeosiosystem_1_1eosio__global__state2" kindref="compound">eosio_global_state2</ref></type>
        <definition>eosio_global_state2 eosiosystem::system_contract::_gstate2</definition>
        <argsstring></argsstring>
        <name>_gstate2</name>
        <qualifiedname>eosiosystem::system_contract::_gstate2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="656" column="35" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="656" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeosiosystem_1_1system__contract_1ae5075170abd3571b3e9bcad43e17b8fc" prot="private" static="no" mutable="no">
        <type><ref refid="structeosiosystem_1_1eosio__global__state3" kindref="compound">eosio_global_state3</ref></type>
        <definition>eosio_global_state3 eosiosystem::system_contract::_gstate3</definition>
        <argsstring></argsstring>
        <name>_gstate3</name>
        <qualifiedname>eosiosystem::system_contract::_gstate3</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="657" column="35" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="657" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeosiosystem_1_1system__contract_1ae2ce0798dc0c26a747af79259cff248f" prot="private" static="no" mutable="no">
        <type><ref refid="structeosiosystem_1_1eosio__global__state4" kindref="compound">eosio_global_state4</ref></type>
        <definition>eosio_global_state4 eosiosystem::system_contract::_gstate4</definition>
        <argsstring></argsstring>
        <name>_gstate4</name>
        <qualifiedname>eosiosystem::system_contract::_gstate4</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="658" column="35" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="658" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeosiosystem_1_1system__contract_1a2b149f7463767158fac80045940da7d5" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceeosiosystem_1a084bb74fe483e49001e674d5e66001de" kindref="member">rammarket</ref></type>
        <definition>rammarket eosiosystem::system_contract::_rammarket</definition>
        <argsstring></argsstring>
        <name>_rammarket</name>
        <qualifiedname>eosiosystem::system_contract::_rammarket</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="659" column="35" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="659" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeosiosystem_1_1system__contract_1acce2579f252a2d5739f2dc99eb5ff1e1" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceeosiosystem_1aab279eda55b1ca1ada69524b4e57bdcc" kindref="member">rex_pool_table</ref></type>
        <definition>rex_pool_table eosiosystem::system_contract::_rexpool</definition>
        <argsstring></argsstring>
        <name>_rexpool</name>
        <qualifiedname>eosiosystem::system_contract::_rexpool</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="660" column="35" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="660" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeosiosystem_1_1system__contract_1a0ccf372dabc1dbfa5c40f2ab5f9de7c1" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceeosiosystem_1ad6a995b6569fba225ac32ede6445588f" kindref="member">rex_return_pool_table</ref></type>
        <definition>rex_return_pool_table eosiosystem::system_contract::_rexretpool</definition>
        <argsstring></argsstring>
        <name>_rexretpool</name>
        <qualifiedname>eosiosystem::system_contract::_rexretpool</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="661" column="35" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="661" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeosiosystem_1_1system__contract_1ab90cd10f3de26ac0ffc1cee1ebe06e56" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceeosiosystem_1ad64bb26fc1b25cadb230ce1e28332a8d" kindref="member">rex_return_buckets_table</ref></type>
        <definition>rex_return_buckets_table eosiosystem::system_contract::_rexretbuckets</definition>
        <argsstring></argsstring>
        <name>_rexretbuckets</name>
        <qualifiedname>eosiosystem::system_contract::_rexretbuckets</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="662" column="35" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="662" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeosiosystem_1_1system__contract_1a431e54726c73c77a9299791d5eb4d766" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceeosiosystem_1ab4d1e899542a55b49aadb517d5779ac7" kindref="member">rex_fund_table</ref></type>
        <definition>rex_fund_table eosiosystem::system_contract::_rexfunds</definition>
        <argsstring></argsstring>
        <name>_rexfunds</name>
        <qualifiedname>eosiosystem::system_contract::_rexfunds</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="663" column="35" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="663" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeosiosystem_1_1system__contract_1a9387fda3cd33795afe8f6197071e6b29" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceeosiosystem_1ae2f4a6ffda396b4ce5d5317fa8745469" kindref="member">rex_balance_table</ref></type>
        <definition>rex_balance_table eosiosystem::system_contract::_rexbalance</definition>
        <argsstring></argsstring>
        <name>_rexbalance</name>
        <qualifiedname>eosiosystem::system_contract::_rexbalance</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="664" column="35" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="664" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeosiosystem_1_1system__contract_1ae8fc8fedabbbe903d7ec35671e0c71cb" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceeosiosystem_1a15c29cf918cdbf79e26c480b9a3916bd" kindref="member">rex_order_table</ref></type>
        <definition>rex_order_table eosiosystem::system_contract::_rexorders</definition>
        <argsstring></argsstring>
        <name>_rexorders</name>
        <qualifiedname>eosiosystem::system_contract::_rexorders</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="665" column="35" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="665" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeosiosystem_1_1system__contract_1a8aa92752c022c824f12420a11a7fa8be" prot="private" static="no" mutable="no">
        <type><ref refid="classeosiosystem_1_1system__contract_1_1registration" kindref="compound">registration</ref>&lt;&amp;<ref refid="classeosiosystem_1_1system__contract_1a43667ea3ddb45f37a7fc0396dd193268" kindref="member">system_contract::update_rex_stake</ref> &gt;</type>
        <definition>registration&lt;&amp;system_contract::update_rex_stake&gt; eosiosystem::system_contract::vote_stake_updater</definition>
        <argsstring></argsstring>
        <name>vote_stake_updater</name>
        <qualifiedname>eosiosystem::system_contract::vote_stake_updater</qualifiedname>
        <initializer>{ this }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1520" column="23" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="1520" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classeosiosystem_1_1system__contract_1adfc25b00a14e482c7fb1161dd38096bd" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr eosio::name</type>
        <definition>constexpr eosio::name eosiosystem::system_contract::active_permission</definition>
        <argsstring></argsstring>
        <name>active_permission</name>
        <qualifiedname>eosiosystem::system_contract::active_permission</qualifiedname>
        <initializer>{&quot;active&quot;_n}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="668" column="39" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="668" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeosiosystem_1_1system__contract_1a21c029a978b1648e8cea9d7c60a5faf3" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr eosio::name</type>
        <definition>constexpr eosio::name eosiosystem::system_contract::token_account</definition>
        <argsstring></argsstring>
        <name>token_account</name>
        <qualifiedname>eosiosystem::system_contract::token_account</qualifiedname>
        <initializer>{&quot;eosio.token&quot;_n}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="669" column="39" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="669" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeosiosystem_1_1system__contract_1a5b9e69a4f134680f236b696f7ec2ca0f" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr eosio::name</type>
        <definition>constexpr eosio::name eosiosystem::system_contract::ram_account</definition>
        <argsstring></argsstring>
        <name>ram_account</name>
        <qualifiedname>eosiosystem::system_contract::ram_account</qualifiedname>
        <initializer>{&quot;eosio.ram&quot;_n}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="670" column="39" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="670" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeosiosystem_1_1system__contract_1a8784bf6def9ebc7dac2cbba94c715b03" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr eosio::name</type>
        <definition>constexpr eosio::name eosiosystem::system_contract::ramfee_account</definition>
        <argsstring></argsstring>
        <name>ramfee_account</name>
        <qualifiedname>eosiosystem::system_contract::ramfee_account</qualifiedname>
        <initializer>{&quot;eosio.ramfee&quot;_n}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="671" column="39" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="671" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeosiosystem_1_1system__contract_1a5cde7e6a57d453cc63d509c6657355e2" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr eosio::name</type>
        <definition>constexpr eosio::name eosiosystem::system_contract::stake_account</definition>
        <argsstring></argsstring>
        <name>stake_account</name>
        <qualifiedname>eosiosystem::system_contract::stake_account</qualifiedname>
        <initializer>{&quot;eosio.stake&quot;_n}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="672" column="39" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="672" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeosiosystem_1_1system__contract_1aeec189aa121eaf90aee0c180cd59cc26" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr eosio::name</type>
        <definition>constexpr eosio::name eosiosystem::system_contract::bpay_account</definition>
        <argsstring></argsstring>
        <name>bpay_account</name>
        <qualifiedname>eosiosystem::system_contract::bpay_account</qualifiedname>
        <initializer>{&quot;eosio.bpay&quot;_n}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="673" column="39" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="673" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeosiosystem_1_1system__contract_1a3b108816fa9ae2ad0c89aae2ec31585b" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr eosio::name</type>
        <definition>constexpr eosio::name eosiosystem::system_contract::vpay_account</definition>
        <argsstring></argsstring>
        <name>vpay_account</name>
        <qualifiedname>eosiosystem::system_contract::vpay_account</qualifiedname>
        <initializer>{&quot;eosio.vpay&quot;_n}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="674" column="39" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="674" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeosiosystem_1_1system__contract_1a03e79dcf0584dd7fd1dbb1aa072befb1" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr eosio::name</type>
        <definition>constexpr eosio::name eosiosystem::system_contract::names_account</definition>
        <argsstring></argsstring>
        <name>names_account</name>
        <qualifiedname>eosiosystem::system_contract::names_account</qualifiedname>
        <initializer>{&quot;eosio.names&quot;_n}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="675" column="39" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="675" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeosiosystem_1_1system__contract_1af03b543de4dae959dc1fea8801a3311f" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr eosio::name</type>
        <definition>constexpr eosio::name eosiosystem::system_contract::rex_account</definition>
        <argsstring></argsstring>
        <name>rex_account</name>
        <qualifiedname>eosiosystem::system_contract::rex_account</qualifiedname>
        <initializer>{&quot;eosio.rex&quot;_n}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="676" column="39" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="676" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeosiosystem_1_1system__contract_1a0b608cd46d931874c80e9b72c4f0d664" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr eosio::name</type>
        <definition>constexpr eosio::name eosiosystem::system_contract::null_account</definition>
        <argsstring></argsstring>
        <name>null_account</name>
        <qualifiedname>eosiosystem::system_contract::null_account</qualifiedname>
        <initializer>{&quot;eosio.null&quot;_n}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="677" column="39" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="677" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeosiosystem_1_1system__contract_1ac0eb9382f47fc00bcf66b81a26805e73" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr symbol</type>
        <definition>constexpr symbol eosiosystem::system_contract::ramcore_symbol</definition>
        <argsstring></argsstring>
        <name>ramcore_symbol</name>
        <qualifiedname>eosiosystem::system_contract::ramcore_symbol</qualifiedname>
        <initializer>= symbol(symbol_code(&quot;RAMCORE&quot;), 4)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="678" column="34" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="678" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeosiosystem_1_1system__contract_1a6317a93cd512ff0fc3b6a802bd5aa229" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr symbol</type>
        <definition>constexpr symbol eosiosystem::system_contract::ram_symbol</definition>
        <argsstring></argsstring>
        <name>ram_symbol</name>
        <qualifiedname>eosiosystem::system_contract::ram_symbol</qualifiedname>
        <initializer>= symbol(symbol_code(&quot;RAM&quot;), 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="679" column="34" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="679" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeosiosystem_1_1system__contract_1adae70035ee4360f4b5fa8113679dea04" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr symbol</type>
        <definition>constexpr symbol eosiosystem::system_contract::rex_symbol</definition>
        <argsstring></argsstring>
        <name>rex_symbol</name>
        <qualifiedname>eosiosystem::system_contract::rex_symbol</qualifiedname>
        <initializer>= symbol(symbol_code(&quot;REX&quot;), 4)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="680" column="34" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="680" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1ae1a0434a7adf53cc3a168f1b2f947ebd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>eosiosystem::system_contract::system_contract</definition>
        <argsstring>(name s, name code, datastream&lt; const char * &gt; ds)</argsstring>
        <name>system_contract</name>
        <qualifiedname>eosiosystem::system_contract::system_contract</qualifiedname>
        <param>
          <type>name</type>
          <declname>s</declname>
        </param>
        <param>
          <type>name</type>
          <declname>code</declname>
        </param>
        <param>
          <type>datastream&lt; const char * &gt;</type>
          <declname>ds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="682" column="10" bodyfile="system/contracts/eosio.system/src/eosio.system.cpp" bodystart="18" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1ae0264c3f2d2a640d9a60a4c9c9ca089c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>eosiosystem::system_contract::~system_contract</definition>
        <argsstring>()</argsstring>
        <name>~system_contract</name>
        <qualifiedname>eosiosystem::system_contract::~system_contract</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="683" column="10" bodyfile="system/contracts/eosio.system/src/eosio.system.cpp" bodystart="60" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1a63afe62bd82d52230be1e0ded1bdb644" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::init</definition>
        <argsstring>(unsigned_int version, const symbol &amp;core)</argsstring>
        <name>init</name>
        <qualifiedname>eosiosystem::system_contract::init</qualifiedname>
        <param>
          <type>unsigned_int</type>
          <declname>version</declname>
        </param>
        <param>
          <type>const symbol &amp;</type>
          <declname>core</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The Init action initializes the system contract for a version and a symbol. Only succeeds when:<itemizedlist>
<listitem><para>version is 0 and</para>
</listitem><listitem><para>symbol is found and</para>
</listitem><listitem><para>system token supply is greater than 0,</para>
</listitem><listitem><para>and system contract wasn’t already been initialized.</para>
</listitem></itemizedlist>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>version</parametername>
</parameternamelist>
<parameterdescription>
<para>- the version, has to be 0, </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>core</parametername>
</parameternamelist>
<parameterdescription>
<para>- the system symbol. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="706" column="15" bodyfile="system/contracts/eosio.system/src/eosio.system.cpp" bodystart="534" bodyend="556"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1af6ed697e2d198ca5bce29cbacb682490" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::initemission</definition>
        <argsstring>(eosio::asset init_supply, uint64_t tact_duration, double emission_factor)</argsstring>
        <name>initemission</name>
        <qualifiedname>eosiosystem::system_contract::initemission</qualifiedname>
        <param>
          <type>eosio::asset</type>
          <declname>init_supply</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>tact_duration</declname>
        </param>
        <param>
          <type>double</type>
          <declname>emission_factor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Инициализация тактовой эмиссии <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tact_duration</parametername>
</parameternamelist>
<parameterdescription>
<para>- продолжительность такта в секундах, </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>emission_factor</parametername>
</parameternamelist>
<parameterdescription>
<para>- множитель эмиссии от 0 до 2.618. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="718" column="15" bodyfile="system/contracts/eosio.system/src/powerup.cpp" bodystart="281" bodyend="310"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1ae75458e3f898b3bc834311fa54abc6a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::onblock</definition>
        <argsstring>(ignore&lt; block_header &gt; header)</argsstring>
        <name>onblock</name>
        <qualifiedname>eosiosystem::system_contract::onblock</qualifiedname>
        <param>
          <type>ignore&lt; <ref refid="structeosiosystem_1_1block__header" kindref="compound">block_header</ref> &gt;</type>
          <declname>header</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>On block action. This special action is triggered when a block is applied by the given producer and cannot be generated from any other source. It is used to pay producers and calculate missed blocks of other producers. Producer pay is deposited into the producer&apos;s stake balance and can be withdrawn over time. Once a minute, it may update the active producer config from the producer votes. The action also populates the blockinfo table.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>header</parametername>
</parameternamelist>
<parameterdescription>
<para>- the block header produced. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
<para>until activation, no new rewards are paid</para>
<para>start the presses</para>
<para>At startup the initial producer may not be one that is registered / elected and therefore there may be no producer object for them.</para>
<para>only update block producers once every minute, block_timestamp is in half seconds</para>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="731" column="15" bodyfile="system/contracts/eosio.system/src/producer_pay.cpp" bodystart="10" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1ad5b9178dfbe60ba6059c52d488ecf303" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::setalimits</definition>
        <argsstring>(const name &amp;account, int64_t ram_bytes, int64_t net_weight, int64_t cpu_weight)</argsstring>
        <name>setalimits</name>
        <qualifiedname>eosiosystem::system_contract::setalimits</qualifiedname>
        <param>
          <type>const name &amp;</type>
          <declname>account</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>ram_bytes</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>net_weight</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>cpu_weight</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set account limits action sets the resource limits of an account</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>account</parametername>
</parameternamelist>
<parameterdescription>
<para>- name of the account whose resource limit to be set, </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ram_bytes</parametername>
</parameternamelist>
<parameterdescription>
<para>- ram limit in absolute bytes, </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>net_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>- fractionally proportionate net limit of available resources based on (weight / total_weight_of_all_accounts), </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cpu_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>- fractionally proportionate cpu limit of available resources based on (weight / total_weight_of_all_accounts). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="742" column="15" bodyfile="system/contracts/eosio.system/src/eosio.system.cpp" bodystart="261" bodyend="277"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1acdd7c75402f43876338d33649d2e6903" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::setacctram</definition>
        <argsstring>(const name &amp;account, const std::optional&lt; int64_t &gt; &amp;ram_bytes)</argsstring>
        <name>setacctram</name>
        <qualifiedname>eosiosystem::system_contract::setacctram</qualifiedname>
        <param>
          <type>const name &amp;</type>
          <declname>account</declname>
        </param>
        <param>
          <type>const std::optional&lt; int64_t &gt; &amp;</type>
          <declname>ram_bytes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set account RAM limits action, which sets the RAM limits of an account</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>account</parametername>
</parameternamelist>
<parameterdescription>
<para>- name of the account whose resource limit to be set, </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ram_bytes</parametername>
</parameternamelist>
<parameterdescription>
<para>- ram limit in absolute bytes. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="751" column="15" bodyfile="system/contracts/eosio.system/src/eosio.system.cpp" bodystart="279" bodyend="322"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1aa4559928f468c62867916d1251fa33b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::setacctnet</definition>
        <argsstring>(const name &amp;account, const std::optional&lt; int64_t &gt; &amp;net_weight)</argsstring>
        <name>setacctnet</name>
        <qualifiedname>eosiosystem::system_contract::setacctnet</qualifiedname>
        <param>
          <type>const name &amp;</type>
          <declname>account</declname>
        </param>
        <param>
          <type>const std::optional&lt; int64_t &gt; &amp;</type>
          <declname>net_weight</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set account NET limits action, which sets the NET limits of an account</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>account</parametername>
</parameternamelist>
<parameterdescription>
<para>- name of the account whose resource limit to be set, </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>net_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>- fractionally proportionate net limit of available resources based on (weight / total_weight_of_all_accounts). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="760" column="15" bodyfile="system/contracts/eosio.system/src/eosio.system.cpp" bodystart="324" bodyend="366"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1a9a005d230746b68cafa934a067f287af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::setacctcpu</definition>
        <argsstring>(const name &amp;account, const std::optional&lt; int64_t &gt; &amp;cpu_weight)</argsstring>
        <name>setacctcpu</name>
        <qualifiedname>eosiosystem::system_contract::setacctcpu</qualifiedname>
        <param>
          <type>const name &amp;</type>
          <declname>account</declname>
        </param>
        <param>
          <type>const std::optional&lt; int64_t &gt; &amp;</type>
          <declname>cpu_weight</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set account CPU limits action, which sets the CPU limits of an account</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>account</parametername>
</parameternamelist>
<parameterdescription>
<para>- name of the account whose resource limit to be set, </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cpu_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>- fractionally proportionate cpu limit of available resources based on (weight / total_weight_of_all_accounts). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="769" column="15" bodyfile="system/contracts/eosio.system/src/eosio.system.cpp" bodystart="368" bodyend="410"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1a1873247483b285e19010b7469419a60d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::activate</definition>
        <argsstring>(const eosio::checksum256 &amp;feature_digest)</argsstring>
        <name>activate</name>
        <qualifiedname>eosiosystem::system_contract::activate</qualifiedname>
        <param>
          <type>const eosio::checksum256 &amp;</type>
          <declname>feature_digest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The activate action, activates a protocol feature</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>feature_digest</parametername>
</parameternamelist>
<parameterdescription>
<para>- hash of the protocol feature to activate. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="778" column="15" bodyfile="system/contracts/eosio.system/src/eosio.system.cpp" bodystart="412" bodyend="415"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1aa54b498595abb1a3ad9c62c597d4f7b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::delegatebw</definition>
        <argsstring>(const name &amp;from, const name &amp;receiver, const asset &amp;stake_net_quantity, const asset &amp;stake_cpu_quantity, bool transfer)</argsstring>
        <name>delegatebw</name>
        <qualifiedname>eosiosystem::system_contract::delegatebw</qualifiedname>
        <param>
          <type>const name &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>const name &amp;</type>
          <declname>receiver</declname>
        </param>
        <param>
          <type>const asset &amp;</type>
          <declname>stake_net_quantity</declname>
        </param>
        <param>
          <type>const asset &amp;</type>
          <declname>stake_cpu_quantity</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>transfer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Delegate bandwidth and/or cpu action. Stakes SYS from the balance of <computeroutput>from</computeroutput> for the benefit of <computeroutput>receiver</computeroutput>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>from</parametername>
</parameternamelist>
<parameterdescription>
<para>- the account to delegate bandwidth from, that is, the account holding tokens to be staked, </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>receiver</parametername>
</parameternamelist>
<parameterdescription>
<para>- the account to delegate bandwidth to, that is, the account to whose resources staked tokens are added </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stake_net_quantity</parametername>
</parameternamelist>
<parameterdescription>
<para>- tokens staked for NET bandwidth, </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stake_cpu_quantity</parametername>
</parameternamelist>
<parameterdescription>
<para>- tokens staked for CPU bandwidth, </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>transfer</parametername>
</parameternamelist>
<parameterdescription>
<para>- if true, ownership of staked tokens is transferred to <computeroutput>receiver</computeroutput>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="post"><para>All producers <computeroutput>from</computeroutput> account has voted for will have their votes updated immediately. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="796" column="15" bodyfile="system/contracts/eosio.system/src/delegate_bandwidth.cpp" bodystart="346" bodyend="363"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1a1b875a922b7ab8079b742eb8e714ae48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::setrex</definition>
        <argsstring>(const asset &amp;balance)</argsstring>
        <name>setrex</name>
        <qualifiedname>eosiosystem::system_contract::setrex</qualifiedname>
        <param>
          <type>const asset &amp;</type>
          <declname>balance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Setrex action, sets total_rent balance of REX pool to the passed value. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>balance</parametername>
</parameternamelist>
<parameterdescription>
<para>- amount to set the REX pool balance. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="804" column="15" bodyfile="system/contracts/eosio.system/src/rex.cpp" bodystart="232" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1a99e6b1b401c6a8a023f61ed2b52e98d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::deposit</definition>
        <argsstring>(const name &amp;owner, const asset &amp;amount)</argsstring>
        <name>deposit</name>
        <qualifiedname>eosiosystem::system_contract::deposit</qualifiedname>
        <param>
          <type>const name &amp;</type>
          <declname>owner</declname>
        </param>
        <param>
          <type>const asset &amp;</type>
          <declname>amount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Deposit to REX fund action. Deposits core tokens to user REX fund. All proceeds and expenses related to REX are added to or taken out of this fund. An inline transfer from &apos;owner&apos; liquid balance is executed. All REX-related costs and proceeds are deducted from and added to &apos;owner&apos; REX fund, with one exception being buying REX using staked tokens. Storage change is billed to &apos;owner&apos;.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>owner</parametername>
</parameternamelist>
<parameterdescription>
<para>- REX fund owner account, </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>amount</parametername>
</parameternamelist>
<parameterdescription>
<para>- amount of tokens to be deposited. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="818" column="15" bodyfile="system/contracts/eosio.system/src/rex.cpp" bodystart="11" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1a45eea3c4ce35174eb1c3ad1e64954d5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::withdraw</definition>
        <argsstring>(const name &amp;owner, const asset &amp;amount)</argsstring>
        <name>withdraw</name>
        <qualifiedname>eosiosystem::system_contract::withdraw</qualifiedname>
        <param>
          <type>const name &amp;</type>
          <declname>owner</declname>
        </param>
        <param>
          <type>const asset &amp;</type>
          <declname>amount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Withdraw from REX fund action, withdraws core tokens from user REX fund. An inline token transfer to user balance is executed.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>owner</parametername>
</parameternamelist>
<parameterdescription>
<para>- REX fund owner account, </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>amount</parametername>
</parameternamelist>
<parameterdescription>
<para>- amount of tokens to be withdrawn. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="828" column="15" bodyfile="system/contracts/eosio.system/src/rex.cpp" bodystart="25" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1a36aebc85b90ecf7e5389f8daea64592a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::buyrex</definition>
        <argsstring>(const name &amp;from, const asset &amp;amount)</argsstring>
        <name>buyrex</name>
        <qualifiedname>eosiosystem::system_contract::buyrex</qualifiedname>
        <param>
          <type>const name &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>const asset &amp;</type>
          <declname>amount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Buyrex action, buys REX in exchange for tokens taken out of user&apos;s REX fund by transferring core tokens from user REX fund and converts them to REX stake. By buying REX, user is lending tokens in order to be rented as CPU or NET resources. Storage change is billed to &apos;from&apos; account.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>from</parametername>
</parameternamelist>
<parameterdescription>
<para>- owner account name, </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>amount</parametername>
</parameternamelist>
<parameterdescription>
<para>- amount of tokens taken out of &apos;from&apos; REX fund.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para>A voting requirement must be satisfied before action can be executed. </para>
</simplesect>
<simplesect kind="pre"><para>User must vote for at least 21 producers or delegate vote to proxy before buying REX.</para>
</simplesect>
<simplesect kind="post"><para>User votes are updated following this action. </para>
</simplesect>
<simplesect kind="post"><para>Tokens used in purchase are added to user&apos;s voting power. </para>
</simplesect>
<simplesect kind="post"><para>Bought REX cannot be sold before 4 days counting from end of day of purchase. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="847" column="15" bodyfile="system/contracts/eosio.system/src/rex.cpp" bodystart="40" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1a94675167323c97d0dcdc92c5b7f0df60" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::unstaketorex</definition>
        <argsstring>(const name &amp;owner, const name &amp;receiver, const asset &amp;from_net, const asset &amp;from_cpu)</argsstring>
        <name>unstaketorex</name>
        <qualifiedname>eosiosystem::system_contract::unstaketorex</qualifiedname>
        <param>
          <type>const name &amp;</type>
          <declname>owner</declname>
        </param>
        <param>
          <type>const name &amp;</type>
          <declname>receiver</declname>
        </param>
        <param>
          <type>const asset &amp;</type>
          <declname>from_net</declname>
        </param>
        <param>
          <type>const asset &amp;</type>
          <declname>from_cpu</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Unstaketorex action, uses staked core tokens to buy REX. Storage change is billed to &apos;owner&apos; account.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>owner</parametername>
</parameternamelist>
<parameterdescription>
<para>- owner of staked tokens, </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>receiver</parametername>
</parameternamelist>
<parameterdescription>
<para>- account name that tokens have previously been staked to, </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>from_net</parametername>
</parameternamelist>
<parameterdescription>
<para>- amount of tokens to be unstaked from NET bandwidth and used for REX purchase, </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>from_cpu</parametername>
</parameternamelist>
<parameterdescription>
<para>- amount of tokens to be unstaked from CPU bandwidth and used for REX purchase.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para>A voting requirement must be satisfied before action can be executed. </para>
</simplesect>
<simplesect kind="pre"><para>User must vote for at least 21 producers or delegate vote to proxy before buying REX.</para>
</simplesect>
<simplesect kind="post"><para>User votes are updated following this action. </para>
</simplesect>
<simplesect kind="post"><para>Tokens used in purchase are added to user&apos;s voting power. </para>
</simplesect>
<simplesect kind="post"><para>Bought REX cannot be sold before 4 days counting from end of day of purchase. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="866" column="15" bodyfile="system/contracts/eosio.system/src/rex.cpp" bodystart="57" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1a9ee2d79b7e9c1432f312535936e4848f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::sellrex</definition>
        <argsstring>(const name &amp;from, const asset &amp;rex)</argsstring>
        <name>sellrex</name>
        <qualifiedname>eosiosystem::system_contract::sellrex</qualifiedname>
        <param>
          <type>const name &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>const asset &amp;</type>
          <declname>rex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sellrex action, sells REX in exchange for core tokens by converting REX stake back into core tokens at current exchange rate. If order cannot be processed, it gets queued until there is enough in REX pool to fill order, and will be processed within 30 days at most. If successful, user votes are updated, that is, proceeds are deducted from user&apos;s voting power. In case sell order is queued, storage change is billed to &apos;from&apos; account.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>from</parametername>
</parameternamelist>
<parameterdescription>
<para>- owner account of REX, </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rex</parametername>
</parameternamelist>
<parameterdescription>
<para>- amount of REX to be sold. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
<para>REX order couldn&apos;t be filled and is added to queue. If account already has an open order, requested rex is added to existing order.</para>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="879" column="15" bodyfile="system/contracts/eosio.system/src/rex.cpp" bodystart="97" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1ac4bc1aa3fe5d72c9b1ed8af258c9f935" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::cnclrexorder</definition>
        <argsstring>(const name &amp;owner)</argsstring>
        <name>cnclrexorder</name>
        <qualifiedname>eosiosystem::system_contract::cnclrexorder</qualifiedname>
        <param>
          <type>const name &amp;</type>
          <declname>owner</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Cnclrexorder action, cancels unfilled REX sell order by owner if one exists.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>owner</parametername>
</parameternamelist>
<parameterdescription>
<para>- owner account name.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para>Order cannot be cancelled once it&apos;s been filled. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="889" column="15" bodyfile="system/contracts/eosio.system/src/rex.cpp" bodystart="147" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1a2babe24ecc07b5576ce48c0b7220e7f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::rentcpu</definition>
        <argsstring>(const name &amp;from, const name &amp;receiver, const asset &amp;loan_payment, const asset &amp;loan_fund)</argsstring>
        <name>rentcpu</name>
        <qualifiedname>eosiosystem::system_contract::rentcpu</qualifiedname>
        <param>
          <type>const name &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>const name &amp;</type>
          <declname>receiver</declname>
        </param>
        <param>
          <type>const asset &amp;</type>
          <declname>loan_payment</declname>
        </param>
        <param>
          <type>const asset &amp;</type>
          <declname>loan_fund</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Rentcpu action, uses payment to rent as many SYS tokens as possible as determined by market price and stake them for CPU for the benefit of receiver, after 30 days the rented core delegation of CPU will expire. At expiration, if balance is greater than or equal to <computeroutput>loan_payment</computeroutput>, <computeroutput>loan_payment</computeroutput> is taken out of loan balance and used to renew the loan. Otherwise, the loan is closed and user is refunded any remaining balance. Owner can fund or refund a loan at any time before its expiration. All loan expenses and refunds come out of or are added to owner&apos;s REX fund.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>from</parametername>
</parameternamelist>
<parameterdescription>
<para>- account creating and paying for CPU loan, &apos;from&apos; account can add tokens to loan balance using action <computeroutput>fundcpuloan</computeroutput> and withdraw from loan balance using <computeroutput>defcpuloan</computeroutput> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>receiver</parametername>
</parameternamelist>
<parameterdescription>
<para>- account receiving rented CPU resources, </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>loan_payment</parametername>
</parameternamelist>
<parameterdescription>
<para>- tokens paid for the loan, it has to be greater than zero, amount of rented resources is calculated from <computeroutput>loan_payment</computeroutput>, </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>loan_fund</parametername>
</parameternamelist>
<parameterdescription>
<para>- additional tokens can be zero, and is added to loan balance. Loan balance represents a reserve that is used at expiration for automatic loan renewal. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="909" column="15" bodyfile="system/contracts/eosio.system/src/rex.cpp" bodystart="156" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1a89b5465c60b08ecb06538ea162751319" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::rentnet</definition>
        <argsstring>(const name &amp;from, const name &amp;receiver, const asset &amp;loan_payment, const asset &amp;loan_fund)</argsstring>
        <name>rentnet</name>
        <qualifiedname>eosiosystem::system_contract::rentnet</qualifiedname>
        <param>
          <type>const name &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>const name &amp;</type>
          <declname>receiver</declname>
        </param>
        <param>
          <type>const asset &amp;</type>
          <declname>loan_payment</declname>
        </param>
        <param>
          <type>const asset &amp;</type>
          <declname>loan_fund</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Rentnet action, uses payment to rent as many SYS tokens as possible as determined by market price and stake them for NET for the benefit of receiver, after 30 days the rented core delegation of NET will expire. At expiration, if balance is greater than or equal to <computeroutput>loan_payment</computeroutput>, <computeroutput>loan_payment</computeroutput> is taken out of loan balance and used to renew the loan. Otherwise, the loan is closed and user is refunded any remaining balance. Owner can fund or refund a loan at any time before its expiration. All loan expenses and refunds come out of or are added to owner&apos;s REX fund.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>from</parametername>
</parameternamelist>
<parameterdescription>
<para>- account creating and paying for NET loan, &apos;from&apos; account can add tokens to loan balance using action <computeroutput>fundnetloan</computeroutput> and withdraw from loan balance using <computeroutput>defnetloan</computeroutput>, </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>receiver</parametername>
</parameternamelist>
<parameterdescription>
<para>- account receiving rented NET resources, </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>loan_payment</parametername>
</parameternamelist>
<parameterdescription>
<para>- tokens paid for the loan, it has to be greater than zero, amount of rented resources is calculated from <computeroutput>loan_payment</computeroutput>, </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>loan_fund</parametername>
</parameternamelist>
<parameterdescription>
<para>- additional tokens can be zero, and is added to loan balance. Loan balance represents a reserve that is used at expiration for automatic loan renewal. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="929" column="15" bodyfile="system/contracts/eosio.system/src/rex.cpp" bodystart="165" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1aed60ee281d5277819ed1335322b2d53f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::fundcpuloan</definition>
        <argsstring>(const name &amp;from, uint64_t loan_num, const asset &amp;payment)</argsstring>
        <name>fundcpuloan</name>
        <qualifiedname>eosiosystem::system_contract::fundcpuloan</qualifiedname>
        <param>
          <type>const name &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>loan_num</declname>
        </param>
        <param>
          <type>const asset &amp;</type>
          <declname>payment</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Fundcpuloan action, transfers tokens from REX fund to the fund of a specific CPU loan in order to be used for loan renewal at expiry.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>from</parametername>
</parameternamelist>
<parameterdescription>
<para>- loan creator account, </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>loan_num</parametername>
</parameternamelist>
<parameterdescription>
<para>- loan id, </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>payment</parametername>
</parameternamelist>
<parameterdescription>
<para>- tokens transferred from REX fund to loan fund. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="940" column="15" bodyfile="system/contracts/eosio.system/src/rex.cpp" bodystart="174" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1a8e99bf65da50dc92089140618112db27" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::fundnetloan</definition>
        <argsstring>(const name &amp;from, uint64_t loan_num, const asset &amp;payment)</argsstring>
        <name>fundnetloan</name>
        <qualifiedname>eosiosystem::system_contract::fundnetloan</qualifiedname>
        <param>
          <type>const name &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>loan_num</declname>
        </param>
        <param>
          <type>const asset &amp;</type>
          <declname>payment</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Fundnetloan action, transfers tokens from REX fund to the fund of a specific NET loan in order to be used for loan renewal at expiry.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>from</parametername>
</parameternamelist>
<parameterdescription>
<para>- loan creator account, </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>loan_num</parametername>
</parameternamelist>
<parameterdescription>
<para>- loan id, </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>payment</parametername>
</parameternamelist>
<parameterdescription>
<para>- tokens transferred from REX fund to loan fund. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="951" column="15" bodyfile="system/contracts/eosio.system/src/rex.cpp" bodystart="182" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1a94e2f4698dd0ad80e4252a772d424481" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::defcpuloan</definition>
        <argsstring>(const name &amp;from, uint64_t loan_num, const asset &amp;amount)</argsstring>
        <name>defcpuloan</name>
        <qualifiedname>eosiosystem::system_contract::defcpuloan</qualifiedname>
        <param>
          <type>const name &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>loan_num</declname>
        </param>
        <param>
          <type>const asset &amp;</type>
          <declname>amount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Defcpuloan action, withdraws tokens from the fund of a specific CPU loan and adds them to REX fund.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>from</parametername>
</parameternamelist>
<parameterdescription>
<para>- loan creator account, </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>loan_num</parametername>
</parameternamelist>
<parameterdescription>
<para>- loan id, </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>amount</parametername>
</parameternamelist>
<parameterdescription>
<para>- tokens transferred from CPU loan fund to REX fund. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="961" column="15" bodyfile="system/contracts/eosio.system/src/rex.cpp" bodystart="190" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1a56a54ec0ca8f37271fbcbc9cc5181145" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::defnetloan</definition>
        <argsstring>(const name &amp;from, uint64_t loan_num, const asset &amp;amount)</argsstring>
        <name>defnetloan</name>
        <qualifiedname>eosiosystem::system_contract::defnetloan</qualifiedname>
        <param>
          <type>const name &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>loan_num</declname>
        </param>
        <param>
          <type>const asset &amp;</type>
          <declname>amount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Defnetloan action, withdraws tokens from the fund of a specific NET loan and adds them to REX fund.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>from</parametername>
</parameternamelist>
<parameterdescription>
<para>- loan creator account, </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>loan_num</parametername>
</parameternamelist>
<parameterdescription>
<para>- loan id, </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>amount</parametername>
</parameternamelist>
<parameterdescription>
<para>- tokens transferred from NET loan fund to REX fund. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="971" column="15" bodyfile="system/contracts/eosio.system/src/rex.cpp" bodystart="198" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1a33a33fedadd8b07f8b9fcee22e1a966d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::updaterex</definition>
        <argsstring>(const name &amp;owner)</argsstring>
        <name>updaterex</name>
        <qualifiedname>eosiosystem::system_contract::updaterex</qualifiedname>
        <param>
          <type>const name &amp;</type>
          <declname>owner</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Updaterex action, updates REX owner vote weight to current value of held REX tokens.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>owner</parametername>
</parameternamelist>
<parameterdescription>
<para>- REX owner account. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="979" column="15" bodyfile="system/contracts/eosio.system/src/rex.cpp" bodystart="206" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1a21d675936f040b2dcdcebff3765a60a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::rexexec</definition>
        <argsstring>(const name &amp;user, uint16_t max)</argsstring>
        <name>rexexec</name>
        <qualifiedname>eosiosystem::system_contract::rexexec</qualifiedname>
        <param>
          <type>const name &amp;</type>
          <declname>user</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Rexexec action, processes max CPU loans, max NET loans, and max queued sellrex orders. Action does not execute anything related to a specific user.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>user</parametername>
</parameternamelist>
<parameterdescription>
<para>- any account can execute this action, </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max</parametername>
</parameternamelist>
<parameterdescription>
<para>- number of each of CPU loans, NET loans, and sell orders to be processed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="989" column="15" bodyfile="system/contracts/eosio.system/src/rex.cpp" bodystart="244" bodyend="249"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1ac6c59d9470ffe96336455b92804aa4de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::consolidate</definition>
        <argsstring>(const name &amp;owner)</argsstring>
        <name>consolidate</name>
        <qualifiedname>eosiosystem::system_contract::consolidate</qualifiedname>
        <param>
          <type>const name &amp;</type>
          <declname>owner</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Consolidate action, consolidates REX maturity buckets into one bucket that can be sold after 4 days starting from the end of the day.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>owner</parametername>
</parameternamelist>
<parameterdescription>
<para>- REX owner account name. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="998" column="15" bodyfile="system/contracts/eosio.system/src/rex.cpp" bodystart="251" bodyend="260"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1ac673c662e873032e4a67b1d888b23e6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::mvtosavings</definition>
        <argsstring>(const name &amp;owner, const asset &amp;rex)</argsstring>
        <name>mvtosavings</name>
        <qualifiedname>eosiosystem::system_contract::mvtosavings</qualifiedname>
        <param>
          <type>const name &amp;</type>
          <declname>owner</declname>
        </param>
        <param>
          <type>const asset &amp;</type>
          <declname>rex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Mvtosavings action, moves a specified amount of REX into savings bucket. REX savings bucket never matures. In order for it to be sold, it has to be moved explicitly out of that bucket. Then the moved amount will have the regular maturity period of 4 days starting from the end of the day.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>owner</parametername>
</parameternamelist>
<parameterdescription>
<para>- REX owner account name. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rex</parametername>
</parameternamelist>
<parameterdescription>
<para>- amount of REX to be moved. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1010" column="15" bodyfile="system/contracts/eosio.system/src/rex.cpp" bodystart="262" bodyend="294"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1a975cbc9b4670f245c76b0e3f3c86136f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::mvfrsavings</definition>
        <argsstring>(const name &amp;owner, const asset &amp;rex)</argsstring>
        <name>mvfrsavings</name>
        <qualifiedname>eosiosystem::system_contract::mvfrsavings</qualifiedname>
        <param>
          <type>const name &amp;</type>
          <declname>owner</declname>
        </param>
        <param>
          <type>const asset &amp;</type>
          <declname>rex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Mvfrsavings action, moves a specified amount of REX out of savings bucket. The moved amount will have the regular REX maturity period of 4 days.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>owner</parametername>
</parameternamelist>
<parameterdescription>
<para>- REX owner account name. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rex</parametername>
</parameternamelist>
<parameterdescription>
<para>- amount of REX to be moved. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1020" column="15" bodyfile="system/contracts/eosio.system/src/rex.cpp" bodystart="296" bodyend="317"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1a0a1b64d68fa08a63ee570a58d45e5626" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::closerex</definition>
        <argsstring>(const name &amp;owner)</argsstring>
        <name>closerex</name>
        <qualifiedname>eosiosystem::system_contract::closerex</qualifiedname>
        <param>
          <type>const name &amp;</type>
          <declname>owner</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Closerex action, deletes owner records from REX tables and frees used RAM. Owner must not have an outstanding REX balance.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>owner</parametername>
</parameternamelist>
<parameterdescription>
<para>- user account name.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para>If owner has a non-zero REX balance, the action fails; otherwise, owner REX balance entry is deleted. </para>
</simplesect>
<simplesect kind="pre"><para>If owner has no outstanding loans and a zero REX fund balance, REX fund entry is deleted. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
<para>check for any outstanding loans or rex fund</para>
<para>check for remaining rex balance</para>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1034" column="15" bodyfile="system/contracts/eosio.system/src/rex.cpp" bodystart="319" bodyend="354"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1a4db0be2c90d342ecd269fdbb57c51091" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::undelegatebw</definition>
        <argsstring>(const name &amp;from, const name &amp;receiver, const asset &amp;unstake_net_quantity, const asset &amp;unstake_cpu_quantity)</argsstring>
        <name>undelegatebw</name>
        <qualifiedname>eosiosystem::system_contract::undelegatebw</qualifiedname>
        <param>
          <type>const name &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>const name &amp;</type>
          <declname>receiver</declname>
        </param>
        <param>
          <type>const asset &amp;</type>
          <declname>unstake_net_quantity</declname>
        </param>
        <param>
          <type>const asset &amp;</type>
          <declname>unstake_cpu_quantity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Undelegate bandwidth action, decreases the total tokens delegated by <computeroutput>from</computeroutput> to <computeroutput>receiver</computeroutput> and/or frees the memory associated with the delegation if there is nothing left to delegate. This will cause an immediate reduction in net/cpu bandwidth of the receiver. A transaction is scheduled to send the tokens back to <computeroutput>from</computeroutput> after the staking period has passed. If existing transaction is scheduled, it will be canceled and a new transaction issued that has the combined undelegated amount. The <computeroutput>from</computeroutput> account loses voting power as a result of this call and all producer tallies are updated.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>from</parametername>
</parameternamelist>
<parameterdescription>
<para>- the account to undelegate bandwidth from, that is, the account whose tokens will be unstaked, </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>receiver</parametername>
</parameternamelist>
<parameterdescription>
<para>- the account to undelegate bandwidth to, that is, the account to whose benefit tokens have been staked, </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>unstake_net_quantity</parametername>
</parameternamelist>
<parameterdescription>
<para>- tokens to be unstaked from NET bandwidth, </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>unstake_cpu_quantity</parametername>
</parameternamelist>
<parameterdescription>
<para>- tokens to be unstaked from CPU bandwidth,</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="post"><para>Unstaked tokens are transferred to <computeroutput>from</computeroutput> liquid balance via a deferred transaction with a delay of 3 days. </para>
</simplesect>
<simplesect kind="post"><para>If called during the delay period of a previous <computeroutput>undelegatebw</computeroutput> action, pending action is canceled and timer is reset. </para>
</simplesect>
<simplesect kind="post"><para>All producers <computeroutput>from</computeroutput> account has voted for will have their votes updated immediately. </para>
</simplesect>
<simplesect kind="post"><para>Bandwidth and storage for the deferred transaction are billed to <computeroutput>from</computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1064" column="15" bodyfile="system/contracts/eosio.system/src/delegate_bandwidth.cpp" bodystart="365" bodyend="382"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1a04be77ea83f87d1533606390c37cf5d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::buyram</definition>
        <argsstring>(const name &amp;payer, const name &amp;receiver, const asset &amp;quant)</argsstring>
        <name>buyram</name>
        <qualifiedname>eosiosystem::system_contract::buyram</qualifiedname>
        <param>
          <type>const name &amp;</type>
          <declname>payer</declname>
        </param>
        <param>
          <type>const name &amp;</type>
          <declname>receiver</declname>
        </param>
        <param>
          <type>const asset &amp;</type>
          <declname>quant</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Buy ram action, increases receiver&apos;s ram quota based upon current price and quantity of tokens provided. An inline transfer from receiver to system contract of tokens will be executed.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>payer</parametername>
</parameternamelist>
<parameterdescription>
<para>- the ram buyer, </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>receiver</parametername>
</parameternamelist>
<parameterdescription>
<para>- the ram receiver, </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>quant</parametername>
</parameternamelist>
<parameterdescription>
<para>- the quantity of tokens to buy ram with.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
When buying ram the payer irreversibly transfers quant to system contract and only the receiver may reclaim the tokens via the sellram action. The receiver pays for the storage of all database records associated with this action.</para>
<para>RAM is a scarce resource whose supply is defined by global properties max_ram_size. RAM is priced using the bancor algorithm such that price-per-byte with a constant reserve ratio of 100:1. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1077" column="15" bodyfile="system/contracts/eosio.system/src/delegate_bandwidth.cpp" bodystart="42" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1a6b00b900a128d2718244ac8a408f65d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::sellram</definition>
        <argsstring>(const name &amp;account, int64_t bytes)</argsstring>
        <name>sellram</name>
        <qualifiedname>eosiosystem::system_contract::sellram</qualifiedname>
        <param>
          <type>const name &amp;</type>
          <declname>account</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>bytes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1081" column="15" bodyfile="system/contracts/eosio.system/src/delegate_bandwidth.cpp" bodystart="101" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1a93950629ac6f931b47542727a5411097" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::buyrambytes</definition>
        <argsstring>(const name &amp;payer, const name &amp;receiver, uint32_t bytes)</argsstring>
        <name>buyrambytes</name>
        <qualifiedname>eosiosystem::system_contract::buyrambytes</qualifiedname>
        <param>
          <type>const name &amp;</type>
          <declname>payer</declname>
        </param>
        <param>
          <type>const name &amp;</type>
          <declname>receiver</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>bytes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Buy a specific amount of ram bytes action. Increases receiver&apos;s ram in quantity of bytes provided. An inline transfer from receiver to system contract of tokens will be executed.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>payer</parametername>
</parameternamelist>
<parameterdescription>
<para>- the ram buyer, </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>receiver</parametername>
</parameternamelist>
<parameterdescription>
<para>- the ram receiver, </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bytes</parametername>
</parameternamelist>
<parameterdescription>
<para>- the quantity of ram to buy specified in bytes.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
This action will buy an exact amount of ram and bill the payer the current market price. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1093" column="15" bodyfile="system/contracts/eosio.system/src/delegate_bandwidth.cpp" bodystart="25" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1a10a63e006f9869caeaf2592bdfbccc42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::refund</definition>
        <argsstring>(const name &amp;owner)</argsstring>
        <name>refund</name>
        <qualifiedname>eosiosystem::system_contract::refund</qualifiedname>
        <param>
          <type>const name &amp;</type>
          <declname>owner</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Refund action, this action is called after the delegation-period to claim all pending unstaked tokens belonging to owner.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>owner</parametername>
</parameternamelist>
<parameterdescription>
<para>- the owner of the tokens claimed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1102" column="15" bodyfile="system/contracts/eosio.system/src/delegate_bandwidth.cpp" bodystart="385" bodyend="396"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1a252441c7b5811068d336f37ab627ecd9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::regproducer</definition>
        <argsstring>(const name &amp;producer, const public_key &amp;producer_key, const std::string &amp;url, uint16_t location)</argsstring>
        <name>regproducer</name>
        <qualifiedname>eosiosystem::system_contract::regproducer</qualifiedname>
        <param>
          <type>const name &amp;</type>
          <declname>producer</declname>
        </param>
        <param>
          <type>const public_key &amp;</type>
          <declname>producer_key</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>url</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>location</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Register producer action, indicates that a particular account wishes to become a producer, this action will create a <computeroutput>producer_config</computeroutput> and a <computeroutput><ref refid="structeosiosystem_1_1producer__info" kindref="compound">producer_info</ref></computeroutput> object for <computeroutput>producer</computeroutput> scope in producers tables.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>producer</parametername>
</parameternamelist>
<parameterdescription>
<para>- account registering to be a producer candidate, </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>producer_key</parametername>
</parameternamelist>
<parameterdescription>
<para>- the public key of the block producer, this is the key used by block producer to sign blocks, </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>url</parametername>
</parameternamelist>
<parameterdescription>
<para>- the url of the block producer, normally the url of the block producer presentation website, </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>location</parametername>
</parameternamelist>
<parameterdescription>
<para>- is the country code as defined in the ISO 3166, <ulink url="https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes">https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes</ulink></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para>Producer to register is an account </para>
</simplesect>
<simplesect kind="pre"><para>Authority of producer to register </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1120" column="15" bodyfile="system/contracts/eosio.system/src/voting.cpp" bodystart="79" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1a6c1143de786b7d7601ac0b0968cb0f19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::regproducer2</definition>
        <argsstring>(const name &amp;producer, const eosio::block_signing_authority &amp;producer_authority, const std::string &amp;url, uint16_t location)</argsstring>
        <name>regproducer2</name>
        <qualifiedname>eosiosystem::system_contract::regproducer2</qualifiedname>
        <param>
          <type>const name &amp;</type>
          <declname>producer</declname>
        </param>
        <param>
          <type>const eosio::block_signing_authority &amp;</type>
          <declname>producer_authority</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>url</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>location</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Register producer action, indicates that a particular account wishes to become a producer, this action will create a <computeroutput>producer_config</computeroutput> and a <computeroutput><ref refid="structeosiosystem_1_1producer__info" kindref="compound">producer_info</ref></computeroutput> object for <computeroutput>producer</computeroutput> scope in producers tables.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>producer</parametername>
</parameternamelist>
<parameterdescription>
<para>- account registering to be a producer candidate, </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>producer_authority</parametername>
</parameternamelist>
<parameterdescription>
<para>- the weighted threshold multisig block signing authority of the block producer used to sign blocks, </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>url</parametername>
</parameternamelist>
<parameterdescription>
<para>- the url of the block producer, normally the url of the block producer presentation website, </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>location</parametername>
</parameternamelist>
<parameterdescription>
<para>- is the country code as defined in the ISO 3166, <ulink url="https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes">https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes</ulink></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para>Producer to register is an account </para>
</simplesect>
<simplesect kind="pre"><para>Authority of producer to register </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1136" column="15" bodyfile="system/contracts/eosio.system/src/voting.cpp" bodystart="86" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1a0b8c45d3226929472bc5785742c05152" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::unregprod</definition>
        <argsstring>(const name &amp;producer)</argsstring>
        <name>unregprod</name>
        <qualifiedname>eosiosystem::system_contract::unregprod</qualifiedname>
        <param>
          <type>const name &amp;</type>
          <declname>producer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Unregister producer action, deactivates the block producer with account name <computeroutput>producer</computeroutput>.</para>
<para>Deactivate the block producer with account name <computeroutput>producer</computeroutput>. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>producer</parametername>
</parameternamelist>
<parameterdescription>
<para>- the block producer account to unregister. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1145" column="15" bodyfile="system/contracts/eosio.system/src/voting.cpp" bodystart="97" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1ad8a6eb47fd97c9f243019d93916ff78f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::setram</definition>
        <argsstring>(uint64_t max_ram_size)</argsstring>
        <name>setram</name>
        <qualifiedname>eosiosystem::system_contract::setram</qualifiedname>
        <param>
          <type>uint64_t</type>
          <declname>max_ram_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set ram action sets the ram supply. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>max_ram_size</parametername>
</parameternamelist>
<parameterdescription>
<para>- the amount of ram supply to set. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
<para>decreasing ram might result market maker issues</para>
<para>Increase the amount of ram for sale based upon the change in max ram size.</para>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1152" column="15" bodyfile="system/contracts/eosio.system/src/eosio.system.cpp" bodystart="67" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1a7d984add31b6060bb59d472f9f1bd1a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::setramrate</definition>
        <argsstring>(uint16_t bytes_per_block)</argsstring>
        <name>setramrate</name>
        <qualifiedname>eosiosystem::system_contract::setramrate</qualifiedname>
        <param>
          <type>uint16_t</type>
          <declname>bytes_per_block</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set ram rate action, sets the rate of increase of RAM in bytes per block. It is capped by the uint16_t to a maximum rate of 3 TB per year. If update_ram_supply hasn&apos;t been called for the most recent block, then new ram will be allocated at the old rate up to the present block before switching the rate.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bytes_per_block</parametername>
</parameternamelist>
<parameterdescription>
<para>- the amount of bytes per block increase to set. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1162" column="15" bodyfile="system/contracts/eosio.system/src/eosio.system.cpp" bodystart="105" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1a19d51a2b9b57ffb656612c280ee4ab4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::voteproducer</definition>
        <argsstring>(const name &amp;voter, const name &amp;proxy, const std::vector&lt; name &gt; &amp;producers)</argsstring>
        <name>voteproducer</name>
        <qualifiedname>eosiosystem::system_contract::voteproducer</qualifiedname>
        <param>
          <type>const name &amp;</type>
          <declname>voter</declname>
        </param>
        <param>
          <type>const name &amp;</type>
          <declname>proxy</declname>
        </param>
        <param>
          <type>const std::vector&lt; name &gt; &amp;</type>
          <declname>producers</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Vote producer action, votes for a set of producers. This action updates the list of <computeroutput>producers</computeroutput> voted for, for <computeroutput>voter</computeroutput> account. If voting for a <computeroutput>proxy</computeroutput>, the producer votes will not change until the proxy updates their own vote. Voter can vote for a proxy <bold>or</bold> a list of at most 30 producers. Storage change is billed to <computeroutput>voter</computeroutput>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>voter</parametername>
</parameternamelist>
<parameterdescription>
<para>- the account to change the voted producers for, </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>proxy</parametername>
</parameternamelist>
<parameterdescription>
<para>- the proxy to change the voted producers for, </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>producers</parametername>
</parameternamelist>
<parameterdescription>
<para>- the list of producers to vote for, a maximum of 30 producers is allowed.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para>Producers must be sorted from lowest to highest and must be registered and active </para>
</simplesect>
<simplesect kind="pre"><para>If proxy is set then no producers can be voted for </para>
</simplesect>
<simplesect kind="pre"><para>If proxy is set then proxy account must exist and be registered as a proxy </para>
</simplesect>
<simplesect kind="pre"><para>Every listed producer or proxy must have been previously registered </para>
</simplesect>
<simplesect kind="pre"><para>Voter must authorize this action </para>
</simplesect>
<simplesect kind="pre"><para>Voter must have previously staked some EOS for voting </para>
</simplesect>
<simplesect kind="pre"><para>Voter-&gt;staked must be up to date</para>
</simplesect>
<simplesect kind="post"><para>Every producer previously voted for will have vote reduced by previous vote weight </para>
</simplesect>
<simplesect kind="post"><para>Every producer newly voted for will have vote increased by new vote amount </para>
</simplesect>
<simplesect kind="post"><para>Prior proxy will proxied_vote_weight decremented by previous vote weight </para>
</simplesect>
<simplesect kind="post"><para>New proxy will proxied_vote_weight incremented by new vote weight </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1188" column="15" bodyfile="system/contracts/eosio.system/src/voting.cpp" bodystart="202" bodyend="215"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1afd8f9ea7890c647010bc9bccdcda6ba9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::voteupdate</definition>
        <argsstring>(const name &amp;voter_name)</argsstring>
        <name>voteupdate</name>
        <qualifiedname>eosiosystem::system_contract::voteupdate</qualifiedname>
        <param>
          <type>const name &amp;</type>
          <declname>voter_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Update the vote weight for the producers or proxy <computeroutput>voter_name</computeroutput> currently votes for. This will also update the <computeroutput>staked</computeroutput> value for the <computeroutput>voter_name</computeroutput> by checking <computeroutput>rexbal</computeroutput> and all delegated NET and CPU.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>voter_name</parametername>
</parameternamelist>
<parameterdescription>
<para>- the account to update the votes for,</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="post"><para>the voter.staked will be updated </para>
</simplesect>
<simplesect kind="post"><para>previously voted for producers vote weight will be updated with new weight </para>
</simplesect>
<simplesect kind="post"><para>previously voted for proxy vote weight will be updated with new weight </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1201" column="15" bodyfile="system/contracts/eosio.system/src/voting.cpp" bodystart="217" bodyend="246"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1a7192c64e5a9d0b9b202390dbfade0858" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::regproxy</definition>
        <argsstring>(const name &amp;proxy, bool isproxy)</argsstring>
        <name>regproxy</name>
        <qualifiedname>eosiosystem::system_contract::regproxy</qualifiedname>
        <param>
          <type>const name &amp;</type>
          <declname>proxy</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isproxy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Register proxy action, sets <computeroutput>proxy</computeroutput> account as proxy. An account marked as a proxy can vote with the weight of other accounts which have selected it as a proxy. Other accounts must refresh their voteproducer to update the proxy&apos;s weight. Storage change is billed to <computeroutput>proxy</computeroutput>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>proxy</parametername>
</parameternamelist>
<parameterdescription>
<para>- the account registering as voter proxy (or unregistering), </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>isproxy</parametername>
</parameternamelist>
<parameterdescription>
<para>- if true, proxy is registered; if false, proxy is unregistered.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para>Proxy must have something staked (existing row in voters table) </para>
</simplesect>
<simplesect kind="pre"><para>New state must be different than current state </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1217" column="15" bodyfile="system/contracts/eosio.system/src/voting.cpp" bodystart="374" bodyend="391"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1aa4ea1b93cfb3d99fcaaabb994c711bee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::setparams</definition>
        <argsstring>(const blockchain_parameters_t &amp;params)</argsstring>
        <name>setparams</name>
        <qualifiedname>eosiosystem::system_contract::setparams</qualifiedname>
        <param>
          <type>const <ref refid="namespaceeosiosystem_1a5e1fbfc9229b1616bfc70a519e26e9c2" kindref="member">blockchain_parameters_t</ref> &amp;</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the blockchain parameters. By tunning these parameters a degree of customization can be achieved. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>- New blockchain parameters to set. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1225" column="15" bodyfile="system/contracts/eosio.system/src/eosio.system.cpp" bodystart="116" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1a34b35d1f073383e599d4e2bb56e20524" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::claimrewards</definition>
        <argsstring>(const name &amp;owner)</argsstring>
        <name>claimrewards</name>
        <qualifiedname>eosiosystem::system_contract::claimrewards</qualifiedname>
        <param>
          <type>const name &amp;</type>
          <declname>owner</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Claim rewards action, claims block producing and vote rewards. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>owner</parametername>
</parameternamelist>
<parameterdescription>
<para>- producer account claiming per-block and per-vote rewards. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
<para>New metric to be used in pervote pay calculation. Instead of vote weight ratio, we combine vote weight and time duration the vote weight has been held into one metric.</para>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1242" column="15" bodyfile="system/contracts/eosio.system/src/producer_pay.cpp" bodystart="90" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1a648ec27a9bc3bf7e36c5c88f6932b9ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::setpriv</definition>
        <argsstring>(const name &amp;account, uint8_t is_priv)</argsstring>
        <name>setpriv</name>
        <qualifiedname>eosiosystem::system_contract::setpriv</qualifiedname>
        <param>
          <type>const name &amp;</type>
          <declname>account</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>is_priv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set privilege status for an account. Allows to set privilege status for an account (turn it on/off). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>account</parametername>
</parameternamelist>
<parameterdescription>
<para>- the account to set the privileged status for. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>is_priv</parametername>
</parameternamelist>
<parameterdescription>
<para>- 0 for false, &gt; 0 for true. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1250" column="15" bodyfile="system/contracts/eosio.system/src/eosio.system.cpp" bodystart="256" bodyend="259"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1a2a41dc1871059a536a55626b8c76f5b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::rmvproducer</definition>
        <argsstring>(const name &amp;producer)</argsstring>
        <name>rmvproducer</name>
        <qualifiedname>eosiosystem::system_contract::rmvproducer</qualifiedname>
        <param>
          <type>const name &amp;</type>
          <declname>producer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Remove producer action, deactivates a producer by name, if not found asserts. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>producer</parametername>
</parameternamelist>
<parameterdescription>
<para>- the producer account to deactivate. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1257" column="15" bodyfile="system/contracts/eosio.system/src/eosio.system.cpp" bodystart="417" bodyend="424"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1a0af4a55018801131ae7dc7a923bead0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::updtrevision</definition>
        <argsstring>(uint8_t revision)</argsstring>
        <name>updtrevision</name>
        <qualifiedname>eosiosystem::system_contract::updtrevision</qualifiedname>
        <param>
          <type>uint8_t</type>
          <declname>revision</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Update revision action, updates the current revision. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>revision</parametername>
</parameternamelist>
<parameterdescription>
<para>- it has to be incremented by 1 compared with current revision.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para>Current revision can not be higher than 254, and has to be smaller than or equal 1 (“set upper bound to greatest revision supported in the code”). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1267" column="15" bodyfile="system/contracts/eosio.system/src/eosio.system.cpp" bodystart="426" bodyend="433"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1af1c329fbf0e3e45b62b729e6ee743c62" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::bidname</definition>
        <argsstring>(const name &amp;bidder, const name &amp;newname, const asset &amp;bid)</argsstring>
        <name>bidname</name>
        <qualifiedname>eosiosystem::system_contract::bidname</qualifiedname>
        <param>
          <type>const name &amp;</type>
          <declname>bidder</declname>
        </param>
        <param>
          <type>const name &amp;</type>
          <declname>newname</declname>
        </param>
        <param>
          <type>const asset &amp;</type>
          <declname>bid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Bid name action, allows an account <computeroutput>bidder</computeroutput> to place a bid for a name <computeroutput>newname</computeroutput>. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bidder</parametername>
</parameternamelist>
<parameterdescription>
<para>- the account placing the bid, </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newname</parametername>
</parameternamelist>
<parameterdescription>
<para>- the name the bid is placed for, </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bid</parametername>
</parameternamelist>
<parameterdescription>
<para>- the amount of system tokens payed for the bid.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para>Bids can be placed only on top-level suffix, </para>
</simplesect>
<simplesect kind="pre"><para>Non empty name, </para>
</simplesect>
<simplesect kind="pre"><para>Names longer than 12 chars are not allowed, </para>
</simplesect>
<simplesect kind="pre"><para>Names equal with 12 chars can be created without placing a bid, </para>
</simplesect>
<simplesect kind="pre"><para>Bid has to be bigger than zero, </para>
</simplesect>
<simplesect kind="pre"><para>Bid&apos;s symbol must be system token, </para>
</simplesect>
<simplesect kind="pre"><para>Bidder account has to be different than current highest bidder, </para>
</simplesect>
<simplesect kind="pre"><para>Bid must increase current bid by 10%, </para>
</simplesect>
<simplesect kind="pre"><para>Auction must still be opened. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1286" column="15" bodyfile="system/contracts/eosio.system/src/name_bidding.cpp" bodystart="12" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1a1ad9f05ad7242412bf5ad87706f923ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::bidrefund</definition>
        <argsstring>(const name &amp;bidder, const name &amp;newname)</argsstring>
        <name>bidrefund</name>
        <qualifiedname>eosiosystem::system_contract::bidrefund</qualifiedname>
        <param>
          <type>const name &amp;</type>
          <declname>bidder</declname>
        </param>
        <param>
          <type>const name &amp;</type>
          <declname>newname</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Bid refund action, allows the account <computeroutput>bidder</computeroutput> to get back the amount it bid so far on a <computeroutput>newname</computeroutput> name.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bidder</parametername>
</parameternamelist>
<parameterdescription>
<para>- the account that gets refunded, </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newname</parametername>
</parameternamelist>
<parameterdescription>
<para>- the name for which the bid was placed and now it gets refunded for. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1295" column="15" bodyfile="system/contracts/eosio.system/src/name_bidding.cpp" bodystart="75" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1ac2cab12a3c2a1d20a3215124100cf3e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::setinflation</definition>
        <argsstring>(int64_t annual_rate, int64_t inflation_pay_factor, int64_t votepay_factor)</argsstring>
        <name>setinflation</name>
        <qualifiedname>eosiosystem::system_contract::setinflation</qualifiedname>
        <param>
          <type>int64_t</type>
          <declname>annual_rate</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>inflation_pay_factor</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>votepay_factor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Change the annual inflation rate of the core token supply and specify how the new issued tokens will be distributed based on the following structure.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>annual_rate</parametername>
</parameternamelist>
<parameterdescription>
<para>- Annual inflation rate of the core token supply. (eg. For 5% Annual inflation =&gt; annual_rate=500 For 1.5% Annual inflation =&gt; annual_rate=150 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inflation_pay_factor</parametername>
</parameternamelist>
<parameterdescription>
<para>- Inverse of the fraction of the inflation used to reward block producers. The remaining inflation will be sent to the <computeroutput>eosio.saving</computeroutput> account. (eg. For 20% of inflation going to block producer rewards =&gt; inflation_pay_factor = 50000 For 100% of inflation going to block producer rewards =&gt; inflation_pay_factor = 10000). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>votepay_factor</parametername>
</parameternamelist>
<parameterdescription>
<para>- Inverse of the fraction of the block producer rewards to be distributed proportional to blocks produced. The remaining rewards will be distributed proportional to votes received. (eg. For 25% of block producer rewards going towards block pay =&gt; votepay_factor = 40000 For 75% of block producer rewards going towards block pay =&gt; votepay_factor = 13333). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1314" column="15" bodyfile="system/contracts/eosio.system/src/eosio.system.cpp" bodystart="435" bodyend="448"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1ae71212071f747832a2a56eb4868d9c81" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::cfgpowerup</definition>
        <argsstring>(powerup_config &amp;args)</argsstring>
        <name>cfgpowerup</name>
        <qualifiedname>eosiosystem::system_contract::cfgpowerup</qualifiedname>
        <param>
          <type><ref refid="structeosiosystem_1_1powerup__config" kindref="compound">powerup_config</ref> &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Configure the <computeroutput>power</computeroutput> market. The market becomes available the first time this action is invoked. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1321" column="15" bodyfile="system/contracts/eosio.system/src/powerup.cpp" bodystart="99" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1aa573d628b237c167aa99fc71cb150736" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::powerupexec</definition>
        <argsstring>(const name &amp;user, uint16_t max)</argsstring>
        <name>powerupexec</name>
        <qualifiedname>eosiosystem::system_contract::powerupexec</qualifiedname>
        <param>
          <type>const name &amp;</type>
          <declname>user</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Process power queue and update state. Action does not execute anything related to a specific user.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>user</parametername>
</parameternamelist>
<parameterdescription>
<para>- any account can execute this action </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max</parametername>
</parameternamelist>
<parameterdescription>
<para>- number of queue items to process </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1330" column="15" bodyfile="system/contracts/eosio.system/src/powerup.cpp" bodystart="145" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1ab3d6d9e77d6b9ac63b79e6d8104d8312" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::powerup</definition>
        <argsstring>(const name &amp;payer, const name &amp;receiver, uint32_t days, const asset &amp;payment, const bool transfer=false)</argsstring>
        <name>powerup</name>
        <qualifiedname>eosiosystem::system_contract::powerup</qualifiedname>
        <param>
          <type>const name &amp;</type>
          <declname>payer</declname>
        </param>
        <param>
          <type>const name &amp;</type>
          <declname>receiver</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>days</declname>
        </param>
        <param>
          <type>const asset &amp;</type>
          <declname>payment</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>transfer</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Powerup NET and CPU resources by percentage</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>payer</parametername>
</parameternamelist>
<parameterdescription>
<para>- the resource buyer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>receiver</parametername>
</parameternamelist>
<parameterdescription>
<para>- the resource receiver </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>days</parametername>
</parameternamelist>
<parameterdescription>
<para>- number of days of resource availability. Must match market configuration. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>net_frac</parametername>
</parameternamelist>
<parameterdescription>
<para>- fraction of net (100% = 10^15) managed by this market </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cpu_frac</parametername>
</parameternamelist>
<parameterdescription>
<para>- fraction of cpu (100% = 10^15) managed by this market </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max_payment</parametername>
</parameternamelist>
<parameterdescription>
<para>- the maximum amount <computeroutput>payer</computeroutput> is willing to pay. Tokens are withdrawn from <computeroutput>payer</computeroutput>&apos;s token balance. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1344" column="15" bodyfile="system/contracts/eosio.system/src/powerup.cpp" bodystart="163" bodyend="245"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1ab940f454d4d3d0018f22bf472caf3b52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::limitauthchg</definition>
        <argsstring>(const name &amp;account, const std::vector&lt; name &gt; &amp;allow_perms, const std::vector&lt; name &gt; &amp;disallow_perms)</argsstring>
        <name>limitauthchg</name>
        <qualifiedname>eosiosystem::system_contract::limitauthchg</qualifiedname>
        <param>
          <type>const name &amp;</type>
          <declname>account</declname>
        </param>
        <param>
          <type>const std::vector&lt; name &gt; &amp;</type>
          <declname>allow_perms</declname>
        </param>
        <param>
          <type>const std::vector&lt; name &gt; &amp;</type>
          <declname>disallow_perms</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>limitauthchg opts into or out of restrictions on updateauth, deleteauth, linkauth, and unlinkauth.</para>
<para>If either allow_perms or disallow_perms is non-empty, then opts into restrictions. If allow_perms is non-empty, then the authorized_by argument of the restricted actions must be in the vector, or the actions will abort. If disallow_perms is non-empty, then the authorized_by argument of the restricted actions must not be in the vector, or the actions will abort.</para>
<para>If both allow_perms and disallow_perms are empty, then opts out of the restrictions. limitauthchg aborts if both allow_perms and disallow_perms are non-empty.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>account</parametername>
</parameternamelist>
<parameterdescription>
<para>- account to change </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>allow_perms</parametername>
</parameternamelist>
<parameterdescription>
<para>- permissions which may use the restricted actions </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>disallow_perms</parametername>
</parameternamelist>
<parameterdescription>
<para>- permissions which may not use the restricted actions </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1362" column="15" bodyfile="system/contracts/eosio.system/src/limit_auth_changes.cpp" bodystart="6" bodyend="35"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1a50976d2a74593cdd840662159dc21ab1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>symbol</type>
        <definition>static symbol eosiosystem::system_contract::get_core_symbol</definition>
        <argsstring>(name system_account=&quot;eosio&quot;_n)</argsstring>
        <name>get_core_symbol</name>
        <qualifiedname>eosiosystem::system_contract::get_core_symbol</qualifiedname>
        <param>
          <type>name</type>
          <declname>system_account</declname>
          <defval>&quot;eosio&quot;_n</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="687" column="24" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="687" bodyend="691"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1a91de00b875703918a8c95898a046bcc2" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>symbol</type>
        <definition>static symbol eosiosystem::system_contract::get_core_symbol</definition>
        <argsstring>(const rammarket &amp;rm)</argsstring>
        <name>get_core_symbol</name>
        <qualifiedname>eosiosystem::system_contract::get_core_symbol</qualifiedname>
        <param>
          <type>const <ref refid="namespaceeosiosystem_1a084bb74fe483e49001e674d5e66001de" kindref="member">rammarket</ref> &amp;</type>
          <declname>rm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1420" column="24" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="1420" bodyend="1424"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1aa7000a5c93cf390e5495e65704919674" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeosiosystem_1_1eosio__global__state" kindref="compound">eosio_global_state</ref></type>
        <definition>eosio_global_state eosiosystem::system_contract::get_default_parameters</definition>
        <argsstring>()</argsstring>
        <name>get_default_parameters</name>
        <qualifiedname>eosiosystem::system_contract::get_default_parameters</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1427" column="36" bodyfile="system/contracts/eosio.system/src/eosio.system.cpp" bodystart="41" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1a7d37b1992d1299b8354e7efb1872de6c" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeosiosystem_1_1eosio__global__state4" kindref="compound">eosio_global_state4</ref></type>
        <definition>eosio_global_state4 eosiosystem::system_contract::get_default_inflation_parameters</definition>
        <argsstring>()</argsstring>
        <name>get_default_inflation_parameters</name>
        <qualifiedname>eosiosystem::system_contract::get_default_inflation_parameters</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1428" column="37" bodyfile="system/contracts/eosio.system/src/eosio.system.cpp" bodystart="47" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1ae6143e5f12ba87dc18105710189db14b" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>time_point_sec</type>
        <definition>time_point_sec eosiosystem::system_contract::get_rex_maturity</definition>
        <argsstring>()</argsstring>
        <name>get_rex_maturity</name>
        <qualifiedname>eosiosystem::system_contract::get_rex_maturity</qualifiedname>
        <briefdescription>
<para>Calculates maturity time of purchased REX tokens which is 4 days from end of the day UTC. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>time_point_sec </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1458" column="32" bodyfile="system/contracts/eosio.system/src/rex.cpp" bodystart="962" bodyend="969"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1a04a864fd31b03ca4e7ce3a9fd65476c7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t eosiosystem::system_contract::update_ram_debt_table</definition>
        <argsstring>(name payer, name account, int64_t ram_bytes)</argsstring>
        <name>update_ram_debt_table</name>
        <qualifiedname>eosiosystem::system_contract::update_ram_debt_table</qualifiedname>
        <param>
          <type>name</type>
          <declname>payer</declname>
        </param>
        <param>
          <type>name</type>
          <declname>account</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>ram_bytes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1429" column="18" bodyfile="system/contracts/eosio.system/src/powerup.cpp" bodystart="247" bodyend="278"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1a7e80c965d15f6613db3ee04188d68af5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::emit</definition>
        <argsstring>(eosio::asset new_emission)</argsstring>
        <name>emit</name>
        <qualifiedname>eosiosystem::system_contract::emit</qualifiedname>
        <param>
          <type>eosio::asset</type>
          <declname>new_emission</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1431" column="15" bodyfile="system/contracts/eosio.system/src/producer_pay.cpp" bodystart="80" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1a32504695292c0e9c2171987821bc3857" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>symbol</type>
        <definition>symbol eosiosystem::system_contract::core_symbol</definition>
        <argsstring>() const</argsstring>
        <name>core_symbol</name>
        <qualifiedname>eosiosystem::system_contract::core_symbol</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1433" column="17" bodyfile="system/contracts/eosio.system/src/eosio.system.cpp" bodystart="55" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1ae248c8483e7ff56c697793c49bd58700" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::update_ram_supply</definition>
        <argsstring>()</argsstring>
        <name>update_ram_supply</name>
        <qualifiedname>eosiosystem::system_contract::update_ram_supply</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Increase the amount of ram for sale based upon the change in max ram size.</para>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1434" column="15" bodyfile="system/contracts/eosio.system/src/eosio.system.cpp" bodystart="87" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1ae6107f7d60481e9d2ceceb3bc11f9e58" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::runrex</definition>
        <argsstring>(uint16_t max)</argsstring>
        <name>runrex</name>
        <qualifiedname>eosiosystem::system_contract::runrex</qualifiedname>
        <param>
          <type>uint16_t</type>
          <declname>max</declname>
        </param>
        <briefdescription>
<para>Performs maintenance operations on expired NET and CPU loans and sellrex orders. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>max</parametername>
</parameternamelist>
<parameterdescription>
<para>- maximum number of each of the three categories to be processed </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
<para>update <ref refid="structeosiosystem_1_1rex__pool" kindref="compound">rex_pool</ref> in order to delete existing loan</para>
<para>calculate rented tokens at current price</para>
<para>conditions for loan renewal</para>
<para>loan has sufficient balance</para>
<para>loan has favorable return</para>
<para>no pending sell orders</para>
<para>update <ref refid="structeosiosystem_1_1rex__pool" kindref="compound">rex_pool</ref> in order to account for renewed loan</para>
<para>update renewed loan fields</para>
<para>refund &quot;from&quot; account if the closed loan balance is positive</para>
<para>transfer from eosio.names to eosio.rex</para>
<para>process cpu loans</para>
<para>process net loans</para>
<para>process sellrex orders</para>
<para>send dummy action to show owner and proceeds of filled sellrex order</para>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1438" column="15" bodyfile="system/contracts/eosio.system/src/rex.cpp" bodystart="511" bodyend="618"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1aa4ae35d44dadd1eb2fbcc0782b89bf89" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::update_rex_pool</definition>
        <argsstring>()</argsstring>
        <name>update_rex_pool</name>
        <qualifiedname>eosiosystem::system_contract::update_rex_pool</qualifiedname>
        <briefdescription>
<para>Adds returns from the REX return pool to the REX pool. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1439" column="15" bodyfile="system/contracts/eosio.system/src/rex.cpp" bodystart="623" bodyend="724"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1ac1e24d59a71d76c1706a87584635f89d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::update_resource_limits</definition>
        <argsstring>(const name &amp;from, const name &amp;receiver, int64_t delta_net, int64_t delta_cpu)</argsstring>
        <name>update_resource_limits</name>
        <qualifiedname>eosiosystem::system_contract::update_resource_limits</qualifiedname>
        <param>
          <type>const name &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>const name &amp;</type>
          <declname>receiver</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>delta_net</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>delta_cpu</declname>
        </param>
        <briefdescription>
<para>Updates account NET and CPU resource limits. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>from</parametername>
</parameternamelist>
<parameterdescription>
<para>- account charged for RAM if there is a need </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>receiver</parametername>
</parameternamelist>
<parameterdescription>
<para>- account whose resource limits are updated </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>delta_net</parametername>
</parameternamelist>
<parameterdescription>
<para>- change in NET bandwidth limit </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>delta_cpu</parametername>
</parameternamelist>
<parameterdescription>
<para>- change in CPU bandwidth limit </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1440" column="15" bodyfile="system/contracts/eosio.system/src/rex.cpp" bodystart="364" bodyend="412"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1a9d899492df3ee11bad2f6b028ced6ace" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::check_voting_requirement</definition>
        <argsstring>(const name &amp;owner, const char *error_msg=&quot;must vote for at least 21 producers or for a proxy before buying REX&quot;) const</argsstring>
        <name>check_voting_requirement</name>
        <qualifiedname>eosiosystem::system_contract::check_voting_requirement</qualifiedname>
        <param>
          <type>const name &amp;</type>
          <declname>owner</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>error_msg</declname>
          <defval>&quot;must vote for at least 21 producers or for a proxy before buying REX&quot;</defval>
        </param>
        <briefdescription>
<para>Checks if account satisfies voting requirement (voting for a proxy or 21 producers) for buying REX. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>owner</parametername>
</parameternamelist>
<parameterdescription>
<para>- account buying or already holding REX tokens @err_msg - error message </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1441" column="15" bodyfile="system/contracts/eosio.system/src/rex.cpp" bodystart="421" bodyend="425"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1a80d0308e3ef8c8f7efba13c635866332" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structeosiosystem_1_1rex__order__outcome" kindref="compound">rex_order_outcome</ref></type>
        <definition>rex_order_outcome eosiosystem::system_contract::fill_rex_order</definition>
        <argsstring>(const rex_balance_table::const_iterator &amp;bitr, const asset &amp;rex)</argsstring>
        <name>fill_rex_order</name>
        <qualifiedname>eosiosystem::system_contract::fill_rex_order</qualifiedname>
        <param>
          <type>const rex_balance_table::const_iterator &amp;</type>
          <declname>bitr</declname>
        </param>
        <param>
          <type>const asset &amp;</type>
          <declname>rex</declname>
        </param>
        <briefdescription>
<para>Processes a sellrex order and returns object containing the results. </para>
        </briefdescription>
        <detaileddescription>
<para>Processes an incoming or already scheduled sellrex order. If REX pool has enough core tokens not frozen in loans, order is filled. In this case, REX pool totals, user <ref refid="structeosiosystem_1_1rex__balance" kindref="compound">rex_balance</ref> and user vote_stake are updated. However, this function does not update user voting power. The function returns success flag, order proceeds, and vote stake delta. These are used later in a different function to complete order processing, i.e. transfer proceeds to user REX fund and update user vote weight.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bitr</parametername>
</parameternamelist>
<parameterdescription>
<para>- iterator pointing to <ref refid="structeosiosystem_1_1rex__balance" kindref="compound">rex_balance</ref> database record </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rex</parametername>
</parameternamelist>
<parameterdescription>
<para>- amount of rex to be sold</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="structeosiosystem_1_1rex__order__outcome" kindref="compound">rex_order_outcome</ref> - a struct containing success flag, order proceeds, and resultant vote stake change </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1443" column="28" bodyfile="system/contracts/eosio.system/src/rex.cpp" bodystart="776" bodyend="810"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1a5366ce381bf8020a24c597109f2cb053" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>asset</type>
        <definition>asset eosiosystem::system_contract::update_rex_account</definition>
        <argsstring>(const name &amp;owner, const asset &amp;proceeds, const asset &amp;unstake_quant, bool force_vote_update=false)</argsstring>
        <name>update_rex_account</name>
        <qualifiedname>eosiosystem::system_contract::update_rex_account</qualifiedname>
        <param>
          <type>const name &amp;</type>
          <declname>owner</declname>
        </param>
        <param>
          <type>const asset &amp;</type>
          <declname>proceeds</declname>
        </param>
        <param>
          <type>const asset &amp;</type>
          <declname>unstake_quant</declname>
          <defname>delta_stake</defname>
        </param>
        <param>
          <type>bool</type>
          <declname>force_vote_update</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Processes owner filled sellrex order and updates vote weight. </para>
        </briefdescription>
        <detaileddescription>
<para>Checks if user has a scheduled sellrex order that has been filled, completes its processing, and deletes it. Processing entails transferring proceeds to user REX fund and updating user vote weight. Additional proceeds and stake change can be passed as arguments. This function is called only by actions pushed by owner.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>owner</parametername>
</parameternamelist>
<parameterdescription>
<para>- owner account name </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>proceeds</parametername>
</parameternamelist>
<parameterdescription>
<para>- additional proceeds to be transferred to owner REX fund </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>delta_stake</parametername>
</parameternamelist>
<parameterdescription>
<para>- additional stake to be added to owner vote weight </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>force_vote_update</parametername>
</parameternamelist>
<parameterdescription>
<para>- if true, vote weight is updated even if vote stake didn&apos;t change</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>asset - REX amount of owner unfilled sell order if one exists </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1444" column="16" bodyfile="system/contracts/eosio.system/src/rex.cpp" bodystart="894" bodyend="916"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1ad6ba033cdb66fc3e66790f4bfde91455" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::channel_to_rex</definition>
        <argsstring>(const name &amp;from, const asset &amp;amount, bool required=false)</argsstring>
        <name>channel_to_rex</name>
        <qualifiedname>eosiosystem::system_contract::channel_to_rex</qualifiedname>
        <param>
          <type>const name &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>const asset &amp;</type>
          <declname>amount</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>required</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Channels system fees to REX pool. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>from</parametername>
</parameternamelist>
<parameterdescription>
<para>- account from which asset is transferred to REX pool </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>amount</parametername>
</parameternamelist>
<parameterdescription>
<para>- amount of tokens to be transferred </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>required</parametername>
</parameternamelist>
<parameterdescription>
<para>- if true, asserts when the system is not configured to channel fees into REX </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1445" column="15" bodyfile="system/contracts/eosio.system/src/rex.cpp" bodystart="925" bodyend="938"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1a6a8b738310e28209d7ed24fb94cb8853" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::channel_namebid_to_rex</definition>
        <argsstring>(const int64_t highest_bid)</argsstring>
        <name>channel_namebid_to_rex</name>
        <qualifiedname>eosiosystem::system_contract::channel_namebid_to_rex</qualifiedname>
        <param>
          <type>const int64_t</type>
          <declname>highest_bid</declname>
        </param>
        <briefdescription>
<para>Updates namebid proceeds to be transferred to REX pool. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>highest_bid</parametername>
</parameternamelist>
<parameterdescription>
<para>- highest bidding amount of closed namebid </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1446" column="15" bodyfile="system/contracts/eosio.system/src/rex.cpp" bodystart="945" bodyend="954"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1ad3d55a418a62ecbb52ef5df21b1fd2d5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>int64_t</type>
        <definition>int64_t eosiosystem::system_contract::rent_rex</definition>
        <argsstring>(T &amp;table, const name &amp;from, const name &amp;receiver, const asset &amp;loan_payment, const asset &amp;loan_fund)</argsstring>
        <name>rent_rex</name>
        <qualifiedname>eosiosystem::system_contract::rent_rex</qualifiedname>
        <param>
          <type>T &amp;</type>
          <declname>table</declname>
        </param>
        <param>
          <type>const name &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>const name &amp;</type>
          <declname>receiver</declname>
        </param>
        <param>
          <type>const asset &amp;</type>
          <declname>loan_payment</declname>
        </param>
        <param>
          <type>const asset &amp;</type>
          <declname>loan_fund</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>already checked that _rexpool.begin() != _rexpool.end() in <ref refid="classeosiosystem_1_1system__contract_1a719d5ebcb8b11ac1813373d6c0b7c70b" kindref="member">rex_loans_available()</ref></para>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1448" column="18" bodyfile="system/contracts/eosio.system/src/rex.cpp" bodystart="727" bodyend="758"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1ae587a91e5f2759077e3259232c6b2086" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void eosiosystem::system_contract::fund_rex_loan</definition>
        <argsstring>(T &amp;table, const name &amp;from, uint64_t loan_num, const asset &amp;payment)</argsstring>
        <name>fund_rex_loan</name>
        <qualifiedname>eosiosystem::system_contract::fund_rex_loan</qualifiedname>
        <param>
          <type>T &amp;</type>
          <declname>table</declname>
        </param>
        <param>
          <type>const name &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>loan_num</declname>
        </param>
        <param>
          <type>const asset &amp;</type>
          <declname>payment</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1450" column="15" bodyfile="system/contracts/eosio.system/src/rex.cpp" bodystart="813" bodyend="823"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1a78afae5de1343823badbc8a412a4e6c3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void eosiosystem::system_contract::defund_rex_loan</definition>
        <argsstring>(T &amp;table, const name &amp;from, uint64_t loan_num, const asset &amp;amount)</argsstring>
        <name>defund_rex_loan</name>
        <qualifiedname>eosiosystem::system_contract::defund_rex_loan</qualifiedname>
        <param>
          <type>T &amp;</type>
          <declname>table</declname>
        </param>
        <param>
          <type>const name &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>loan_num</declname>
        </param>
        <param>
          <type>const asset &amp;</type>
          <declname>amount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1452" column="15" bodyfile="system/contracts/eosio.system/src/rex.cpp" bodystart="826" bodyend="837"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1af4cddb1aa9e3aa7fc0027df70880235f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::transfer_from_fund</definition>
        <argsstring>(const name &amp;owner, const asset &amp;amount)</argsstring>
        <name>transfer_from_fund</name>
        <qualifiedname>eosiosystem::system_contract::transfer_from_fund</qualifiedname>
        <param>
          <type>const name &amp;</type>
          <declname>owner</declname>
        </param>
        <param>
          <type>const asset &amp;</type>
          <declname>amount</declname>
        </param>
        <briefdescription>
<para>Transfers tokens from owner REX fund. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para>- owner REX fund has sufficient balance</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>owner</parametername>
</parameternamelist>
<parameterdescription>
<para>- owner account name </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>amount</parametername>
</parameternamelist>
<parameterdescription>
<para>- tokens to be transferred out of REX fund </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1453" column="15" bodyfile="system/contracts/eosio.system/src/rex.cpp" bodystart="847" bodyend="855"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1a2341229da3b76885139cb8d762f510d4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::transfer_to_fund</definition>
        <argsstring>(const name &amp;owner, const asset &amp;amount)</argsstring>
        <name>transfer_to_fund</name>
        <qualifiedname>eosiosystem::system_contract::transfer_to_fund</qualifiedname>
        <param>
          <type>const name &amp;</type>
          <declname>owner</declname>
        </param>
        <param>
          <type>const asset &amp;</type>
          <declname>amount</declname>
        </param>
        <briefdescription>
<para>Transfers tokens to owner REX fund. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>owner</parametername>
</parameternamelist>
<parameterdescription>
<para>- owner account name </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>amount</parametername>
</parameternamelist>
<parameterdescription>
<para>- tokens to be transferred to REX fund </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1454" column="15" bodyfile="system/contracts/eosio.system/src/rex.cpp" bodystart="863" bodyend="877"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1a719d5ebcb8b11ac1813373d6c0b7c70b" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool eosiosystem::system_contract::rex_loans_available</definition>
        <argsstring>() const</argsstring>
        <name>rex_loans_available</name>
        <qualifiedname>eosiosystem::system_contract::rex_loans_available</qualifiedname>
        <briefdescription>
<para>Checks if CPU and Network loans are available. </para>
        </briefdescription>
        <detaileddescription>
<para>Loans are available if 1) REX pool lendable balance is nonempty, and 2) there are no unfilled sellrex orders. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1455" column="15" bodyfile="system/contracts/eosio.system/src/rex.cpp" bodystart="433" bodyend="445"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1a99cf9915dea4dab19066fea896a3269f" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool eosiosystem::system_contract::rex_system_initialized</definition>
        <argsstring>() const</argsstring>
        <name>rex_system_initialized</name>
        <qualifiedname>eosiosystem::system_contract::rex_system_initialized</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1456" column="15" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="1456" bodyend="1456"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1a2a25c78af6d46b3abfe7c7ad058c4e77" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool eosiosystem::system_contract::rex_available</definition>
        <argsstring>() const</argsstring>
        <name>rex_available</name>
        <qualifiedname>eosiosystem::system_contract::rex_available</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1457" column="15" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="1457" bodyend="1457"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1a00a079da401dbd1a874266bcd56da155" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>asset</type>
        <definition>asset eosiosystem::system_contract::add_to_rex_balance</definition>
        <argsstring>(const name &amp;owner, const asset &amp;payment, const asset &amp;rex_received)</argsstring>
        <name>add_to_rex_balance</name>
        <qualifiedname>eosiosystem::system_contract::add_to_rex_balance</qualifiedname>
        <param>
          <type>const name &amp;</type>
          <declname>owner</declname>
        </param>
        <param>
          <type>const asset &amp;</type>
          <declname>payment</declname>
        </param>
        <param>
          <type>const asset &amp;</type>
          <declname>rex_received</declname>
        </param>
        <briefdescription>
<para>Updates owner REX balance upon buying REX tokens. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>owner</parametername>
</parameternamelist>
<parameterdescription>
<para>- account name of REX owner </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>payment</parametername>
</parameternamelist>
<parameterdescription>
<para>- amount core tokens paid to buy REX </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rex_received</parametername>
</parameternamelist>
<parameterdescription>
<para>- amount of purchased REX tokens</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>asset - change in owner REX vote stake </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1459" column="16" bodyfile="system/contracts/eosio.system/src/rex.cpp" bodystart="1116" bodyend="1150"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1a6588b4a72f9aa7ef867cc320d8c2518e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>asset</type>
        <definition>asset eosiosystem::system_contract::add_to_rex_pool</definition>
        <argsstring>(const asset &amp;payment)</argsstring>
        <name>add_to_rex_pool</name>
        <qualifiedname>eosiosystem::system_contract::add_to_rex_pool</qualifiedname>
        <param>
          <type>const asset &amp;</type>
          <declname>payment</declname>
        </param>
        <briefdescription>
<para>Updates REX pool balances upon REX purchase. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>payment</parametername>
</parameternamelist>
<parameterdescription>
<para>- amount of core tokens paid</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>asset - calculated amount of REX tokens purchased </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
<para>If CORE_SYMBOL is (EOS,4), maximum supply is 10^10 tokens (10 billion tokens), i.e., maximum amount of indivisible units is 10^14. rex_ratio = 10^4 sets the upper bound on (REX,4) indivisible units to 10^18 and that is within the maximum allowable amount field of asset type which is set to 2^62 (approximately 4.6 * 10^18). For a different CORE_SYMBOL, and in order for maximum (REX,4) amount not to exceed that limit, maximum amount of indivisible units cannot be set to a value larger than 4 * 10^14. If precision of CORE_SYMBOL is 4, that corresponds to a maximum supply of 40 billion tokens.</para>
<para>base balance prevents renting profitably until at least a minimum number of <ref refid="classeosiosystem_1_1system__contract_1a32504695292c0e9c2171987821bc3857" kindref="member">core_symbol()</ref> is made available</para>
<para>initialize REX pool</para>
<para>should be a rare corner case, REX pool is initialized but empty</para>
<para>total_lendable &gt; 0 if total_rex &gt; 0 except in a rare case and due to rounding errors</para>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1460" column="16" bodyfile="system/contracts/eosio.system/src/rex.cpp" bodystart="1018" bodyend="1069"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1a01f08af9703989d2642f0d249c6c450c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::add_to_rex_return_pool</definition>
        <argsstring>(const asset &amp;fee)</argsstring>
        <name>add_to_rex_return_pool</name>
        <qualifiedname>eosiosystem::system_contract::add_to_rex_return_pool</qualifiedname>
        <param>
          <type>const asset &amp;</type>
          <declname>fee</declname>
        </param>
        <briefdescription>
<para>Adds an amount of core tokens to the REX return pool. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fee</parametername>
</parameternamelist>
<parameterdescription>
<para>- amount to be added </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1461" column="15" bodyfile="system/contracts/eosio.system/src/rex.cpp" bodystart="1076" bodyend="1105"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1a01641f06b4f4b67ef4b4f98887e639c0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::process_rex_maturities</definition>
        <argsstring>(const rex_balance_table::const_iterator &amp;bitr)</argsstring>
        <name>process_rex_maturities</name>
        <qualifiedname>eosiosystem::system_contract::process_rex_maturities</qualifiedname>
        <param>
          <type>const rex_balance_table::const_iterator &amp;</type>
          <declname>bitr</declname>
        </param>
        <briefdescription>
<para>Updates REX owner maturity buckets. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bitr</parametername>
</parameternamelist>
<parameterdescription>
<para>- iterator pointing to <ref refid="structeosiosystem_1_1rex__balance" kindref="compound">rex_balance</ref> object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1462" column="15" bodyfile="system/contracts/eosio.system/src/rex.cpp" bodystart="976" bodyend="985"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1ab8cb48908dfa3b360a978aa69da30dfd" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::consolidate_rex_balance</definition>
        <argsstring>(const rex_balance_table::const_iterator &amp;bitr, const asset &amp;rex_in_sell_order)</argsstring>
        <name>consolidate_rex_balance</name>
        <qualifiedname>eosiosystem::system_contract::consolidate_rex_balance</qualifiedname>
        <param>
          <type>const rex_balance_table::const_iterator &amp;</type>
          <declname>bitr</declname>
        </param>
        <param>
          <type>const asset &amp;</type>
          <declname>rex_in_sell_order</declname>
        </param>
        <briefdescription>
<para>Consolidates REX maturity buckets into one. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bitr</parametername>
</parameternamelist>
<parameterdescription>
<para>- iterator pointing to <ref refid="structeosiosystem_1_1rex__balance" kindref="compound">rex_balance</ref> object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rex_in_sell_order</parametername>
</parameternamelist>
<parameterdescription>
<para>- REX tokens in owner unfilled sell order, if one exists </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1463" column="15" bodyfile="system/contracts/eosio.system/src/rex.cpp" bodystart="993" bodyend="1009"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1af2126cfdb9750a8b4a586b6f78f81c97" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t eosiosystem::system_contract::read_rex_savings</definition>
        <argsstring>(const rex_balance_table::const_iterator &amp;bitr)</argsstring>
        <name>read_rex_savings</name>
        <qualifiedname>eosiosystem::system_contract::read_rex_savings</qualifiedname>
        <param>
          <type>const rex_balance_table::const_iterator &amp;</type>
          <declname>bitr</declname>
        </param>
        <briefdescription>
<para>Reads amount of REX in savings bucket and removes the bucket from maturities. </para>
        </briefdescription>
        <detaileddescription>
<para>Reads and (temporarily) removes REX savings bucket from REX maturities in order to allow uniform processing of remaining buckets as savings is a special case. This function is used in conjunction with put_rex_savings.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bitr</parametername>
</parameternamelist>
<parameterdescription>
<para>- iterator pointing to <ref refid="structeosiosystem_1_1rex__balance" kindref="compound">rex_balance</ref> object</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int64_t - amount of REX in savings bucket </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1465" column="18" bodyfile="system/contracts/eosio.system/src/rex.cpp" bodystart="1163" bodyend="1174"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1a133d92ee8729bb63fb3736b148136cf0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::put_rex_savings</definition>
        <argsstring>(const rex_balance_table::const_iterator &amp;bitr, int64_t rex)</argsstring>
        <name>put_rex_savings</name>
        <qualifiedname>eosiosystem::system_contract::put_rex_savings</qualifiedname>
        <param>
          <type>const rex_balance_table::const_iterator &amp;</type>
          <declname>bitr</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>rex</declname>
        </param>
        <briefdescription>
<para>Adds a specified REX amount to savings bucket. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bitr</parametername>
</parameternamelist>
<parameterdescription>
<para>- iterator pointing to <ref refid="structeosiosystem_1_1rex__balance" kindref="compound">rex_balance</ref> object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rex</parametername>
</parameternamelist>
<parameterdescription>
<para>- amount of REX to be added </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1466" column="15" bodyfile="system/contracts/eosio.system/src/rex.cpp" bodystart="1182" bodyend="1193"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1a43667ea3ddb45f37a7fc0396dd193268" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::update_rex_stake</definition>
        <argsstring>(const name &amp;voter)</argsstring>
        <name>update_rex_stake</name>
        <qualifiedname>eosiosystem::system_contract::update_rex_stake</qualifiedname>
        <param>
          <type>const name &amp;</type>
          <declname>voter</declname>
        </param>
        <briefdescription>
<para>Updates voter REX vote stake to the current value of REX tokens held. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>voter</parametername>
</parameternamelist>
<parameterdescription>
<para>- account name of voter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1467" column="15" bodyfile="system/contracts/eosio.system/src/rex.cpp" bodystart="1200" bodyend="1223"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1a0906337258bc943a64c822cdea27c98e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::add_loan_to_rex_pool</definition>
        <argsstring>(const asset &amp;payment, int64_t rented_tokens, bool new_loan)</argsstring>
        <name>add_loan_to_rex_pool</name>
        <qualifiedname>eosiosystem::system_contract::add_loan_to_rex_pool</qualifiedname>
        <param>
          <type>const asset &amp;</type>
          <declname>payment</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>rented_tokens</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>new_loan</declname>
        </param>
        <briefdescription>
<para>Updates <ref refid="structeosiosystem_1_1rex__pool" kindref="compound">rex_pool</ref> balances upon creating a new loan or renewing an existing one. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>payment</parametername>
</parameternamelist>
<parameterdescription>
<para>- loan fee paid </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rented_tokens</parametername>
</parameternamelist>
<parameterdescription>
<para>- amount of tokens to be staked to loan receiver </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>new_loan</parametername>
</parameternamelist>
<parameterdescription>
<para>- flag indicating whether the loan is new or being renewed </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1469" column="15" bodyfile="system/contracts/eosio.system/src/rex.cpp" bodystart="454" bodyend="468"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1a40102c661fe0f3955dacc07255679e6d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::remove_loan_from_rex_pool</definition>
        <argsstring>(const rex_loan &amp;loan)</argsstring>
        <name>remove_loan_from_rex_pool</name>
        <qualifiedname>eosiosystem::system_contract::remove_loan_from_rex_pool</qualifiedname>
        <param>
          <type>const <ref refid="structeosiosystem_1_1rex__loan" kindref="compound">rex_loan</ref> &amp;</type>
          <declname>loan</declname>
        </param>
        <briefdescription>
<para>Updates <ref refid="structeosiosystem_1_1rex__pool" kindref="compound">rex_pool</ref> balances upon closing an expired loan. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>loan</parametername>
</parameternamelist>
<parameterdescription>
<para>- loan to be closed </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1470" column="15" bodyfile="system/contracts/eosio.system/src/rex.cpp" bodystart="475" bodyend="489"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1a1c86b37ad9ae316440399bde38769abf" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Index</type>
          </param>
          <param>
            <type>typename Iterator</type>
          </param>
        </templateparamlist>
        <type>int64_t</type>
        <definition>int64_t eosiosystem::system_contract::update_renewed_loan</definition>
        <argsstring>(Index &amp;idx, const Iterator &amp;itr, int64_t rented_tokens)</argsstring>
        <name>update_renewed_loan</name>
        <qualifiedname>eosiosystem::system_contract::update_renewed_loan</qualifiedname>
        <param>
          <type>Index &amp;</type>
          <declname>idx</declname>
        </param>
        <param>
          <type>const Iterator &amp;</type>
          <declname>itr</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>rented_tokens</declname>
        </param>
        <briefdescription>
<para>Updates the fields of an existing loan that is being renewed. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1472" column="18" bodyfile="system/contracts/eosio.system/src/rex.cpp" bodystart="495" bodyend="504"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1aa4121046f43083640f3276a4e7974572" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::changebw</definition>
        <argsstring>(name from, const name &amp;receiver, const asset &amp;stake_net_quantity, const asset &amp;stake_cpu_quantity, bool transfer)</argsstring>
        <name>changebw</name>
        <qualifiedname>eosiosystem::system_contract::changebw</qualifiedname>
        <param>
          <type>name</type>
          <declname>from</declname>
        </param>
        <param>
          <type>const name &amp;</type>
          <declname>receiver</declname>
        </param>
        <param>
          <type>const asset &amp;</type>
          <declname>stake_net_quantity</declname>
        </param>
        <param>
          <type>const asset &amp;</type>
          <declname>stake_cpu_quantity</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>transfer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>end if is_delegating_to_self || is_undelegating</para>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1475" column="15" bodyfile="system/contracts/eosio.system/src/delegate_bandwidth.cpp" bodystart="147" bodyend="323"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1aa192ed8af461c5162749a1a7f3886f06" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::update_voting_power</definition>
        <argsstring>(const name &amp;voter, const asset &amp;total_update)</argsstring>
        <name>update_voting_power</name>
        <qualifiedname>eosiosystem::system_contract::update_voting_power</qualifiedname>
        <param>
          <type>const name &amp;</type>
          <declname>voter</declname>
        </param>
        <param>
          <type>const asset &amp;</type>
          <declname>total_update</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1477" column="15" bodyfile="system/contracts/eosio.system/src/delegate_bandwidth.cpp" bodystart="325" bodyend="344"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1a0709db97aa347d697fb4cbf3f67f2a96" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::register_producer</definition>
        <argsstring>(const name &amp;producer, const eosio::block_signing_authority &amp;producer_authority, const std::string &amp;url, uint16_t location)</argsstring>
        <name>register_producer</name>
        <qualifiedname>eosiosystem::system_contract::register_producer</qualifiedname>
        <param>
          <type>const name &amp;</type>
          <declname>producer</declname>
        </param>
        <param>
          <type>const eosio::block_signing_authority &amp;</type>
          <declname>producer_authority</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>url</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>location</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1480" column="15" bodyfile="system/contracts/eosio.system/src/voting.cpp" bodystart="27" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1a616d617680f7ed47eb3f7fc2b984650f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::update_elected_producers</definition>
        <argsstring>(const block_timestamp &amp;timestamp)</argsstring>
        <name>update_elected_producers</name>
        <qualifiedname>eosiosystem::system_contract::update_elected_producers</qualifiedname>
        <param>
          <type>const block_timestamp &amp;</type>
          <declname>timestamp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1481" column="15" bodyfile="system/contracts/eosio.system/src/voting.cpp" bodystart="106" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1aac11a1b221a613107fb8ca99e080a616" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::update_votes</definition>
        <argsstring>(const name &amp;voter, const name &amp;proxy, const std::vector&lt; name &gt; &amp;producers, bool voting)</argsstring>
        <name>update_votes</name>
        <qualifiedname>eosiosystem::system_contract::update_votes</qualifiedname>
        <param>
          <type>const name &amp;</type>
          <declname>voter</declname>
        </param>
        <param>
          <type>const name &amp;</type>
          <declname>proxy</declname>
        </param>
        <param>
          <type>const std::vector&lt; name &gt; &amp;</type>
          <declname>producers</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>voting</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>staking creates voter object</para>
<para>The first time someone votes we calculate and set last_vote_weight. Since they cannot unstake until after the chain has been activated, we can use last_vote_weight to determine that this is their first vote and should consider their stake activated.</para>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1482" column="15" bodyfile="system/contracts/eosio.system/src/voting.cpp" bodystart="249" bodyend="372"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1a91084ea3aa4700b2565afd34f9faff31" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::propagate_weight_change</definition>
        <argsstring>(const voter_info &amp;voter)</argsstring>
        <name>propagate_weight_change</name>
        <qualifiedname>eosiosystem::system_contract::propagate_weight_change</qualifiedname>
        <param>
          <type>const <ref refid="structeosiosystem_1_1voter__info" kindref="compound">voter_info</ref> &amp;</type>
          <declname>voter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>don&apos;t propagate small changes (1 ~= epsilon)</para>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1483" column="15" bodyfile="system/contracts/eosio.system/src/voting.cpp" bodystart="393" bodyend="450"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1ad13608cacffe1c482186c5d6dca7c6c7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double eosiosystem::system_contract::update_producer_votepay_share</definition>
        <argsstring>(const producers_table2::const_iterator &amp;prod_itr, const time_point &amp;ct, double shares_rate, bool reset_to_zero=false)</argsstring>
        <name>update_producer_votepay_share</name>
        <qualifiedname>eosiosystem::system_contract::update_producer_votepay_share</qualifiedname>
        <param>
          <type>const producers_table2::const_iterator &amp;</type>
          <declname>prod_itr</declname>
        </param>
        <param>
          <type>const time_point &amp;</type>
          <declname>ct</declname>
        </param>
        <param>
          <type>double</type>
          <declname>shares_rate</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>reset_to_zero</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1484" column="17" bodyfile="system/contracts/eosio.system/src/voting.cpp" bodystart="179" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1ac4e5650d82b455248a740fb417ae9fd9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double eosiosystem::system_contract::update_total_votepay_share</definition>
        <argsstring>(const time_point &amp;ct, double additional_shares_delta=0.0, double shares_rate_delta=0.0)</argsstring>
        <name>update_total_votepay_share</name>
        <qualifiedname>eosiosystem::system_contract::update_total_votepay_share</qualifiedname>
        <param>
          <type>const time_point &amp;</type>
          <declname>ct</declname>
        </param>
        <param>
          <type>double</type>
          <declname>additional_shares_delta</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type>double</type>
          <declname>shares_rate_delta</declname>
          <defval>0.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1487" column="17" bodyfile="system/contracts/eosio.system/src/voting.cpp" bodystart="151" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1a682be09e4bcb430df8e2ce98f1912563" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::fill_tact</definition>
        <argsstring>(eosio::name payer, eosio::asset payment)</argsstring>
        <name>fill_tact</name>
        <qualifiedname>eosiosystem::system_contract::fill_tact</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>payer</declname>
        </param>
        <param>
          <type>eosio::asset</type>
          <declname>payment</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1523" column="15" bodyfile="system/contracts/eosio.system/src/powerup.cpp" bodystart="336" bodyend="396"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1af207e91e13bb386b49b1e1c2ed0fb616" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::adjust_resources</definition>
        <argsstring>(name payer, name account, symbol core_symbol, int64_t net_delta, int64_t cpu_delta, int64_t ram_delta, bool must_not_be_managed=false)</argsstring>
        <name>adjust_resources</name>
        <qualifiedname>eosiosystem::system_contract::adjust_resources</qualifiedname>
        <param>
          <type>name</type>
          <declname>payer</declname>
        </param>
        <param>
          <type>name</type>
          <declname>account</declname>
        </param>
        <param>
          <type>symbol</type>
          <declname>core_symbol</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>net_delta</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>cpu_delta</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>ram_delta</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>must_not_be_managed</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1524" column="15" bodyfile="system/contracts/eosio.system/src/powerup.cpp" bodystart="10" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1a0fd50f24c66c025a7efd13b0cc24e23e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::process_powerup_queue</definition>
        <argsstring>(time_point_sec now, symbol core_symbol, powerup_state &amp;state, powerup_order_table &amp;orders, uint32_t max_items, int64_t &amp;net_delta_available, int64_t &amp;cpu_delta_available, int64_t &amp;ram_delta_available)</argsstring>
        <name>process_powerup_queue</name>
        <qualifiedname>eosiosystem::system_contract::process_powerup_queue</qualifiedname>
        <param>
          <type>time_point_sec</type>
          <declname>now</declname>
        </param>
        <param>
          <type>symbol</type>
          <declname>core_symbol</declname>
        </param>
        <param>
          <type><ref refid="structeosiosystem_1_1powerup__state" kindref="compound">powerup_state</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <param>
          <type><ref refid="namespaceeosiosystem_1ab020b27ad4ebc87d910cb31fbcf9e7ac" kindref="member">powerup_order_table</ref> &amp;</type>
          <declname>orders</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>max_items</declname>
        </param>
        <param>
          <type>int64_t &amp;</type>
          <declname>net_delta_available</declname>
        </param>
        <param>
          <type>int64_t &amp;</type>
          <declname>cpu_delta_available</declname>
        </param>
        <param>
          <type>int64_t &amp;</type>
          <declname>ram_delta_available</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1525" column="15" bodyfile="system/contracts/eosio.system/src/powerup.cpp" bodystart="78" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1a426f4cdbba6766820a8625a6dcb6ee04" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::update_tact</definition>
        <argsstring>()</argsstring>
        <name>update_tact</name>
        <qualifiedname>eosiosystem::system_contract::update_tact</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1529" column="15" bodyfile="system/contracts/eosio.system/src/powerup.cpp" bodystart="312" bodyend="334"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1a7180a3661c6dcf143333569d64dc9a27" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::change_weights</definition>
        <argsstring>(eosio::name payer, eosio::asset new_emission)</argsstring>
        <name>change_weights</name>
        <qualifiedname>eosiosystem::system_contract::change_weights</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>payer</declname>
        </param>
        <param>
          <type>eosio::asset</type>
          <declname>new_emission</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1530" column="15" bodyfile="system/contracts/eosio.system/src/powerup.cpp" bodystart="398" bodyend="408"/>
      </memberdef>
      <memberdef kind="function" id="classeosiosystem_1_1system__contract_1a7cabfe02d2b7028ec0a2e2aae10c1155" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eosiosystem::system_contract::add_to_blockinfo_table</definition>
        <argsstring>(const eosio::checksum256 &amp;previous_block_id, const eosio::block_timestamp timestamp) const</argsstring>
        <name>add_to_blockinfo_table</name>
        <qualifiedname>eosiosystem::system_contract::add_to_blockinfo_table</qualifiedname>
        <param>
          <type>const eosio::checksum256 &amp;</type>
          <declname>previous_block_id</declname>
        </param>
        <param>
          <type>const eosio::block_timestamp</type>
          <declname>timestamp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="1532" column="15" bodyfile="system/contracts/eosio.system/src/block_info.cpp" bodystart="17" bodyend="45"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>The <computeroutput>eosio.system</computeroutput> smart contract is provided by <computeroutput>block.one</computeroutput> as a sample system contract, and it defines the structures and actions needed for blockchain&apos;s core functionality.</para>
<para>Just like in the <computeroutput>eosio.bios</computeroutput> sample contract implementation, there are a few actions which are not implemented at the contract level (<computeroutput>newaccount</computeroutput>, <computeroutput>updateauth</computeroutput>, <computeroutput>deleteauth</computeroutput>, <computeroutput>linkauth</computeroutput>, <computeroutput>unlinkauth</computeroutput>, <computeroutput>canceldelay</computeroutput>, <computeroutput>onerror</computeroutput>, <computeroutput>setabi</computeroutput>, <computeroutput>setcode</computeroutput>), they are just declared in the contract so they will show in the contract&apos;s ABI and users will be able to push those actions to the chain via the account holding the <computeroutput>eosio.system</computeroutput> contract, but the implementation is at the EOSIO core level. They are referred to as EOSIO native actions.</para>
<para><itemizedlist>
<listitem><para>Users can stake tokens for CPU and Network bandwidth, and then vote for producers or delegate their vote to a proxy.</para>
</listitem><listitem><para>Producers register in order to be voted for, and can claim per-block and per-vote rewards.</para>
</listitem><listitem><para>Users can buy and sell RAM at a market-determined price.</para>
</listitem><listitem><para>Users can bid on premium names.</para>
</listitem><listitem><para>A resource exchange system (REX) allows token holders to lend their tokens, and users to rent CPU and Network resources in return for a market-determined fee.</para>
</listitem><listitem><para>A resource market separate from REX: <computeroutput>power</computeroutput>. </para>
</listitem></itemizedlist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>eosio::contract</label>
      </node>
      <node id="2">
        <label>eosiosystem::native</label>
        <link refid="classeosiosystem_1_1native"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>eosiosystem::system_contract</label>
        <link refid="classeosiosystem_1_1system__contract"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="6">
        <label>block_timestamp</label>
      </node>
      <node id="5">
        <label>eosio::blockchain_parameters</label>
      </node>
      <node id="3">
        <label>eosio::contract</label>
      </node>
      <node id="11">
        <label>symbol</label>
      </node>
      <node id="7">
        <label>time_point</label>
      </node>
      <node id="4">
        <label>eosiosystem::eosio_global_state</label>
        <link refid="structeosiosystem_1_1eosio__global__state"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>last_name_close</edgelabel>
          <edgelabel>last_producer_schedule_update</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>last_pervote_bucket_fill</edgelabel>
          <edgelabel>thresh_activated_stake_time</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>eosiosystem::eosio_global_state2</label>
        <link refid="structeosiosystem_1_1eosio__global__state2"/>
        <childnode refid="6" relation="usage">
          <edgelabel>last_block_num</edgelabel>
          <edgelabel>last_ram_increase</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>eosiosystem::eosio_global_state3</label>
        <link refid="structeosiosystem_1_1eosio__global__state3"/>
        <childnode refid="7" relation="usage">
          <edgelabel>last_vpay_state_update</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>eosiosystem::eosio_global_state4</label>
        <link refid="structeosiosystem_1_1eosio__global__state4"/>
      </node>
      <node id="2">
        <label>eosiosystem::native</label>
        <link refid="classeosiosystem_1_1native"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>eosiosystem::system_contract</label>
        <link refid="classeosiosystem_1_1system__contract"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>_gstate</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>_gstate2</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>_gstate3</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>_gstate4</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>ram_symbol</edgelabel>
          <edgelabel>ramcore_symbol</edgelabel>
          <edgelabel>rex_symbol</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>vote_stake_updater</edgelabel>
        </childnode>
      </node>
      <node id="12">
        <label>eosiosystem::system_contract::registration&lt;&amp;system_contract::update_rex_stake &gt;</label>
        <link refid="classeosiosystem_1_1system__contract_1_1registration"/>
        <childnode refid="1" relation="usage">
          <edgelabel>this_contract</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" line="645" column="4" bodyfile="system/contracts/eosio.system/include/eosio.system/eosio.system.hpp" bodystart="645" bodyend="1533"/>
    <listofallmembers>
      <member refid="classeosiosystem_1_1system__contract_1ae0fead4e6333fb6ff81b38c873beb484" prot="private" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>_global</name></member>
      <member refid="classeosiosystem_1_1system__contract_1ae2f5d5c5de33662921eca488a4c2bcb1" prot="private" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>_global2</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a3a9a6e276267b4c193005eedd13c386f" prot="private" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>_global3</name></member>
      <member refid="classeosiosystem_1_1system__contract_1af82e0e1fecce0302f8e6ff4f4bc1b164" prot="private" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>_global4</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a40e74853eda24e1b15d8f5b6499c8820" prot="private" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>_gstate</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a11360303e4449a02eb87ccab4cb0e219" prot="private" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>_gstate2</name></member>
      <member refid="classeosiosystem_1_1system__contract_1ae5075170abd3571b3e9bcad43e17b8fc" prot="private" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>_gstate3</name></member>
      <member refid="classeosiosystem_1_1system__contract_1ae2ce0798dc0c26a747af79259cff248f" prot="private" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>_gstate4</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a668decff73ee059f8e89cd885e85f3ce" prot="private" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>_producers</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a685072073da57c3ccf5d4611fb157a33" prot="private" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>_producers2</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a2b149f7463767158fac80045940da7d5" prot="private" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>_rammarket</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a9387fda3cd33795afe8f6197071e6b29" prot="private" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>_rexbalance</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a431e54726c73c77a9299791d5eb4d766" prot="private" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>_rexfunds</name></member>
      <member refid="classeosiosystem_1_1system__contract_1ae8fc8fedabbbe903d7ec35671e0c71cb" prot="private" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>_rexorders</name></member>
      <member refid="classeosiosystem_1_1system__contract_1acce2579f252a2d5739f2dc99eb5ff1e1" prot="private" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>_rexpool</name></member>
      <member refid="classeosiosystem_1_1system__contract_1ab90cd10f3de26ac0ffc1cee1ebe06e56" prot="private" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>_rexretbuckets</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a0ccf372dabc1dbfa5c40f2ab5f9de7c1" prot="private" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>_rexretpool</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a41105c20306ae2478d91e0fab56f2e58" prot="private" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>_voters</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a1873247483b285e19010b7469419a60d" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>activate</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a0cca489c98b5874f5493f4447e7c52a9" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>activate_action</name></member>
      <member refid="classeosiosystem_1_1system__contract_1adfc25b00a14e482c7fb1161dd38096bd" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>active_permission</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a0906337258bc943a64c822cdea27c98e" prot="private" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>add_loan_to_rex_pool</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a7cabfe02d2b7028ec0a2e2aae10c1155" prot="private" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>add_to_blockinfo_table</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a00a079da401dbd1a874266bcd56da155" prot="private" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>add_to_rex_balance</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a6588b4a72f9aa7ef867cc320d8c2518e" prot="private" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>add_to_rex_pool</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a01f08af9703989d2642f0d249c6c450c" prot="private" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>add_to_rex_return_pool</name></member>
      <member refid="classeosiosystem_1_1system__contract_1af207e91e13bb386b49b1e1c2ed0fb616" prot="private" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>adjust_resources</name></member>
      <member refid="classeosiosystem_1_1system__contract_1af1c329fbf0e3e45b62b729e6ee743c62" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>bidname</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a4061267666d68ba49beda47dc1440194" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>bidname_action</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a1ad9f05ad7242412bf5ad87706f923ff" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>bidrefund</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a6d35995c9e7932d40ea91609744c9aa3" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>bidrefund_action</name></member>
      <member refid="classeosiosystem_1_1system__contract_1aeec189aa121eaf90aee0c180cd59cc26" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>bpay_account</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a04be77ea83f87d1533606390c37cf5d1" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>buyram</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a379cc18be05f0d81a71f15a52f7c6f48" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>buyram_action</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a93950629ac6f931b47542727a5411097" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>buyrambytes</name></member>
      <member refid="classeosiosystem_1_1system__contract_1af7ddbe541c404f6a8d1094b8278e6128" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>buyrambytes_action</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a36aebc85b90ecf7e5389f8daea64592a" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>buyrex</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a6d5c3ebf5382ac0b4d56869192e9823f" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>buyrex_action</name></member>
      <member refid="classeosiosystem_1_1native_1ac2da52c0f6c1698bbe76a84f23917feb" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>canceldelay</name></member>
      <member refid="classeosiosystem_1_1native_1aa83db95970cb619e8d1715e5d83bbb52" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>canceldelay_action</name></member>
      <member refid="classeosiosystem_1_1system__contract_1ae71212071f747832a2a56eb4868d9c81" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>cfgpowerup</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a752504e09e8196326e836ef099588650" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>cfgpowerup_action</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a7180a3661c6dcf143333569d64dc9a27" prot="private" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>change_weights</name></member>
      <member refid="classeosiosystem_1_1system__contract_1aa4121046f43083640f3276a4e7974572" prot="private" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>changebw</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a6a8b738310e28209d7ed24fb94cb8853" prot="private" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>channel_namebid_to_rex</name></member>
      <member refid="classeosiosystem_1_1system__contract_1ad6ba033cdb66fc3e66790f4bfde91455" prot="private" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>channel_to_rex</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a9d899492df3ee11bad2f6b028ced6ace" prot="private" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>check_voting_requirement</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a34b35d1f073383e599d4e2bb56e20524" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>claimrewards</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a6fb5d3547618397ee9411fe31c549565" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>claimrewards_action</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a0a1b64d68fa08a63ee570a58d45e5626" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>closerex</name></member>
      <member refid="classeosiosystem_1_1system__contract_1aee3673f21c82028044f3368ada9186f2" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>closerex_action</name></member>
      <member refid="classeosiosystem_1_1system__contract_1ac4bc1aa3fe5d72c9b1ed8af258c9f935" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>cnclrexorder</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a9e06226a106c361f7847b2070ccfb136" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>cnclrexorder_action</name></member>
      <member refid="classeosiosystem_1_1system__contract_1ac6c59d9470ffe96336455b92804aa4de" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>consolidate</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a583814bb86c124ededb026ad4589de1c" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>consolidate_action</name></member>
      <member refid="classeosiosystem_1_1system__contract_1ab8cb48908dfa3b360a978aa69da30dfd" prot="private" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>consolidate_rex_balance</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a32504695292c0e9c2171987821bc3857" prot="private" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>core_symbol</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a94e2f4698dd0ad80e4252a772d424481" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>defcpuloan</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a0b36044d4918b6220e81221039df8ea9" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>defcpuloan_action</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a56a54ec0ca8f37271fbcbc9cc5181145" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>defnetloan</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a57a2eb14c8fe00b86261c2664cc35148" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>defnetloan_action</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a78afae5de1343823badbc8a412a4e6c3" prot="private" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>defund_rex_loan</name></member>
      <member refid="classeosiosystem_1_1system__contract_1aa54b498595abb1a3ad9c62c597d4f7b5" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>delegatebw</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a1f08c7b7252348f1b64ad4f2699c4de5" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>delegatebw_action</name></member>
      <member refid="classeosiosystem_1_1native_1a49cc638f16ddc898952a8f032ffd6c2c" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>deleteauth</name></member>
      <member refid="classeosiosystem_1_1native_1ab75271688a763dacb3e2fa6cddae04e4" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>deleteauth_action</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a99e6b1b401c6a8a023f61ed2b52e98d7" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>deposit</name></member>
      <member refid="classeosiosystem_1_1system__contract_1af86584ee57497b9c74b031060416f63b" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>deposit_action</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a7e80c965d15f6613db3ee04188d68af5" prot="private" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>emit</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a80d0308e3ef8c8f7efba13c635866332" prot="private" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>fill_rex_order</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a682be09e4bcb430df8e2ce98f1912563" prot="private" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>fill_tact</name></member>
      <member refid="classeosiosystem_1_1system__contract_1ae587a91e5f2759077e3259232c6b2086" prot="private" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>fund_rex_loan</name></member>
      <member refid="classeosiosystem_1_1system__contract_1aed60ee281d5277819ed1335322b2d53f" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>fundcpuloan</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a66a4dbb5b96180f562f5e1823fea993e" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>fundcpuloan_action</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a8e99bf65da50dc92089140618112db27" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>fundnetloan</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a155a34b110e71371cc288e13d7078220" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>fundnetloan_action</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a50976d2a74593cdd840662159dc21ab1" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>get_core_symbol</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a91de00b875703918a8c95898a046bcc2" prot="private" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>get_core_symbol</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a7d37b1992d1299b8354e7efb1872de6c" prot="private" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>get_default_inflation_parameters</name></member>
      <member refid="classeosiosystem_1_1system__contract_1aa7000a5c93cf390e5495e65704919674" prot="private" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>get_default_parameters</name></member>
      <member refid="classeosiosystem_1_1system__contract_1ae6143e5f12ba87dc18105710189db14b" prot="private" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>get_rex_maturity</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a63afe62bd82d52230be1e0ded1bdb644" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>init</name></member>
      <member refid="classeosiosystem_1_1system__contract_1aba8828e31f9dc03a30c0888689f91d86" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>init_action</name></member>
      <member refid="classeosiosystem_1_1system__contract_1af6ed697e2d198ca5bce29cbacb682490" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>initemission</name></member>
      <member refid="classeosiosystem_1_1system__contract_1ac0dff966e1b20b198bd7057c2d643538" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>initemission_action</name></member>
      <member refid="classeosiosystem_1_1system__contract_1ab940f454d4d3d0018f22bf472caf3b52" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>limitauthchg</name></member>
      <member refid="classeosiosystem_1_1native_1a35b93b9e7ae3eaa60619189c7694499e" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>linkauth</name></member>
      <member refid="classeosiosystem_1_1native_1a9003ba3e7e55f294f3d028f02873d5f9" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>linkauth_action</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a975cbc9b4670f245c76b0e3f3c86136f" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>mvfrsavings</name></member>
      <member refid="classeosiosystem_1_1system__contract_1adfb546aed7a8a0100202440f5fd5b619" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>mvfrsavings_action</name></member>
      <member refid="classeosiosystem_1_1system__contract_1ac673c662e873032e4a67b1d888b23e6f" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>mvtosavings</name></member>
      <member refid="classeosiosystem_1_1system__contract_1af03ad94c5ca5fd992199e686f075a2ba" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>mvtosavings_action</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a03e79dcf0584dd7fd1dbb1aa072befb1" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>names_account</name></member>
      <member refid="classeosiosystem_1_1native_1ab81dda3be834b68780bbae5c2e8368e0" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>newaccount</name></member>
      <member refid="classeosiosystem_1_1native_1aae644336375e87bb08912d4f550c8aeb" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>newaccount_action</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a0b608cd46d931874c80e9b72c4f0d664" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>null_account</name></member>
      <member refid="classeosiosystem_1_1system__contract_1ae75458e3f898b3bc834311fa54abc6a0" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>onblock</name></member>
      <member refid="classeosiosystem_1_1native_1a379fe8f4ca5a42a6011dbf9c8f30b6ff" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>onerror</name></member>
      <member refid="classeosiosystem_1_1system__contract_1ab3d6d9e77d6b9ac63b79e6d8104d8312" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>powerup</name></member>
      <member refid="classeosiosystem_1_1system__contract_1ac3cd9f92205bbc3ba9fdfdaacdeedf61" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>powerup_action</name></member>
      <member refid="classeosiosystem_1_1system__contract_1aa573d628b237c167aa99fc71cb150736" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>powerupexec</name></member>
      <member refid="classeosiosystem_1_1system__contract_1ac85b9bef9b3fc161a14712f52ec31e5b" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>powerupexec_action</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a0fd50f24c66c025a7efd13b0cc24e23e" prot="private" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>process_powerup_queue</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a01641f06b4f4b67ef4b4f98887e639c0" prot="private" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>process_rex_maturities</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a91084ea3aa4700b2565afd34f9faff31" prot="private" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>propagate_weight_change</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a133d92ee8729bb63fb3736b148136cf0" prot="private" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>put_rex_savings</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a5b9e69a4f134680f236b696f7ec2ca0f" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>ram_account</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a6317a93cd512ff0fc3b6a802bd5aa229" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>ram_symbol</name></member>
      <member refid="classeosiosystem_1_1system__contract_1ac0eb9382f47fc00bcf66b81a26805e73" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>ramcore_symbol</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a8784bf6def9ebc7dac2cbba94c715b03" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>ramfee_account</name></member>
      <member refid="classeosiosystem_1_1system__contract_1af2126cfdb9750a8b4a586b6f78f81c97" prot="private" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>read_rex_savings</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a10a63e006f9869caeaf2592bdfbccc42" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>refund</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a5ef59ea3e3db4bb9bbe075531109d687" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>refund_action</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a0709db97aa347d697fb4cbf3f67f2a96" prot="private" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>register_producer</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a252441c7b5811068d336f37ab627ecd9" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>regproducer</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a6c1143de786b7d7601ac0b0968cb0f19" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>regproducer2</name></member>
      <member refid="classeosiosystem_1_1system__contract_1ae39dfe220205b48d192a90abc3e790da" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>regproducer2_action</name></member>
      <member refid="classeosiosystem_1_1system__contract_1ab5efbdbade110f33fed3c39083d3f76f" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>regproducer_action</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a7192c64e5a9d0b9b202390dbfade0858" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>regproxy</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a8b1c5e40db2dd35043dc289fec274da2" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>regproxy_action</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a40102c661fe0f3955dacc07255679e6d" prot="private" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>remove_loan_from_rex_pool</name></member>
      <member refid="classeosiosystem_1_1system__contract_1ad3d55a418a62ecbb52ef5df21b1fd2d5" prot="private" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>rent_rex</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a2babe24ecc07b5576ce48c0b7220e7f4" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>rentcpu</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a766a5521fa602588324d62ede1c3bda9" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>rentcpu_action</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a89b5465c60b08ecb06538ea162751319" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>rentnet</name></member>
      <member refid="classeosiosystem_1_1system__contract_1aa6235054ddca972ad4ecd1eff6e3d589" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>rentnet_action</name></member>
      <member refid="classeosiosystem_1_1system__contract_1af03b543de4dae959dc1fea8801a3311f" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>rex_account</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a2a25c78af6d46b3abfe7c7ad058c4e77" prot="private" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>rex_available</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a719d5ebcb8b11ac1813373d6c0b7c70b" prot="private" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>rex_loans_available</name></member>
      <member refid="classeosiosystem_1_1system__contract_1adae70035ee4360f4b5fa8113679dea04" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>rex_symbol</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a99cf9915dea4dab19066fea896a3269f" prot="private" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>rex_system_initialized</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a21d675936f040b2dcdcebff3765a60a7" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>rexexec</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a7484d9db011093f3eec1b6de9e98a51b" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>rexexec_action</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a2a41dc1871059a536a55626b8c76f5b9" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>rmvproducer</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a9cd7fa6413479ac6ffe3e548b847ea64" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>rmvproducer_action</name></member>
      <member refid="classeosiosystem_1_1system__contract_1ae6107f7d60481e9d2ceceb3bc11f9e58" prot="private" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>runrex</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a6b00b900a128d2718244ac8a408f65d3" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>sellram</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a9ee2d79b7e9c1432f312535936e4848f" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>sellrex</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a89e8fd4a28f19fe76c015bdaacc8cb74" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>sellrex_action</name></member>
      <member refid="classeosiosystem_1_1native_1aff24a543859381c1670183f5b4d343aa" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>setabi</name></member>
      <member refid="classeosiosystem_1_1native_1a5db33d8b5c93fb9b60f6216d62077802" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>setabi_action</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a9a005d230746b68cafa934a067f287af" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>setacctcpu</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a7a538179a1332d7f139e881cff0c04cc" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>setacctcpu_action</name></member>
      <member refid="classeosiosystem_1_1system__contract_1aa4559928f468c62867916d1251fa33b3" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>setacctnet</name></member>
      <member refid="classeosiosystem_1_1system__contract_1add114cf85734d0c85edacb0eb7167883" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>setacctnet_action</name></member>
      <member refid="classeosiosystem_1_1system__contract_1acdd7c75402f43876338d33649d2e6903" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>setacctram</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a405cf7f71120642d5d043fa4648be9b1" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>setacctram_action</name></member>
      <member refid="classeosiosystem_1_1system__contract_1ad5b9178dfbe60ba6059c52d488ecf303" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>setalimits</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a5546364ddc017d87f96ed0e9a6b1f931" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>setalimits_action</name></member>
      <member refid="classeosiosystem_1_1native_1a225a51ac200eb80061ecbea5980e0b7b" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>setcode</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a04f177dce6521eb90e5a3b39a384abda" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>setcode_action</name></member>
      <member refid="classeosiosystem_1_1system__contract_1ac2cab12a3c2a1d20a3215124100cf3e1" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>setinflation</name></member>
      <member refid="classeosiosystem_1_1system__contract_1addda8e74a2c1657fbde05113951e05a3" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>setinflation_action</name></member>
      <member refid="classeosiosystem_1_1system__contract_1aa4ea1b93cfb3d99fcaaabb994c711bee" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>setparams</name></member>
      <member refid="classeosiosystem_1_1system__contract_1ae0cbe561757f43c3856caf74ff58ea2b" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>setparams_action</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a648ec27a9bc3bf7e36c5c88f6932b9ca" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>setpriv</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a7c19bb1d99d1abbd00be825f69fbfc3f" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>setpriv_action</name></member>
      <member refid="classeosiosystem_1_1system__contract_1ad8a6eb47fd97c9f243019d93916ff78f" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>setram</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a4caad060672784b32a36a2d634a5f3b3" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>setram_action</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a7d984add31b6060bb59d472f9f1bd1a1" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>setramrate</name></member>
      <member refid="classeosiosystem_1_1system__contract_1aad4ad84241c38c3541a0438fbca0cc9b" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>setramrate_action</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a1b875a922b7ab8079b742eb8e714ae48" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>setrex</name></member>
      <member refid="classeosiosystem_1_1system__contract_1aeae78fbfa51ce68d6a58711007a83177" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>setrex_action</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a5cde7e6a57d453cc63d509c6657355e2" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>stake_account</name></member>
      <member refid="classeosiosystem_1_1system__contract_1ae1a0434a7adf53cc3a168f1b2f947ebd" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>system_contract</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a21c029a978b1648e8cea9d7c60a5faf3" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>token_account</name></member>
      <member refid="classeosiosystem_1_1system__contract_1af4cddb1aa9e3aa7fc0027df70880235f" prot="private" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>transfer_from_fund</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a2341229da3b76885139cb8d762f510d4" prot="private" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>transfer_to_fund</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a4db0be2c90d342ecd269fdbb57c51091" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>undelegatebw</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a5751bdd1f68be3270595b4bba1a241f4" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>undelegatebw_action</name></member>
      <member refid="classeosiosystem_1_1native_1aa1e2097e289d4da3acc2876cc24e8897" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>unlinkauth</name></member>
      <member refid="classeosiosystem_1_1native_1ab85b9770a900421b081ab8f339c5c71f" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>unlinkauth_action</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a0b8c45d3226929472bc5785742c05152" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>unregprod</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a34d06c5e737193d6cf707edc7d57407e" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>unregprod_action</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a94675167323c97d0dcdc92c5b7f0df60" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>unstaketorex</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a0894cc0e8e2fa25b39e02d4127071677" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>unstaketorex_action</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a616d617680f7ed47eb3f7fc2b984650f" prot="private" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>update_elected_producers</name></member>
      <member refid="classeosiosystem_1_1system__contract_1ad13608cacffe1c482186c5d6dca7c6c7" prot="private" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>update_producer_votepay_share</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a04a864fd31b03ca4e7ce3a9fd65476c7" prot="private" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>update_ram_debt_table</name></member>
      <member refid="classeosiosystem_1_1system__contract_1ae248c8483e7ff56c697793c49bd58700" prot="private" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>update_ram_supply</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a1c86b37ad9ae316440399bde38769abf" prot="private" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>update_renewed_loan</name></member>
      <member refid="classeosiosystem_1_1system__contract_1ac1e24d59a71d76c1706a87584635f89d" prot="private" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>update_resource_limits</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a5366ce381bf8020a24c597109f2cb053" prot="private" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>update_rex_account</name></member>
      <member refid="classeosiosystem_1_1system__contract_1aa4ae35d44dadd1eb2fbcc0782b89bf89" prot="private" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>update_rex_pool</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a43667ea3ddb45f37a7fc0396dd193268" prot="private" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>update_rex_stake</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a426f4cdbba6766820a8625a6dcb6ee04" prot="private" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>update_tact</name></member>
      <member refid="classeosiosystem_1_1system__contract_1ac4e5650d82b455248a740fb417ae9fd9" prot="private" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>update_total_votepay_share</name></member>
      <member refid="classeosiosystem_1_1system__contract_1aac11a1b221a613107fb8ca99e080a616" prot="private" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>update_votes</name></member>
      <member refid="classeosiosystem_1_1system__contract_1aa192ed8af461c5162749a1a7f3886f06" prot="private" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>update_voting_power</name></member>
      <member refid="classeosiosystem_1_1native_1a2bbeca58b24029a5ab0fc90832dde56b" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>updateauth</name></member>
      <member refid="classeosiosystem_1_1native_1a10fb5510d34718e92de6b0491d1eaf53" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>updateauth_action</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a33a33fedadd8b07f8b9fcee22e1a966d" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>updaterex</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a3b0c64a9fcbc3446a2ca563ffcbce106" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>updaterex_action</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a0af4a55018801131ae7dc7a923bead0b" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>updtrevision</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a56315050770b4f79af95042a95b58507" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>updtrevision_action</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a8aa92752c022c824f12420a11a7fa8be" prot="private" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>vote_stake_updater</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a19d51a2b9b57ffb656612c280ee4ab4e" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>voteproducer</name></member>
      <member refid="classeosiosystem_1_1system__contract_1aab2cd194b5dbe033163f2ed21c28ebc4" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>voteproducer_action</name></member>
      <member refid="classeosiosystem_1_1system__contract_1afd8f9ea7890c647010bc9bccdcda6ba9" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>voteupdate</name></member>
      <member refid="classeosiosystem_1_1system__contract_1aad3da6aae1bb02b7c177b98796a5107a" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>voteupdate_action</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a3b108816fa9ae2ad0c89aae2ec31585b" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>vpay_account</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a45eea3c4ce35174eb1c3ad1e64954d5e" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>withdraw</name></member>
      <member refid="classeosiosystem_1_1system__contract_1a8234e4f9251f7d72ba750d507e2db304" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>withdraw_action</name></member>
      <member refid="classeosiosystem_1_1system__contract_1ae0264c3f2d2a640d9a60a4c9c9ca089c" prot="public" virt="non-virtual"><scope>eosiosystem::system_contract</scope><name>~system_contract</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
