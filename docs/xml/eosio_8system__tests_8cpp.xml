<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="eosio_8system__tests_8cpp" kind="file" language="C++">
    <compoundname>eosio.system_tests.cpp</compoundname>
    <includes local="no">boost/test/unit_test.hpp</includes>
    <includes local="no">eosio/chain/contract_table_objects.hpp</includes>
    <includes local="no">eosio/chain/global_property_object.hpp</includes>
    <includes local="no">eosio/chain/resource_limits.hpp</includes>
    <includes local="no">eosio/chain/wast_to_wasm.hpp</includes>
    <includes local="no">cstdlib</includes>
    <includes local="no">iostream</includes>
    <includes local="no">sstream</includes>
    <includes local="no">fc/log/logger.hpp</includes>
    <includes local="no">eosio/chain/exceptions.hpp</includes>
    <includes refid="eosio_8system__tester_8hpp" local="yes">eosio.system_tester.hpp</includes>
    <incdepgraph>
      <node id="12">
        <label>eosio.system_tester.hpp</label>
        <link refid="eosio_8system__tester_8hpp"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>system/tests/eosio.system_tests.cpp</label>
        <link refid="eosio_8system__tests_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>test_symbol.hpp</label>
        <link refid="test__symbol_8hpp"/>
      </node>
      <node id="2">
        <label>boost/test/unit_test.hpp</label>
      </node>
      <node id="15">
        <label>contracts.hpp</label>
      </node>
      <node id="7">
        <label>cstdlib</label>
      </node>
      <node id="14">
        <label>eosio/chain/abi_serializer.hpp</label>
      </node>
      <node id="3">
        <label>eosio/chain/contract_table_objects.hpp</label>
      </node>
      <node id="11">
        <label>eosio/chain/exceptions.hpp</label>
      </node>
      <node id="4">
        <label>eosio/chain/global_property_object.hpp</label>
      </node>
      <node id="5">
        <label>eosio/chain/resource_limits.hpp</label>
      </node>
      <node id="6">
        <label>eosio/chain/wast_to_wasm.hpp</label>
      </node>
      <node id="13">
        <label>eosio/testing/tester.hpp</label>
      </node>
      <node id="10">
        <label>fc/log/logger.hpp</label>
      </node>
      <node id="17">
        <label>fc/variant_object.hpp</label>
      </node>
      <node id="18">
        <label>fstream</label>
      </node>
      <node id="8">
        <label>iostream</label>
      </node>
      <node id="9">
        <label>sstream</label>
      </node>
    </incdepgraph>
    <innerclass refid="struct__abi__hash" prot="public">_abi_hash</innerclass>
    <innerclass refid="structconnector" prot="public">connector</innerclass>
      <sectiondef kind="var">
      <memberdef kind="variable" id="eosio_8system__tests_8cpp_1ae89aac94d502abdd3c8d055174c221fc" prot="public" static="no" mutable="no">
        <type><ref refid="classeosio__system_1_1eosio__system__tester" kindref="compound">eosio_system_tester</ref></type>
        <definition>eosio_system_tester try</definition>
        <argsstring></argsstring>
        <name>try</name>
        <initializer>{
   cross_15_percent_threshold()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="176" column="24" bodyfile="system/tests/eosio.system_tests.cpp" bodystart="176" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" prot="public" static="no" mutable="no">
        <type>auto</type>
        <definition>auto total</definition>
        <argsstring></argsstring>
        <name>total</name>
        <initializer>= get_total_stake(&quot;alice1111111&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="188" column="9" bodyfile="system/tests/eosio.system_tests.cpp" bodystart="188" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="eosio_8system__tests_8cpp_1a515931a5b18b498f3e1fea3c35f38ce4" prot="public" static="no" mutable="no">
        <type>const auto</type>
        <definition>const auto init_eosio_stake_balance</definition>
        <argsstring></argsstring>
        <name>init_eosio_stake_balance</name>
        <initializer>= get_balance( &quot;eosio.stake&quot;_n )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="192" column="15" bodyfile="system/tests/eosio.system_tests.cpp" bodystart="192" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="eosio_8system__tests_8cpp_1aa09742f1818926903c43767d265ea664" prot="public" static="no" mutable="no">
        <type>auto</type>
        <definition>auto bytes</definition>
        <argsstring></argsstring>
        <name>bytes</name>
        <initializer>= <ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref>[&quot;ram_bytes&quot;].as_uint64()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="221" column="9" bodyfile="system/tests/eosio.system_tests.cpp" bodystart="221" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="eosio_8system__tests_8cpp_1acc4282863324bd2135c3f73528e99fd3" prot="public" static="no" mutable="no">
        <type>auto</type>
        <definition>auto vinfo</definition>
        <argsstring></argsstring>
        <name>vinfo</name>
        <initializer>= get_voter_info(&quot;alice1111111&quot; )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="422" column="9" bodyfile="system/tests/eosio.system_tests.cpp" bodystart="422" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="eosio_8system__tests_8cpp_1a99583a9ba487aa24e06f015be9903059" prot="public" static="no" mutable="no">
        <type>auto</type>
        <definition>auto refund</definition>
        <argsstring></argsstring>
        <name>refund</name>
        <initializer>= get_refund_request( &quot;alice1111111&quot;_n )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="637" column="9" bodyfile="system/tests/eosio.system_tests.cpp" bodystart="637" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="eosio_8system__tests_8cpp_1a0bbff253b45c1c6e04cc32309feb55a1" prot="public" static="no" mutable="no">
        <type>auto</type>
        <definition>auto key</definition>
        <argsstring></argsstring>
        <name>key</name>
        <initializer>=  fc::crypto::public_key( std::string(&quot;EOS6MRyAjQq8ud7hVNYcfnVPJqcVpscN5So8BhtHuGYqET5GDW5CV&quot;) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="740" column="9" bodyfile="system/tests/eosio.system_tests.cpp" bodystart="740" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="eosio_8system__tests_8cpp_1a07b7f59f003c8581fca9c1ef6d7fac33" prot="public" static="no" mutable="no">
        <type></type>
        <definition>producer</definition>
        <argsstring></argsstring>
        <name>producer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="742" column="48" bodyfile="system/tests/eosio.system_tests.cpp" bodystart="742" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="eosio_8system__tests_8cpp_1a29e5243652e2540105e88d5d9b65ee96" prot="public" static="no" mutable="no">
        <type>http</type>
        <definition>http __pad0__</definition>
        <argsstring></argsstring>
        <name>__pad0__</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="744" column="49" bodyfile="system/tests/eosio.system_tests.cpp" bodystart="745" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="eosio_8system__tests_8cpp_1a0ecaa1862f168e8a31db8236916a811e" prot="public" static="no" mutable="no">
        <type>http auto</type>
        <definition>http info</definition>
        <argsstring></argsstring>
        <name>info</name>
        <initializer>= get_producer_info( &quot;alice1111111&quot; )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="749" column="9" bodyfile="system/tests/eosio.system_tests.cpp" bodystart="749" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="eosio_8system__tests_8cpp_1ac521e5e43ae7dfe25ae807f46e649a92" prot="public" static="no" mutable="no">
        <type>http</type>
        <definition>http __pad1__</definition>
        <argsstring></argsstring>
        <name>__pad1__</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="759" column="49" bodyfile="system/tests/eosio.system_tests.cpp" bodystart="760" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="eosio_8system__tests_8cpp_1adca31b96231ede220d4c0eb10e553304" prot="public" static="no" mutable="no">
        <type>auto</type>
        <definition>auto key2</definition>
        <argsstring></argsstring>
        <name>key2</name>
        <initializer>=  fc::crypto::public_key( std::string(&quot;EOS5jnmSKrzdBHE9n8hw58y7yxFWBC8SNiG7m8S1crJH3KvAnf9o6&quot;) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="769" column="9" bodyfile="system/tests/eosio.system_tests.cpp" bodystart="769" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="eosio_8system__tests_8cpp_1a1d89cdc0ac45a43ea15ee3944d01987c" prot="public" static="no" mutable="no">
        <type>http</type>
        <definition>http __pad2__</definition>
        <argsstring></argsstring>
        <name>__pad2__</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="773" column="49" bodyfile="system/tests/eosio.system_tests.cpp" bodystart="774" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="eosio_8system__tests_8cpp_1ae11b958544a1ae91eccc8ed5dad52931" prot="public" static="no" mutable="no">
        <type></type>
        <definition>alice1111111</definition>
        <argsstring></argsstring>
        <name>alice1111111</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="785" column="58" bodyfile="system/tests/eosio.system_tests.cpp" bodystart="787" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="eosio_8system__tests_8cpp_1af71c16457d70c54eb0836ce802b408a1" prot="public" static="no" mutable="no">
        <type>block_signing_authority_v0</type>
        <definition>block_signing_authority_v0 alice_signing_authority</definition>
        <argsstring></argsstring>
        <name>alice_signing_authority</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="812" column="31" bodyfile="system/tests/eosio.system_tests.cpp" bodystart="812" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="eosio_8system__tests_8cpp_1aed510115733f6c7dec255406484c61eb" prot="public" static="no" mutable="no">
        <type><ref refid="eosio_8system__tests_8cpp_1af71c16457d70c54eb0836ce802b408a1" kindref="member">alice_signing_authority</ref></type>
        <definition>alice_signing_authority threshold</definition>
        <argsstring></argsstring>
        <name>threshold</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="813" column="27" bodyfile="system/tests/eosio.system_tests.cpp" bodystart="813" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="eosio_8system__tests_8cpp_1a004286136832e1f30843b087eb1b847c" prot="public" static="no" mutable="no">
        <type>producer_authority</type>
        <definition>producer_authority alice_producer_authority</definition>
        <argsstring></argsstring>
        <name>alice_producer_authority</name>
        <initializer>= {.producer_name = &quot;alice1111111&quot;_n, .<ref refid="structauthority" kindref="compound">authority</ref> = <ref refid="eosio_8system__tests_8cpp_1af71c16457d70c54eb0836ce802b408a1" kindref="member">alice_signing_authority</ref>}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="816" column="23" bodyfile="system/tests/eosio.system_tests.cpp" bodystart="816" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="eosio_8system__tests_8cpp_1a429ef24db976cd4237c7baa9afe32c79" prot="public" static="no" mutable="no">
        <type>http</type>
        <definition>http __pad3__</definition>
        <argsstring></argsstring>
        <name>__pad3__</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="820" column="49" bodyfile="system/tests/eosio.system_tests.cpp" bodystart="821" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="eosio_8system__tests_8cpp_1ac8a8cc1d7e9eaa611ce8d6b626c74114" prot="public" static="no" mutable="no">
        <type>auto</type>
        <definition>auto alice_prod_info</definition>
        <argsstring></argsstring>
        <name>alice_prod_info</name>
        <initializer>= get_producer_info( &quot;alice1111111&quot;_n )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="829" column="9" bodyfile="system/tests/eosio.system_tests.cpp" bodystart="829" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="eosio_8system__tests_8cpp_1a35b8e7393c92883d1720af8bf00903e8" prot="public" static="no" mutable="no">
        <type><ref refid="eosio_8system__tests_8cpp_1a004286136832e1f30843b087eb1b847c" kindref="member">alice_producer_authority</ref></type>
        <definition>alice_producer_authority authority</definition>
        <argsstring></argsstring>
        <name>authority</name>
        <initializer>= <ref refid="eosio_8system__tests_8cpp_1af71c16457d70c54eb0836ce802b408a1" kindref="member">alice_signing_authority</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="842" column="28" bodyfile="system/tests/eosio.system_tests.cpp" bodystart="842" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="eosio_8system__tests_8cpp_1a48ef835203ce56cc7f9a5763ff647087" prot="public" static="no" mutable="no">
        <type><ref refid="eosio_8system__tests_8cpp_1af71c16457d70c54eb0836ce802b408a1" kindref="member">alice_signing_authority</ref></type>
        <definition>alice_signing_authority keys</definition>
        <argsstring>[1]</argsstring>
        <name>keys</name>
        <initializer>= alice_signing_authority.keys[0]</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="868" column="27" bodyfile="system/tests/eosio.system_tests.cpp" bodystart="868" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="eosio_8system__tests_8cpp_1a5f269c22e6d9d32b0b0ad7e6166854df" prot="public" static="no" mutable="no">
        <type></type>
        <definition>location</definition>
        <argsstring></argsstring>
        <name>location</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="914" column="48" bodyfile="system/tests/eosio.system_tests.cpp" bodystart="914" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="eosio_8system__tests_8cpp_1a8808ab841e471ff1160d3dc31b3fc227" prot="public" static="no" mutable="no">
        <type>auto</type>
        <definition>auto convert_to_block_timestamp</definition>
        <argsstring></argsstring>
        <name>convert_to_block_timestamp</name>
        <initializer>= [](const fc::variant&amp; timestamp) -&gt; eosio::chain::block_timestamp_type {
      return fc::time_point::from_iso_string(timestamp.as_string());
   }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="928" column="9" bodyfile="system/tests/eosio.system_tests.cpp" bodystart="928" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="eosio_8system__tests_8cpp_1a253e932df28bb1aecc5e3775d78e124c" prot="public" static="no" mutable="no">
        <type>const auto</type>
        <definition>const auto schedule_update1</definition>
        <argsstring></argsstring>
        <name>schedule_update1</name>
        <initializer>= <ref refid="eosio_8system__tests_8cpp_1a8808ab841e471ff1160d3dc31b3fc227" kindref="member">convert_to_block_timestamp</ref>(get_global_state()[&quot;last_producer_schedule_update&quot;])</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="932" column="15" bodyfile="system/tests/eosio.system_tests.cpp" bodystart="932" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="eosio_8system__tests_8cpp_1ab6141e60ec62bffdd9519ddd45f56e6a" prot="public" static="no" mutable="no">
        <type>const auto &amp;</type>
        <definition>const auto&amp; rlm</definition>
        <argsstring></argsstring>
        <name>rlm</name>
        <initializer>= control-&gt;get_resource_limits_manager()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="934" column="15" bodyfile="system/tests/eosio.system_tests.cpp" bodystart="934" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="eosio_8system__tests_8cpp_1ae9dce8c60cffef86f2417d579ab5d997" prot="public" static="no" mutable="no">
        <type>auto</type>
        <definition>auto alice_initial_ram_usage</definition>
        <argsstring></argsstring>
        <name>alice_initial_ram_usage</name>
        <initializer>= rlm.get_account_ram_usage(&quot;alice1111111&quot;_n)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="936" column="9" bodyfile="system/tests/eosio.system_tests.cpp" bodystart="936" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="eosio_8system__tests_8cpp_1affb0f5db65d70439a6a6ef2f1c0c3b2d" prot="public" static="no" mutable="no">
        <type>auto</type>
        <definition>auto alice_prod_info2</definition>
        <argsstring></argsstring>
        <name>alice_prod_info2</name>
        <initializer>= get_producer_info( &quot;alice1111111&quot;_n )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="943" column="9" bodyfile="system/tests/eosio.system_tests.cpp" bodystart="943" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="eosio_8system__tests_8cpp_1a52956216cfbda56033a4af6cdf08d7b8" prot="public" static="no" mutable="no">
        <type>const auto</type>
        <definition>const auto schedule_update2</definition>
        <argsstring></argsstring>
        <name>schedule_update2</name>
        <initializer>= <ref refid="eosio_8system__tests_8cpp_1a8808ab841e471ff1160d3dc31b3fc227" kindref="member">convert_to_block_timestamp</ref>(get_global_state()[&quot;last_producer_schedule_update&quot;])</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="947" column="15" bodyfile="system/tests/eosio.system_tests.cpp" bodystart="947" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="eosio_8system__tests_8cpp_1a24d0cbbddeeee8a3afa3b12468449349" prot="public" static="no" mutable="no">
        <type>auto</type>
        <definition>auto alice_ram_usage</definition>
        <argsstring></argsstring>
        <name>alice_ram_usage</name>
        <initializer>= rlm.get_account_ram_usage(&quot;alice1111111&quot;_n)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="957" column="9" bodyfile="system/tests/eosio.system_tests.cpp" bodystart="957" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="eosio_8system__tests_8cpp_1a33cb0eb759b95359b1b0a386788db558" prot="public" static="no" mutable="no">
        <type>auto</type>
        <definition>auto alice_prod_info3</definition>
        <argsstring></argsstring>
        <name>alice_prod_info3</name>
        <initializer>= get_producer_info( &quot;alice1111111&quot;_n )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="960" column="9" bodyfile="system/tests/eosio.system_tests.cpp" bodystart="960" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="eosio_8system__tests_8cpp_1a19d17df497025e0426108c127be4f4e7" prot="public" static="no" mutable="no">
        <type>const auto</type>
        <definition>const auto schedule_update3</definition>
        <argsstring></argsstring>
        <name>schedule_update3</name>
        <initializer>= <ref refid="eosio_8system__tests_8cpp_1a8808ab841e471ff1160d3dc31b3fc227" kindref="member">convert_to_block_timestamp</ref>(get_global_state()[&quot;last_producer_schedule_update&quot;])</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="966" column="15" bodyfile="system/tests/eosio.system_tests.cpp" bodystart="966" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="eosio_8system__tests_8cpp_1a04706323c4ac3a496c5b567d3a1b21a4" prot="public" static="no" mutable="no">
        <type>auto</type>
        <definition>auto alice_prod_info4</definition>
        <argsstring></argsstring>
        <name>alice_prod_info4</name>
        <initializer>= get_producer_info( &quot;alice1111111&quot;_n )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="995" column="9" bodyfile="system/tests/eosio.system_tests.cpp" bodystart="995" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="eosio_8system__tests_8cpp_1a3977223107a4aa4bf5cdb41cd3ac9cb6" prot="public" static="no" mutable="no">
        <type>const auto</type>
        <definition>const auto schedule_update4</definition>
        <argsstring></argsstring>
        <name>schedule_update4</name>
        <initializer>= <ref refid="eosio_8system__tests_8cpp_1a8808ab841e471ff1160d3dc31b3fc227" kindref="member">convert_to_block_timestamp</ref>(get_global_state()[&quot;last_producer_schedule_update&quot;])</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="997" column="15" bodyfile="system/tests/eosio.system_tests.cpp" bodystart="997" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="eosio_8system__tests_8cpp_1af570c91f91c802568d90a8631d0eb6ff" prot="public" static="no" mutable="no">
        <type></type>
        <definition>eosio_system_tester</definition>
        <argsstring></argsstring>
        <name>eosio_system_tester</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="1002" column="3" bodyfile="system/tests/eosio.system_tests.cpp" bodystart="1002" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="eosio_8system__tests_8cpp_1a11bb71c4e33e79ea17fb60697717745f" prot="public" static="no" mutable="no">
        <type>fc::variant</type>
        <definition>fc::variant params</definition>
        <argsstring></argsstring>
        <name>params</name>
        <initializer>= producer_parameters_example(1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="1140" column="16" bodyfile="system/tests/eosio.system_tests.cpp" bodystart="1140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="eosio_8system__tests_8cpp_1a5a03a10daf5c20c6e9a103d00fcd085f" prot="public" static="no" mutable="no">
        <type>auto</type>
        <definition>auto prod</definition>
        <argsstring></argsstring>
        <name>prod</name>
        <initializer>= get_producer_info( &quot;alice1111111&quot; )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="1153" column="9" bodyfile="system/tests/eosio.system_tests.cpp" bodystart="1153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="eosio_8system__tests_8cpp_1ac440180674d61e14dbbe38c3d10269d3" prot="public" static="no" mutable="no">
        <type></type>
        <definition>proxy</definition>
        <argsstring></argsstring>
        <name>proxy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="1291" column="48" bodyfile="system/tests/eosio.system_tests.cpp" bodystart="1291" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a7a73befe9466adfba835a09c92995a76" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FC_REFLECT</definition>
        <argsstring>(_abi_hash,(owner)(hash))</argsstring>
        <name>FC_REFLECT</name>
        <param>
          <type><ref refid="struct__abi__hash" kindref="compound">_abi_hash</ref></type>
        </param>
        <param>
          <type>(<ref refid="eosio_8limitauth__tests_8cpp_1af05624499daa7d1cf22007650e219653" kindref="member">owner</ref>)(hash)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="17" column="1" declfile="system/tests/eosio.system_tests.cpp" declline="17" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a92525a172bd636d4759026ae6bdb6ea1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FC_REFLECT</definition>
        <argsstring>(connector,(balance)(weight))</argsstring>
        <name>FC_REFLECT</name>
        <param>
          <type><ref refid="structconnector" kindref="compound">connector</ref></type>
        </param>
        <param>
          <type>(<ref refid="eosio_8token__tests_8cpp_1a1e7ef09ce66d09456a55c47a8c42f3dc" kindref="member">balance</ref>)(weight)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="23" column="1" declfile="system/tests/eosio.system_tests.cpp" declline="23" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a020a4de3d826636f65e6928694af2812" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool within_error</definition>
        <argsstring>(int64_t a, int64_t b, int64_t err)</argsstring>
        <name>within_error</name>
        <param>
          <type>int64_t</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>b</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>err</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="29" column="6" bodyfile="system/tests/eosio.system_tests.cpp" bodystart="29" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a2a34c6cca71b9f7b935a3b00648b2b41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool within_one</definition>
        <argsstring>(int64_t a, int64_t b)</argsstring>
        <name>within_one</name>
        <param>
          <type>int64_t</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="30" column="6" bodyfile="system/tests/eosio.system_tests.cpp" bodystart="30" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a8a1841911da283583ec346df954d73a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_FIXTURE_TEST_CASE</definition>
        <argsstring>(buysell, eosio_system_tester)</argsstring>
        <name>BOOST_FIXTURE_TEST_CASE</name>
        <param>
          <type>buysell</type>
        </param>
        <param>
          <type><ref refid="classeosio__system_1_1eosio__system__tester" kindref="compound">eosio_system_tester</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="32" column="1" bodyfile="system/tests/eosio.system_tests.cpp" bodystart="32" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a057cb719bfa291fae56dc6ba5fa7a8d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FC_LOG_AND_RETHROW</definition>
        <argsstring>() BOOST_FIXTURE_TEST_CASE(stake_unstake</argsstring>
        <name>FC_LOG_AND_RETHROW</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="174" column="2"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1aa1213f0f2c7a53ea968859f3cab582c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>produce_blocks</definition>
        <argsstring>(10)</argsstring>
        <name>produce_blocks</name>
        <param>
          <type>10</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="179" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="179" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>produce_block</definition>
        <argsstring>(fc::hours(3 *24))</argsstring>
        <name>produce_block</name>
        <param>
          <type>fc::hours(3 *24)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="180" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="180" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(core_sym::from_string(&quot;0.0000&quot;), get_balance(&quot;alice1111111&quot;))</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(&quot;0.0000&quot;)</type>
        </param>
        <param>
          <type>get_balance(&quot;alice1111111&quot;)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="182" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="182" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a792dc87878d55cfa11f862e9e6d5cc05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>transfer</definition>
        <argsstring>(&quot;eosio&quot;, &quot;alice1111111&quot;, core_sym::from_string(&quot;1000.0000&quot;), &quot;eosio&quot;)</argsstring>
        <name>transfer</name>
        <param>
          <type>&quot;eosio&quot;</type>
        </param>
        <param>
          <type>&quot;alice1111111&quot;</type>
        </param>
        <param>
          <type><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(&quot;1000.0000&quot;)</type>
        </param>
        <param>
          <type>&quot;eosio&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="183" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="183" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1aabe7e2e0b227f1457642755876ab7a13" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(core_sym::from_string(&quot;1000.0000&quot;), get_balance(&quot;alice1111111&quot;))</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(&quot;1000.0000&quot;)</type>
        </param>
        <param>
          <type>get_balance(&quot;alice1111111&quot;)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="185" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="185" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a25b1eff591839daab720c736bea52c4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(success(), stake(&quot;eosio&quot;, &quot;alice1111111&quot;, core_sym::from_string(&quot;200.0000&quot;), core_sym::from_string(&quot;100.0000&quot;)))</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type>success()</type>
        </param>
        <param>
          <type>stake(&quot;eosio&quot;, &quot;<ref refid="eosio_8system__tests_8cpp_1ac6e52a5a32a4aaef83e152817af3c1e8" kindref="member">alice1111111</ref>&quot;, core_sym::from_string(&quot;200.0000&quot;), <ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(&quot;100.0000&quot;))</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="186" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="186" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a23e5315eb02a2d177c3b139f3b17cb77" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(core_sym::from_string(&quot;210.0000&quot;), total[&quot;net_weight&quot;].as&lt; asset &gt;())</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(&quot;210.0000&quot;)</type>
        </param>
        <param>
          <type>total.as&lt; asset &gt;</type>
          <array>()[&quot;net_weight&quot;]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="189" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="189" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a4223c0cd5bc80b193a7cb1c2a7fee7fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(core_sym::from_string(&quot;110.0000&quot;), total[&quot;cpu_weight&quot;].as&lt; asset &gt;())</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(&quot;110.0000&quot;)</type>
        </param>
        <param>
          <type>total.as&lt; asset &gt;</type>
          <array>()[&quot;cpu_weight&quot;]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="190" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="190" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a03111bac8c9cbf688903a7ca1cca1c8e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(success(), stake(&quot;alice1111111&quot;, &quot;alice1111111&quot;, core_sym::from_string(&quot;200.0000&quot;), core_sym::from_string(&quot;100.0000&quot;)))</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type>success()</type>
        </param>
        <param>
          <type>stake(&quot;alice1111111&quot;, &quot;<ref refid="eosio_8system__tests_8cpp_1ac6e52a5a32a4aaef83e152817af3c1e8" kindref="member">alice1111111</ref>&quot;, core_sym::from_string(&quot;200.0000&quot;), <ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(&quot;100.0000&quot;))</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="193" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="193" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a59b414c936366b4ac37e0757b1c053e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(core_sym::from_string(&quot;700.0000&quot;), get_balance(&quot;alice1111111&quot;))</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(&quot;700.0000&quot;)</type>
        </param>
        <param>
          <type>get_balance(&quot;alice1111111&quot;)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="194" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="194" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1ad5aecdbc5c30c26cf970bbe9430bdd91" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(init_eosio_stake_balance+core_sym::from_string(&quot;300.0000&quot;), get_balance(&quot;eosio.stake&quot;_n))</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type><ref refid="eosio_8system__tests_8cpp_1a515931a5b18b498f3e1fea3c35f38ce4" kindref="member">init_eosio_stake_balance</ref>+</type>
          <declname>core_sym::from_string</declname>
          <array>&quot;300.0000&quot;</array>
        </param>
        <param>
          <type>get_balance(&quot;eosio.stake&quot;_n)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="195" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="195" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a2eba8863f7fca1b673209b7c1b65491d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(success(), unstake(&quot;alice1111111&quot;, &quot;alice1111111&quot;, core_sym::from_string(&quot;200.0000&quot;), core_sym::from_string(&quot;100.0000&quot;)))</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type>success()</type>
        </param>
        <param>
          <type>unstake(&quot;alice1111111&quot;, &quot;<ref refid="eosio_8system__tests_8cpp_1ac6e52a5a32a4aaef83e152817af3c1e8" kindref="member">alice1111111</ref>&quot;, core_sym::from_string(&quot;200.0000&quot;), <ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(&quot;100.0000&quot;))</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="196" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="196" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a637865e026fd5d5157cc2acd962af609" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>produce_block</definition>
        <argsstring>(fc::hours(3 *24-1))</argsstring>
        <name>produce_block</name>
        <param>
          <type>fc::hours(3 *24-1)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="199" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="199" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a95fdc8cfd66a090d82b4c0b12470bce9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>produce_blocks</definition>
        <argsstring>(1)</argsstring>
        <name>produce_blocks</name>
        <param>
          <type>1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="200" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="200" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a2a76fd0baa4759a0dd9ded0165dd4b76" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>produce_block</definition>
        <argsstring>(fc::hours(1))</argsstring>
        <name>produce_block</name>
        <param>
          <type>fc::hours(1)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="204" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="204" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1af373a9acab980b5cc6d33919ff046e92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(init_eosio_stake_balance, get_balance(&quot;eosio.stake&quot;_n))</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type><ref refid="eosio_8system__tests_8cpp_1a515931a5b18b498f3e1fea3c35f38ce4" kindref="member">init_eosio_stake_balance</ref></type>
        </param>
        <param>
          <type>get_balance(&quot;eosio.stake&quot;_n)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="207" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="207" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a7225f24b15dac8bd988a650593b95e4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(success(), stake(&quot;alice1111111&quot;, &quot;bob111111111&quot;, core_sym::from_string(&quot;200.0000&quot;), core_sym::from_string(&quot;100.0000&quot;)))</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type>success()</type>
        </param>
        <param>
          <type>stake(&quot;alice1111111&quot;, &quot;<ref refid="eosio_8system__tests_8cpp_1aef6b2dcb723070a8a238efb5f4948950" kindref="member">bob111111111</ref>&quot;, core_sym::from_string(&quot;200.0000&quot;), <ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(&quot;100.0000&quot;))</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="209" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="209" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a5c858e0ece58a466b95b14bed78e0972" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(core_sym::from_string(&quot;210.0000&quot;).get_amount(), total[&quot;net_weight&quot;].as&lt; asset &gt;().get_amount())</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(&quot;210.0000&quot;).get_amount()</type>
        </param>
        <param>
          <type>total.as&lt; asset &gt;</type>
          <array>().get_amount()[&quot;net_weight&quot;]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="216" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="216" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1ad49a35d3bd38031311ed823e71592192" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(core_sym::from_string(&quot;110.0000&quot;).get_amount(), total[&quot;cpu_weight&quot;].as&lt; asset &gt;().get_amount())</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(&quot;110.0000&quot;).get_amount()</type>
        </param>
        <param>
          <type>total.as&lt; asset &gt;</type>
          <array>().get_amount()[&quot;cpu_weight&quot;]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="217" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="217" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1abf3d4eb475605f9a73224e835cd3fb71" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>REQUIRE_MATCHING_OBJECT</definition>
        <argsstring>(voter(&quot;alice1111111&quot;, core_sym::from_string(&quot;300.0000&quot;)), get_voter_info(&quot;alice1111111&quot;))</argsstring>
        <name>REQUIRE_MATCHING_OBJECT</name>
        <param>
          <type>voter(&quot;alice1111111&quot;, core_sym::from_string(&quot;300.0000&quot;))</type>
        </param>
        <param>
          <type>get_voter_info(&quot;alice1111111&quot;)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="219" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="219" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a0b774da9f6bef6af688619a5fddae785" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(true, 0&lt; bytes)</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type>true</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="222" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="222" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a53f75ca70ec2955ab9cab457a4a594a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(success(), unstake(&quot;alice1111111&quot;, &quot;bob111111111&quot;, core_sym::from_string(&quot;200.0000&quot;), core_sym::from_string(&quot;100.0000&quot;)))</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type>success()</type>
        </param>
        <param>
          <type>unstake(&quot;alice1111111&quot;, &quot;<ref refid="eosio_8system__tests_8cpp_1aef6b2dcb723070a8a238efb5f4948950" kindref="member">bob111111111</ref>&quot;, core_sym::from_string(&quot;200.0000&quot;), <ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(&quot;100.0000&quot;))</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="225" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="225" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a84ddb9f2119a1a009c374d60a679b690" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(core_sym::from_string(&quot;10.0000&quot;), total[&quot;net_weight&quot;].as&lt; asset &gt;())</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(&quot;10.0000&quot;)</type>
        </param>
        <param>
          <type>total.as&lt; asset &gt;</type>
          <array>()[&quot;net_weight&quot;]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="227" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="227" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a153a3c0925f0fe8f525c10eb7bd05daf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(core_sym::from_string(&quot;10.0000&quot;), total[&quot;cpu_weight&quot;].as&lt; asset &gt;())</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(&quot;10.0000&quot;)</type>
        </param>
        <param>
          <type>total.as&lt; asset &gt;</type>
          <array>()[&quot;cpu_weight&quot;]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="228" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="228" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a3e2d99667765f30d26f011905fc1ca5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>REQUIRE_MATCHING_OBJECT</definition>
        <argsstring>(voter(&quot;alice1111111&quot;, core_sym::from_string(&quot;0.0000&quot;)), get_voter_info(&quot;alice1111111&quot;))</argsstring>
        <name>REQUIRE_MATCHING_OBJECT</name>
        <param>
          <type>voter(&quot;alice1111111&quot;, core_sym::from_string(&quot;0.0000&quot;))</type>
        </param>
        <param>
          <type>get_voter_info(&quot;alice1111111&quot;)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="236" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="236" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a2dbecafac09d3034f9a00c143fd3292f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>transfer</definition>
        <argsstring>(&quot;eosio&quot;, &quot;bob111111111&quot;, core_sym::from_string(&quot;1000.0000&quot;), &quot;eosio&quot;)</argsstring>
        <name>transfer</name>
        <param>
          <type>&quot;eosio&quot;</type>
        </param>
        <param>
          <type>&quot;bob111111111&quot;</type>
        </param>
        <param>
          <type><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(&quot;1000.0000&quot;)</type>
        </param>
        <param>
          <type>&quot;eosio&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="248" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="248" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1abcbeb0ae9107eb507c42ac88625466d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(success(), stake_with_transfer(&quot;bob111111111&quot;_n, &quot;alice1111111&quot;_n, core_sym::from_string(&quot;200.0000&quot;), core_sym::from_string(&quot;100.0000&quot;)))</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type>success()</type>
        </param>
        <param>
          <type>stake_with_transfer(&quot;bob111111111&quot;_n, &quot;alice1111111&quot;_n, <ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(&quot;200.0000&quot;), <ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(&quot;100.0000&quot;))</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="249" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="249" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a95110ddb82cdf525b9ee57717bd2a07b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(core_sym::from_string(&quot;410.0000&quot;), total[&quot;net_weight&quot;].as&lt; asset &gt;())</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(&quot;410.0000&quot;)</type>
        </param>
        <param>
          <type>total.as&lt; asset &gt;</type>
          <array>()[&quot;net_weight&quot;]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="265" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="265" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a21aac85e43cdaa7787db33be57c823e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(core_sym::from_string(&quot;210.0000&quot;), total[&quot;cpu_weight&quot;].as&lt; asset &gt;())</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(&quot;210.0000&quot;)</type>
        </param>
        <param>
          <type>total.as&lt; asset &gt;</type>
          <array>()[&quot;cpu_weight&quot;]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="266" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="266" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a2417a9acc54e7df79a432f33aa219239" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>REQUIRE_MATCHING_OBJECT</definition>
        <argsstring>(voter(&quot;alice1111111&quot;, core_sym::from_string(&quot;600.0000&quot;)), get_voter_info(&quot;alice1111111&quot;))</argsstring>
        <name>REQUIRE_MATCHING_OBJECT</name>
        <param>
          <type>voter(&quot;alice1111111&quot;, core_sym::from_string(&quot;600.0000&quot;))</type>
        </param>
        <param>
          <type>get_voter_info(&quot;alice1111111&quot;)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="267" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="267" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a7af612d71876c98a092c140745b75554" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(success(), unstake(&quot;alice1111111&quot;, &quot;alice1111111&quot;, core_sym::from_string(&quot;400.0000&quot;), core_sym::from_string(&quot;200.0000&quot;)))</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type>success()</type>
        </param>
        <param>
          <type>unstake(&quot;alice1111111&quot;, &quot;<ref refid="eosio_8system__tests_8cpp_1ac6e52a5a32a4aaef83e152817af3c1e8" kindref="member">alice1111111</ref>&quot;, core_sym::from_string(&quot;400.0000&quot;), <ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(&quot;200.0000&quot;))</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="270" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="270" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1ad5dc51d782583f7592d727f8db793dbb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(core_sym::from_string(&quot;1300.0000&quot;), get_balance(&quot;alice1111111&quot;))</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(&quot;1300.0000&quot;)</type>
        </param>
        <param>
          <type>get_balance(&quot;alice1111111&quot;)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="281" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="281" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a9a8da2702a7af60748879fb29878cd40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(success(), stake_with_transfer(&quot;alice1111111&quot;_n, &quot;bob111111111&quot;_n, core_sym::from_string(&quot;100.0000&quot;), core_sym::from_string(&quot;100.0000&quot;)))</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type>success()</type>
        </param>
        <param>
          <type>stake_with_transfer(&quot;alice1111111&quot;_n, &quot;bob111111111&quot;_n, <ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(&quot;100.0000&quot;), <ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(&quot;100.0000&quot;))</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="290" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="290" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a7e8379bd5dba89dbb5574c0873c2eeab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(wasm_assert_msg(&quot;cannot use transfer flag if delegating to self&quot;), stake_with_transfer(&quot;alice1111111&quot;_n, &quot;alice1111111&quot;_n, core_sym::from_string(&quot;200.0000&quot;), core_sym::from_string(&quot;100.0000&quot;)))</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type>wasm_assert_msg(&quot;cannot use <ref refid="eosio_8token__tests_8cpp_1a842c5467344efbabdf1da5f8aee477e1" kindref="member">transfer</ref> flag <ref refid="eosio_8system__tests_8cpp_1a020e67667b720177b3b9f825306965f5" kindref="member">if</ref> delegating to self&quot;)</type>
        </param>
        <param>
          <type>stake_with_transfer(&quot;alice1111111&quot;_n, &quot;alice1111111&quot;_n, <ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(&quot;200.0000&quot;), <ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(&quot;100.0000&quot;))</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="300" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="300" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a743a21c2e0e86a8aeacc66e5c80c51ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>issue_and_transfer</definition>
        <argsstring>(&quot;alice1111111&quot;, core_sym::from_string(&quot;1000.0000&quot;), config::system_account_name)</argsstring>
        <name>issue_and_transfer</name>
        <param>
          <type>&quot;alice1111111&quot;</type>
        </param>
        <param>
          <type><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(&quot;1000.0000&quot;)</type>
        </param>
        <param>
          <type>config::system_account_name</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="361" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="361" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a05a7779360e4de804406098acc648497" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(success(), stake(&quot;eosio&quot;, &quot;alice1111111&quot;, core_sym::from_string(&quot;2000.0000&quot;), core_sym::from_string(&quot;1000.0000&quot;)))</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type>success()</type>
        </param>
        <param>
          <type>stake(&quot;eosio&quot;, &quot;<ref refid="eosio_8system__tests_8cpp_1ac6e52a5a32a4aaef83e152817af3c1e8" kindref="member">alice1111111</ref>&quot;, core_sym::from_string(&quot;2000.0000&quot;), <ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(&quot;1000.0000&quot;))</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="363" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="363" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1ac3d9fe341435d6f18474ca2611316287" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(success(), stake(&quot;alice1111111&quot;, &quot;bob111111111&quot;, core_sym::from_string(&quot;10.0000&quot;), core_sym::from_string(&quot;10.0000&quot;)))</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type>success()</type>
        </param>
        <param>
          <type>stake(&quot;alice1111111&quot;, &quot;<ref refid="eosio_8system__tests_8cpp_1aef6b2dcb723070a8a238efb5f4948950" kindref="member">bob111111111</ref>&quot;, core_sym::from_string(&quot;10.0000&quot;), <ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(&quot;10.0000&quot;))</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="364" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="364" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1ae3a43a2d6ab1e1687276ee8e5295b425" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(error(&quot;missing authority of alice1111111&quot;), push_action(&quot;alice1111111&quot;_n, &quot;delegatebw&quot;_n, mvo()(&quot;from&quot;, &quot;alice1111111&quot;)(&quot;receiver&quot;, &quot;bob111111111&quot;)(&quot;stake_net_quantity&quot;, core_sym::from_string(&quot;10.0000&quot;))(&quot;stake_cpu_quantity&quot;, core_sym::from_string(&quot;10.0000&quot;))(&quot;transfer&quot;, 0), false))</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type>error(&quot;missing <ref refid="structauthority" kindref="compound">authority</ref> of <ref refid="eosio_8system__tests_8cpp_1ac6e52a5a32a4aaef83e152817af3c1e8" kindref="member">alice1111111</ref>&quot;)</type>
        </param>
        <param>
          <type><ref refid="eosio_8msig__tests_8cpp_1a0a4c6f926e5c8b4f845b15a3269c6745" kindref="member">push_action</ref>(&quot;alice1111111&quot;_n, &quot;delegatebw&quot;_n, <ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()(&quot;from&quot;, &quot;<ref refid="eosio_8system__tests_8cpp_1ac6e52a5a32a4aaef83e152817af3c1e8" kindref="member">alice1111111</ref>&quot;)(&quot;receiver&quot;, &quot;<ref refid="eosio_8system__tests_8cpp_1aef6b2dcb723070a8a238efb5f4948950" kindref="member">bob111111111</ref>&quot;)(&quot;stake_net_quantity&quot;, core_sym::from_string(&quot;10.0000&quot;))(&quot;stake_cpu_quantity&quot;, core_sym::from_string(&quot;10.0000&quot;))(&quot;transfer&quot;, 0), false)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="366" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="366" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a543e19431084085d85de2a552ac677db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(error(&quot;missing authority of alice1111111&quot;), push_action(&quot;alice1111111&quot;_n, &quot;undelegatebw&quot;_n, mvo()(&quot;from&quot;, &quot;alice1111111&quot;)(&quot;receiver&quot;, &quot;bob111111111&quot;)(&quot;unstake_net_quantity&quot;, core_sym::from_string(&quot;200.0000&quot;))(&quot;unstake_cpu_quantity&quot;, core_sym::from_string(&quot;100.0000&quot;))(&quot;transfer&quot;, 0), false))</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type>error(&quot;missing <ref refid="structauthority" kindref="compound">authority</ref> of <ref refid="eosio_8system__tests_8cpp_1ac6e52a5a32a4aaef83e152817af3c1e8" kindref="member">alice1111111</ref>&quot;)</type>
        </param>
        <param>
          <type><ref refid="eosio_8msig__tests_8cpp_1a0a4c6f926e5c8b4f845b15a3269c6745" kindref="member">push_action</ref>(&quot;alice1111111&quot;_n, &quot;undelegatebw&quot;_n, <ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()(&quot;from&quot;, &quot;<ref refid="eosio_8system__tests_8cpp_1ac6e52a5a32a4aaef83e152817af3c1e8" kindref="member">alice1111111</ref>&quot;)(&quot;receiver&quot;, &quot;<ref refid="eosio_8system__tests_8cpp_1aef6b2dcb723070a8a238efb5f4948950" kindref="member">bob111111111</ref>&quot;)(&quot;unstake_net_quantity&quot;, core_sym::from_string(&quot;200.0000&quot;))(&quot;unstake_cpu_quantity&quot;, core_sym::from_string(&quot;100.0000&quot;))(&quot;transfer&quot;, 0), false)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="377" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="377" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a248f6ff6f62b29f88c63274b27cdd607" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(wasm_assert_msg(&quot;must stake a positive amount&quot;), stake(&quot;alice1111111&quot;, core_sym::from_string(&quot;-0.0001&quot;), core_sym::from_string(&quot;0.0000&quot;)))</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type>wasm_assert_msg(&quot;must stake a positive <ref refid="eosio_8token__tests_8cpp_1aca469ae89ae00a572ad079f6d8515ce1" kindref="member">amount</ref>&quot;)</type>
        </param>
        <param>
          <type>stake(&quot;alice1111111&quot;, core_sym::from_string(&quot;-0.0001&quot;), <ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(&quot;0.0000&quot;))</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="394" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="394" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1af5c0344b4d4e99fc53621994bacee2d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(wasm_assert_msg(&quot;must stake a positive amount&quot;), stake(&quot;alice1111111&quot;, core_sym::from_string(&quot;0.0000&quot;), core_sym::from_string(&quot;-0.0001&quot;)))</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type>wasm_assert_msg(&quot;must stake a positive <ref refid="eosio_8token__tests_8cpp_1aca469ae89ae00a572ad079f6d8515ce1" kindref="member">amount</ref>&quot;)</type>
        </param>
        <param>
          <type>stake(&quot;alice1111111&quot;, core_sym::from_string(&quot;0.0000&quot;), <ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(&quot;-0.0001&quot;))</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="398" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="398" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a897c5266a90285b08617ee2ad23b0b08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(wasm_assert_msg(&quot;must stake a positive amount&quot;), stake(&quot;alice1111111&quot;, core_sym::from_string(&quot;00.0000&quot;), core_sym::from_string(&quot;00.0000&quot;)))</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type>wasm_assert_msg(&quot;must stake a positive <ref refid="eosio_8token__tests_8cpp_1aca469ae89ae00a572ad079f6d8515ce1" kindref="member">amount</ref>&quot;)</type>
        </param>
        <param>
          <type>stake(&quot;alice1111111&quot;, core_sym::from_string(&quot;00.0000&quot;), <ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(&quot;00.0000&quot;))</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="402" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="402" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1aa04a8b06c62fcd61007d7a451ee6d0e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(wasm_assert_msg(&quot;must stake a positive amount&quot;), stake(&quot;alice1111111&quot;, core_sym::from_string(&quot;0.0000&quot;), core_sym::from_string(&quot;00.0000&quot;)))</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type>wasm_assert_msg(&quot;must stake a positive <ref refid="eosio_8token__tests_8cpp_1aca469ae89ae00a572ad079f6d8515ce1" kindref="member">amount</ref>&quot;)</type>
        </param>
        <param>
          <type>stake(&quot;alice1111111&quot;, core_sym::from_string(&quot;0.0000&quot;), <ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(&quot;00.0000&quot;))</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="406" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="406" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a58ad30f21f8fa50d29d52ad46d7cf5a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(true, get_voter_info(&quot;alice1111111&quot;).is_null())</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type>true</type>
        </param>
        <param>
          <type>get_voter_info(&quot;alice1111111&quot;).is_null()</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="411" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="411" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1ac0c7e407bf64cb00322058b1e4a6fc43" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(success(), stake(&quot;alice1111111&quot;, &quot;bob111111111&quot;, core_sym::from_string(&quot;200.0001&quot;), core_sym::from_string(&quot;100.0001&quot;)))</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type>success()</type>
        </param>
        <param>
          <type>stake(&quot;alice1111111&quot;, &quot;<ref refid="eosio_8system__tests_8cpp_1aef6b2dcb723070a8a238efb5f4948950" kindref="member">bob111111111</ref>&quot;, core_sym::from_string(&quot;200.0001&quot;), <ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(&quot;100.0001&quot;))</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="418" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="418" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a897ac872ff77577ba409f15a8293f06a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(core_sym::from_string(&quot;210.0001&quot;), total[&quot;net_weight&quot;].as&lt; asset &gt;())</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(&quot;210.0001&quot;)</type>
        </param>
        <param>
          <type>total.as&lt; asset &gt;</type>
          <array>()[&quot;net_weight&quot;]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="421" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="421" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1ace57c45c9d9e2f0f9a438effcdb79ba5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wdump</definition>
        <argsstring>((vinfo))</argsstring>
        <name>wdump</name>
        <param>
          <type>(<ref refid="eosio_8system__tests_8cpp_1acc4282863324bd2135c3f73528e99fd3" kindref="member">vinfo</ref>)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="423" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="423" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a874f4835427992592d31749e60439fcd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>REQUIRE_MATCHING_OBJECT</definition>
        <argsstring>(voter(&quot;alice1111111&quot;, core_sym::from_string(&quot;300.0002&quot;)), get_voter_info(&quot;alice1111111&quot;))</argsstring>
        <name>REQUIRE_MATCHING_OBJECT</name>
        <param>
          <type>voter(&quot;alice1111111&quot;, core_sym::from_string(&quot;300.0002&quot;))</type>
        </param>
        <param>
          <type>get_voter_info(&quot;alice1111111&quot;)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="424" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="424" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1aedd1907bcde9ba918763c52dcf8f231c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(wasm_assert_msg(&quot;must unstake a positive amount&quot;), unstake(&quot;alice1111111&quot;, &quot;bob111111111&quot;, core_sym::from_string(&quot;-1.0000&quot;), core_sym::from_string(&quot;0.0000&quot;)))</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type>wasm_assert_msg(&quot;must unstake a positive <ref refid="eosio_8token__tests_8cpp_1aca469ae89ae00a572ad079f6d8515ce1" kindref="member">amount</ref>&quot;)</type>
        </param>
        <param>
          <type>unstake(&quot;alice1111111&quot;, &quot;<ref refid="eosio_8system__tests_8cpp_1aef6b2dcb723070a8a238efb5f4948950" kindref="member">bob111111111</ref>&quot;, core_sym::from_string(&quot;-1.0000&quot;), <ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(&quot;0.0000&quot;))</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="427" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="427" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1acea7ead9c40a2bef5c0123bb3b62ef03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(wasm_assert_msg(&quot;must unstake a positive amount&quot;), unstake(&quot;alice1111111&quot;, &quot;bob111111111&quot;, core_sym::from_string(&quot;0.0000&quot;), core_sym::from_string(&quot;-1.0000&quot;)))</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type>wasm_assert_msg(&quot;must unstake a positive <ref refid="eosio_8token__tests_8cpp_1aca469ae89ae00a572ad079f6d8515ce1" kindref="member">amount</ref>&quot;)</type>
        </param>
        <param>
          <type>unstake(&quot;alice1111111&quot;, &quot;<ref refid="eosio_8system__tests_8cpp_1aef6b2dcb723070a8a238efb5f4948950" kindref="member">bob111111111</ref>&quot;, core_sym::from_string(&quot;0.0000&quot;), <ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(&quot;-1.0000&quot;))</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="431" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="431" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1ae2ed88172cd9ed5b7eda751a749db042" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(wasm_assert_msg(&quot;must unstake a positive amount&quot;), unstake(&quot;alice1111111&quot;, &quot;bob111111111&quot;, core_sym::from_string(&quot;0.0000&quot;), core_sym::from_string(&quot;0.0000&quot;)))</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type>wasm_assert_msg(&quot;must unstake a positive <ref refid="eosio_8token__tests_8cpp_1aca469ae89ae00a572ad079f6d8515ce1" kindref="member">amount</ref>&quot;)</type>
        </param>
        <param>
          <type>unstake(&quot;alice1111111&quot;, &quot;<ref refid="eosio_8system__tests_8cpp_1aef6b2dcb723070a8a238efb5f4948950" kindref="member">bob111111111</ref>&quot;, core_sym::from_string(&quot;0.0000&quot;), <ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(&quot;0.0000&quot;))</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="436" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="436" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a80eee1a9bf54959902b544deb0ea2b07" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(success(), stake(&quot;alice1111111&quot;, core_sym::from_string(&quot;200.0000&quot;), core_sym::from_string(&quot;100.0000&quot;)))</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type>success()</type>
        </param>
        <param>
          <type>stake(&quot;alice1111111&quot;, core_sym::from_string(&quot;200.0000&quot;), <ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(&quot;100.0000&quot;))</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="448" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="448" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a9850af505a9a1676cafd709d231da4f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(wasm_assert_msg(&quot;insufficient staked net bandwidth&quot;), unstake(&quot;alice1111111&quot;, core_sym::from_string(&quot;200.0001&quot;), core_sym::from_string(&quot;0.0000&quot;)))</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type>wasm_assert_msg(&quot;insufficient staked net bandwidth&quot;)</type>
        </param>
        <param>
          <type>unstake(&quot;alice1111111&quot;, core_sym::from_string(&quot;200.0001&quot;), <ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(&quot;0.0000&quot;))</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="458" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="458" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1ab00ebebb13c69374b2ec418907dde556" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(wasm_assert_msg(&quot;insufficient staked cpu bandwidth&quot;), unstake(&quot;alice1111111&quot;, core_sym::from_string(&quot;0.0000&quot;), core_sym::from_string(&quot;100.0001&quot;)))</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type>wasm_assert_msg(&quot;insufficient staked cpu bandwidth&quot;)</type>
        </param>
        <param>
          <type>unstake(&quot;alice1111111&quot;, core_sym::from_string(&quot;0.0000&quot;), <ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(&quot;100.0001&quot;))</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="463" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="463" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1af8a3a1523aa9222cdf2872e9d4a74819" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(true, get_voter_info(&quot;bob111111111&quot;).is_null())</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type>true</type>
        </param>
        <param>
          <type>get_voter_info(&quot;bob111111111&quot;).is_null()</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="490" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="490" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a764d303d85f4ae7334dbfcf861305bb8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(wasm_assert_msg(&quot;insufficient staked cpu bandwidth&quot;), unstake(&quot;bob111111111&quot;, core_sym::from_string(&quot;0.0000&quot;), core_sym::from_string(&quot;10.0000&quot;)))</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type>wasm_assert_msg(&quot;insufficient staked cpu bandwidth&quot;)</type>
        </param>
        <param>
          <type>unstake(&quot;bob111111111&quot;, core_sym::from_string(&quot;0.0000&quot;), <ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(&quot;10.0000&quot;))</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="493" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="493" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1af164ab786ff910154f5738223fb3695c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(wasm_assert_msg(&quot;insufficient staked net bandwidth&quot;), unstake(&quot;bob111111111&quot;, core_sym::from_string(&quot;10.0000&quot;), core_sym::from_string(&quot;0.0000&quot;)))</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type>wasm_assert_msg(&quot;insufficient staked net bandwidth&quot;)</type>
        </param>
        <param>
          <type>unstake(&quot;bob111111111&quot;, core_sym::from_string(&quot;10.0000&quot;), <ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(&quot;0.0000&quot;))</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="497" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="497" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a88d31a9214fc68d82c6a1436084589a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>issue_and_transfer</definition>
        <argsstring>(&quot;carol1111111&quot;, core_sym::from_string(&quot;1000.0000&quot;), config::system_account_name)</argsstring>
        <name>issue_and_transfer</name>
        <param>
          <type>&quot;carol1111111&quot;</type>
        </param>
        <param>
          <type><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(&quot;1000.0000&quot;)</type>
        </param>
        <param>
          <type>config::system_account_name</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="501" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="501" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1af141646070a543fdaaaeaf7df09f36cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(success(), stake(&quot;carol1111111&quot;, &quot;bob111111111&quot;, core_sym::from_string(&quot;20.0000&quot;), core_sym::from_string(&quot;10.0000&quot;)))</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type>success()</type>
        </param>
        <param>
          <type>stake(&quot;carol1111111&quot;, &quot;<ref refid="eosio_8system__tests_8cpp_1aef6b2dcb723070a8a238efb5f4948950" kindref="member">bob111111111</ref>&quot;, core_sym::from_string(&quot;20.0000&quot;), <ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(&quot;10.0000&quot;))</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="502" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="502" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a4c16d84628c445961ec0415a98a93873" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(core_sym::from_string(&quot;230.0000&quot;), total[&quot;net_weight&quot;].as&lt; asset &gt;())</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(&quot;230.0000&quot;)</type>
        </param>
        <param>
          <type>total.as&lt; asset &gt;</type>
          <array>()[&quot;net_weight&quot;]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="504" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="504" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a4865e02b00e4821812c40b7d11fcfaaf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(core_sym::from_string(&quot;120.0000&quot;), total[&quot;cpu_weight&quot;].as&lt; asset &gt;())</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(&quot;120.0000&quot;)</type>
        </param>
        <param>
          <type>total.as&lt; asset &gt;</type>
          <array>()[&quot;cpu_weight&quot;]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="505" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="505" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a8184aa9c3e475820f556aa9aa29e9d83" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(core_sym::from_string(&quot;970.0000&quot;), get_balance(&quot;carol1111111&quot;))</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(&quot;970.0000&quot;)</type>
        </param>
        <param>
          <type>get_balance(&quot;carol1111111&quot;)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="506" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="506" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1ae3bb30f56e909aa9f5d52194dfd75004" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>REQUIRE_MATCHING_OBJECT</definition>
        <argsstring>(voter(&quot;carol1111111&quot;, core_sym::from_string(&quot;30.0000&quot;)), get_voter_info(&quot;carol1111111&quot;))</argsstring>
        <name>REQUIRE_MATCHING_OBJECT</name>
        <param>
          <type>voter(&quot;carol1111111&quot;, core_sym::from_string(&quot;30.0000&quot;))</type>
        </param>
        <param>
          <type>get_voter_info(&quot;carol1111111&quot;)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="507" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="507" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a79c4c8ca79f08c2114adbbdea8aee8b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(wasm_assert_msg(&quot;insufficient staked net bandwidth&quot;), unstake(&quot;alice1111111&quot;, &quot;bob111111111&quot;, core_sym::from_string(&quot;2001.0000&quot;), core_sym::from_string(&quot;1.0000&quot;)))</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type>wasm_assert_msg(&quot;insufficient staked net bandwidth&quot;)</type>
        </param>
        <param>
          <type>unstake(&quot;alice1111111&quot;, &quot;<ref refid="eosio_8system__tests_8cpp_1aef6b2dcb723070a8a238efb5f4948950" kindref="member">bob111111111</ref>&quot;, core_sym::from_string(&quot;2001.0000&quot;), <ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(&quot;1.0000&quot;))</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="511" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="511" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a65b23012556c902cb53b14add8cffc1a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(wasm_assert_msg(&quot;insufficient staked cpu bandwidth&quot;), unstake(&quot;alice1111111&quot;, &quot;bob111111111&quot;, core_sym::from_string(&quot;1.0000&quot;), core_sym::from_string(&quot;101.0000&quot;)))</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type>wasm_assert_msg(&quot;insufficient staked cpu bandwidth&quot;)</type>
        </param>
        <param>
          <type>unstake(&quot;alice1111111&quot;, &quot;<ref refid="eosio_8system__tests_8cpp_1aef6b2dcb723070a8a238efb5f4948950" kindref="member">bob111111111</ref>&quot;, core_sym::from_string(&quot;1.0000&quot;), <ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(&quot;101.0000&quot;))</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="515" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="515" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a8d4d6c3e77957291223da7ddd6ee6815" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(success(), stake(&quot;alice1111111&quot;, core_sym::from_string(&quot;10.0000&quot;), core_sym::from_string(&quot;20.0000&quot;)))</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type>success()</type>
        </param>
        <param>
          <type>stake(&quot;alice1111111&quot;, core_sym::from_string(&quot;10.0000&quot;), <ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(&quot;20.0000&quot;))</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="539" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="539" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a1d8edc65ce6073558184bb325fc62729" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(core_sym::from_string(&quot;20.0000&quot;), total[&quot;net_weight&quot;].as&lt; asset &gt;())</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(&quot;20.0000&quot;)</type>
        </param>
        <param>
          <type>total.as&lt; asset &gt;</type>
          <array>()[&quot;net_weight&quot;]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="541" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="541" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a74c4f4c756348b3458adbe3623912832" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(core_sym::from_string(&quot;30.0000&quot;), total[&quot;cpu_weight&quot;].as&lt; asset &gt;())</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(&quot;30.0000&quot;)</type>
        </param>
        <param>
          <type>total.as&lt; asset &gt;</type>
          <array>()[&quot;cpu_weight&quot;]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="542" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="542" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1ac7485fae4383d857ac680e0636130b3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(success(), stake(&quot;alice1111111&quot;, core_sym::from_string(&quot;100.0000&quot;), core_sym::from_string(&quot;0.0000&quot;)))</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type>success()</type>
        </param>
        <param>
          <type>stake(&quot;alice1111111&quot;, core_sym::from_string(&quot;100.0000&quot;), <ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(&quot;0.0000&quot;))</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="545" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="545" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a8b3f17d4526bd3835a2810bb6fdc777c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(core_sym::from_string(&quot;120.0000&quot;), total[&quot;net_weight&quot;].as&lt; asset &gt;())</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(&quot;120.0000&quot;)</type>
        </param>
        <param>
          <type>total.as&lt; asset &gt;</type>
          <array>()[&quot;net_weight&quot;]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="547" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="547" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1ad83ee0f7f049d0875bc4029008611201" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(success(), stake(&quot;alice1111111&quot;, core_sym::from_string(&quot;0.0000&quot;), core_sym::from_string(&quot;200.0000&quot;)))</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type>success()</type>
        </param>
        <param>
          <type>stake(&quot;alice1111111&quot;, core_sym::from_string(&quot;0.0000&quot;), <ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(&quot;200.0000&quot;))</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="551" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="551" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a51d18dd7c795d2adf43c1b0c464bddfb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(core_sym::from_string(&quot;230.0000&quot;), total[&quot;cpu_weight&quot;].as&lt; asset &gt;())</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(&quot;230.0000&quot;)</type>
        </param>
        <param>
          <type>total.as&lt; asset &gt;</type>
          <array>()[&quot;cpu_weight&quot;]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="554" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="554" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a3fe7df1273df6564972b8ec701919d56" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(success(), unstake(&quot;alice1111111&quot;, core_sym::from_string(&quot;100.0000&quot;), core_sym::from_string(&quot;0.0000&quot;)))</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type>success()</type>
        </param>
        <param>
          <type>unstake(&quot;alice1111111&quot;, core_sym::from_string(&quot;100.0000&quot;), <ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(&quot;0.0000&quot;))</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="557" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="557" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a8b3b347ea06c1239554b9af0451d9655" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(success(), unstake(&quot;alice1111111&quot;, core_sym::from_string(&quot;0.0000&quot;), core_sym::from_string(&quot;200.0000&quot;)))</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type>success()</type>
        </param>
        <param>
          <type>unstake(&quot;alice1111111&quot;, core_sym::from_string(&quot;0.0000&quot;), <ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(&quot;200.0000&quot;))</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="563" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="563" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a92f6d63ff0838cbbf6da9355c1f0687f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(success(), stake(&quot;alice1111111&quot;, &quot;bob111111111&quot;, core_sym::from_string(&quot;100.0000&quot;), core_sym::from_string(&quot;50.0000&quot;)))</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type>success()</type>
        </param>
        <param>
          <type>stake(&quot;alice1111111&quot;, &quot;<ref refid="eosio_8system__tests_8cpp_1aef6b2dcb723070a8a238efb5f4948950" kindref="member">bob111111111</ref>&quot;, core_sym::from_string(&quot;100.0000&quot;), <ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(&quot;50.0000&quot;))</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="578" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="578" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1ac9225a19252cfb19f268535185cc7418" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(core_sym::from_string(&quot;310.0000&quot;), total[&quot;net_weight&quot;].as&lt; asset &gt;())</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(&quot;310.0000&quot;)</type>
        </param>
        <param>
          <type>total.as&lt; asset &gt;</type>
          <array>()[&quot;net_weight&quot;]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="581" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="581" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1abec03ed37bcd150b6d4c9a806d0ca91e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(core_sym::from_string(&quot;160.0000&quot;), total[&quot;cpu_weight&quot;].as&lt; asset &gt;())</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(&quot;160.0000&quot;)</type>
        </param>
        <param>
          <type>total.as&lt; asset &gt;</type>
          <array>()[&quot;cpu_weight&quot;]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="582" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="582" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a3bcb1cd71c8ced6b58d0d81a4d3f9bfc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>REQUIRE_MATCHING_OBJECT</definition>
        <argsstring>(voter(&quot;alice1111111&quot;, core_sym::from_string(&quot;450.0000&quot;)), get_voter_info(&quot;alice1111111&quot;))</argsstring>
        <name>REQUIRE_MATCHING_OBJECT</name>
        <param>
          <type>voter(&quot;alice1111111&quot;, core_sym::from_string(&quot;450.0000&quot;))</type>
        </param>
        <param>
          <type>get_voter_info(&quot;alice1111111&quot;)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="583" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="583" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1aa47cb9cbfbf77a499a4a4aaa08840bb3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(core_sym::from_string(&quot;550.0000&quot;), get_balance(&quot;alice1111111&quot;))</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(&quot;550.0000&quot;)</type>
        </param>
        <param>
          <type>get_balance(&quot;alice1111111&quot;)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="584" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="584" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a776602addf5bdddb37a9484432c62594" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(success(), unstake(&quot;alice1111111&quot;, &quot;bob111111111&quot;, core_sym::from_string(&quot;150.0000&quot;), core_sym::from_string(&quot;75.0000&quot;)))</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type>success()</type>
        </param>
        <param>
          <type>unstake(&quot;alice1111111&quot;, &quot;<ref refid="eosio_8system__tests_8cpp_1aef6b2dcb723070a8a238efb5f4948950" kindref="member">bob111111111</ref>&quot;, core_sym::from_string(&quot;150.0000&quot;), <ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(&quot;75.0000&quot;))</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="587" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="587" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1aec1ded93535cd30e75c79874bfa22a5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(core_sym::from_string(&quot;160.0000&quot;), total[&quot;net_weight&quot;].as&lt; asset &gt;())</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(&quot;160.0000&quot;)</type>
        </param>
        <param>
          <type>total.as&lt; asset &gt;</type>
          <array>()[&quot;net_weight&quot;]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="590" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="590" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a072cb6e5cf4db501885128e1b3353ef5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(core_sym::from_string(&quot;85.0000&quot;), total[&quot;cpu_weight&quot;].as&lt; asset &gt;())</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(&quot;85.0000&quot;)</type>
        </param>
        <param>
          <type>total.as&lt; asset &gt;</type>
          <array>()[&quot;cpu_weight&quot;]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="591" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="591" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1ab3f1f397b66a1cc0aba07d45284aa7cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>REQUIRE_MATCHING_OBJECT</definition>
        <argsstring>(voter(&quot;alice1111111&quot;, core_sym::from_string(&quot;225.0000&quot;)), get_voter_info(&quot;alice1111111&quot;))</argsstring>
        <name>REQUIRE_MATCHING_OBJECT</name>
        <param>
          <type>voter(&quot;alice1111111&quot;, core_sym::from_string(&quot;225.0000&quot;))</type>
        </param>
        <param>
          <type>get_voter_info(&quot;alice1111111&quot;)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="592" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="592" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a15f9ec954d0341327805294967ae63e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(success(), unstake(&quot;alice1111111&quot;, &quot;bob111111111&quot;, core_sym::from_string(&quot;50.0000&quot;), core_sym::from_string(&quot;25.0000&quot;)))</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type>success()</type>
        </param>
        <param>
          <type>unstake(&quot;alice1111111&quot;, &quot;<ref refid="eosio_8system__tests_8cpp_1aef6b2dcb723070a8a238efb5f4948950" kindref="member">bob111111111</ref>&quot;, core_sym::from_string(&quot;50.0000&quot;), <ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(&quot;25.0000&quot;))</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="595" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="595" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a4227e2a897cbe5ae27acd7988368bde1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(core_sym::from_string(&quot;110.0000&quot;), total[&quot;net_weight&quot;].as&lt; asset &gt;())</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(&quot;110.0000&quot;)</type>
        </param>
        <param>
          <type>total.as&lt; asset &gt;</type>
          <array>()[&quot;net_weight&quot;]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="597" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="597" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a7ee2c74f38ef70570ffca879592c19d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(core_sym::from_string(&quot;60.0000&quot;), total[&quot;cpu_weight&quot;].as&lt; asset &gt;())</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(&quot;60.0000&quot;)</type>
        </param>
        <param>
          <type>total.as&lt; asset &gt;</type>
          <array>()[&quot;cpu_weight&quot;]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="598" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="598" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a1466ccfc4a8bdeac28836deb7ca48448" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>REQUIRE_MATCHING_OBJECT</definition>
        <argsstring>(voter(&quot;alice1111111&quot;, core_sym::from_string(&quot;150.0000&quot;)), get_voter_info(&quot;alice1111111&quot;))</argsstring>
        <name>REQUIRE_MATCHING_OBJECT</name>
        <param>
          <type>voter(&quot;alice1111111&quot;, core_sym::from_string(&quot;150.0000&quot;))</type>
        </param>
        <param>
          <type>get_voter_info(&quot;alice1111111&quot;)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="599" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="599" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a52a002edb4f822a0c41c2cb2dfcc10eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>produce_block</definition>
        <argsstring>(fc::days(2))</argsstring>
        <name>produce_block</name>
        <param>
          <type>fc::days(2)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="602" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="602" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a9107afa95731f8ed99cc5a846e59e08b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>produce_block</definition>
        <argsstring>(fc::days(1))</argsstring>
        <name>produce_block</name>
        <param>
          <type>fc::days(1)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="605" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="605" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a27054ac776146fb3e533d1eb63aca066" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(core_sym::from_string(&quot;850.0000&quot;), get_balance(&quot;alice1111111&quot;))</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(&quot;850.0000&quot;)</type>
        </param>
        <param>
          <type>get_balance(&quot;alice1111111&quot;)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="607" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="607" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1ae94fd712b539efbffbf1242af96740e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(success(), stake(&quot;alice1111111&quot;, &quot;bob111111111&quot;, core_sym::from_string(&quot;50.0000&quot;), core_sym::from_string(&quot;50.0000&quot;)))</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type>success()</type>
        </param>
        <param>
          <type>stake(&quot;alice1111111&quot;, &quot;<ref refid="eosio_8system__tests_8cpp_1aef6b2dcb723070a8a238efb5f4948950" kindref="member">bob111111111</ref>&quot;, core_sym::from_string(&quot;50.0000&quot;), <ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(&quot;50.0000&quot;))</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="621" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="621" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1ac91cf8bc3dda69255e4e9b5ffeebaf92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(core_sym::from_string(&quot;60.0000&quot;), total[&quot;net_weight&quot;].as&lt; asset &gt;())</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(&quot;60.0000&quot;)</type>
        </param>
        <param>
          <type>total.as&lt; asset &gt;</type>
          <array>()[&quot;net_weight&quot;]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="624" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="624" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1abdcec947334d39fa5b7fc1d050fb848c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>REQUIRE_MATCHING_OBJECT</definition>
        <argsstring>(voter(&quot;alice1111111&quot;, core_sym::from_string(&quot;400.0000&quot;)), get_voter_info(&quot;alice1111111&quot;))</argsstring>
        <name>REQUIRE_MATCHING_OBJECT</name>
        <param>
          <type>voter(&quot;alice1111111&quot;, core_sym::from_string(&quot;400.0000&quot;))</type>
        </param>
        <param>
          <type>get_voter_info(&quot;alice1111111&quot;)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="627" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="627" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a00c6f65110f032c11c3dee12da51e894" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(core_sym::from_string(&quot;600.0000&quot;), get_balance(&quot;alice1111111&quot;))</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(&quot;600.0000&quot;)</type>
        </param>
        <param>
          <type>get_balance(&quot;alice1111111&quot;)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="628" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="628" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a0a9fe33fcd596f60909b50a512d334b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(success(), unstake(&quot;alice1111111&quot;, &quot;alice1111111&quot;, core_sym::from_string(&quot;100.0000&quot;), core_sym::from_string(&quot;50.0000&quot;)))</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type>success()</type>
        </param>
        <param>
          <type>unstake(&quot;alice1111111&quot;, &quot;<ref refid="eosio_8system__tests_8cpp_1ac6e52a5a32a4aaef83e152817af3c1e8" kindref="member">alice1111111</ref>&quot;, core_sym::from_string(&quot;100.0000&quot;), <ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(&quot;50.0000&quot;))</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="631" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="631" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a67ab2f1d3b7fb1221ab49f44253b2aa2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>REQUIRE_MATCHING_OBJECT</definition>
        <argsstring>(voter(&quot;alice1111111&quot;, core_sym::from_string(&quot;250.0000&quot;)), get_voter_info(&quot;alice1111111&quot;))</argsstring>
        <name>REQUIRE_MATCHING_OBJECT</name>
        <param>
          <type>voter(&quot;alice1111111&quot;, core_sym::from_string(&quot;250.0000&quot;))</type>
        </param>
        <param>
          <type>get_voter_info(&quot;alice1111111&quot;)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="635" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="635" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a769f7826b66c34cfbe03234e2ad9737b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(core_sym::from_string(&quot;100.0000&quot;), refund[&quot;net_amount&quot;].as&lt; asset &gt;())</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(&quot;100.0000&quot;)</type>
        </param>
        <param>
          <type>refund.as&lt; asset &gt;</type>
          <array>()[&quot;net_amount&quot;]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="638" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="638" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a5fde4339bafdb6c961bf440adba82a4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(core_sym::from_string(&quot;50.0000&quot;), refund[&quot;cpu_amount&quot;].as&lt; asset &gt;())</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(&quot;50.0000&quot;)</type>
        </param>
        <param>
          <type>refund.as&lt; asset &gt;</type>
          <array>()[&quot;cpu_amount&quot;]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="639" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="639" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a46a197e4ac1872bcb27b27abbeebbf6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>REQUIRE_MATCHING_OBJECT</definition>
        <argsstring>(voter(&quot;alice1111111&quot;, core_sym::from_string(&quot;350.0000&quot;)), get_voter_info(&quot;alice1111111&quot;))</argsstring>
        <name>REQUIRE_MATCHING_OBJECT</name>
        <param>
          <type>voter(&quot;alice1111111&quot;, core_sym::from_string(&quot;350.0000&quot;))</type>
        </param>
        <param>
          <type>get_voter_info(&quot;alice1111111&quot;)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="647" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="647" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a1287ee686ee924041d09a5417fc520ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(core_sym::from_string(&quot;500.0000&quot;), get_balance(&quot;alice1111111&quot;))</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(&quot;500.0000&quot;)</type>
        </param>
        <param>
          <type>get_balance(&quot;alice1111111&quot;)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="648" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="648" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a14e9b3f1e43f43accafa111abb824ac3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(success(), stake(&quot;alice1111111&quot;, &quot;alice1111111&quot;, core_sym::from_string(&quot;50.0000&quot;), core_sym::from_string(&quot;25.0000&quot;)))</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type>success()</type>
        </param>
        <param>
          <type>stake(&quot;alice1111111&quot;, &quot;<ref refid="eosio_8system__tests_8cpp_1ac6e52a5a32a4aaef83e152817af3c1e8" kindref="member">alice1111111</ref>&quot;, core_sym::from_string(&quot;50.0000&quot;), <ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(&quot;25.0000&quot;))</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="654" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="654" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1ac39e040b1ec0938c684c7a8d75ab05f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(core_sym::from_string(&quot;50.0000&quot;), refund[&quot;net_amount&quot;].as&lt; asset &gt;())</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(&quot;50.0000&quot;)</type>
        </param>
        <param>
          <type>refund.as&lt; asset &gt;</type>
          <array>()[&quot;net_amount&quot;]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="659" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="659" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a83a576875eea12cfac9807930611983d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(core_sym::from_string(&quot;25.0000&quot;), refund[&quot;cpu_amount&quot;].as&lt; asset &gt;())</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(&quot;25.0000&quot;)</type>
        </param>
        <param>
          <type>refund.as&lt; asset &gt;</type>
          <array>()[&quot;cpu_amount&quot;]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="660" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="660" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_TEST_REQUIRE</definition>
        <argsstring>(refund.is_null())</argsstring>
        <name>BOOST_TEST_REQUIRE</name>
        <param>
          <type>refund.</type>
          <declname>is_null</declname>
          <array>()</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="673" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="673" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1ab51259d6ea5683ca8c056367946b3a4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(core_sym::from_string(&quot;200.0000&quot;), refund[&quot;net_amount&quot;].as&lt; asset &gt;())</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(&quot;200.0000&quot;)</type>
        </param>
        <param>
          <type>refund.as&lt; asset &gt;</type>
          <array>()[&quot;net_amount&quot;]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="684" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="684" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1ab6269dc47dfd8b38bbb49479ca9cc097" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(core_sym::from_string(&quot;100.0000&quot;), refund[&quot;cpu_amount&quot;].as&lt; asset &gt;())</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(&quot;100.0000&quot;)</type>
        </param>
        <param>
          <type>refund.as&lt; asset &gt;</type>
          <array>()[&quot;cpu_amount&quot;]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="685" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="685" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1ab23107fd1e9143cb2844fb9f07dbbcc3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(success(), stake(&quot;alice1111111&quot;, &quot;alice1111111&quot;, core_sym::from_string(&quot;300.0000&quot;), core_sym::from_string(&quot;200.0000&quot;)))</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type>success()</type>
        </param>
        <param>
          <type>stake(&quot;alice1111111&quot;, &quot;<ref refid="eosio_8system__tests_8cpp_1ac6e52a5a32a4aaef83e152817af3c1e8" kindref="member">alice1111111</ref>&quot;, core_sym::from_string(&quot;300.0000&quot;), <ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(&quot;200.0000&quot;))</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="688" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="688" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a625e37010ed82b894ad39c17b6d327d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>REQUIRE_MATCHING_OBJECT</definition>
        <argsstring>(voter(&quot;alice1111111&quot;, core_sym::from_string(&quot;700.0000&quot;)), get_voter_info(&quot;alice1111111&quot;))</argsstring>
        <name>REQUIRE_MATCHING_OBJECT</name>
        <param>
          <type>voter(&quot;alice1111111&quot;, core_sym::from_string(&quot;700.0000&quot;))</type>
        </param>
        <param>
          <type>get_voter_info(&quot;alice1111111&quot;)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="692" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="692" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1aac870e9239a653f20efe048ce9cf9289" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(core_sym::from_string(&quot;300.0000&quot;), get_balance(&quot;alice1111111&quot;))</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(&quot;300.0000&quot;)</type>
        </param>
        <param>
          <type>get_balance(&quot;alice1111111&quot;)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="696" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="696" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a72b4c21b12e90a63fd75f09e13fb6123" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(success(), unstake(&quot;alice1111111&quot;, core_sym::from_string(&quot;200.0000&quot;), core_sym::from_string(&quot;100.0000&quot;)))</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type>success()</type>
        </param>
        <param>
          <type>unstake(&quot;alice1111111&quot;, core_sym::from_string(&quot;200.0000&quot;), <ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(&quot;100.0000&quot;))</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="715" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="715" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a386611c60c400df4abf7876cda83dbdd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(core_sym::from_string(&quot;400.0000&quot;), get_balance(&quot;alice1111111&quot;))</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(&quot;400.0000&quot;)</type>
        </param>
        <param>
          <type>get_balance(&quot;alice1111111&quot;)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="727" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="727" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a8eaa4396a652eb52040ad6c0c75bd508" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>alice1111111</definition>
        <argsstring>(&quot;producer_key&quot;, key)(&quot;url&quot;</argsstring>
        <name>alice1111111</name>
        <param>
          <type>&quot;producer_key&quot;</type>
        </param>
        <param>
          <type><ref refid="eosio_8system__tests_8cpp_1a0bbff253b45c1c6e04cc32309feb55a1" kindref="member">key</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="742" column="58"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1ae95541bdcd7fe28e751d1936dc79f933" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(&quot;alice1111111&quot;, info[&quot;owner&quot;].as_string())</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type>&quot;alice1111111&quot;</type>
        </param>
        <param>
          <type>info.</type>
          <declname>as_string</declname>
          <array>()[&quot;owner&quot;]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="750" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="750" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a5425b8568b4f3f3d96eb0dbc6398de81" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(0, info[&quot;total_votes&quot;].as_double())</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type>0</type>
        </param>
        <param>
          <type>info.</type>
          <declname>as_double</declname>
          <array>()[&quot;total_votes&quot;]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="751" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="751" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a38d915dbce39a9b9c602e85995c9b777" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(&quot;http://block.one&quot;, info[&quot;url&quot;].as_string())</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type>&quot;http://block.one&quot;</type>
        </param>
        <param>
          <type>info.</type>
          <declname>as_string</declname>
          <array>()[&quot;url&quot;]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="752" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="752" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1aabebabe812e1430ae681b2976c4e0005" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(key, fc::crypto::public_key(info[&quot;producer_key&quot;].as_string()))</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type><ref refid="eosio_8system__tests_8cpp_1a0bbff253b45c1c6e04cc32309feb55a1" kindref="member">key</ref></type>
        </param>
        <param>
          <type>fc::crypto::public_key(<ref refid="eosio_8system__tests_8cpp_1a0ecaa1862f168e8a31db8236916a811e" kindref="member">info</ref>[&quot;producer_key&quot;].as_string())</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="765" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="765" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1afdd8d7367ff1b1335886db311c8f871d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(&quot;http://block.two&quot;, info[&quot;url&quot;].as_string())</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type>&quot;http://block.two&quot;</type>
        </param>
        <param>
          <type>info.</type>
          <declname>as_string</declname>
          <array>()[&quot;url&quot;]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="766" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="766" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a009c3d6a2334077ed1b7ecb49db50fa3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(1, info[&quot;location&quot;].as_int64())</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type>1</type>
        </param>
        <param>
          <type>info.</type>
          <declname>as_int64</declname>
          <array>()[&quot;location&quot;]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="767" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="767" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1af46d7515f7d6a8eedf7742f911b03e4d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>alice1111111</definition>
        <argsstring>(&quot;producer_key&quot;, key2)(&quot;url&quot;</argsstring>
        <name>alice1111111</name>
        <param>
          <type>&quot;producer_key&quot;</type>
        </param>
        <param>
          <type><ref refid="eosio_8system__tests_8cpp_1adca31b96231ede220d4c0eb10e553304" kindref="member">key2</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="771" column="58"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a7bf4fba1cba14b815facc5185ff2169b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(key2, fc::crypto::public_key(info[&quot;producer_key&quot;].as_string()))</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type><ref refid="eosio_8system__tests_8cpp_1adca31b96231ede220d4c0eb10e553304" kindref="member">key2</ref></type>
        </param>
        <param>
          <type>fc::crypto::public_key(<ref refid="eosio_8system__tests_8cpp_1a0ecaa1862f168e8a31db8236916a811e" kindref="member">info</ref>[&quot;producer_key&quot;].as_string())</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="779" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="779" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a86e0fe029a0a30f00dab6847c7cd068d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(2, info[&quot;location&quot;].as_int64())</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type>2</type>
        </param>
        <param>
          <type>info.</type>
          <declname>as_int64</declname>
          <array>()[&quot;location&quot;]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="781" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="781" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a57503514b304c289fb346e9d3e6b1ad7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(fc::crypto::public_key(), fc::crypto::public_key(info[&quot;producer_key&quot;].as_string()))</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type>fc::crypto::public_key()</type>
        </param>
        <param>
          <type>fc::crypto::public_key(<ref refid="eosio_8system__tests_8cpp_1a0ecaa1862f168e8a31db8236916a811e" kindref="member">info</ref>[&quot;producer_key&quot;].as_string())</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="790" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="790" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a7e09b097bc578b0a70ade1c7c3df050d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(wasm_assert_msg(&quot;producer not found&quot;), push_action(&quot;bob111111111&quot;_n, &quot;unregprod&quot;_n, mvo()(&quot;producer&quot;, &quot;bob111111111&quot;)))</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type>wasm_assert_msg(&quot;producer not found&quot;)</type>
        </param>
        <param>
          <type><ref refid="eosio_8msig__tests_8cpp_1a0a4c6f926e5c8b4f845b15a3269c6745" kindref="member">push_action</ref>(&quot;bob111111111&quot;_n, &quot;unregprod&quot;_n, <ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()(&quot;producer&quot;, &quot;<ref refid="eosio_8system__tests_8cpp_1aef6b2dcb723070a8a238efb5f4948950" kindref="member">bob111111111</ref>&quot;))</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="797" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="797" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a0fbc44cf1a1a155bcb1eb52948be526e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(control-&gt;active_producers().version, 0u)</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type>control-&gt;active_producers().</type>
          <declname>version</declname>
        </param>
        <param>
          <type>0u</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="809" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="809" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a318d47d8de374d8040e1881836a82589" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>issue_and_transfer</definition>
        <argsstring>(&quot;alice1111111&quot;_n, core_sym::from_string(&quot;200000000.0000&quot;), config::system_account_name)</argsstring>
        <name>issue_and_transfer</name>
        <param>
          <type>&quot;alice1111111&quot;</type>
          <declname>_n</declname>
        </param>
        <param>
          <type><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(&quot;200000000.0000&quot;)</type>
        </param>
        <param>
          <type>config::system_account_name</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="811" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="811" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a0b54ff1e44af15d41566ce36a391a1c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="eosio_8system__tests_8cpp_1af71c16457d70c54eb0836ce802b408a1" kindref="member">alice_signing_authority</ref> <ref refid="eosio_8system__tests_8cpp_1a48ef835203ce56cc7f9a5763ff647087" kindref="member">keys</ref></type>
        <definition>alice_signing_authority keys push_back</definition>
        <argsstring>({.key=get_public_key(&quot;alice1111111&quot;_n, &quot;bs1&quot;),.weight=1})</argsstring>
        <name>push_back</name>
        <param>
          <type>{.<ref refid="eosio_8system__tests_8cpp_1a0bbff253b45c1c6e04cc32309feb55a1" kindref="member">key</ref>=get_public_key(&quot;alice1111111&quot;_n, &quot;bs1&quot;),.weight=1}</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="814" column="31" declfile="system/tests/eosio.system_tests.cpp" declline="814" declcolumn="31"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a9c6420019dd660bcebd494562d4d55c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="eosio_8system__tests_8cpp_1af71c16457d70c54eb0836ce802b408a1" kindref="member">alice_signing_authority</ref> <ref refid="eosio_8system__tests_8cpp_1a48ef835203ce56cc7f9a5763ff647087" kindref="member">keys</ref></type>
        <definition>alice_signing_authority keys push_back</definition>
        <argsstring>({.key=get_public_key(&quot;alice1111111&quot;_n, &quot;bs2&quot;),.weight=1})</argsstring>
        <name>push_back</name>
        <param>
          <type>{.<ref refid="eosio_8system__tests_8cpp_1a0bbff253b45c1c6e04cc32309feb55a1" kindref="member">key</ref>=get_public_key(&quot;alice1111111&quot;_n, &quot;bs2&quot;),.weight=1}</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="815" column="31" declfile="system/tests/eosio.system_tests.cpp" declline="815" declcolumn="31"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a569017e2abee361c4d79f1b0b1021b3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>alice1111111</definition>
        <argsstring>(&quot;producer_authority&quot;, alice_producer_authority.get_abi_variant()[&quot;authority&quot;])(&quot;url&quot;</argsstring>
        <name>alice1111111</name>
        <param>
          <type>&quot;producer_authority&quot;</type>
        </param>
        <param>
          <type>alice_producer_authority.</type>
          <declname>get_abi_variant</declname>
          <array>()[&quot;authority&quot;]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="818" column="58"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a0b5f844bea17ee74e34a210da20efa16" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>http</type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(success(), stake(&quot;alice1111111&quot;_n, core_sym::from_string(&quot;100000000.0000&quot;), core_sym::from_string(&quot;100000000.0000&quot;)))</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type>success()</type>
        </param>
        <param>
          <type>stake(&quot;alice1111111&quot;_n, <ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(&quot;100000000.0000&quot;), <ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(&quot;100000000.0000&quot;))</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="824" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="824" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1ad86e1f6bd8cbad502604d6bd94654467" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(success(), vote(&quot;alice1111111&quot;_n, { &quot;alice1111111&quot;_n }))</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type>success()</type>
        </param>
        <param>
          <type>vote(&quot;alice1111111&quot;_n, { &quot;alice1111111&quot;_n })</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="825" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="825" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1ad3d1d076ede7260222056deb697c01c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>block_signing_private_keys</type>
        <definition>block_signing_private_keys emplace</definition>
        <argsstring>(get_public_key(&quot;alice1111111&quot;_n, &quot;bs1&quot;), get_private_key(&quot;alice1111111&quot;_n, &quot;bs1&quot;))</argsstring>
        <name>emplace</name>
        <param>
          <type>get_public_key(&quot;alice1111111&quot;_n, &quot;bs1&quot;)</type>
        </param>
        <param>
          <type>get_private_key(&quot;alice1111111&quot;_n, &quot;bs1&quot;)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="827" column="30" declfile="system/tests/eosio.system_tests.cpp" declline="827" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1ac09af70af3fcac6225b1ace4ae13f4df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wdump</definition>
        <argsstring>((alice_prod_info))</argsstring>
        <name>wdump</name>
        <param>
          <type>(<ref refid="eosio_8system__tests_8cpp_1ac8a8cc1d7e9eaa611ce8d6b626c74114" kindref="member">alice_prod_info</ref>)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="830" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="830" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1ab07a5827709f07aaca2029320db6d8b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(alice_prod_info[&quot;is_active&quot;], true)</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type><ref refid="eosio_8system__tests_8cpp_1ac8a8cc1d7e9eaa611ce8d6b626c74114" kindref="member">alice_prod_info</ref></type>
          <array>[&quot;is_active&quot;]</array>
        </param>
        <param>
          <type>true</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="831" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="831" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1abd47bbc7b84947d84c8f8cf805c916b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>produce_block</definition>
        <argsstring>()</argsstring>
        <name>produce_block</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="833" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="833" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a4c7c155ecef9805951c3a16a0335c73f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>produce_block</definition>
        <argsstring>(fc::minutes(2))</argsstring>
        <name>produce_block</name>
        <param>
          <type>fc::minutes(2)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="834" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="834" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a89420b9accc777683e61e0b899aa75f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>produce_blocks</definition>
        <argsstring>(2)</argsstring>
        <name>produce_blocks</name>
        <param>
          <type>2</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="835" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="835" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a9d18dd41c99bec42f1fdc25abdb38127" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(control-&gt;active_producers().version, 1u)</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type>control-&gt;active_producers().</type>
          <declname>version</declname>
        </param>
        <param>
          <type>1u</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="836" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="836" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a60b265f96c10c347388f32a55ec4614c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(control-&gt;pending_block_producer(), &quot;alice1111111&quot;_n)</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type>control-&gt;</type>
          <declname>pending_block_producer</declname>
          <array>()</array>
        </param>
        <param>
          <type>&quot;alice1111111&quot;</type>
          <declname>_n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="838" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="838" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a026ce83eebdaaeefe1351c40fa2347ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(error(&quot;assertion failure with message: invalid producer authority&quot;), push_action(&quot;alice1111111&quot;_n, &quot;regproducer2&quot;_n, mvo()(&quot;producer&quot;, &quot;alice1111111&quot;)(&quot;producer_authority&quot;, alice_producer_authority.get_abi_variant()[&quot;authority&quot;])(&quot;url&quot;, &quot;http://block.one&quot;)(&quot;location&quot;, 0)))</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type>error(&quot;assertion failure with message: invalid <ref refid="eosio_8system__tests_8cpp_1a07b7f59f003c8581fca9c1ef6d7fac33" kindref="member">producer</ref> <ref refid="structauthority" kindref="compound">authority</ref>&quot;)</type>
        </param>
        <param>
          <type><ref refid="eosio_8msig__tests_8cpp_1a0a4c6f926e5c8b4f845b15a3269c6745" kindref="member">push_action</ref>(&quot;alice1111111&quot;_n, &quot;regproducer2&quot;_n, <ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()(&quot;producer&quot;, &quot;<ref refid="eosio_8system__tests_8cpp_1ac6e52a5a32a4aaef83e152817af3c1e8" kindref="member">alice1111111</ref>&quot;)(&quot;producer_authority&quot;, alice_producer_authority.get_abi_variant()[&quot;authority&quot;])(&quot;url&quot;, &quot;http://block.one&quot;)(&quot;<ref refid="eosio_8system__tests_8cpp_1a5f269c22e6d9d32b0b0ad7e6166854df" kindref="member">location</ref>&quot;, 0))</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="845" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="845" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a864f1fcb8e94d3cbdaecfb3f7fc81b03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(success(), push_action(&quot;alice1111111&quot;_n, &quot;regproducer2&quot;_n, mvo()(&quot;producer&quot;, &quot;alice1111111&quot;)(&quot;producer_authority&quot;, alice_producer_authority.get_abi_variant()[&quot;authority&quot;])(&quot;url&quot;, &quot;http://block.one&quot;)(&quot;location&quot;, 0)))</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type>success()</type>
        </param>
        <param>
          <type><ref refid="eosio_8msig__tests_8cpp_1a0a4c6f926e5c8b4f845b15a3269c6745" kindref="member">push_action</ref>(&quot;alice1111111&quot;_n, &quot;regproducer2&quot;_n, <ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()(&quot;producer&quot;, &quot;<ref refid="eosio_8system__tests_8cpp_1ac6e52a5a32a4aaef83e152817af3c1e8" kindref="member">alice1111111</ref>&quot;)(&quot;producer_authority&quot;, alice_producer_authority.get_abi_variant()[&quot;authority&quot;])(&quot;url&quot;, &quot;http://block.one&quot;)(&quot;<ref refid="eosio_8system__tests_8cpp_1a5f269c22e6d9d32b0b0ad7e6166854df" kindref="member">location</ref>&quot;, 0))</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="882" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="882" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1aada8b30a2f984a45e213403dd37290c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(control-&gt;active_producers().version, 2u)</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type>control-&gt;active_producers().</type>
          <declname>version</declname>
        </param>
        <param>
          <type>2u</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="894" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="894" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a9ab9c9876d69d1830bb37780ca093ff6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>set_code</definition>
        <argsstring>(config::system_account_name, contracts::util::system_wasm_v1_8())</argsstring>
        <name>set_code</name>
        <param>
          <type>config::system_account_name</type>
        </param>
        <param>
          <type>contracts::util::system_wasm_v1_8()</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="906" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="906" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a0f8cd25d26c0286f6b3a6294bc146f51" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>set_abi</definition>
        <argsstring>(config::system_account_name, contracts::util::system_abi_v1_8().data())</argsstring>
        <name>set_abi</name>
        <param>
          <type>config::system_account_name</type>
        </param>
        <param>
          <type>contracts::util::system_abi_v1_8().data()</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="907" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="907" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1aff894e3959977eddf2b290c44da71ac5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>alice1111111</definition>
        <argsstring>(&quot;producer_key&quot;, get_public_key(&quot;alice1111111&quot;_n, &quot;active&quot;))(&quot;url&quot;</argsstring>
        <name>alice1111111</name>
        <param>
          <type>&quot;producer_key&quot;</type>
        </param>
        <param>
          <type>get_public_key(&quot;alice1111111&quot;_n, &quot;active&quot;)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="911" column="58"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1ade8e16c6b808805e019982c2fd005d22" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>set_code</definition>
        <argsstring>(config::system_account_name, contracts::system_wasm())</argsstring>
        <name>set_code</name>
        <param>
          <type>config::system_account_name</type>
        </param>
        <param>
          <type>contracts::system_wasm()</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="938" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="938" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a9d475dc600ed9e376574278286589937" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>set_abi</definition>
        <argsstring>(config::system_account_name, contracts::system_abi().data())</argsstring>
        <name>set_abi</name>
        <param>
          <type>config::system_account_name</type>
        </param>
        <param>
          <type>contracts::system_abi().data()</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="939" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="939" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1adf635d0d1efa7590176faa9098e1d961" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(alice_prod_info2[&quot;is_active&quot;], true)</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type><ref refid="eosio_8system__tests_8cpp_1affb0f5db65d70439a6a6ef2f1c0c3b2d" kindref="member">alice_prod_info2</ref></type>
          <array>[&quot;is_active&quot;]</array>
        </param>
        <param>
          <type>true</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="944" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="944" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1ae00c608b8a40d03b8b8dd2daac50185b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE</definition>
        <argsstring>(schedule_update1&lt; schedule_update2)</argsstring>
        <name>BOOST_REQUIRE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="948" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="948" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a4ee2d1bad8d3238fe63a78bff6943bcd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_CHECK_EQUAL</definition>
        <argsstring>(alice_initial_ram_usage, alice_ram_usage)</argsstring>
        <name>BOOST_CHECK_EQUAL</name>
        <param>
          <type><ref refid="eosio_8system__tests_8cpp_1ae9dce8c60cffef86f2417d579ab5d997" kindref="member">alice_initial_ram_usage</ref></type>
        </param>
        <param>
          <type><ref refid="eosio_8system__tests_8cpp_1a24d0cbbddeeee8a3afa3b12468449349" kindref="member">alice_ram_usage</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="958" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="958" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a020e67667b720177b3b9f825306965f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>if</definition>
        <argsstring>(alice_prod_info3.get_object().contains(&quot;producer_authority&quot;))</argsstring>
        <name>if</name>
        <param>
          <type>alice_prod_info3.</type>
          <declname>get_object</declname>
          <array>).contains(&quot;producer_authority&quot;</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="961" column="4" bodyfile="system/tests/eosio.system_tests.cpp" bodystart="961" bodyend="963"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a03ec5bf1334c2d85bbbfdd1adf5984e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_CHECK</definition>
        <argsstring>(schedule_update2&lt; schedule_update3)</argsstring>
        <name>BOOST_CHECK</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="978" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="978" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a185e7d9bcd0ff59f55dcfea44ae77d31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(alice_prod_info4[&quot;is_active&quot;], true)</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type><ref refid="eosio_8system__tests_8cpp_1a04706323c4ac3a496c5b567d3a1b21a4" kindref="member">alice_prod_info4</ref></type>
          <array>[&quot;is_active&quot;]</array>
        </param>
        <param>
          <type>true</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="996" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="996" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a7dccc54972faa18fb5308ce79bd5e028" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(success(), stake(&quot;bob111111111&quot;, core_sym::from_string(&quot;13.0000&quot;), core_sym::from_string(&quot;0.5791&quot;)))</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type>success()</type>
        </param>
        <param>
          <type>stake(&quot;bob111111111&quot;, core_sym::from_string(&quot;13.0000&quot;), <ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(&quot;0.5791&quot;))</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="1123" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="1123" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a23fa59d3d3811d2b602be9f81a820245" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>REQUIRE_MATCHING_OBJECT</definition>
        <argsstring>(voter(&quot;bob111111111&quot;, core_sym::from_string(&quot;13.5791&quot;)), get_voter_info(&quot;bob111111111&quot;))</argsstring>
        <name>REQUIRE_MATCHING_OBJECT</name>
        <param>
          <type>voter(&quot;bob111111111&quot;, core_sym::from_string(&quot;13.5791&quot;))</type>
        </param>
        <param>
          <type>get_voter_info(&quot;bob111111111&quot;)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="1124" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="1124" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1aeb0d6a0a9327066d2d3948a1a9feb58d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(wasm_assert_msg(&quot;attempt to vote for too many producers&quot;), vote(&quot;bob111111111&quot;_n, vector&lt; account_name &gt;(31, &quot;alice1111111&quot;_n)))</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type>wasm_assert_msg(&quot;attempt to vote <ref refid="eosio_8system__blockinfo__tests_8cpp_1a33208b97b72a5c9529da7213df41fb6a" kindref="member">for</ref> too many producers&quot;)</type>
        </param>
        <param>
          <type>vote(&quot;bob111111111&quot;_n, vector&lt; account_name &gt;(31, &quot;alice1111111&quot;_n))</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="1127" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="1127" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a7b5720a7c9f4349b0459fdea6667af7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(success(), stake(&quot;bob111111111&quot;, core_sym::from_string(&quot;50.0000&quot;), core_sym::from_string(&quot;50.0000&quot;)))</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type>success()</type>
        </param>
        <param>
          <type>stake(&quot;bob111111111&quot;, core_sym::from_string(&quot;50.0000&quot;), <ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(&quot;50.0000&quot;))</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="1135" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="1135" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a0319375e570e1a80983c9f313b155c52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>REQUIRE_MATCHING_OBJECT</definition>
        <argsstring>(voter(&quot;bob111111111&quot;, core_sym::from_string(&quot;100.0000&quot;)), get_voter_info(&quot;bob111111111&quot;))</argsstring>
        <name>REQUIRE_MATCHING_OBJECT</name>
        <param>
          <type>voter(&quot;bob111111111&quot;, core_sym::from_string(&quot;100.0000&quot;))</type>
        </param>
        <param>
          <type>get_voter_info(&quot;bob111111111&quot;)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="1136" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="1136" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1ab5c0c1ce10021a302746c864d080353c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(wasm_assert_msg(&quot;producer votes must be unique and sorted&quot;), vote(&quot;bob111111111&quot;_n, vector&lt; account_name &gt;(30, &quot;alice1111111&quot;_n)))</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type>wasm_assert_msg(&quot;producer votes must be unique and sorted&quot;)</type>
        </param>
        <param>
          <type>vote(&quot;bob111111111&quot;_n, vector&lt; account_name &gt;(30, &quot;alice1111111&quot;_n))</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="1150" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="1150" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a46a0e8345dce5338e5f387638d7813b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_TEST_REQUIRE</definition>
        <argsstring>(0==prod[&quot;total_votes&quot;].as_double())</argsstring>
        <name>BOOST_TEST_REQUIRE</name>
        <param>
          <type>0</type>
          <defval>=<ref refid="eosio_8system__tests_8cpp_1a5a03a10daf5c20c6e9a103d00fcd085f" kindref="member">prod</ref>[&quot;total_votes&quot;].as_double()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="1154" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="1154" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a57e48b79f6a75df88ce0f6f6e0eee44e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>REQUIRE_MATCHING_OBJECT</definition>
        <argsstring>(proxy(&quot;alice1111111&quot;_n), get_voter_info(&quot;alice1111111&quot;))</argsstring>
        <name>REQUIRE_MATCHING_OBJECT</name>
        <param>
          <type><ref refid="eosio_8system__tests_8cpp_1ac440180674d61e14dbbe38c3d10269d3" kindref="member">proxy</ref>(&quot;alice1111111&quot;_n)</type>
        </param>
        <param>
          <type>get_voter_info(&quot;alice1111111&quot;)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="1287" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="1287" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1acb513d10b877120be8a8a87f58d1c3cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>alice1111111</definition>
        <argsstring>(&quot;isproxy&quot;, false)))</argsstring>
        <name>alice1111111</name>
        <param>
          <type>&quot;isproxy&quot;</type>
        </param>
        <param>
          <type>false</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="1291" column="55" declfile="system/tests/eosio.system_tests.cpp" declline="1291" declcolumn="55"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1ae4398eea1bcc5fc85e4961e4942199d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>REQUIRE_MATCHING_OBJECT</definition>
        <argsstring>(voter(&quot;alice1111111&quot;), get_voter_info(&quot;alice1111111&quot;))</argsstring>
        <name>REQUIRE_MATCHING_OBJECT</name>
        <param>
          <type>voter(&quot;alice1111111&quot;)</type>
        </param>
        <param>
          <type>get_voter_info(&quot;alice1111111&quot;)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="1295" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="1295" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1ac6ee3b526c4bf4154363dbe47b7f1464" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>issue_and_transfer</definition>
        <argsstring>(&quot;bob111111111&quot;, core_sym::from_string(&quot;1000.0000&quot;), config::system_account_name)</argsstring>
        <name>issue_and_transfer</name>
        <param>
          <type>&quot;bob111111111&quot;</type>
        </param>
        <param>
          <type><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(&quot;1000.0000&quot;)</type>
        </param>
        <param>
          <type>config::system_account_name</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="1298" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="1298" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1ac8659eda2309e55397c31c7c9f09e220" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(success(), stake(&quot;bob111111111&quot;, core_sym::from_string(&quot;200.0002&quot;), core_sym::from_string(&quot;100.0001&quot;)))</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type>success()</type>
        </param>
        <param>
          <type>stake(&quot;bob111111111&quot;, core_sym::from_string(&quot;200.0002&quot;), <ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(&quot;100.0001&quot;))</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="1299" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="1299" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a993367624a00ac693ad2c26d0ce433e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>bob111111111</definition>
        <argsstring>(&quot;isproxy&quot;, true)))</argsstring>
        <name>bob111111111</name>
        <param>
          <type>&quot;isproxy&quot;</type>
        </param>
        <param>
          <type>true</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="1301" column="55" declfile="system/tests/eosio.system_tests.cpp" declline="1301" declcolumn="55"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1aac27dc4df62452d2e897bd5f18349956" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>REQUIRE_MATCHING_OBJECT</definition>
        <argsstring>(proxy(&quot;bob111111111&quot;_n)(&quot;staked&quot;, 3000003), get_voter_info(&quot;bob111111111&quot;))</argsstring>
        <name>REQUIRE_MATCHING_OBJECT</name>
        <param>
          <type><ref refid="eosio_8system__tests_8cpp_1ac440180674d61e14dbbe38c3d10269d3" kindref="member">proxy</ref>(&quot;bob111111111&quot;_n)(&quot;staked&quot;, 3000003)</type>
        </param>
        <param>
          <type>get_voter_info(&quot;bob111111111&quot;)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="1305" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="1305" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1aef6b2dcb723070a8a238efb5f4948950" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>bob111111111</definition>
        <argsstring>(&quot;isproxy&quot;, false)))</argsstring>
        <name>bob111111111</name>
        <param>
          <type>&quot;isproxy&quot;</type>
        </param>
        <param>
          <type>false</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="1308" column="55" declfile="system/tests/eosio.system_tests.cpp" declline="1308" declcolumn="55"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a9bd01b84c148c9abdb58d69a3896b0bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>REQUIRE_MATCHING_OBJECT</definition>
        <argsstring>(voter(&quot;bob111111111&quot;, core_sym::from_string(&quot;300.0003&quot;)), get_voter_info(&quot;bob111111111&quot;))</argsstring>
        <name>REQUIRE_MATCHING_OBJECT</name>
        <param>
          <type>voter(&quot;bob111111111&quot;, core_sym::from_string(&quot;300.0003&quot;))</type>
        </param>
        <param>
          <type>get_voter_info(&quot;bob111111111&quot;)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="1312" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="1312" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1ae95d2c364e04e2721f113a658ef748a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>carol1111111</definition>
        <argsstring>(&quot;isproxy&quot;, true)))</argsstring>
        <name>carol1111111</name>
        <param>
          <type>&quot;isproxy&quot;</type>
        </param>
        <param>
          <type>true</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="1316" column="55" declfile="system/tests/eosio.system_tests.cpp" declline="1316" declcolumn="55"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a19a2e7484d767323dd4792a7958b89bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(success(), stake(&quot;carol1111111&quot;, core_sym::from_string(&quot;246.0002&quot;), core_sym::from_string(&quot;531.0001&quot;)))</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type>success()</type>
        </param>
        <param>
          <type>stake(&quot;carol1111111&quot;, core_sym::from_string(&quot;246.0002&quot;), <ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(&quot;531.0001&quot;))</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="1321" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="1321" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a00fd3e2ed464d814dea3620a06b6bb4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>REQUIRE_MATCHING_OBJECT</definition>
        <argsstring>(proxy(&quot;carol1111111&quot;_n)(&quot;staked&quot;, 7770003), get_voter_info(&quot;carol1111111&quot;))</argsstring>
        <name>REQUIRE_MATCHING_OBJECT</name>
        <param>
          <type><ref refid="eosio_8system__tests_8cpp_1ac440180674d61e14dbbe38c3d10269d3" kindref="member">proxy</ref>(&quot;carol1111111&quot;_n)(&quot;staked&quot;, 7770003)</type>
        </param>
        <param>
          <type>get_voter_info(&quot;carol1111111&quot;)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="1323" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="1323" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a1fcc59471afa6dabcd3e54cb16c2539f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>carol1111111</definition>
        <argsstring>(&quot;isproxy&quot;, false)))</argsstring>
        <name>carol1111111</name>
        <param>
          <type>&quot;isproxy&quot;</type>
        </param>
        <param>
          <type>false</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="1327" column="56" declfile="system/tests/eosio.system_tests.cpp" declline="1327" declcolumn="56"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a949b343137c678372c9d23c0a2887d6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>REQUIRE_MATCHING_OBJECT</definition>
        <argsstring>(voter(&quot;carol1111111&quot;, core_sym::from_string(&quot;777.0003&quot;)), get_voter_info(&quot;carol1111111&quot;))</argsstring>
        <name>REQUIRE_MATCHING_OBJECT</name>
        <param>
          <type>voter(&quot;carol1111111&quot;, core_sym::from_string(&quot;777.0003&quot;))</type>
        </param>
        <param>
          <type>get_voter_info(&quot;carol1111111&quot;)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="1331" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="1331" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1ac6e52a5a32a4aaef83e152817af3c1e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>alice1111111</definition>
        <argsstring>(&quot;isproxy&quot;, true)))</argsstring>
        <name>alice1111111</name>
        <param>
          <type>&quot;isproxy&quot;</type>
        </param>
        <param>
          <type>true</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="1340" column="55" declfile="system/tests/eosio.system_tests.cpp" declline="1340" declcolumn="55"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1ad95ab974abde7afc6002feb22f4538a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(success(), stake(&quot;alice1111111&quot;, core_sym::from_string(&quot;100.0000&quot;), core_sym::from_string(&quot;50.0000&quot;)))</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type>success()</type>
        </param>
        <param>
          <type>stake(&quot;alice1111111&quot;, core_sym::from_string(&quot;100.0000&quot;), <ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(&quot;50.0000&quot;))</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="1348" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="1348" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1afd201d4d4b8b15ac5e87fdff4e529237" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>REQUIRE_MATCHING_OBJECT</definition>
        <argsstring>(proxy(&quot;alice1111111&quot;_n)(&quot;staked&quot;, 1500000), get_voter_info(&quot;alice1111111&quot;))</argsstring>
        <name>REQUIRE_MATCHING_OBJECT</name>
        <param>
          <type><ref refid="eosio_8system__tests_8cpp_1ac440180674d61e14dbbe38c3d10269d3" kindref="member">proxy</ref>(&quot;alice1111111&quot;_n)(&quot;staked&quot;, 1500000)</type>
        </param>
        <param>
          <type>get_voter_info(&quot;alice1111111&quot;)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="1350" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="1350" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a5a7b6d9ef2e304602875363c34a9cb12" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(success(), stake(&quot;alice1111111&quot;, core_sym::from_string(&quot;30.0000&quot;), core_sym::from_string(&quot;20.0000&quot;)))</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type>success()</type>
        </param>
        <param>
          <type>stake(&quot;alice1111111&quot;, core_sym::from_string(&quot;30.0000&quot;), <ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(&quot;20.0000&quot;))</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="1353" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="1353" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a2faff70b2e83f3f4e81d28f922d3c11d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>REQUIRE_MATCHING_OBJECT</definition>
        <argsstring>(proxy(&quot;alice1111111&quot;_n)(&quot;staked&quot;, 2000000), get_voter_info(&quot;alice1111111&quot;))</argsstring>
        <name>REQUIRE_MATCHING_OBJECT</name>
        <param>
          <type><ref refid="eosio_8system__tests_8cpp_1ac440180674d61e14dbbe38c3d10269d3" kindref="member">proxy</ref>(&quot;alice1111111&quot;_n)(&quot;staked&quot;, 2000000)</type>
        </param>
        <param>
          <type>get_voter_info(&quot;alice1111111&quot;)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="1355" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="1355" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a5efd5c982f03e8009711dfffad50a531" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(success(), unstake(&quot;alice1111111&quot;, core_sym::from_string(&quot;65.0000&quot;), core_sym::from_string(&quot;35.0000&quot;)))</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type>success()</type>
        </param>
        <param>
          <type>unstake(&quot;alice1111111&quot;, core_sym::from_string(&quot;65.0000&quot;), <ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(&quot;35.0000&quot;))</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="1358" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="1358" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1aa5c9af13574170c370e3b35a050cc804" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>REQUIRE_MATCHING_OBJECT</definition>
        <argsstring>(proxy(&quot;alice1111111&quot;_n)(&quot;staked&quot;, 1000000), get_voter_info(&quot;alice1111111&quot;))</argsstring>
        <name>REQUIRE_MATCHING_OBJECT</name>
        <param>
          <type><ref refid="eosio_8system__tests_8cpp_1ac440180674d61e14dbbe38c3d10269d3" kindref="member">proxy</ref>(&quot;alice1111111&quot;_n)(&quot;staked&quot;, 1000000)</type>
        </param>
        <param>
          <type>get_voter_info(&quot;alice1111111&quot;)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="1359" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="1359" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__tests_8cpp_1a94b2353a660120e0cbe2068edaf22e8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>REQUIRE_MATCHING_OBJECT</definition>
        <argsstring>(proxy(&quot;alice1111111&quot;_n)(&quot;staked&quot;, 0), get_voter_info(&quot;alice1111111&quot;))</argsstring>
        <name>REQUIRE_MATCHING_OBJECT</name>
        <param>
          <type><ref refid="eosio_8system__tests_8cpp_1ac440180674d61e14dbbe38c3d10269d3" kindref="member">proxy</ref>(&quot;alice1111111&quot;_n)(&quot;staked&quot;, 0)</type>
        </param>
        <param>
          <type>get_voter_info(&quot;alice1111111&quot;)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_tests.cpp" line="1363" column="4" declfile="system/tests/eosio.system_tests.cpp" declline="1363" declcolumn="4"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;boost/test/unit_test.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;eosio/chain/contract_table_objects.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;eosio/chain/global_property_object.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;eosio/chain/resource_limits.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;eosio/chain/wast_to_wasm.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdlib&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fc/log/logger.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;eosio/chain/exceptions.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="eosio_8system__tester_8hpp" kindref="compound">eosio.system_tester.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="struct__abi__hash" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__abi__hash" kindref="compound">_abi_hash</ref><sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/>name<sp/><ref refid="struct__abi__hash_1a47247c544376bfdebcf841bacaebc84c" kindref="member">owner</ref>;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/>fc::sha256<sp/><ref refid="struct__abi__hash_1a003f02528a5370378b9e6d497116030a" kindref="member">hash</ref>;</highlight></codeline>
<codeline lineno="16"><highlight class="normal">};</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><ref refid="eosio_8system__tests_8cpp_1a7a73befe9466adfba835a09c92995a76" kindref="member">FC_REFLECT</ref>(<sp/><ref refid="struct__abi__hash" kindref="compound">_abi_hash</ref>,<sp/>(<ref refid="eosio_8limitauth__tests_8cpp_1af05624499daa7d1cf22007650e219653" kindref="member">owner</ref>)(hash)<sp/>);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="structconnector" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structconnector" kindref="compound">connector</ref><sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/>asset<sp/><ref refid="structconnector_1a7ccbf3db174c260f734d246d0a9cf3bd" kindref="member">balance</ref>;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structconnector_1ae1cde74f51c69400d187292f1c1a1b32" kindref="member">weight</ref><sp/>=<sp/>.5;</highlight></codeline>
<codeline lineno="22"><highlight class="normal">};</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><ref refid="eosio_8system__tests_8cpp_1a7a73befe9466adfba835a09c92995a76" kindref="member">FC_REFLECT</ref>(<sp/><ref refid="structconnector" kindref="compound">connector</ref>,<sp/>(<ref refid="eosio_8token__tests_8cpp_1a1e7ef09ce66d09456a55c47a8c42f3dc" kindref="member">balance</ref>)(weight)<sp/>);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceeosio__system" kindref="compound">eosio_system</ref>;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal">BOOST_AUTO_TEST_SUITE(eosio_system_tests)</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="eosio_8system__tests_8cpp_1a020a4de3d826636f65e6928694af2812" kindref="member">within_error</ref>(int64_t<sp/>a,<sp/>int64_t<sp/>b,<sp/>int64_t<sp/>err)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::abs(a<sp/>-<sp/>b)<sp/>&lt;=<sp/>err;<sp/>};</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="eosio_8system__tests_8cpp_1a2a34c6cca71b9f7b935a3b00648b2b41" kindref="member">within_one</ref>(int64_t<sp/>a,<sp/>int64_t<sp/>b)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="eosio_8system__tests_8cpp_1a020a4de3d826636f65e6928694af2812" kindref="member">within_error</ref>(a,<sp/>b,<sp/>1);<sp/>}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><ref refid="eosio_8system__tests_8cpp_1a8a1841911da283583ec346df954d73a1" kindref="member">BOOST_FIXTURE_TEST_CASE</ref>(<sp/>buysell,<sp/><ref refid="classeosio__system_1_1eosio__system__tester" kindref="compound">eosio_system_tester</ref><sp/>)<sp/></highlight><highlight class="keyword">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;0.0000&quot;</highlight><highlight class="normal">),<sp/>get_balance(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a792dc87878d55cfa11f862e9e6d5cc05" kindref="member">transfer</ref>(<sp/></highlight><highlight class="stringliteral">&quot;eosio&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1000.0000&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;eosio&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>stake(<sp/></highlight><highlight class="stringliteral">&quot;eosio&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;200.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;100.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref><sp/>=<sp/>get_total_stake(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>init_bytes<sp/>=<sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref>[</highlight><highlight class="stringliteral">&quot;ram_bytes&quot;</highlight><highlight class="normal">].as_uint64();</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>initial_ram_balance<sp/>=<sp/>get_balance(</highlight><highlight class="stringliteral">&quot;eosio.ram&quot;</highlight><highlight class="normal">_n);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>initial_ramfee_balance<sp/>=<sp/>get_balance(</highlight><highlight class="stringliteral">&quot;eosio.ramfee&quot;</highlight><highlight class="normal">_n);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>buyram(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;200.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;800.0000&quot;</highlight><highlight class="normal">),<sp/>get_balance(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>initial_ram_balance<sp/>+<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;199.0000&quot;</highlight><highlight class="normal">),<sp/>get_balance(</highlight><highlight class="stringliteral">&quot;eosio.ram&quot;</highlight><highlight class="normal">_n)<sp/>);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>initial_ramfee_balance<sp/>+<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1.0000&quot;</highlight><highlight class="normal">),<sp/>get_balance(</highlight><highlight class="stringliteral">&quot;eosio.ramfee&quot;</highlight><highlight class="normal">_n)<sp/>);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref><sp/>=<sp/>get_total_stake(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="eosio_8system__tests_8cpp_1aa09742f1818926903c43767d265ea664" kindref="member">bytes</ref><sp/>=<sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref>[</highlight><highlight class="stringliteral">&quot;ram_bytes&quot;</highlight><highlight class="normal">].as_uint64();</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>bought_bytes<sp/>=<sp/><ref refid="eosio_8system__tests_8cpp_1aa09742f1818926903c43767d265ea664" kindref="member">bytes</ref><sp/>-<sp/>init_bytes;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1ace57c45c9d9e2f0f9a438effcdb79ba5" kindref="member">wdump</ref>((init_bytes)(bought_bytes)(<ref refid="eosio_8system__tests_8cpp_1aa09742f1818926903c43767d265ea664" kindref="member">bytes</ref>)<sp/>);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>0<sp/>&lt;<sp/>bought_bytes<sp/>);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>sellram(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/>bought_bytes<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;998.0049&quot;</highlight><highlight class="normal">),<sp/>get_balance(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref><sp/>=<sp/>get_total_stake(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref>[</highlight><highlight class="stringliteral">&quot;ram_bytes&quot;</highlight><highlight class="normal">].as_uint64()<sp/>==<sp/>init_bytes<sp/>);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a792dc87878d55cfa11f862e9e6d5cc05" kindref="member">transfer</ref>(<sp/></highlight><highlight class="stringliteral">&quot;eosio&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;100000000.0000&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;eosio&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;100000998.0049&quot;</highlight><highlight class="normal">),<sp/>get_balance(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>alice<sp/>buys<sp/>ram<sp/>for<sp/>10000000.0000,<sp/>0.5%<sp/>=<sp/>50000.0000<sp/>go<sp/>to<sp/>ramfee</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>after<sp/>fee<sp/>9950000.0000<sp/>go<sp/>to<sp/>bought<sp/>bytes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>when<sp/>selling<sp/>back<sp/>bought<sp/>bytes,<sp/>pay<sp/>0.5%<sp/>fee<sp/>and<sp/>get<sp/>back<sp/>99.5%<sp/>of<sp/>9950000.0000<sp/>=<sp/>9900250.0000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>expected<sp/>account<sp/>after<sp/>that<sp/>is<sp/>90000998.0049<sp/>+<sp/>9900250.0000<sp/>=<sp/>99901248.0049<sp/>with<sp/>a<sp/>difference</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>of<sp/>order<sp/>0.0001<sp/>due<sp/>to<sp/>rounding<sp/>errors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>buyram(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;10000000.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;90000998.0049&quot;</highlight><highlight class="normal">),<sp/>get_balance(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref><sp/>=<sp/>get_total_stake(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aa09742f1818926903c43767d265ea664" kindref="member">bytes</ref><sp/>=<sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref>[</highlight><highlight class="stringliteral">&quot;ram_bytes&quot;</highlight><highlight class="normal">].as_uint64();</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/>bought_bytes<sp/>=<sp/><ref refid="eosio_8system__tests_8cpp_1aa09742f1818926903c43767d265ea664" kindref="member">bytes</ref><sp/>-<sp/>init_bytes;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1ace57c45c9d9e2f0f9a438effcdb79ba5" kindref="member">wdump</ref>((init_bytes)(bought_bytes)(<ref refid="eosio_8system__tests_8cpp_1aa09742f1818926903c43767d265ea664" kindref="member">bytes</ref>)<sp/>);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>sellram(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/>bought_bytes<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref><sp/>=<sp/>get_total_stake(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aa09742f1818926903c43767d265ea664" kindref="member">bytes</ref><sp/>=<sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref>[</highlight><highlight class="stringliteral">&quot;ram_bytes&quot;</highlight><highlight class="normal">].as_uint64();</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/>bought_bytes<sp/>=<sp/><ref refid="eosio_8system__tests_8cpp_1aa09742f1818926903c43767d265ea664" kindref="member">bytes</ref><sp/>-<sp/>init_bytes;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1ace57c45c9d9e2f0f9a438effcdb79ba5" kindref="member">wdump</ref>((init_bytes)(bought_bytes)(<ref refid="eosio_8system__tests_8cpp_1aa09742f1818926903c43767d265ea664" kindref="member">bytes</ref>)<sp/>);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref>[</highlight><highlight class="stringliteral">&quot;ram_bytes&quot;</highlight><highlight class="normal">].as_uint64()<sp/>==<sp/>init_bytes<sp/>);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;99901248.0048&quot;</highlight><highlight class="normal">),<sp/>get_balance(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>buyram(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;100.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>buyram(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;100.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>buyram(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;100.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>buyram(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;100.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>buyram(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;100.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>buyram(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;10.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>buyram(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;10.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>buyram(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;10.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>buyram(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;30.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;99900688.0048&quot;</highlight><highlight class="normal">),<sp/>get_balance(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>newtotal<sp/>=<sp/>get_total_stake(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>newbytes<sp/>=<sp/>newtotal[</highlight><highlight class="stringliteral">&quot;ram_bytes&quot;</highlight><highlight class="normal">].as_uint64();</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/>bought_bytes<sp/>=<sp/>newbytes<sp/>-<sp/><ref refid="eosio_8system__tests_8cpp_1aa09742f1818926903c43767d265ea664" kindref="member">bytes</ref>;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1ace57c45c9d9e2f0f9a438effcdb79ba5" kindref="member">wdump</ref>((newbytes)(<ref refid="eosio_8system__tests_8cpp_1aa09742f1818926903c43767d265ea664" kindref="member">bytes</ref>)(bought_bytes)<sp/>);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>sellram(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/>bought_bytes<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;99901242.4187&quot;</highlight><highlight class="normal">),<sp/>get_balance(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/>newtotal<sp/>=<sp/>get_total_stake(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>startbytes<sp/>=<sp/>newtotal[</highlight><highlight class="stringliteral">&quot;ram_bytes&quot;</highlight><highlight class="normal">].as_uint64();</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>buyram(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;10000000.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>buyram(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;10000000.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>buyram(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;10000000.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>buyram(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;10000000.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>buyram(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;10000000.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>buyram(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;100000.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>buyram(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;100000.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>buyram(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;100000.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>buyram(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;300000.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;49301242.4187&quot;</highlight><highlight class="normal">),<sp/>get_balance(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>finaltotal<sp/>=<sp/>get_total_stake(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>endbytes<sp/>=<sp/>finaltotal[</highlight><highlight class="stringliteral">&quot;ram_bytes&quot;</highlight><highlight class="normal">].as_uint64();</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/>bought_bytes<sp/>=<sp/>endbytes<sp/>-<sp/>startbytes;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1ace57c45c9d9e2f0f9a438effcdb79ba5" kindref="member">wdump</ref>((startbytes)(endbytes)(bought_bytes)<sp/>);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>sellram(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/>bought_bytes<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>get_row_by_account(<sp/>config::system_account_name,<sp/>config::system_account_name,</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;rammarket&quot;</highlight><highlight class="normal">_n,<sp/>account_name(symbol{SY(4,RAMCORE)}.value())<sp/>).empty()<sp/>);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>get_ram_market<sp/>=<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">]()<sp/>-&gt;<sp/>fc::variant<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;char&gt;<sp/>data<sp/>=<sp/>get_row_by_account(<sp/>config::system_account_name,<sp/>config::system_account_name,</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;rammarket&quot;</highlight><highlight class="normal">_n,<sp/>account_name(symbol{SY(4,RAMCORE)}.value())<sp/>);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1ae00c608b8a40d03b8b8dd2daac50185b" kindref="member">BOOST_REQUIRE</ref>(<sp/>!data.empty()<sp/>);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>abi_ser.binary_to_variant(</highlight><highlight class="stringliteral">&quot;exchange_state&quot;</highlight><highlight class="normal">,<sp/>data,<sp/>abi_serializer::create_yield_function(abi_serializer_max_time));</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a792dc87878d55cfa11f862e9e6d5cc05" kindref="member">transfer</ref>(<sp/>config::system_account_name,<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;10000000.0000&quot;</highlight><highlight class="normal">),<sp/>config::system_account_name<sp/>);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>bytes0<sp/>=<sp/>get_total_stake(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>)[</highlight><highlight class="stringliteral">&quot;ram_bytes&quot;</highlight><highlight class="normal">].as_uint64();</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>market<sp/>=<sp/>get_ram_market();</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>r0<sp/>=<sp/>market[</highlight><highlight class="stringliteral">&quot;base&quot;</highlight><highlight class="normal">].as&lt;<ref refid="structconnector" kindref="compound">connector</ref>&gt;().<ref refid="eosio_8token__tests_8cpp_1a1e7ef09ce66d09456a55c47a8c42f3dc" kindref="member">balance</ref>;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>e0<sp/>=<sp/>market[</highlight><highlight class="stringliteral">&quot;quote&quot;</highlight><highlight class="normal">].as&lt;<ref refid="structconnector" kindref="compound">connector</ref>&gt;().<ref refid="eosio_8token__tests_8cpp_1a1e7ef09ce66d09456a55c47a8c42f3dc" kindref="member">balance</ref>;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>asset::from_string(</highlight><highlight class="stringliteral">&quot;0<sp/>RAM&quot;</highlight><highlight class="normal">).get_symbol(),<sp/><sp/><sp/><sp/><sp/>r0.get_symbol()<sp/>);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;0.0000&quot;</highlight><highlight class="normal">).get_symbol(),<sp/>e0.get_symbol()<sp/>);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>payment<sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;10000000.0000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>buyram(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/>payment<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>bytes1<sp/>=<sp/>get_total_stake(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>)[</highlight><highlight class="stringliteral">&quot;ram_bytes&quot;</highlight><highlight class="normal">].as_uint64();</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>fee<sp/>=<sp/>(payment.get_amount()<sp/>+<sp/>199)<sp/>/<sp/>200;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>net_payment<sp/>=<sp/>payment.get_amount()<sp/>-<sp/>fee;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>expected_delta<sp/>=<sp/>net_payment<sp/>*<sp/>r0.get_amount()<sp/>/<sp/>(<sp/>net_payment<sp/>+<sp/>e0.get_amount()<sp/>);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>expected_delta,<sp/>bytes1<sp/>-<sp/><sp/>bytes0<sp/>);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a792dc87878d55cfa11f862e9e6d5cc05" kindref="member">transfer</ref>(<sp/>config::system_account_name,<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;100000.0000&quot;</highlight><highlight class="normal">),<sp/>config::system_account_name<sp/>);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;must<sp/>reserve<sp/>a<sp/>positive<sp/>amount&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buyrambytes(<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">,<sp/>1<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>bytes0<sp/>=<sp/>get_total_stake(<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal"><sp/>)[</highlight><highlight class="stringliteral">&quot;ram_bytes&quot;</highlight><highlight class="normal">].as_uint64();</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>buyrambytes(<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">,<sp/>1024<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>bytes1<sp/>=<sp/>get_total_stake(<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal"><sp/>)[</highlight><highlight class="stringliteral">&quot;ram_bytes&quot;</highlight><highlight class="normal">].as_uint64();</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1ae00c608b8a40d03b8b8dd2daac50185b" kindref="member">BOOST_REQUIRE</ref>(<sp/><ref refid="eosio_8system__tests_8cpp_1a2a34c6cca71b9f7b935a3b00648b2b41" kindref="member">within_one</ref>(<sp/>1024,<sp/>bytes1<sp/>-<sp/>bytes0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>buyrambytes(<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">,<sp/>1024<sp/>*<sp/>1024)<sp/>);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>bytes2<sp/>=<sp/>get_total_stake(<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal"><sp/>)[</highlight><highlight class="stringliteral">&quot;ram_bytes&quot;</highlight><highlight class="normal">].as_uint64();</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1ae00c608b8a40d03b8b8dd2daac50185b" kindref="member">BOOST_REQUIRE</ref>(<sp/><ref refid="eosio_8system__tests_8cpp_1a2a34c6cca71b9f7b935a3b00648b2b41" kindref="member">within_one</ref>(<sp/>1024<sp/>*<sp/>1024,<sp/>bytes2<sp/>-<sp/>bytes1<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal">}<sp/><ref refid="eosio_8system__tests_8cpp_1a057cb719bfa291fae56dc6ba5fa7a8d1" kindref="member">FC_LOG_AND_RETHROW</ref>()</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><ref refid="eosio_8system__tests_8cpp_1a8a1841911da283583ec346df954d73a1" kindref="member">BOOST_FIXTURE_TEST_CASE</ref>(<sp/>stake_unstake,<sp/><ref refid="classeosio__system_1_1eosio__system__tester" kindref="compound">eosio_system_tester</ref><sp/>)<sp/><ref refid="eosio_8system__tests_8cpp_1ae89aac94d502abdd3c8d055174c221fc" kindref="member">try</ref><sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/>cross_15_percent_threshold();</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aa1213f0f2c7a53ea968859f3cab582c3" kindref="member">produce_blocks</ref>(<sp/>10<sp/>);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::hours(3*24)<sp/>);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;0.0000&quot;</highlight><highlight class="normal">),<sp/>get_balance(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a792dc87878d55cfa11f862e9e6d5cc05" kindref="member">transfer</ref>(<sp/></highlight><highlight class="stringliteral">&quot;eosio&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1000.0000&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;eosio&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1000.0000&quot;</highlight><highlight class="normal">),<sp/>get_balance(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>stake(<sp/></highlight><highlight class="stringliteral">&quot;eosio&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;200.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;100.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref><sp/>=<sp/>get_total_stake(</highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;210.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref>[</highlight><highlight class="stringliteral">&quot;net_weight&quot;</highlight><highlight class="normal">].as&lt;asset&gt;());</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;110.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref>[</highlight><highlight class="stringliteral">&quot;cpu_weight&quot;</highlight><highlight class="normal">].as&lt;asset&gt;());</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="eosio_8system__tests_8cpp_1a515931a5b18b498f3e1fea3c35f38ce4" kindref="member">init_eosio_stake_balance</ref><sp/>=<sp/>get_balance(<sp/></highlight><highlight class="stringliteral">&quot;eosio.stake&quot;</highlight><highlight class="normal">_n<sp/>);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>stake(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;200.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;100.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;700.0000&quot;</highlight><highlight class="normal">),<sp/>get_balance(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="eosio_8system__tests_8cpp_1a515931a5b18b498f3e1fea3c35f38ce4" kindref="member">init_eosio_stake_balance</ref><sp/>+<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;300.0000&quot;</highlight><highlight class="normal">),<sp/>get_balance(<sp/></highlight><highlight class="stringliteral">&quot;eosio.stake&quot;</highlight><highlight class="normal">_n<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>unstake(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;200.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;100.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;700.0000&quot;</highlight><highlight class="normal">),<sp/>get_balance(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::hours(3*24-1)<sp/>);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aa1213f0f2c7a53ea968859f3cab582c3" kindref="member">produce_blocks</ref>(1);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;700.0000&quot;</highlight><highlight class="normal">),<sp/>get_balance(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="eosio_8system__tests_8cpp_1a515931a5b18b498f3e1fea3c35f38ce4" kindref="member">init_eosio_stake_balance</ref><sp/>+<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;300.0000&quot;</highlight><highlight class="normal">),<sp/>get_balance(<sp/></highlight><highlight class="stringliteral">&quot;eosio.stake&quot;</highlight><highlight class="normal">_n<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//after<sp/>3<sp/>days<sp/>funds<sp/>should<sp/>be<sp/>released</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::hours(1)<sp/>);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aa1213f0f2c7a53ea968859f3cab582c3" kindref="member">produce_blocks</ref>(1);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1000.0000&quot;</highlight><highlight class="normal">),<sp/>get_balance(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="eosio_8system__tests_8cpp_1a515931a5b18b498f3e1fea3c35f38ce4" kindref="member">init_eosio_stake_balance</ref>,<sp/>get_balance(<sp/></highlight><highlight class="stringliteral">&quot;eosio.stake&quot;</highlight><highlight class="normal">_n<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>stake(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;200.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;100.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;700.0000&quot;</highlight><highlight class="normal">),<sp/>get_balance(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref><sp/>=<sp/>get_total_stake(</highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;210.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref>[</highlight><highlight class="stringliteral">&quot;net_weight&quot;</highlight><highlight class="normal">].as&lt;asset&gt;());</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;110.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref>[</highlight><highlight class="stringliteral">&quot;cpu_weight&quot;</highlight><highlight class="normal">].as&lt;asset&gt;());</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref><sp/>=<sp/>get_total_stake(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;210.0000&quot;</highlight><highlight class="normal">).get_amount(),<sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref>[</highlight><highlight class="stringliteral">&quot;net_weight&quot;</highlight><highlight class="normal">].as&lt;asset&gt;().get_amount()<sp/>);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;110.0000&quot;</highlight><highlight class="normal">).get_amount(),<sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref>[</highlight><highlight class="stringliteral">&quot;cpu_weight&quot;</highlight><highlight class="normal">].as&lt;asset&gt;().get_amount()<sp/>);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1abf3d4eb475605f9a73224e835cd3fb71" kindref="member">REQUIRE_MATCHING_OBJECT</ref>(<sp/><ref refid="namespaceeosio__system_1a88231cdd2d2c65528b97fb62b1fad462" kindref="member">voter</ref>(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;300.0000&quot;</highlight><highlight class="normal">)),<sp/>get_voter_info(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="eosio_8system__tests_8cpp_1aa09742f1818926903c43767d265ea664" kindref="member">bytes</ref><sp/>=<sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref>[</highlight><highlight class="stringliteral">&quot;ram_bytes&quot;</highlight><highlight class="normal">].as_uint64();</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>0<sp/>&lt;<sp/><ref refid="eosio_8system__tests_8cpp_1aa09742f1818926903c43767d265ea664" kindref="member">bytes</ref><sp/>);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//unstake<sp/>from<sp/>bob111111111</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>unstake(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;200.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;100.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref><sp/>=<sp/>get_total_stake(</highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;10.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref>[</highlight><highlight class="stringliteral">&quot;net_weight&quot;</highlight><highlight class="normal">].as&lt;asset&gt;());</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;10.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref>[</highlight><highlight class="stringliteral">&quot;cpu_weight&quot;</highlight><highlight class="normal">].as&lt;asset&gt;());</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::hours(3*24-1)<sp/>);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aa1213f0f2c7a53ea968859f3cab582c3" kindref="member">produce_blocks</ref>(1);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;700.0000&quot;</highlight><highlight class="normal">),<sp/>get_balance(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//after<sp/>3<sp/>days<sp/>funds<sp/>should<sp/>be<sp/>released</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::hours(1)<sp/>);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aa1213f0f2c7a53ea968859f3cab582c3" kindref="member">produce_blocks</ref>(1);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1abf3d4eb475605f9a73224e835cd3fb71" kindref="member">REQUIRE_MATCHING_OBJECT</ref>(<sp/><ref refid="namespaceeosio__system_1a88231cdd2d2c65528b97fb62b1fad462" kindref="member">voter</ref>(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;0.0000&quot;</highlight><highlight class="normal">)<sp/>),<sp/>get_voter_info(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aa1213f0f2c7a53ea968859f3cab582c3" kindref="member">produce_blocks</ref>(1);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1000.0000&quot;</highlight><highlight class="normal">),<sp/>get_balance(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="239"><highlight class="normal">}<sp/><ref refid="eosio_8system__tests_8cpp_1a057cb719bfa291fae56dc6ba5fa7a8d1" kindref="member">FC_LOG_AND_RETHROW</ref>()</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><ref refid="eosio_8system__tests_8cpp_1a8a1841911da283583ec346df954d73a1" kindref="member">BOOST_FIXTURE_TEST_CASE</ref>(<sp/>stake_unstake_with_transfer,<sp/><ref refid="classeosio__system_1_1eosio__system__tester" kindref="compound">eosio_system_tester</ref><sp/>)<sp/><ref refid="eosio_8system__tests_8cpp_1ae89aac94d502abdd3c8d055174c221fc" kindref="member">try</ref><sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/>cross_15_percent_threshold();</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;0.0000&quot;</highlight><highlight class="normal">),<sp/>get_balance(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//eosio<sp/>stakes<sp/>for<sp/>alice<sp/>with<sp/>transfer<sp/>flag</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a792dc87878d55cfa11f862e9e6d5cc05" kindref="member">transfer</ref>(<sp/></highlight><highlight class="stringliteral">&quot;eosio&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1000.0000&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;eosio&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>stake_with_transfer(<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;200.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;100.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//check<sp/>that<sp/>alice<sp/>has<sp/>both<sp/>bandwidth<sp/>and<sp/>voting<sp/>power</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref><sp/>=<sp/>get_total_stake(</highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;210.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref>[</highlight><highlight class="stringliteral">&quot;net_weight&quot;</highlight><highlight class="normal">].as&lt;asset&gt;());</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;110.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref>[</highlight><highlight class="stringliteral">&quot;cpu_weight&quot;</highlight><highlight class="normal">].as&lt;asset&gt;());</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1abf3d4eb475605f9a73224e835cd3fb71" kindref="member">REQUIRE_MATCHING_OBJECT</ref>(<sp/><ref refid="namespaceeosio__system_1a88231cdd2d2c65528b97fb62b1fad462" kindref="member">voter</ref>(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;300.0000&quot;</highlight><highlight class="normal">)),<sp/>get_voter_info(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;0.0000&quot;</highlight><highlight class="normal">),<sp/>get_balance(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//alice<sp/>stakes<sp/>for<sp/>herself</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a792dc87878d55cfa11f862e9e6d5cc05" kindref="member">transfer</ref>(<sp/></highlight><highlight class="stringliteral">&quot;eosio&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1000.0000&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;eosio&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>stake(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;200.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;100.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//now<sp/>alice&apos;s<sp/>stake<sp/>should<sp/>be<sp/>equal<sp/>to<sp/>transferred<sp/>from<sp/>eosio<sp/>+<sp/>own<sp/>stake</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref><sp/>=<sp/>get_total_stake(</highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;700.0000&quot;</highlight><highlight class="normal">),<sp/>get_balance(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;410.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref>[</highlight><highlight class="stringliteral">&quot;net_weight&quot;</highlight><highlight class="normal">].as&lt;asset&gt;());</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;210.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref>[</highlight><highlight class="stringliteral">&quot;cpu_weight&quot;</highlight><highlight class="normal">].as&lt;asset&gt;());</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1abf3d4eb475605f9a73224e835cd3fb71" kindref="member">REQUIRE_MATCHING_OBJECT</ref>(<sp/><ref refid="namespaceeosio__system_1a88231cdd2d2c65528b97fb62b1fad462" kindref="member">voter</ref>(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;600.0000&quot;</highlight><highlight class="normal">)),<sp/>get_voter_info(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//alice<sp/>can<sp/>unstake<sp/>everything<sp/>(including<sp/>what<sp/>was<sp/>transferred)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>unstake(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;400.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;200.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;700.0000&quot;</highlight><highlight class="normal">),<sp/>get_balance(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::hours(3*24-1)<sp/>);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aa1213f0f2c7a53ea968859f3cab582c3" kindref="member">produce_blocks</ref>(1);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;700.0000&quot;</highlight><highlight class="normal">),<sp/>get_balance(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//after<sp/>3<sp/>days<sp/>funds<sp/>should<sp/>be<sp/>released</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::hours(1)<sp/>);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aa1213f0f2c7a53ea968859f3cab582c3" kindref="member">produce_blocks</ref>(1);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1300.0000&quot;</highlight><highlight class="normal">),<sp/>get_balance(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//stake<sp/>should<sp/>be<sp/>equal<sp/>to<sp/>what<sp/>was<sp/>staked<sp/>in<sp/>constructor,<sp/>voting<sp/>power<sp/>should<sp/>be<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref><sp/>=<sp/>get_total_stake(</highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;10.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref>[</highlight><highlight class="stringliteral">&quot;net_weight&quot;</highlight><highlight class="normal">].as&lt;asset&gt;());</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;10.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref>[</highlight><highlight class="stringliteral">&quot;cpu_weight&quot;</highlight><highlight class="normal">].as&lt;asset&gt;());</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1abf3d4eb475605f9a73224e835cd3fb71" kindref="member">REQUIRE_MATCHING_OBJECT</ref>(<sp/><ref refid="namespaceeosio__system_1a88231cdd2d2c65528b97fb62b1fad462" kindref="member">voter</ref>(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;0.0000&quot;</highlight><highlight class="normal">)),<sp/>get_voter_info(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>alice<sp/>stakes<sp/>to<sp/>bob<sp/>with<sp/>transfer<sp/>flag</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>stake_with_transfer(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;100.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;100.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal">}<sp/><ref refid="eosio_8system__tests_8cpp_1a057cb719bfa291fae56dc6ba5fa7a8d1" kindref="member">FC_LOG_AND_RETHROW</ref>()</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><ref refid="eosio_8system__tests_8cpp_1a8a1841911da283583ec346df954d73a1" kindref="member">BOOST_FIXTURE_TEST_CASE</ref>(<sp/>stake_to_self_with_transfer,<sp/><ref refid="classeosio__system_1_1eosio__system__tester" kindref="compound">eosio_system_tester</ref><sp/>)<sp/><ref refid="eosio_8system__tests_8cpp_1ae89aac94d502abdd3c8d055174c221fc" kindref="member">try</ref><sp/>{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/>cross_15_percent_threshold();</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;0.0000&quot;</highlight><highlight class="normal">),<sp/>get_balance(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a792dc87878d55cfa11f862e9e6d5cc05" kindref="member">transfer</ref>(<sp/></highlight><highlight class="stringliteral">&quot;eosio&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1000.0000&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;eosio&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;cannot<sp/>use<sp/>transfer<sp/>flag<sp/>if<sp/>delegating<sp/>to<sp/>self&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stake_with_transfer(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;200.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;100.0000&quot;</highlight><highlight class="normal">)<sp/>)</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal">}<sp/><ref refid="eosio_8system__tests_8cpp_1a057cb719bfa291fae56dc6ba5fa7a8d1" kindref="member">FC_LOG_AND_RETHROW</ref>()</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><ref refid="eosio_8system__tests_8cpp_1a8a1841911da283583ec346df954d73a1" kindref="member">BOOST_FIXTURE_TEST_CASE</ref>(<sp/>stake_while_pending_refund,<sp/><ref refid="classeosio__system_1_1eosio__system__tester" kindref="compound">eosio_system_tester</ref><sp/>)<sp/><ref refid="eosio_8system__tests_8cpp_1ae89aac94d502abdd3c8d055174c221fc" kindref="member">try</ref><sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/>cross_15_percent_threshold();</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;0.0000&quot;</highlight><highlight class="normal">),<sp/>get_balance(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//eosio<sp/>stakes<sp/>for<sp/>alice<sp/>with<sp/>transfer<sp/>flag</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a792dc87878d55cfa11f862e9e6d5cc05" kindref="member">transfer</ref>(<sp/></highlight><highlight class="stringliteral">&quot;eosio&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1000.0000&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;eosio&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>stake_with_transfer(<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;200.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;100.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//check<sp/>that<sp/>alice<sp/>has<sp/>both<sp/>bandwidth<sp/>and<sp/>voting<sp/>power</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref><sp/>=<sp/>get_total_stake(</highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;210.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref>[</highlight><highlight class="stringliteral">&quot;net_weight&quot;</highlight><highlight class="normal">].as&lt;asset&gt;());</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;110.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref>[</highlight><highlight class="stringliteral">&quot;cpu_weight&quot;</highlight><highlight class="normal">].as&lt;asset&gt;());</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1abf3d4eb475605f9a73224e835cd3fb71" kindref="member">REQUIRE_MATCHING_OBJECT</ref>(<sp/><ref refid="namespaceeosio__system_1a88231cdd2d2c65528b97fb62b1fad462" kindref="member">voter</ref>(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;300.0000&quot;</highlight><highlight class="normal">)),<sp/>get_voter_info(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;0.0000&quot;</highlight><highlight class="normal">),<sp/>get_balance(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//alice<sp/>stakes<sp/>for<sp/>herself</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a792dc87878d55cfa11f862e9e6d5cc05" kindref="member">transfer</ref>(<sp/></highlight><highlight class="stringliteral">&quot;eosio&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1000.0000&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;eosio&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>stake(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;200.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;100.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//now<sp/>alice&apos;s<sp/>stake<sp/>should<sp/>be<sp/>equal<sp/>to<sp/>transferred<sp/>from<sp/>eosio<sp/>+<sp/>own<sp/>stake</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref><sp/>=<sp/>get_total_stake(</highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;700.0000&quot;</highlight><highlight class="normal">),<sp/>get_balance(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;410.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref>[</highlight><highlight class="stringliteral">&quot;net_weight&quot;</highlight><highlight class="normal">].as&lt;asset&gt;());</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;210.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref>[</highlight><highlight class="stringliteral">&quot;cpu_weight&quot;</highlight><highlight class="normal">].as&lt;asset&gt;());</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1abf3d4eb475605f9a73224e835cd3fb71" kindref="member">REQUIRE_MATCHING_OBJECT</ref>(<sp/><ref refid="namespaceeosio__system_1a88231cdd2d2c65528b97fb62b1fad462" kindref="member">voter</ref>(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;600.0000&quot;</highlight><highlight class="normal">)),<sp/>get_voter_info(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//alice<sp/>can<sp/>unstake<sp/>everything<sp/>(including<sp/>what<sp/>was<sp/>transferred)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>unstake(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;400.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;200.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;700.0000&quot;</highlight><highlight class="normal">),<sp/>get_balance(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::hours(3*24-1)<sp/>);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aa1213f0f2c7a53ea968859f3cab582c3" kindref="member">produce_blocks</ref>(1);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;700.0000&quot;</highlight><highlight class="normal">),<sp/>get_balance(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//after<sp/>3<sp/>days<sp/>funds<sp/>should<sp/>be<sp/>released</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::hours(1)<sp/>);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aa1213f0f2c7a53ea968859f3cab582c3" kindref="member">produce_blocks</ref>(1);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1300.0000&quot;</highlight><highlight class="normal">),<sp/>get_balance(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//stake<sp/>should<sp/>be<sp/>equal<sp/>to<sp/>what<sp/>was<sp/>staked<sp/>in<sp/>constructor,<sp/>voting<sp/>power<sp/>should<sp/>be<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref><sp/>=<sp/>get_total_stake(</highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;10.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref>[</highlight><highlight class="stringliteral">&quot;net_weight&quot;</highlight><highlight class="normal">].as&lt;asset&gt;());</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;10.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref>[</highlight><highlight class="stringliteral">&quot;cpu_weight&quot;</highlight><highlight class="normal">].as&lt;asset&gt;());</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1abf3d4eb475605f9a73224e835cd3fb71" kindref="member">REQUIRE_MATCHING_OBJECT</ref>(<sp/><ref refid="namespaceeosio__system_1a88231cdd2d2c65528b97fb62b1fad462" kindref="member">voter</ref>(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;0.0000&quot;</highlight><highlight class="normal">)),<sp/>get_voter_info(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>alice<sp/>stakes<sp/>to<sp/>bob<sp/>with<sp/>transfer<sp/>flag</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>stake_with_transfer(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;100.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;100.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal">}<sp/><ref refid="eosio_8system__tests_8cpp_1a057cb719bfa291fae56dc6ba5fa7a8d1" kindref="member">FC_LOG_AND_RETHROW</ref>()</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><ref refid="eosio_8system__tests_8cpp_1a8a1841911da283583ec346df954d73a1" kindref="member">BOOST_FIXTURE_TEST_CASE</ref>(<sp/>fail_without_auth,<sp/><ref refid="classeosio__system_1_1eosio__system__tester" kindref="compound">eosio_system_tester</ref><sp/>)<sp/><ref refid="eosio_8system__tests_8cpp_1ae89aac94d502abdd3c8d055174c221fc" kindref="member">try</ref><sp/>{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/>cross_15_percent_threshold();</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a743a21c2e0e86a8aeacc66e5c80c51ef" kindref="member">issue_and_transfer</ref>(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1000.0000&quot;</highlight><highlight class="normal">),<sp/><sp/>config::system_account_name<sp/>);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>stake(<sp/></highlight><highlight class="stringliteral">&quot;eosio&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;2000.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1000.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>stake(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;10.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;10.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>error(</highlight><highlight class="stringliteral">&quot;missing<sp/>authority<sp/>of<sp/>alice1111111&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;delegatebw&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;from&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;receiver&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;stake_net_quantity&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;10.0000&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;stake_cpu_quantity&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;10.0000&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;transfer&quot;</highlight><highlight class="normal">,<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,</highlight><highlight class="keyword">false</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>error(</highlight><highlight class="stringliteral">&quot;missing<sp/>authority<sp/>of<sp/>alice1111111&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(</highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;undelegatebw&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;from&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;receiver&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;unstake_net_quantity&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;200.0000&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;unstake_cpu_quantity&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;100.0000&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;transfer&quot;</highlight><highlight class="normal">,<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,</highlight><highlight class="keyword">false</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//REQUIRE_MATCHING_OBJECT(<sp/>,<sp/>get_voter_info(<sp/>&quot;alice1111111&quot;<sp/>)<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal">}<sp/><ref refid="eosio_8system__tests_8cpp_1a057cb719bfa291fae56dc6ba5fa7a8d1" kindref="member">FC_LOG_AND_RETHROW</ref>()</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><ref refid="eosio_8system__tests_8cpp_1a8a1841911da283583ec346df954d73a1" kindref="member">BOOST_FIXTURE_TEST_CASE</ref>(<sp/>stake_negative,<sp/><ref refid="classeosio__system_1_1eosio__system__tester" kindref="compound">eosio_system_tester</ref><sp/>)<sp/><ref refid="eosio_8system__tests_8cpp_1ae89aac94d502abdd3c8d055174c221fc" kindref="member">try</ref><sp/>{</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a743a21c2e0e86a8aeacc66e5c80c51ef" kindref="member">issue_and_transfer</ref>(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1000.0000&quot;</highlight><highlight class="normal">),<sp/><sp/>config::system_account_name<sp/>);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;must<sp/>stake<sp/>a<sp/>positive<sp/>amount&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stake(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;-0.0001&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;0.0000&quot;</highlight><highlight class="normal">)<sp/>)</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;must<sp/>stake<sp/>a<sp/>positive<sp/>amount&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stake(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;0.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;-0.0001&quot;</highlight><highlight class="normal">)<sp/>)</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;must<sp/>stake<sp/>a<sp/>positive<sp/>amount&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stake(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;00.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;00.0000&quot;</highlight><highlight class="normal">)<sp/>)</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;must<sp/>stake<sp/>a<sp/>positive<sp/>amount&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stake(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;0.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;00.0000&quot;</highlight><highlight class="normal">)<sp/>)</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>get_voter_info(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>).is_null()<sp/>);</highlight></codeline>
<codeline lineno="412"><highlight class="normal">}<sp/><ref refid="eosio_8system__tests_8cpp_1a057cb719bfa291fae56dc6ba5fa7a8d1" kindref="member">FC_LOG_AND_RETHROW</ref>()</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><ref refid="eosio_8system__tests_8cpp_1a8a1841911da283583ec346df954d73a1" kindref="member">BOOST_FIXTURE_TEST_CASE</ref>(<sp/>unstake_negative,<sp/><ref refid="classeosio__system_1_1eosio__system__tester" kindref="compound">eosio_system_tester</ref><sp/>)<sp/><ref refid="eosio_8system__tests_8cpp_1ae89aac94d502abdd3c8d055174c221fc" kindref="member">try</ref><sp/>{</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a743a21c2e0e86a8aeacc66e5c80c51ef" kindref="member">issue_and_transfer</ref>(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1000.0000&quot;</highlight><highlight class="normal">),<sp/><sp/>config::system_account_name<sp/>);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>stake(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;200.0001&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;100.0001&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref><sp/>=<sp/>get_total_stake(<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;210.0001&quot;</highlight><highlight class="normal">),<sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref>[</highlight><highlight class="stringliteral">&quot;net_weight&quot;</highlight><highlight class="normal">].as&lt;asset&gt;());</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="eosio_8system__tests_8cpp_1acc4282863324bd2135c3f73528e99fd3" kindref="member">vinfo</ref><sp/>=<sp/>get_voter_info(</highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1ace57c45c9d9e2f0f9a438effcdb79ba5" kindref="member">wdump</ref>((<ref refid="eosio_8system__tests_8cpp_1acc4282863324bd2135c3f73528e99fd3" kindref="member">vinfo</ref>));</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1abf3d4eb475605f9a73224e835cd3fb71" kindref="member">REQUIRE_MATCHING_OBJECT</ref>(<sp/><ref refid="namespaceeosio__system_1a88231cdd2d2c65528b97fb62b1fad462" kindref="member">voter</ref>(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;300.0002&quot;</highlight><highlight class="normal">)<sp/>),<sp/>get_voter_info(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;must<sp/>unstake<sp/>a<sp/>positive<sp/>amount&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unstake(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;-1.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;0.0000&quot;</highlight><highlight class="normal">)<sp/>)</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;must<sp/>unstake<sp/>a<sp/>positive<sp/>amount&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unstake(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;0.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;-1.0000&quot;</highlight><highlight class="normal">)<sp/>)</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//unstake<sp/>all<sp/>zeros</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;must<sp/>unstake<sp/>a<sp/>positive<sp/>amount&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unstake(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;0.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;0.0000&quot;</highlight><highlight class="normal">)<sp/>)</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal">}<sp/><ref refid="eosio_8system__tests_8cpp_1a057cb719bfa291fae56dc6ba5fa7a8d1" kindref="member">FC_LOG_AND_RETHROW</ref>()</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><ref refid="eosio_8system__tests_8cpp_1a8a1841911da283583ec346df954d73a1" kindref="member">BOOST_FIXTURE_TEST_CASE</ref>(<sp/>unstake_more_than_at_stake,<sp/><ref refid="classeosio__system_1_1eosio__system__tester" kindref="compound">eosio_system_tester</ref><sp/>)<sp/><ref refid="eosio_8system__tests_8cpp_1ae89aac94d502abdd3c8d055174c221fc" kindref="member">try</ref><sp/>{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/>cross_15_percent_threshold();</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a743a21c2e0e86a8aeacc66e5c80c51ef" kindref="member">issue_and_transfer</ref>(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1000.0000&quot;</highlight><highlight class="normal">),<sp/><sp/>config::system_account_name<sp/>);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>stake(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;200.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;100.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref><sp/>=<sp/>get_total_stake(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;210.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref>[</highlight><highlight class="stringliteral">&quot;net_weight&quot;</highlight><highlight class="normal">].as&lt;asset&gt;());</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;110.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref>[</highlight><highlight class="stringliteral">&quot;cpu_weight&quot;</highlight><highlight class="normal">].as&lt;asset&gt;());</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;700.0000&quot;</highlight><highlight class="normal">),<sp/>get_balance(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//trying<sp/>to<sp/>unstake<sp/>more<sp/>net<sp/>bandwidth<sp/>than<sp/>at<sp/>stake</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;insufficient<sp/>staked<sp/>net<sp/>bandwidth&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unstake(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;200.0001&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;0.0000&quot;</highlight><highlight class="normal">)<sp/>)</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//trying<sp/>to<sp/>unstake<sp/>more<sp/>cpu<sp/>bandwidth<sp/>than<sp/>at<sp/>stake</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;insufficient<sp/>staked<sp/>cpu<sp/>bandwidth&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unstake(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;0.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;100.0001&quot;</highlight><highlight class="normal">)<sp/>)</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//check<sp/>that<sp/>nothing<sp/>has<sp/>changed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref><sp/>=<sp/>get_total_stake(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;210.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref>[</highlight><highlight class="stringliteral">&quot;net_weight&quot;</highlight><highlight class="normal">].as&lt;asset&gt;());</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;110.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref>[</highlight><highlight class="stringliteral">&quot;cpu_weight&quot;</highlight><highlight class="normal">].as&lt;asset&gt;());</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;700.0000&quot;</highlight><highlight class="normal">),<sp/>get_balance(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="473"><highlight class="normal">}<sp/><ref refid="eosio_8system__tests_8cpp_1a057cb719bfa291fae56dc6ba5fa7a8d1" kindref="member">FC_LOG_AND_RETHROW</ref>()</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><ref refid="eosio_8system__tests_8cpp_1a8a1841911da283583ec346df954d73a1" kindref="member">BOOST_FIXTURE_TEST_CASE</ref>(<sp/>delegate_to_another_user,<sp/><ref refid="classeosio__system_1_1eosio__system__tester" kindref="compound">eosio_system_tester</ref><sp/>)<sp/><ref refid="eosio_8system__tests_8cpp_1ae89aac94d502abdd3c8d055174c221fc" kindref="member">try</ref><sp/>{</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/>cross_15_percent_threshold();</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a743a21c2e0e86a8aeacc66e5c80c51ef" kindref="member">issue_and_transfer</ref>(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1000.0000&quot;</highlight><highlight class="normal">),<sp/><sp/>config::system_account_name<sp/>);</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>stake<sp/>(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;200.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;100.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref><sp/>=<sp/>get_total_stake(<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;210.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref>[</highlight><highlight class="stringliteral">&quot;net_weight&quot;</highlight><highlight class="normal">].as&lt;asset&gt;());</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;110.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref>[</highlight><highlight class="stringliteral">&quot;cpu_weight&quot;</highlight><highlight class="normal">].as&lt;asset&gt;());</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;700.0000&quot;</highlight><highlight class="normal">),<sp/>get_balance(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//all<sp/>voting<sp/>power<sp/>goes<sp/>to<sp/>alice1111111</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1abf3d4eb475605f9a73224e835cd3fb71" kindref="member">REQUIRE_MATCHING_OBJECT</ref>(<sp/><ref refid="namespaceeosio__system_1a88231cdd2d2c65528b97fb62b1fad462" kindref="member">voter</ref>(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;300.0000&quot;</highlight><highlight class="normal">)<sp/>),<sp/>get_voter_info(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//but<sp/>not<sp/>to<sp/>bob111111111</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>get_voter_info(<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal"><sp/>).is_null()<sp/>);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//bob111111111<sp/>should<sp/>not<sp/>be<sp/>able<sp/>to<sp/>unstake<sp/>what<sp/>was<sp/>staked<sp/>by<sp/>alice1111111</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;insufficient<sp/>staked<sp/>cpu<sp/>bandwidth&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unstake(<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;0.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;10.0000&quot;</highlight><highlight class="normal">)<sp/>)</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;insufficient<sp/>staked<sp/>net<sp/>bandwidth&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unstake(<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;10.0000&quot;</highlight><highlight class="normal">),<sp/><sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;0.0000&quot;</highlight><highlight class="normal">)<sp/>)</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a743a21c2e0e86a8aeacc66e5c80c51ef" kindref="member">issue_and_transfer</ref>(<sp/></highlight><highlight class="stringliteral">&quot;carol1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1000.0000&quot;</highlight><highlight class="normal">),<sp/><sp/>config::system_account_name<sp/>);</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>stake(<sp/></highlight><highlight class="stringliteral">&quot;carol1111111&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;20.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;10.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref><sp/>=<sp/>get_total_stake(<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;230.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref>[</highlight><highlight class="stringliteral">&quot;net_weight&quot;</highlight><highlight class="normal">].as&lt;asset&gt;());</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;120.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref>[</highlight><highlight class="stringliteral">&quot;cpu_weight&quot;</highlight><highlight class="normal">].as&lt;asset&gt;());</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;970.0000&quot;</highlight><highlight class="normal">),<sp/>get_balance(<sp/></highlight><highlight class="stringliteral">&quot;carol1111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1abf3d4eb475605f9a73224e835cd3fb71" kindref="member">REQUIRE_MATCHING_OBJECT</ref>(<sp/><ref refid="namespaceeosio__system_1a88231cdd2d2c65528b97fb62b1fad462" kindref="member">voter</ref>(<sp/></highlight><highlight class="stringliteral">&quot;carol1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;30.0000&quot;</highlight><highlight class="normal">)<sp/>),<sp/>get_voter_info(<sp/></highlight><highlight class="stringliteral">&quot;carol1111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//alice1111111<sp/>should<sp/>not<sp/>be<sp/>able<sp/>to<sp/>unstake<sp/>money<sp/>staked<sp/>by<sp/>carol1111111</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;insufficient<sp/>staked<sp/>net<sp/>bandwidth&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unstake(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;2001.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1.0000&quot;</highlight><highlight class="normal">)<sp/>)</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;insufficient<sp/>staked<sp/>cpu<sp/>bandwidth&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unstake(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;101.0000&quot;</highlight><highlight class="normal">)<sp/>)</highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref><sp/>=<sp/>get_total_stake(<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;230.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref>[</highlight><highlight class="stringliteral">&quot;net_weight&quot;</highlight><highlight class="normal">].as&lt;asset&gt;());</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;120.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref>[</highlight><highlight class="stringliteral">&quot;cpu_weight&quot;</highlight><highlight class="normal">].as&lt;asset&gt;());</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//balance<sp/>should<sp/>not<sp/>change<sp/>after<sp/>unsuccessful<sp/>attempts<sp/>to<sp/>unstake</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;700.0000&quot;</highlight><highlight class="normal">),<sp/>get_balance(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//voting<sp/>power<sp/>too</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1abf3d4eb475605f9a73224e835cd3fb71" kindref="member">REQUIRE_MATCHING_OBJECT</ref>(<sp/><ref refid="namespaceeosio__system_1a88231cdd2d2c65528b97fb62b1fad462" kindref="member">voter</ref>(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;300.0000&quot;</highlight><highlight class="normal">)<sp/>),<sp/>get_voter_info(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1abf3d4eb475605f9a73224e835cd3fb71" kindref="member">REQUIRE_MATCHING_OBJECT</ref>(<sp/><ref refid="namespaceeosio__system_1a88231cdd2d2c65528b97fb62b1fad462" kindref="member">voter</ref>(<sp/></highlight><highlight class="stringliteral">&quot;carol1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;30.0000&quot;</highlight><highlight class="normal">)<sp/>),<sp/>get_voter_info(<sp/></highlight><highlight class="stringliteral">&quot;carol1111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>get_voter_info(<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal"><sp/>).is_null()<sp/>);</highlight></codeline>
<codeline lineno="529"><highlight class="normal">}<sp/><ref refid="eosio_8system__tests_8cpp_1a057cb719bfa291fae56dc6ba5fa7a8d1" kindref="member">FC_LOG_AND_RETHROW</ref>()</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><ref refid="eosio_8system__tests_8cpp_1a8a1841911da283583ec346df954d73a1" kindref="member">BOOST_FIXTURE_TEST_CASE</ref>(<sp/>stake_unstake_separate,<sp/><ref refid="classeosio__system_1_1eosio__system__tester" kindref="compound">eosio_system_tester</ref><sp/>)<sp/><ref refid="eosio_8system__tests_8cpp_1ae89aac94d502abdd3c8d055174c221fc" kindref="member">try</ref><sp/>{</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/>cross_15_percent_threshold();</highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a743a21c2e0e86a8aeacc66e5c80c51ef" kindref="member">issue_and_transfer</ref>(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1000.0000&quot;</highlight><highlight class="normal">),<sp/><sp/>config::system_account_name<sp/>);</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1000.0000&quot;</highlight><highlight class="normal">),<sp/>get_balance(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//everything<sp/>at<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>stake(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;10.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;20.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref><sp/>=<sp/>get_total_stake(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;20.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref>[</highlight><highlight class="stringliteral">&quot;net_weight&quot;</highlight><highlight class="normal">].as&lt;asset&gt;());</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;30.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref>[</highlight><highlight class="stringliteral">&quot;cpu_weight&quot;</highlight><highlight class="normal">].as&lt;asset&gt;());</highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//cpu</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>stake(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;100.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;0.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref><sp/>=<sp/>get_total_stake(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;120.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref>[</highlight><highlight class="stringliteral">&quot;net_weight&quot;</highlight><highlight class="normal">].as&lt;asset&gt;());</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;30.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref>[</highlight><highlight class="stringliteral">&quot;cpu_weight&quot;</highlight><highlight class="normal">].as&lt;asset&gt;());</highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//net</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>stake(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;0.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;200.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref><sp/>=<sp/>get_total_stake(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;120.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref>[</highlight><highlight class="stringliteral">&quot;net_weight&quot;</highlight><highlight class="normal">].as&lt;asset&gt;());</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;230.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref>[</highlight><highlight class="stringliteral">&quot;cpu_weight&quot;</highlight><highlight class="normal">].as&lt;asset&gt;());</highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//unstake<sp/>cpu</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>unstake(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;100.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;0.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref><sp/>=<sp/>get_total_stake(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;20.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref>[</highlight><highlight class="stringliteral">&quot;net_weight&quot;</highlight><highlight class="normal">].as&lt;asset&gt;());</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;230.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref>[</highlight><highlight class="stringliteral">&quot;cpu_weight&quot;</highlight><highlight class="normal">].as&lt;asset&gt;());</highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//unstake<sp/>net</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>unstake(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;0.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;200.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref><sp/>=<sp/>get_total_stake(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;20.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref>[</highlight><highlight class="stringliteral">&quot;net_weight&quot;</highlight><highlight class="normal">].as&lt;asset&gt;());</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;30.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref>[</highlight><highlight class="stringliteral">&quot;cpu_weight&quot;</highlight><highlight class="normal">].as&lt;asset&gt;());</highlight></codeline>
<codeline lineno="567"><highlight class="normal">}<sp/><ref refid="eosio_8system__tests_8cpp_1a057cb719bfa291fae56dc6ba5fa7a8d1" kindref="member">FC_LOG_AND_RETHROW</ref>()</highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><ref refid="eosio_8system__tests_8cpp_1a8a1841911da283583ec346df954d73a1" kindref="member">BOOST_FIXTURE_TEST_CASE</ref>(<sp/>adding_stake_partial_unstake,<sp/><ref refid="classeosio__system_1_1eosio__system__tester" kindref="compound">eosio_system_tester</ref><sp/>)<sp/><ref refid="eosio_8system__tests_8cpp_1ae89aac94d502abdd3c8d055174c221fc" kindref="member">try</ref><sp/>{</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/>cross_15_percent_threshold();</highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a743a21c2e0e86a8aeacc66e5c80c51ef" kindref="member">issue_and_transfer</ref>(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1000.0000&quot;</highlight><highlight class="normal">),<sp/><sp/>config::system_account_name<sp/>);</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>stake(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;200.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;100.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1abf3d4eb475605f9a73224e835cd3fb71" kindref="member">REQUIRE_MATCHING_OBJECT</ref>(<sp/><ref refid="namespaceeosio__system_1a88231cdd2d2c65528b97fb62b1fad462" kindref="member">voter</ref>(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;300.0000&quot;</highlight><highlight class="normal">)<sp/>),<sp/>get_voter_info(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>stake(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;100.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;50.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref><sp/>=<sp/>get_total_stake(<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;310.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref>[</highlight><highlight class="stringliteral">&quot;net_weight&quot;</highlight><highlight class="normal">].as&lt;asset&gt;());</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;160.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref>[</highlight><highlight class="stringliteral">&quot;cpu_weight&quot;</highlight><highlight class="normal">].as&lt;asset&gt;());</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1abf3d4eb475605f9a73224e835cd3fb71" kindref="member">REQUIRE_MATCHING_OBJECT</ref>(<sp/><ref refid="namespaceeosio__system_1a88231cdd2d2c65528b97fb62b1fad462" kindref="member">voter</ref>(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;450.0000&quot;</highlight><highlight class="normal">)<sp/>),<sp/>get_voter_info(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;550.0000&quot;</highlight><highlight class="normal">),<sp/>get_balance(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//unstake<sp/>a<sp/>share</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>unstake(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;150.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;75.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref><sp/>=<sp/>get_total_stake(<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;160.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref>[</highlight><highlight class="stringliteral">&quot;net_weight&quot;</highlight><highlight class="normal">].as&lt;asset&gt;());</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;85.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref>[</highlight><highlight class="stringliteral">&quot;cpu_weight&quot;</highlight><highlight class="normal">].as&lt;asset&gt;());</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1abf3d4eb475605f9a73224e835cd3fb71" kindref="member">REQUIRE_MATCHING_OBJECT</ref>(<sp/><ref refid="namespaceeosio__system_1a88231cdd2d2c65528b97fb62b1fad462" kindref="member">voter</ref>(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;225.0000&quot;</highlight><highlight class="normal">)<sp/>),<sp/>get_voter_info(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//unstake<sp/>more</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>unstake(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;50.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;25.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref><sp/>=<sp/>get_total_stake(<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;110.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref>[</highlight><highlight class="stringliteral">&quot;net_weight&quot;</highlight><highlight class="normal">].as&lt;asset&gt;());</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;60.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref>[</highlight><highlight class="stringliteral">&quot;cpu_weight&quot;</highlight><highlight class="normal">].as&lt;asset&gt;());</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1abf3d4eb475605f9a73224e835cd3fb71" kindref="member">REQUIRE_MATCHING_OBJECT</ref>(<sp/><ref refid="namespaceeosio__system_1a88231cdd2d2c65528b97fb62b1fad462" kindref="member">voter</ref>(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;150.0000&quot;</highlight><highlight class="normal">)<sp/>),<sp/>get_voter_info(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//combined<sp/>amount<sp/>should<sp/>be<sp/>available<sp/>only<sp/>in<sp/>3<sp/>days</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::days(2)<sp/>);</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aa1213f0f2c7a53ea968859f3cab582c3" kindref="member">produce_blocks</ref>(1);</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;550.0000&quot;</highlight><highlight class="normal">),<sp/>get_balance(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::days(1)<sp/>);</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aa1213f0f2c7a53ea968859f3cab582c3" kindref="member">produce_blocks</ref>(1);</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;850.0000&quot;</highlight><highlight class="normal">),<sp/>get_balance(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal">}<sp/><ref refid="eosio_8system__tests_8cpp_1a057cb719bfa291fae56dc6ba5fa7a8d1" kindref="member">FC_LOG_AND_RETHROW</ref>()</highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"><ref refid="eosio_8system__tests_8cpp_1a8a1841911da283583ec346df954d73a1" kindref="member">BOOST_FIXTURE_TEST_CASE</ref>(<sp/>stake_from_refund,<sp/><ref refid="classeosio__system_1_1eosio__system__tester" kindref="compound">eosio_system_tester</ref><sp/>)<sp/><ref refid="eosio_8system__tests_8cpp_1ae89aac94d502abdd3c8d055174c221fc" kindref="member">try</ref><sp/>{</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/>cross_15_percent_threshold();</highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a743a21c2e0e86a8aeacc66e5c80c51ef" kindref="member">issue_and_transfer</ref>(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1000.0000&quot;</highlight><highlight class="normal">),<sp/><sp/>config::system_account_name<sp/>);</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>stake(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;200.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;100.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref><sp/>=<sp/>get_total_stake(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;210.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref>[</highlight><highlight class="stringliteral">&quot;net_weight&quot;</highlight><highlight class="normal">].as&lt;asset&gt;());</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;110.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref>[</highlight><highlight class="stringliteral">&quot;cpu_weight&quot;</highlight><highlight class="normal">].as&lt;asset&gt;());</highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>stake(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;50.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;50.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref><sp/>=<sp/>get_total_stake(<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;60.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref>[</highlight><highlight class="stringliteral">&quot;net_weight&quot;</highlight><highlight class="normal">].as&lt;asset&gt;());</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;60.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref>[</highlight><highlight class="stringliteral">&quot;cpu_weight&quot;</highlight><highlight class="normal">].as&lt;asset&gt;());</highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1abf3d4eb475605f9a73224e835cd3fb71" kindref="member">REQUIRE_MATCHING_OBJECT</ref>(<sp/><ref refid="namespaceeosio__system_1a88231cdd2d2c65528b97fb62b1fad462" kindref="member">voter</ref>(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;400.0000&quot;</highlight><highlight class="normal">)<sp/>),<sp/>get_voter_info(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;600.0000&quot;</highlight><highlight class="normal">),<sp/>get_balance(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//unstake<sp/>a<sp/>share</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>unstake(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;100.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;50.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref><sp/>=<sp/>get_total_stake(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;110.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref>[</highlight><highlight class="stringliteral">&quot;net_weight&quot;</highlight><highlight class="normal">].as&lt;asset&gt;());</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;60.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref>[</highlight><highlight class="stringliteral">&quot;cpu_weight&quot;</highlight><highlight class="normal">].as&lt;asset&gt;());</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1abf3d4eb475605f9a73224e835cd3fb71" kindref="member">REQUIRE_MATCHING_OBJECT</ref>(<sp/><ref refid="namespaceeosio__system_1a88231cdd2d2c65528b97fb62b1fad462" kindref="member">voter</ref>(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;250.0000&quot;</highlight><highlight class="normal">)<sp/>),<sp/>get_voter_info(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;600.0000&quot;</highlight><highlight class="normal">),<sp/>get_balance(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="eosio_8system__tests_8cpp_1a99583a9ba487aa24e06f015be9903059" kindref="member">refund</ref><sp/>=<sp/>get_refund_request(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n<sp/>);</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;100.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="eosio_8system__tests_8cpp_1a99583a9ba487aa24e06f015be9903059" kindref="member">refund</ref>[</highlight><highlight class="stringliteral">&quot;net_amount&quot;</highlight><highlight class="normal">].as&lt;asset&gt;()<sp/>);</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(<sp/></highlight><highlight class="stringliteral">&quot;50.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="eosio_8system__tests_8cpp_1a99583a9ba487aa24e06f015be9903059" kindref="member">refund</ref>[</highlight><highlight class="stringliteral">&quot;cpu_amount&quot;</highlight><highlight class="normal">].as&lt;asset&gt;()<sp/>);</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//XXX<sp/>auto<sp/>request_time<sp/>=<sp/>refund[&quot;request_time&quot;].as_int64();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//alice<sp/>delegates<sp/>to<sp/>bob,<sp/>should<sp/>pull<sp/>from<sp/>liquid<sp/>balance<sp/>not<sp/>refund</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>stake(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;50.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;50.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref><sp/>=<sp/>get_total_stake(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;110.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref>[</highlight><highlight class="stringliteral">&quot;net_weight&quot;</highlight><highlight class="normal">].as&lt;asset&gt;());</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;60.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref>[</highlight><highlight class="stringliteral">&quot;cpu_weight&quot;</highlight><highlight class="normal">].as&lt;asset&gt;());</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1abf3d4eb475605f9a73224e835cd3fb71" kindref="member">REQUIRE_MATCHING_OBJECT</ref>(<sp/><ref refid="namespaceeosio__system_1a88231cdd2d2c65528b97fb62b1fad462" kindref="member">voter</ref>(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;350.0000&quot;</highlight><highlight class="normal">)<sp/>),<sp/>get_voter_info(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;500.0000&quot;</highlight><highlight class="normal">),<sp/>get_balance(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a99583a9ba487aa24e06f015be9903059" kindref="member">refund</ref><sp/>=<sp/>get_refund_request(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n<sp/>);</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;100.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="eosio_8system__tests_8cpp_1a99583a9ba487aa24e06f015be9903059" kindref="member">refund</ref>[</highlight><highlight class="stringliteral">&quot;net_amount&quot;</highlight><highlight class="normal">].as&lt;asset&gt;()<sp/>);</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(<sp/></highlight><highlight class="stringliteral">&quot;50.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="eosio_8system__tests_8cpp_1a99583a9ba487aa24e06f015be9903059" kindref="member">refund</ref>[</highlight><highlight class="stringliteral">&quot;cpu_amount&quot;</highlight><highlight class="normal">].as&lt;asset&gt;()<sp/>);</highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//stake<sp/>less<sp/>than<sp/>pending<sp/>refund,<sp/>entire<sp/>amount<sp/>should<sp/>be<sp/>taken<sp/>from<sp/>refund</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>stake(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;50.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;25.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref><sp/>=<sp/>get_total_stake(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;160.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref>[</highlight><highlight class="stringliteral">&quot;net_weight&quot;</highlight><highlight class="normal">].as&lt;asset&gt;());</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;85.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref>[</highlight><highlight class="stringliteral">&quot;cpu_weight&quot;</highlight><highlight class="normal">].as&lt;asset&gt;());</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a99583a9ba487aa24e06f015be9903059" kindref="member">refund</ref><sp/>=<sp/>get_refund_request(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n<sp/>);</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;50.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="eosio_8system__tests_8cpp_1a99583a9ba487aa24e06f015be9903059" kindref="member">refund</ref>[</highlight><highlight class="stringliteral">&quot;net_amount&quot;</highlight><highlight class="normal">].as&lt;asset&gt;()<sp/>);</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;25.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="eosio_8system__tests_8cpp_1a99583a9ba487aa24e06f015be9903059" kindref="member">refund</ref>[</highlight><highlight class="stringliteral">&quot;cpu_amount&quot;</highlight><highlight class="normal">].as&lt;asset&gt;()<sp/>);</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//request<sp/>time<sp/>should<sp/>stay<sp/>the<sp/>same</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//BOOST_REQUIRE_EQUAL(<sp/>request_time,<sp/>refund[&quot;request_time&quot;].as_int64()<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//balance<sp/>should<sp/>stay<sp/>the<sp/>same</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;500.0000&quot;</highlight><highlight class="normal">),<sp/>get_balance(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//stake<sp/>exactly<sp/>pending<sp/>refund<sp/>amount</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>stake(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;50.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;25.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref><sp/>=<sp/>get_total_stake(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;210.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref>[</highlight><highlight class="stringliteral">&quot;net_weight&quot;</highlight><highlight class="normal">].as&lt;asset&gt;());</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;110.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref>[</highlight><highlight class="stringliteral">&quot;cpu_weight&quot;</highlight><highlight class="normal">].as&lt;asset&gt;());</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//pending<sp/>refund<sp/>should<sp/>be<sp/>removed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a99583a9ba487aa24e06f015be9903059" kindref="member">refund</ref><sp/>=<sp/>get_refund_request(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n<sp/>);</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/><ref refid="eosio_8system__tests_8cpp_1a99583a9ba487aa24e06f015be9903059" kindref="member">refund</ref>.is_null()<sp/>);</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//balance<sp/>should<sp/>stay<sp/>the<sp/>same</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;500.0000&quot;</highlight><highlight class="normal">),<sp/>get_balance(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//create<sp/>pending<sp/>refund<sp/>again</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>unstake(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;200.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;100.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref><sp/>=<sp/>get_total_stake(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;10.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref>[</highlight><highlight class="stringliteral">&quot;net_weight&quot;</highlight><highlight class="normal">].as&lt;asset&gt;());</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;10.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref>[</highlight><highlight class="stringliteral">&quot;cpu_weight&quot;</highlight><highlight class="normal">].as&lt;asset&gt;());</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;500.0000&quot;</highlight><highlight class="normal">),<sp/>get_balance(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a99583a9ba487aa24e06f015be9903059" kindref="member">refund</ref><sp/>=<sp/>get_refund_request(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n<sp/>);</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;200.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="eosio_8system__tests_8cpp_1a99583a9ba487aa24e06f015be9903059" kindref="member">refund</ref>[</highlight><highlight class="stringliteral">&quot;net_amount&quot;</highlight><highlight class="normal">].as&lt;asset&gt;()<sp/>);</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;100.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="eosio_8system__tests_8cpp_1a99583a9ba487aa24e06f015be9903059" kindref="member">refund</ref>[</highlight><highlight class="stringliteral">&quot;cpu_amount&quot;</highlight><highlight class="normal">].as&lt;asset&gt;()<sp/>);</highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//stake<sp/>more<sp/>than<sp/>pending<sp/>refund</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>stake(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;300.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;200.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref><sp/>=<sp/>get_total_stake(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;310.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref>[</highlight><highlight class="stringliteral">&quot;net_weight&quot;</highlight><highlight class="normal">].as&lt;asset&gt;());</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;210.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref>[</highlight><highlight class="stringliteral">&quot;cpu_weight&quot;</highlight><highlight class="normal">].as&lt;asset&gt;());</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1abf3d4eb475605f9a73224e835cd3fb71" kindref="member">REQUIRE_MATCHING_OBJECT</ref>(<sp/><ref refid="namespaceeosio__system_1a88231cdd2d2c65528b97fb62b1fad462" kindref="member">voter</ref>(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;700.0000&quot;</highlight><highlight class="normal">)<sp/>),<sp/>get_voter_info(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a99583a9ba487aa24e06f015be9903059" kindref="member">refund</ref><sp/>=<sp/>get_refund_request(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n<sp/>);</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/><ref refid="eosio_8system__tests_8cpp_1a99583a9ba487aa24e06f015be9903059" kindref="member">refund</ref>.is_null()<sp/>);</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//200<sp/>core<sp/>tokens<sp/>should<sp/>be<sp/>taken<sp/>from<sp/>alice&apos;s<sp/>account</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;300.0000&quot;</highlight><highlight class="normal">),<sp/>get_balance(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal">}<sp/><ref refid="eosio_8system__tests_8cpp_1a057cb719bfa291fae56dc6ba5fa7a8d1" kindref="member">FC_LOG_AND_RETHROW</ref>()</highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"><ref refid="eosio_8system__tests_8cpp_1a8a1841911da283583ec346df954d73a1" kindref="member">BOOST_FIXTURE_TEST_CASE</ref>(<sp/>stake_to_another_user_not_from_refund,<sp/><ref refid="classeosio__system_1_1eosio__system__tester" kindref="compound">eosio_system_tester</ref><sp/>)<sp/><ref refid="eosio_8system__tests_8cpp_1ae89aac94d502abdd3c8d055174c221fc" kindref="member">try</ref><sp/>{</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/>cross_15_percent_threshold();</highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a743a21c2e0e86a8aeacc66e5c80c51ef" kindref="member">issue_and_transfer</ref>(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1000.0000&quot;</highlight><highlight class="normal">),<sp/><sp/>config::system_account_name<sp/>);</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>stake(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;200.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;100.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref><sp/>=<sp/>get_total_stake(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;210.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref>[</highlight><highlight class="stringliteral">&quot;net_weight&quot;</highlight><highlight class="normal">].as&lt;asset&gt;());</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;110.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref>[</highlight><highlight class="stringliteral">&quot;cpu_weight&quot;</highlight><highlight class="normal">].as&lt;asset&gt;());</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;700.0000&quot;</highlight><highlight class="normal">),<sp/>get_balance(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1abf3d4eb475605f9a73224e835cd3fb71" kindref="member">REQUIRE_MATCHING_OBJECT</ref>(<sp/><ref refid="namespaceeosio__system_1a88231cdd2d2c65528b97fb62b1fad462" kindref="member">voter</ref>(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;300.0000&quot;</highlight><highlight class="normal">)<sp/>),<sp/>get_voter_info(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;700.0000&quot;</highlight><highlight class="normal">),<sp/>get_balance(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="713"><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//unstake</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>unstake(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;200.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;100.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="eosio_8system__tests_8cpp_1a99583a9ba487aa24e06f015be9903059" kindref="member">refund</ref><sp/>=<sp/>get_refund_request(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n<sp/>);</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;200.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="eosio_8system__tests_8cpp_1a99583a9ba487aa24e06f015be9903059" kindref="member">refund</ref>[</highlight><highlight class="stringliteral">&quot;net_amount&quot;</highlight><highlight class="normal">].as&lt;asset&gt;()<sp/>);</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;100.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="eosio_8system__tests_8cpp_1a99583a9ba487aa24e06f015be9903059" kindref="member">refund</ref>[</highlight><highlight class="stringliteral">&quot;cpu_amount&quot;</highlight><highlight class="normal">].as&lt;asset&gt;()<sp/>);</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//auto<sp/>orig_request_time<sp/>=<sp/>refund[&quot;request_time&quot;].as_int64();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//stake<sp/>to<sp/>another<sp/>user</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>stake(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;200.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;100.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref><sp/>=<sp/>get_total_stake(<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;210.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref>[</highlight><highlight class="stringliteral">&quot;net_weight&quot;</highlight><highlight class="normal">].as&lt;asset&gt;());</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;110.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="eosio_8system__tests_8cpp_1a51c0066a609dc07da830b1c85571456b" kindref="member">total</ref>[</highlight><highlight class="stringliteral">&quot;cpu_weight&quot;</highlight><highlight class="normal">].as&lt;asset&gt;());</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//stake<sp/>should<sp/>be<sp/>taken<sp/>from<sp/>alice&apos;s<sp/>balance,<sp/>and<sp/>refund<sp/>request<sp/>should<sp/>stay<sp/>the<sp/>same</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;400.0000&quot;</highlight><highlight class="normal">),<sp/>get_balance(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a99583a9ba487aa24e06f015be9903059" kindref="member">refund</ref><sp/>=<sp/>get_refund_request(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n<sp/>);</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;200.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="eosio_8system__tests_8cpp_1a99583a9ba487aa24e06f015be9903059" kindref="member">refund</ref>[</highlight><highlight class="stringliteral">&quot;net_amount&quot;</highlight><highlight class="normal">].as&lt;asset&gt;()<sp/>);</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;100.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="eosio_8system__tests_8cpp_1a99583a9ba487aa24e06f015be9903059" kindref="member">refund</ref>[</highlight><highlight class="stringliteral">&quot;cpu_amount&quot;</highlight><highlight class="normal">].as&lt;asset&gt;()<sp/>);</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//BOOST_REQUIRE_EQUAL(<sp/>orig_request_time,<sp/>refund[&quot;request_time&quot;].as_int64()<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal">}<sp/><ref refid="eosio_8system__tests_8cpp_1a057cb719bfa291fae56dc6ba5fa7a8d1" kindref="member">FC_LOG_AND_RETHROW</ref>()</highlight></codeline>
<codeline lineno="734"><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Tests<sp/>for<sp/>voting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"><ref refid="eosio_8system__tests_8cpp_1a8a1841911da283583ec346df954d73a1" kindref="member">BOOST_FIXTURE_TEST_CASE</ref>(<sp/>producer_register_unregister,<sp/><ref refid="classeosio__system_1_1eosio__system__tester" kindref="compound">eosio_system_tester</ref><sp/>)<sp/><ref refid="eosio_8system__tests_8cpp_1ae89aac94d502abdd3c8d055174c221fc" kindref="member">try</ref><sp/>{</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a743a21c2e0e86a8aeacc66e5c80c51ef" kindref="member">issue_and_transfer</ref>(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1000.0000&quot;</highlight><highlight class="normal">),<sp/><sp/>config::system_account_name<sp/>);</highlight></codeline>
<codeline lineno="738"><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//fc::variant<sp/>params<sp/>=<sp/>producer_parameters_example(1);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="eosio_8system__tests_8cpp_1a0bbff253b45c1c6e04cc32309feb55a1" kindref="member">key</ref><sp/>=<sp/><sp/>fc::crypto::public_key(<sp/>std::string(</highlight><highlight class="stringliteral">&quot;EOS6MRyAjQq8ud7hVNYcfnVPJqcVpscN5So8BhtHuGYqET5GDW5CV&quot;</highlight><highlight class="normal">)<sp/>);<sp/></highlight><highlight class="comment">//<sp/>cspell:disable-line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(</highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;regproducer&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;producer&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;producer_key&quot;</highlight><highlight class="normal">,<sp/><ref refid="eosio_8system__tests_8cpp_1a0bbff253b45c1c6e04cc32309feb55a1" kindref="member">key</ref><sp/>)</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;url&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;http://block.one&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;location&quot;</highlight><highlight class="normal">,<sp/>1)</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="eosio_8system__tests_8cpp_1a0ecaa1862f168e8a31db8236916a811e" kindref="member">info</ref><sp/>=<sp/>get_producer_info(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="eosio_8system__tests_8cpp_1a0ecaa1862f168e8a31db8236916a811e" kindref="member">info</ref>[</highlight><highlight class="stringliteral">&quot;owner&quot;</highlight><highlight class="normal">].as_string()<sp/>);</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>0,<sp/><ref refid="eosio_8system__tests_8cpp_1a0ecaa1862f168e8a31db8236916a811e" kindref="member">info</ref>[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/></highlight><highlight class="stringliteral">&quot;http://block.one&quot;</highlight><highlight class="normal">,<sp/><ref refid="eosio_8system__tests_8cpp_1a0ecaa1862f168e8a31db8236916a811e" kindref="member">info</ref>[</highlight><highlight class="stringliteral">&quot;url&quot;</highlight><highlight class="normal">].as_string()<sp/>);</highlight></codeline>
<codeline lineno="753"><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//change<sp/>parameters<sp/>one<sp/>by<sp/>one<sp/>to<sp/>check<sp/>for<sp/>things<sp/>like<sp/>#3783</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//fc::variant<sp/>params2<sp/>=<sp/>producer_parameters_example(2);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(</highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;regproducer&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;producer&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;producer_key&quot;</highlight><highlight class="normal">,<sp/><ref refid="eosio_8system__tests_8cpp_1a0bbff253b45c1c6e04cc32309feb55a1" kindref="member">key</ref><sp/>)</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;url&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;http://block.two&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;location&quot;</highlight><highlight class="normal">,<sp/>1)</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0ecaa1862f168e8a31db8236916a811e" kindref="member">info</ref><sp/>=<sp/>get_producer_info(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="eosio_8system__tests_8cpp_1a0ecaa1862f168e8a31db8236916a811e" kindref="member">info</ref>[</highlight><highlight class="stringliteral">&quot;owner&quot;</highlight><highlight class="normal">].as_string()<sp/>);</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="eosio_8system__tests_8cpp_1a0bbff253b45c1c6e04cc32309feb55a1" kindref="member">key</ref>,<sp/>fc::crypto::public_key(<ref refid="eosio_8system__tests_8cpp_1a0ecaa1862f168e8a31db8236916a811e" kindref="member">info</ref>[</highlight><highlight class="stringliteral">&quot;producer_key&quot;</highlight><highlight class="normal">].as_string())<sp/>);</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/></highlight><highlight class="stringliteral">&quot;http://block.two&quot;</highlight><highlight class="normal">,<sp/><ref refid="eosio_8system__tests_8cpp_1a0ecaa1862f168e8a31db8236916a811e" kindref="member">info</ref>[</highlight><highlight class="stringliteral">&quot;url&quot;</highlight><highlight class="normal">].as_string()<sp/>);</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>1,<sp/><ref refid="eosio_8system__tests_8cpp_1a0ecaa1862f168e8a31db8236916a811e" kindref="member">info</ref>[</highlight><highlight class="stringliteral">&quot;location&quot;</highlight><highlight class="normal">].as_int64()<sp/>);</highlight></codeline>
<codeline lineno="768"><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="eosio_8system__tests_8cpp_1adca31b96231ede220d4c0eb10e553304" kindref="member">key2</ref><sp/>=<sp/><sp/>fc::crypto::public_key(<sp/>std::string(</highlight><highlight class="stringliteral">&quot;EOS5jnmSKrzdBHE9n8hw58y7yxFWBC8SNiG7m8S1crJH3KvAnf9o6&quot;</highlight><highlight class="normal">)<sp/>);<sp/></highlight><highlight class="comment">//<sp/>cspell:disable-line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(</highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;regproducer&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;producer&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;producer_key&quot;</highlight><highlight class="normal">,<sp/><ref refid="eosio_8system__tests_8cpp_1adca31b96231ede220d4c0eb10e553304" kindref="member">key2</ref><sp/>)</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;url&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;http://block.two&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;location&quot;</highlight><highlight class="normal">,<sp/>2)</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0ecaa1862f168e8a31db8236916a811e" kindref="member">info</ref><sp/>=<sp/>get_producer_info(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="eosio_8system__tests_8cpp_1a0ecaa1862f168e8a31db8236916a811e" kindref="member">info</ref>[</highlight><highlight class="stringliteral">&quot;owner&quot;</highlight><highlight class="normal">].as_string()<sp/>);</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="eosio_8system__tests_8cpp_1adca31b96231ede220d4c0eb10e553304" kindref="member">key2</ref>,<sp/>fc::crypto::public_key(<ref refid="eosio_8system__tests_8cpp_1a0ecaa1862f168e8a31db8236916a811e" kindref="member">info</ref>[</highlight><highlight class="stringliteral">&quot;producer_key&quot;</highlight><highlight class="normal">].as_string())<sp/>);</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/></highlight><highlight class="stringliteral">&quot;http://block.two&quot;</highlight><highlight class="normal">,<sp/><ref refid="eosio_8system__tests_8cpp_1a0ecaa1862f168e8a31db8236916a811e" kindref="member">info</ref>[</highlight><highlight class="stringliteral">&quot;url&quot;</highlight><highlight class="normal">].as_string()<sp/>);</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>2,<sp/><ref refid="eosio_8system__tests_8cpp_1a0ecaa1862f168e8a31db8236916a811e" kindref="member">info</ref>[</highlight><highlight class="stringliteral">&quot;location&quot;</highlight><highlight class="normal">].as_int64()<sp/>);</highlight></codeline>
<codeline lineno="782"><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//unregister<sp/>producer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(</highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;unregprod&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;producer&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0ecaa1862f168e8a31db8236916a811e" kindref="member">info</ref><sp/>=<sp/>get_producer_info(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//key<sp/>should<sp/>be<sp/>empty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>fc::crypto::public_key(),<sp/>fc::crypto::public_key(<ref refid="eosio_8system__tests_8cpp_1a0ecaa1862f168e8a31db8236916a811e" kindref="member">info</ref>[</highlight><highlight class="stringliteral">&quot;producer_key&quot;</highlight><highlight class="normal">].as_string())<sp/>);</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//everything<sp/>else<sp/>should<sp/>stay<sp/>the<sp/>same</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="eosio_8system__tests_8cpp_1a0ecaa1862f168e8a31db8236916a811e" kindref="member">info</ref>[</highlight><highlight class="stringliteral">&quot;owner&quot;</highlight><highlight class="normal">].as_string()<sp/>);</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>0,<sp/><ref refid="eosio_8system__tests_8cpp_1a0ecaa1862f168e8a31db8236916a811e" kindref="member">info</ref>[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/></highlight><highlight class="stringliteral">&quot;http://block.two&quot;</highlight><highlight class="normal">,<sp/><ref refid="eosio_8system__tests_8cpp_1a0ecaa1862f168e8a31db8236916a811e" kindref="member">info</ref>[</highlight><highlight class="stringliteral">&quot;url&quot;</highlight><highlight class="normal">].as_string()<sp/>);</highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//unregister<sp/>bob111111111<sp/>who<sp/>is<sp/>not<sp/>a<sp/>producer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(<sp/></highlight><highlight class="stringliteral">&quot;producer<sp/>not<sp/>found&quot;</highlight><highlight class="normal"><sp/>),</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;unregprod&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;producer&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="802"><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="normal">}<sp/><ref refid="eosio_8system__tests_8cpp_1a057cb719bfa291fae56dc6ba5fa7a8d1" kindref="member">FC_LOG_AND_RETHROW</ref>()</highlight></codeline>
<codeline lineno="804"><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="normal"><ref refid="eosio_8system__tests_8cpp_1a8a1841911da283583ec346df954d73a1" kindref="member">BOOST_FIXTURE_TEST_CASE</ref>(<sp/>producer_wtmsig,<sp/><ref refid="classeosio__system_1_1eosio__system__tester" kindref="compound">eosio_system_tester</ref><sp/>)<sp/><ref refid="eosio_8system__tests_8cpp_1ae89aac94d502abdd3c8d055174c221fc" kindref="member">try</ref><sp/>{</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/>cross_15_percent_threshold();</highlight></codeline>
<codeline lineno="808"><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>control-&gt;active_producers().version,<sp/>0u<sp/>);</highlight></codeline>
<codeline lineno="810"><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a743a21c2e0e86a8aeacc66e5c80c51ef" kindref="member">issue_and_transfer</ref>(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;200000000.0000&quot;</highlight><highlight class="normal">),<sp/><sp/>config::system_account_name<sp/>);</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/>block_signing_authority_v0<sp/><ref refid="eosio_8system__tests_8cpp_1af71c16457d70c54eb0836ce802b408a1" kindref="member">alice_signing_authority</ref>;</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1af71c16457d70c54eb0836ce802b408a1" kindref="member">alice_signing_authority</ref>.threshold<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1af71c16457d70c54eb0836ce802b408a1" kindref="member">alice_signing_authority</ref>.keys.push_back(<sp/>{.key<sp/>=<sp/>get_public_key(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;bs1&quot;</highlight><highlight class="normal">),<sp/>.weight<sp/>=<sp/>1}<sp/>);</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1af71c16457d70c54eb0836ce802b408a1" kindref="member">alice_signing_authority</ref>.keys.push_back(<sp/>{.key<sp/>=<sp/>get_public_key(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;bs2&quot;</highlight><highlight class="normal">),<sp/>.weight<sp/>=<sp/>1}<sp/>);</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/>producer_authority<sp/><ref refid="eosio_8system__tests_8cpp_1a004286136832e1f30843b087eb1b847c" kindref="member">alice_producer_authority</ref><sp/>=<sp/>{.producer_name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n,<sp/>.authority<sp/>=<sp/><ref refid="eosio_8system__tests_8cpp_1af71c16457d70c54eb0836ce802b408a1" kindref="member">alice_signing_authority</ref>};</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;regproducer2&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;producer&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;producer_authority&quot;</highlight><highlight class="normal">,<sp/><ref refid="eosio_8system__tests_8cpp_1a004286136832e1f30843b087eb1b847c" kindref="member">alice_producer_authority</ref>.get_abi_variant()[</highlight><highlight class="stringliteral">&quot;authority&quot;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;url&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;http://block.one&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;location&quot;</highlight><highlight class="normal">,<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>stake(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;100000000.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;100000000.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>vote(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n,<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n<sp/>}<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="826"><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/>block_signing_private_keys.emplace(get_public_key(</highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;bs1&quot;</highlight><highlight class="normal">),<sp/>get_private_key(</highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;bs1&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="828"><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="eosio_8system__tests_8cpp_1ac8a8cc1d7e9eaa611ce8d6b626c74114" kindref="member">alice_prod_info</ref><sp/>=<sp/>get_producer_info(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n<sp/>);</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1ace57c45c9d9e2f0f9a438effcdb79ba5" kindref="member">wdump</ref>((<ref refid="eosio_8system__tests_8cpp_1ac8a8cc1d7e9eaa611ce8d6b626c74114" kindref="member">alice_prod_info</ref>));</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="eosio_8system__tests_8cpp_1ac8a8cc1d7e9eaa611ce8d6b626c74114" kindref="member">alice_prod_info</ref>[</highlight><highlight class="stringliteral">&quot;is_active&quot;</highlight><highlight class="normal">],<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="832"><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>();</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::minutes(2)<sp/>);</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aa1213f0f2c7a53ea968859f3cab582c3" kindref="member">produce_blocks</ref>(2);</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>control-&gt;active_producers().version,<sp/>1u<sp/>);</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>();</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>control-&gt;pending_block_producer(),<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n<sp/>);</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>();</highlight></codeline>
<codeline lineno="840"><highlight class="normal"></highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1af71c16457d70c54eb0836ce802b408a1" kindref="member">alice_signing_authority</ref>.threshold<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a004286136832e1f30843b087eb1b847c" kindref="member">alice_producer_authority</ref>.authority<sp/>=<sp/><ref refid="eosio_8system__tests_8cpp_1af71c16457d70c54eb0836ce802b408a1" kindref="member">alice_signing_authority</ref>;</highlight></codeline>
<codeline lineno="843"><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ensure<sp/>an<sp/>authority<sp/>with<sp/>a<sp/>threshold<sp/>of<sp/>0<sp/>is<sp/>rejected.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>error(</highlight><highlight class="stringliteral">&quot;assertion<sp/>failure<sp/>with<sp/>message:<sp/>invalid<sp/>producer<sp/>authority&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;regproducer2&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;producer&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;producer_authority&quot;</highlight><highlight class="normal">,<sp/><ref refid="eosio_8system__tests_8cpp_1a004286136832e1f30843b087eb1b847c" kindref="member">alice_producer_authority</ref>.get_abi_variant()[</highlight><highlight class="stringliteral">&quot;authority&quot;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;url&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;http://block.one&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;location&quot;</highlight><highlight class="normal">,<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="853"><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ensure<sp/>an<sp/>authority<sp/>that<sp/>is<sp/>not<sp/>satisfiable<sp/>is<sp/>rejected.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1af71c16457d70c54eb0836ce802b408a1" kindref="member">alice_signing_authority</ref>.threshold<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a004286136832e1f30843b087eb1b847c" kindref="member">alice_producer_authority</ref>.authority<sp/>=<sp/><ref refid="eosio_8system__tests_8cpp_1af71c16457d70c54eb0836ce802b408a1" kindref="member">alice_signing_authority</ref>;</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>error(</highlight><highlight class="stringliteral">&quot;assertion<sp/>failure<sp/>with<sp/>message:<sp/>invalid<sp/>producer<sp/>authority&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;regproducer2&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;producer&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;producer_authority&quot;</highlight><highlight class="normal">,<sp/><ref refid="eosio_8system__tests_8cpp_1a004286136832e1f30843b087eb1b847c" kindref="member">alice_producer_authority</ref>.get_abi_variant()[</highlight><highlight class="stringliteral">&quot;authority&quot;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;url&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;http://block.one&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;location&quot;</highlight><highlight class="normal">,<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="865"><highlight class="normal"></highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ensure<sp/>an<sp/>authority<sp/>with<sp/>duplicate<sp/>keys<sp/>is<sp/>rejected.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1af71c16457d70c54eb0836ce802b408a1" kindref="member">alice_signing_authority</ref>.threshold<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1af71c16457d70c54eb0836ce802b408a1" kindref="member">alice_signing_authority</ref>.keys[1]<sp/>=<sp/><ref refid="eosio_8system__tests_8cpp_1af71c16457d70c54eb0836ce802b408a1" kindref="member">alice_signing_authority</ref>.keys[0];</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a004286136832e1f30843b087eb1b847c" kindref="member">alice_producer_authority</ref>.authority<sp/>=<sp/><ref refid="eosio_8system__tests_8cpp_1af71c16457d70c54eb0836ce802b408a1" kindref="member">alice_signing_authority</ref>;</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>error(</highlight><highlight class="stringliteral">&quot;assertion<sp/>failure<sp/>with<sp/>message:<sp/>invalid<sp/>producer<sp/>authority&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;regproducer2&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;producer&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;producer_authority&quot;</highlight><highlight class="normal">,<sp/><ref refid="eosio_8system__tests_8cpp_1a004286136832e1f30843b087eb1b847c" kindref="member">alice_producer_authority</ref>.get_abi_variant()[</highlight><highlight class="stringliteral">&quot;authority&quot;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;url&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;http://block.one&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;location&quot;</highlight><highlight class="normal">,<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="878"><highlight class="normal"></highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>However,<sp/>an<sp/>authority<sp/>with<sp/>an<sp/>invalid<sp/>key<sp/>is<sp/>okay.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1af71c16457d70c54eb0836ce802b408a1" kindref="member">alice_signing_authority</ref>.keys[1]<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a004286136832e1f30843b087eb1b847c" kindref="member">alice_producer_authority</ref>.authority<sp/>=<sp/><ref refid="eosio_8system__tests_8cpp_1af71c16457d70c54eb0836ce802b408a1" kindref="member">alice_signing_authority</ref>;</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;regproducer2&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;producer&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;producer_authority&quot;</highlight><highlight class="normal">,<sp/><ref refid="eosio_8system__tests_8cpp_1a004286136832e1f30843b087eb1b847c" kindref="member">alice_producer_authority</ref>.get_abi_variant()[</highlight><highlight class="stringliteral">&quot;authority&quot;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;url&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;http://block.one&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;location&quot;</highlight><highlight class="normal">,<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="890"><highlight class="normal"></highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>();</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::minutes(2)<sp/>);</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aa1213f0f2c7a53ea968859f3cab582c3" kindref="member">produce_blocks</ref>(2);</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>control-&gt;active_producers().version,<sp/>2u<sp/>);</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>();</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>control-&gt;pending_block_producer(),<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n<sp/>);</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>();</highlight></codeline>
<codeline lineno="898"><highlight class="normal"></highlight></codeline>
<codeline lineno="899"><highlight class="normal">}<sp/><ref refid="eosio_8system__tests_8cpp_1a057cb719bfa291fae56dc6ba5fa7a8d1" kindref="member">FC_LOG_AND_RETHROW</ref>()</highlight></codeline>
<codeline lineno="900"><highlight class="normal"></highlight></codeline>
<codeline lineno="901"><highlight class="normal"><ref refid="eosio_8system__tests_8cpp_1a8a1841911da283583ec346df954d73a1" kindref="member">BOOST_FIXTURE_TEST_CASE</ref>(<sp/>producer_wtmsig_transition,<sp/><ref refid="classeosio__system_1_1eosio__system__tester" kindref="compound">eosio_system_tester</ref><sp/>)<sp/><ref refid="eosio_8system__tests_8cpp_1ae89aac94d502abdd3c8d055174c221fc" kindref="member">try</ref><sp/>{</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/>cross_15_percent_threshold();</highlight></codeline>
<codeline lineno="903"><highlight class="normal"></highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>control-&gt;active_producers().version,<sp/>0u<sp/>);</highlight></codeline>
<codeline lineno="905"><highlight class="normal"></highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a9ab9c9876d69d1830bb37780ca093ff6" kindref="member">set_code</ref>(<sp/>config::system_account_name,<sp/>contracts::util::system_wasm_v1_8()<sp/>);</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0f8cd25d26c0286f6b3a6294bc146f51" kindref="member">set_abi</ref>(<sp/><sp/>config::system_account_name,<sp/>contracts::util::system_abi_v1_8().data()<sp/>);</highlight></codeline>
<codeline lineno="908"><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a743a21c2e0e86a8aeacc66e5c80c51ef" kindref="member">issue_and_transfer</ref>(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;200000000.0000&quot;</highlight><highlight class="normal">),<sp/><sp/>config::system_account_name<sp/>);</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;regproducer&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;producer&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;producer_key&quot;</highlight><highlight class="normal">,<sp/>get_public_key(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;active&quot;</highlight><highlight class="normal">)<sp/>)</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;url&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;location&quot;</highlight><highlight class="normal">,<sp/>0)</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>stake(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;100000000.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;100000000.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>vote(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n,<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n<sp/>}<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="919"><highlight class="normal"></highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//auto<sp/>alice_prod_info1<sp/>=<sp/>get_producer_info(<sp/>&quot;alice1111111&quot;_n<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//wdump((alice_prod_info1));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="922"><highlight class="normal"></highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>();</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::minutes(2)<sp/>);</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aa1213f0f2c7a53ea968859f3cab582c3" kindref="member">produce_blocks</ref>(2);</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>control-&gt;active_producers().version,<sp/>1u<sp/>);</highlight></codeline>
<codeline lineno="927"><highlight class="normal"></highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="eosio_8system__tests_8cpp_1a8808ab841e471ff1160d3dc31b3fc227" kindref="member">convert_to_block_timestamp</ref><sp/>=<sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>fc::variant&amp;<sp/>timestamp)<sp/>-&gt;<sp/>eosio::chain::block_timestamp_type<sp/>{</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fc::time_point::from_iso_string(timestamp.as_string());</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="931"><highlight class="normal"></highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="eosio_8system__tests_8cpp_1a253e932df28bb1aecc5e3775d78e124c" kindref="member">schedule_update1</ref><sp/>=<sp/><ref refid="eosio_8system__tests_8cpp_1a8808ab841e471ff1160d3dc31b3fc227" kindref="member">convert_to_block_timestamp</ref>(get_global_state()[</highlight><highlight class="stringliteral">&quot;last_producer_schedule_update&quot;</highlight><highlight class="normal">]);</highlight></codeline>
<codeline lineno="933"><highlight class="normal"></highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/><ref refid="eosio_8system__tests_8cpp_1ab6141e60ec62bffdd9519ddd45f56e6a" kindref="member">rlm</ref><sp/>=<sp/>control-&gt;get_resource_limits_manager();</highlight></codeline>
<codeline lineno="935"><highlight class="normal"></highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="eosio_8system__tests_8cpp_1ae9dce8c60cffef86f2417d579ab5d997" kindref="member">alice_initial_ram_usage</ref><sp/>=<sp/><ref refid="eosio_8system__tests_8cpp_1ab6141e60ec62bffdd9519ddd45f56e6a" kindref="member">rlm</ref>.get_account_ram_usage(</highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n);</highlight></codeline>
<codeline lineno="937"><highlight class="normal"></highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a9ab9c9876d69d1830bb37780ca093ff6" kindref="member">set_code</ref>(<sp/>config::system_account_name,<sp/>contracts::system_wasm()<sp/>);</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0f8cd25d26c0286f6b3a6294bc146f51" kindref="member">set_abi</ref>(<sp/><sp/>config::system_account_name,<sp/>contracts::system_abi().data()<sp/>);</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>();</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>control-&gt;pending_block_producer(),<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n<sp/>);</highlight></codeline>
<codeline lineno="942"><highlight class="normal"></highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="eosio_8system__tests_8cpp_1affb0f5db65d70439a6a6ef2f1c0c3b2d" kindref="member">alice_prod_info2</ref><sp/>=<sp/>get_producer_info(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n<sp/>);</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="eosio_8system__tests_8cpp_1affb0f5db65d70439a6a6ef2f1c0c3b2d" kindref="member">alice_prod_info2</ref>[</highlight><highlight class="stringliteral">&quot;is_active&quot;</highlight><highlight class="normal">],<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="945"><highlight class="normal"></highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::minutes(2)<sp/>);</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="eosio_8system__tests_8cpp_1a52956216cfbda56033a4af6cdf08d7b8" kindref="member">schedule_update2</ref><sp/>=<sp/><ref refid="eosio_8system__tests_8cpp_1a8808ab841e471ff1160d3dc31b3fc227" kindref="member">convert_to_block_timestamp</ref>(get_global_state()[</highlight><highlight class="stringliteral">&quot;last_producer_schedule_update&quot;</highlight><highlight class="normal">]);</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1ae00c608b8a40d03b8b8dd2daac50185b" kindref="member">BOOST_REQUIRE</ref>(<sp/><ref refid="eosio_8system__tests_8cpp_1a253e932df28bb1aecc5e3775d78e124c" kindref="member">schedule_update1</ref><sp/>&lt;<sp/><ref refid="eosio_8system__tests_8cpp_1a52956216cfbda56033a4af6cdf08d7b8" kindref="member">schedule_update2</ref><sp/>);<sp/></highlight><highlight class="comment">//<sp/>Ensure<sp/>last_producer_schedule_update<sp/>is<sp/>increasing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="949"><highlight class="normal"></highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Producing<sp/>the<sp/>above<sp/>block<sp/>would<sp/>trigger<sp/>the<sp/>bug<sp/>in<sp/>v1.9.0<sp/>that<sp/>sets<sp/>the<sp/>default<sp/>block_signing_authority</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>the<sp/>producer<sp/>object<sp/>of<sp/>the<sp/>currently<sp/>active<sp/>producer<sp/>alice1111111.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>However,<sp/>starting<sp/>in<sp/>v1.9.1,<sp/>the<sp/>producer<sp/>object<sp/>does<sp/>not<sp/>have<sp/>a<sp/>default<sp/>block_signing_authority<sp/>added<sp/>to<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>serialization<sp/>of<sp/>the<sp/>producer<sp/>object<sp/>if<sp/>it<sp/>was<sp/>not<sp/>already<sp/>present<sp/>in<sp/>the<sp/>binary<sp/>extension<sp/>field</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>producer_authority<sp/>to<sp/>begin<sp/>with.<sp/>This<sp/>is<sp/>verified<sp/>below<sp/>by<sp/>ensuring<sp/>the<sp/>RAM<sp/>usage<sp/>of<sp/>alice<sp/>(who<sp/>pays<sp/>for<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>producer<sp/>object)<sp/>does<sp/>not<sp/>increase.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="956"><highlight class="normal"></highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="eosio_8system__tests_8cpp_1a24d0cbbddeeee8a3afa3b12468449349" kindref="member">alice_ram_usage</ref><sp/>=<sp/><ref refid="eosio_8system__tests_8cpp_1ab6141e60ec62bffdd9519ddd45f56e6a" kindref="member">rlm</ref>.get_account_ram_usage(</highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n);</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a4ee2d1bad8d3238fe63a78bff6943bcd" kindref="member">BOOST_CHECK_EQUAL</ref>(<sp/><ref refid="eosio_8system__tests_8cpp_1ae9dce8c60cffef86f2417d579ab5d997" kindref="member">alice_initial_ram_usage</ref>,<sp/><ref refid="eosio_8system__tests_8cpp_1a24d0cbbddeeee8a3afa3b12468449349" kindref="member">alice_ram_usage</ref><sp/>);</highlight></codeline>
<codeline lineno="959"><highlight class="normal"></highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="eosio_8system__tests_8cpp_1a33cb0eb759b95359b1b0a386788db558" kindref="member">alice_prod_info3</ref><sp/>=<sp/>get_producer_info(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n<sp/>);</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/><ref refid="eosio_8system__tests_8cpp_1a33cb0eb759b95359b1b0a386788db558" kindref="member">alice_prod_info3</ref>.get_object().contains(</highlight><highlight class="stringliteral">&quot;producer_authority&quot;</highlight><highlight class="normal">)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a4ee2d1bad8d3238fe63a78bff6943bcd" kindref="member">BOOST_CHECK_EQUAL</ref>(<sp/><ref refid="eosio_8system__tests_8cpp_1a33cb0eb759b95359b1b0a386788db558" kindref="member">alice_prod_info3</ref>[</highlight><highlight class="stringliteral">&quot;producer_authority&quot;</highlight><highlight class="normal">][1][</highlight><highlight class="stringliteral">&quot;threshold&quot;</highlight><highlight class="normal">],<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="964"><highlight class="normal"></highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::minutes(2)<sp/>);</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="eosio_8system__tests_8cpp_1a19d17df497025e0426108c127be4f4e7" kindref="member">schedule_update3</ref><sp/>=<sp/><ref refid="eosio_8system__tests_8cpp_1a8808ab841e471ff1160d3dc31b3fc227" kindref="member">convert_to_block_timestamp</ref>(get_global_state()[</highlight><highlight class="stringliteral">&quot;last_producer_schedule_update&quot;</highlight><highlight class="normal">]);</highlight></codeline>
<codeline lineno="967"><highlight class="normal"></highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>bug<sp/>in<sp/>v1.9.0<sp/>would<sp/>cause<sp/>alice<sp/>to<sp/>have<sp/>an<sp/>invalid<sp/>producer<sp/>authority<sp/>(the<sp/>default<sp/>block_signing_authority).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>v1.9.0<sp/>system<sp/>contract<sp/>would<sp/>have<sp/>attempted<sp/>to<sp/>set<sp/>a<sp/>proposed<sp/>producer<sp/>schedule<sp/>including<sp/>this<sp/>invalid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>authority<sp/>which<sp/>would<sp/>be<sp/>rejected<sp/>by<sp/>the<sp/>EOSIO<sp/>native<sp/>system<sp/>and<sp/>cause<sp/>the<sp/>onblock<sp/>transaction<sp/>to<sp/>continue<sp/>to<sp/>fail.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>could<sp/>be<sp/>observed<sp/>by<sp/>noticing<sp/>that<sp/>last_producer_schedule_update<sp/>was<sp/>not<sp/>being<sp/>updated<sp/>even<sp/>though<sp/>it<sp/>should.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>However,<sp/>starting<sp/>in<sp/>v1.9.1,<sp/>update_elected_producers<sp/>is<sp/>smarter<sp/>about<sp/>the<sp/>producer<sp/>schedule<sp/>it<sp/>constructs<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>propose<sp/>to<sp/>the<sp/>system.<sp/>It<sp/>will<sp/>recognize<sp/>the<sp/>default<sp/>constructed<sp/>authority<sp/>(which<sp/>shouldn&apos;t<sp/>be<sp/>created<sp/>by<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>v1.9.1<sp/>system<sp/>contract<sp/>but<sp/>may<sp/>still<sp/>exist<sp/>in<sp/>the<sp/>tables<sp/>if<sp/>it<sp/>was<sp/>constructed<sp/>by<sp/>the<sp/>buggy<sp/>v1.9.0<sp/>system<sp/>contract)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>instead<sp/>resort<sp/>to<sp/>constructing<sp/>the<sp/>block<sp/>signing<sp/>authority<sp/>from<sp/>the<sp/>single<sp/>producer<sp/>key<sp/>in<sp/>the<sp/>table.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>So<sp/>newer<sp/>system<sp/>contracts<sp/>should<sp/>see<sp/>onblock<sp/>continue<sp/>to<sp/>function,<sp/>which<sp/>is<sp/>verified<sp/>by<sp/>the<sp/>check<sp/>below.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="977"><highlight class="normal"></highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a03ec5bf1334c2d85bbbfdd1adf5984e5" kindref="member">BOOST_CHECK</ref>(<sp/><ref refid="eosio_8system__tests_8cpp_1a52956216cfbda56033a4af6cdf08d7b8" kindref="member">schedule_update2</ref><sp/>&lt;<sp/><ref refid="eosio_8system__tests_8cpp_1a19d17df497025e0426108c127be4f4e7" kindref="member">schedule_update3</ref><sp/>);<sp/></highlight><highlight class="comment">//<sp/>Ensure<sp/>last_producer_schedule_update<sp/>is<sp/>increasing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="979"><highlight class="normal"></highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>But<sp/>even<sp/>if<sp/>the<sp/>buggy<sp/>v1.9.0<sp/>system<sp/>contract<sp/>was<sp/>running,<sp/>it<sp/>should<sp/>always<sp/>still<sp/>be<sp/>possible<sp/>to<sp/>recover</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>by<sp/>having<sp/>the<sp/>producer<sp/>with<sp/>the<sp/>invalid<sp/>authority<sp/>simply<sp/>call<sp/>regproducer<sp/>or<sp/>regproducer2<sp/>to<sp/>correct<sp/>their</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>block<sp/>signing<sp/>authority.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="983"><highlight class="normal"></highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;regproducer&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;producer&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;producer_key&quot;</highlight><highlight class="normal">,<sp/>get_public_key(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;active&quot;</highlight><highlight class="normal">)<sp/>)</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;url&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;location&quot;</highlight><highlight class="normal">,<sp/>0)</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="991"><highlight class="normal"></highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>();</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::minutes(2)<sp/>);</highlight></codeline>
<codeline lineno="994"><highlight class="normal"></highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="eosio_8system__tests_8cpp_1a04706323c4ac3a496c5b567d3a1b21a4" kindref="member">alice_prod_info4</ref><sp/>=<sp/>get_producer_info(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n<sp/>);</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="eosio_8system__tests_8cpp_1a04706323c4ac3a496c5b567d3a1b21a4" kindref="member">alice_prod_info4</ref>[</highlight><highlight class="stringliteral">&quot;is_active&quot;</highlight><highlight class="normal">],<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="eosio_8system__tests_8cpp_1a3977223107a4aa4bf5cdb41cd3ac9cb6" kindref="member">schedule_update4</ref><sp/>=<sp/><ref refid="eosio_8system__tests_8cpp_1a8808ab841e471ff1160d3dc31b3fc227" kindref="member">convert_to_block_timestamp</ref>(get_global_state()[</highlight><highlight class="stringliteral">&quot;last_producer_schedule_update&quot;</highlight><highlight class="normal">]);</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1ae00c608b8a40d03b8b8dd2daac50185b" kindref="member">BOOST_REQUIRE</ref>(<sp/><ref refid="eosio_8system__tests_8cpp_1a52956216cfbda56033a4af6cdf08d7b8" kindref="member">schedule_update2</ref><sp/>&lt;<sp/><ref refid="eosio_8system__tests_8cpp_1a3977223107a4aa4bf5cdb41cd3ac9cb6" kindref="member">schedule_update4</ref><sp/>);</highlight></codeline>
<codeline lineno="999"><highlight class="normal"></highlight></codeline>
<codeline lineno="1000"><highlight class="normal">}<sp/><ref refid="eosio_8system__tests_8cpp_1a057cb719bfa291fae56dc6ba5fa7a8d1" kindref="member">FC_LOG_AND_RETHROW</ref>()</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"></highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><ref refid="eosio_8system__tests_8cpp_1a8a1841911da283583ec346df954d73a1" kindref="member">BOOST_FIXTURE_TEST_CASE</ref>(<sp/>vote_for_producer,<sp/><ref refid="classeosio__system_1_1eosio__system__tester" kindref="compound">eosio_system_tester</ref>,<sp/>*<sp/>boost::unit_test::tolerance(1e+5)<sp/>)<sp/><ref refid="eosio_8system__tests_8cpp_1ae89aac94d502abdd3c8d055174c221fc" kindref="member">try</ref><sp/>{</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/>cross_15_percent_threshold();</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"></highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a743a21c2e0e86a8aeacc66e5c80c51ef" kindref="member">issue_and_transfer</ref>(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1000.0000&quot;</highlight><highlight class="normal">),<sp/><sp/>config::system_account_name<sp/>);</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/>fc::variant<sp/><ref refid="eosio_8system__tests_8cpp_1a11bb71c4e33e79ea17fb60697717745f" kindref="member">params</ref><sp/>=<sp/>producer_parameters_example(1);</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;regproducer&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;producer&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;producer_key&quot;</highlight><highlight class="normal">,<sp/>get_public_key(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;active&quot;</highlight><highlight class="normal">)<sp/>)</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;url&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;http://block.one&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;location&quot;</highlight><highlight class="normal">,<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="eosio_8system__tests_8cpp_1a5a03a10daf5c20c6e9a103d00fcd085f" kindref="member">prod</ref><sp/>=<sp/>get_producer_info(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="eosio_8system__tests_8cpp_1a5a03a10daf5c20c6e9a103d00fcd085f" kindref="member">prod</ref>[</highlight><highlight class="stringliteral">&quot;owner&quot;</highlight><highlight class="normal">].as_string()<sp/>);</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>0,<sp/><ref refid="eosio_8system__tests_8cpp_1a5a03a10daf5c20c6e9a103d00fcd085f" kindref="member">prod</ref>[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/></highlight><highlight class="stringliteral">&quot;http://block.one&quot;</highlight><highlight class="normal">,<sp/><ref refid="eosio_8system__tests_8cpp_1a5a03a10daf5c20c6e9a103d00fcd085f" kindref="member">prod</ref>[</highlight><highlight class="stringliteral">&quot;url&quot;</highlight><highlight class="normal">].as_string()<sp/>);</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"></highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a743a21c2e0e86a8aeacc66e5c80c51ef" kindref="member">issue_and_transfer</ref>(<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;2000.0000&quot;</highlight><highlight class="normal">),<sp/><sp/>config::system_account_name<sp/>);</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a743a21c2e0e86a8aeacc66e5c80c51ef" kindref="member">issue_and_transfer</ref>(<sp/></highlight><highlight class="stringliteral">&quot;carol1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;3000.0000&quot;</highlight><highlight class="normal">),<sp/><sp/>config::system_account_name<sp/>);</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"></highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//bob111111111<sp/>makes<sp/>stake</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>stake(<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;11.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;0.1111&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1988.8889&quot;</highlight><highlight class="normal">),<sp/>get_balance(<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1abf3d4eb475605f9a73224e835cd3fb71" kindref="member">REQUIRE_MATCHING_OBJECT</ref>(<sp/><ref refid="namespaceeosio__system_1a88231cdd2d2c65528b97fb62b1fad462" kindref="member">voter</ref>(<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;11.1111&quot;</highlight><highlight class="normal">)<sp/>),<sp/>get_voter_info(<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"></highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//bob111111111<sp/>votes<sp/>for<sp/>alice1111111</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>vote(<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">_n,<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n<sp/>}<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"></highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//check<sp/>that<sp/>producer<sp/>parameters<sp/>stay<sp/>the<sp/>same<sp/>after<sp/>voting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a5a03a10daf5c20c6e9a103d00fcd085f" kindref="member">prod</ref><sp/>=<sp/>get_producer_info(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>stake2votes(<ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;11.1111&quot;</highlight><highlight class="normal">))<sp/>==<sp/><ref refid="eosio_8system__tests_8cpp_1a5a03a10daf5c20c6e9a103d00fcd085f" kindref="member">prod</ref>[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="eosio_8system__tests_8cpp_1a5a03a10daf5c20c6e9a103d00fcd085f" kindref="member">prod</ref>[</highlight><highlight class="stringliteral">&quot;owner&quot;</highlight><highlight class="normal">].as_string()<sp/>);</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/></highlight><highlight class="stringliteral">&quot;http://block.one&quot;</highlight><highlight class="normal">,<sp/><ref refid="eosio_8system__tests_8cpp_1a5a03a10daf5c20c6e9a103d00fcd085f" kindref="member">prod</ref>[</highlight><highlight class="stringliteral">&quot;url&quot;</highlight><highlight class="normal">].as_string()<sp/>);</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"></highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//carol1111111<sp/>makes<sp/>stake</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>stake(<sp/></highlight><highlight class="stringliteral">&quot;carol1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;22.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;0.2222&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1abf3d4eb475605f9a73224e835cd3fb71" kindref="member">REQUIRE_MATCHING_OBJECT</ref>(<sp/><ref refid="namespaceeosio__system_1a88231cdd2d2c65528b97fb62b1fad462" kindref="member">voter</ref>(<sp/></highlight><highlight class="stringliteral">&quot;carol1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;22.2222&quot;</highlight><highlight class="normal">)<sp/>),<sp/>get_voter_info(<sp/></highlight><highlight class="stringliteral">&quot;carol1111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;2977.7778&quot;</highlight><highlight class="normal">),<sp/>get_balance(<sp/></highlight><highlight class="stringliteral">&quot;carol1111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//carol1111111<sp/>votes<sp/>for<sp/>alice1111111</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>vote(<sp/></highlight><highlight class="stringliteral">&quot;carol1111111&quot;</highlight><highlight class="normal">_n,<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n<sp/>}<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"></highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//new<sp/>stake<sp/>votes<sp/>be<sp/>added<sp/>to<sp/>alice1111111&apos;s<sp/>total_votes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a5a03a10daf5c20c6e9a103d00fcd085f" kindref="member">prod</ref><sp/>=<sp/>get_producer_info(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>stake2votes(<ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;33.3333&quot;</highlight><highlight class="normal">))<sp/>==<sp/><ref refid="eosio_8system__tests_8cpp_1a5a03a10daf5c20c6e9a103d00fcd085f" kindref="member">prod</ref>[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"></highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//bob111111111<sp/>increases<sp/>his<sp/>stake</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>stake(<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;33.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;0.3333&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//alice1111111<sp/>stake<sp/>with<sp/>transfer<sp/>to<sp/>bob111111111</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>stake_with_transfer(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;22.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;0.2222&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//should<sp/>increase<sp/>alice1111111&apos;s<sp/>total_votes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a5a03a10daf5c20c6e9a103d00fcd085f" kindref="member">prod</ref><sp/>=<sp/>get_producer_info(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>stake2votes(<ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;88.8888&quot;</highlight><highlight class="normal">))<sp/>==<sp/><ref refid="eosio_8system__tests_8cpp_1a5a03a10daf5c20c6e9a103d00fcd085f" kindref="member">prod</ref>[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"></highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//carol1111111<sp/>unstakes<sp/>part<sp/>of<sp/>the<sp/>stake</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>unstake(<sp/></highlight><highlight class="stringliteral">&quot;carol1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;2.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;0.0002&quot;</highlight><highlight class="normal">)</highlight><highlight class="comment">/*&quot;2.0000<sp/>EOS&quot;,<sp/>&quot;0.0002<sp/>EOS&quot;*/</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"></highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//should<sp/>decrease<sp/>alice1111111&apos;s<sp/>total_votes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a5a03a10daf5c20c6e9a103d00fcd085f" kindref="member">prod</ref><sp/>=<sp/>get_producer_info(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1ace57c45c9d9e2f0f9a438effcdb79ba5" kindref="member">wdump</ref>((<ref refid="eosio_8system__tests_8cpp_1a5a03a10daf5c20c6e9a103d00fcd085f" kindref="member">prod</ref>));</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>stake2votes(<ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;86.8886&quot;</highlight><highlight class="normal">))<sp/>==<sp/><ref refid="eosio_8system__tests_8cpp_1a5a03a10daf5c20c6e9a103d00fcd085f" kindref="member">prod</ref>[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"></highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//bob111111111<sp/>revokes<sp/>his<sp/>vote</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>vote(<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">_n,<sp/>vector&lt;account_name&gt;()<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"></highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//should<sp/>decrease<sp/>alice1111111&apos;s<sp/>total_votes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a5a03a10daf5c20c6e9a103d00fcd085f" kindref="member">prod</ref><sp/>=<sp/>get_producer_info(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>stake2votes(<ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;20.2220&quot;</highlight><highlight class="normal">))<sp/>==<sp/><ref refid="eosio_8system__tests_8cpp_1a5a03a10daf5c20c6e9a103d00fcd085f" kindref="member">prod</ref>[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//but<sp/>eos<sp/>should<sp/>still<sp/>be<sp/>at<sp/>stake</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1955.5556&quot;</highlight><highlight class="normal">),<sp/>get_balance(<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"></highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//carol1111111<sp/>unstakes<sp/>rest<sp/>of<sp/>eos</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>unstake(<sp/></highlight><highlight class="stringliteral">&quot;carol1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;20.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;0.2220&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//should<sp/>decrease<sp/>alice1111111&apos;s<sp/>total_votes<sp/>to<sp/>zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a5a03a10daf5c20c6e9a103d00fcd085f" kindref="member">prod</ref><sp/>=<sp/>get_producer_info(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>0.0<sp/>==<sp/><ref refid="eosio_8system__tests_8cpp_1a5a03a10daf5c20c6e9a103d00fcd085f" kindref="member">prod</ref>[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"></highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//carol1111111<sp/>should<sp/>receive<sp/>funds<sp/>in<sp/>3<sp/>days</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::days(3)<sp/>);</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>();</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;3000.0000&quot;</highlight><highlight class="normal">),<sp/>get_balance(<sp/></highlight><highlight class="stringliteral">&quot;carol1111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"></highlight></codeline>
<codeline lineno="1083"><highlight class="normal">}<sp/><ref refid="eosio_8system__tests_8cpp_1a057cb719bfa291fae56dc6ba5fa7a8d1" kindref="member">FC_LOG_AND_RETHROW</ref>()</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"></highlight></codeline>
<codeline lineno="1085"><highlight class="normal"></highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><ref refid="eosio_8system__tests_8cpp_1a8a1841911da283583ec346df954d73a1" kindref="member">BOOST_FIXTURE_TEST_CASE</ref>(<sp/>unregistered_producer_voting,<sp/><ref refid="classeosio__system_1_1eosio__system__tester" kindref="compound">eosio_system_tester</ref>,<sp/>*<sp/>boost::unit_test::tolerance(1e+5)<sp/>)<sp/><ref refid="eosio_8system__tests_8cpp_1ae89aac94d502abdd3c8d055174c221fc" kindref="member">try</ref><sp/>{</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a743a21c2e0e86a8aeacc66e5c80c51ef" kindref="member">issue_and_transfer</ref>(<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;2000.0000&quot;</highlight><highlight class="normal">),<sp/><sp/>config::system_account_name<sp/>);</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>stake(<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;13.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;0.5791&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1abf3d4eb475605f9a73224e835cd3fb71" kindref="member">REQUIRE_MATCHING_OBJECT</ref>(<sp/><ref refid="namespaceeosio__system_1a88231cdd2d2c65528b97fb62b1fad462" kindref="member">voter</ref>(<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;13.5791&quot;</highlight><highlight class="normal">)<sp/>),<sp/>get_voter_info(<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"></highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//bob111111111<sp/>should<sp/>not<sp/>be<sp/>able<sp/>to<sp/>vote<sp/>for<sp/>alice1111111<sp/>who<sp/>is<sp/>not<sp/>a<sp/>producer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(<sp/></highlight><highlight class="stringliteral">&quot;producer<sp/>alice1111111<sp/>is<sp/>not<sp/>registered&quot;</highlight><highlight class="normal"><sp/>),</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vote(<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">_n,<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n<sp/>}<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"></highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//alice1111111<sp/>registers<sp/>as<sp/>a<sp/>producer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a743a21c2e0e86a8aeacc66e5c80c51ef" kindref="member">issue_and_transfer</ref>(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1000.0000&quot;</highlight><highlight class="normal">),<sp/><sp/>config::system_account_name<sp/>);</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/>fc::variant<sp/><ref refid="eosio_8system__tests_8cpp_1a11bb71c4e33e79ea17fb60697717745f" kindref="member">params</ref><sp/>=<sp/>producer_parameters_example(1);</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;regproducer&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;producer&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;producer_key&quot;</highlight><highlight class="normal">,<sp/>get_public_key(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;active&quot;</highlight><highlight class="normal">)<sp/>)</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;url&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;location&quot;</highlight><highlight class="normal">,<sp/>0)</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//and<sp/>then<sp/>unregisters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;unregprod&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;producer&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//key<sp/>should<sp/>be<sp/>empty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="eosio_8system__tests_8cpp_1a5a03a10daf5c20c6e9a103d00fcd085f" kindref="member">prod</ref><sp/>=<sp/>get_producer_info(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>fc::crypto::public_key(),<sp/>fc::crypto::public_key(<ref refid="eosio_8system__tests_8cpp_1a5a03a10daf5c20c6e9a103d00fcd085f" kindref="member">prod</ref>[</highlight><highlight class="stringliteral">&quot;producer_key&quot;</highlight><highlight class="normal">].as_string())<sp/>);</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"></highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//bob111111111<sp/>should<sp/>not<sp/>be<sp/>able<sp/>to<sp/>vote<sp/>for<sp/>alice1111111<sp/>who<sp/>is<sp/>an<sp/>unregistered<sp/>producer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(<sp/></highlight><highlight class="stringliteral">&quot;producer<sp/>alice1111111<sp/>is<sp/>not<sp/>currently<sp/>registered&quot;</highlight><highlight class="normal"><sp/>),</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vote(<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">_n,<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n<sp/>}<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"></highlight></codeline>
<codeline lineno="1118"><highlight class="normal">}<sp/><ref refid="eosio_8system__tests_8cpp_1a057cb719bfa291fae56dc6ba5fa7a8d1" kindref="member">FC_LOG_AND_RETHROW</ref>()</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"></highlight></codeline>
<codeline lineno="1120"><highlight class="normal"></highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><ref refid="eosio_8system__tests_8cpp_1a8a1841911da283583ec346df954d73a1" kindref="member">BOOST_FIXTURE_TEST_CASE</ref>(<sp/>more_than_30_producer_voting,<sp/><ref refid="classeosio__system_1_1eosio__system__tester" kindref="compound">eosio_system_tester</ref><sp/>)<sp/><ref refid="eosio_8system__tests_8cpp_1ae89aac94d502abdd3c8d055174c221fc" kindref="member">try</ref><sp/>{</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a743a21c2e0e86a8aeacc66e5c80c51ef" kindref="member">issue_and_transfer</ref>(<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;2000.0000&quot;</highlight><highlight class="normal">),<sp/><sp/>config::system_account_name<sp/>);</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>stake(<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;13.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;0.5791&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1abf3d4eb475605f9a73224e835cd3fb71" kindref="member">REQUIRE_MATCHING_OBJECT</ref>(<sp/><ref refid="namespaceeosio__system_1a88231cdd2d2c65528b97fb62b1fad462" kindref="member">voter</ref>(<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;13.5791&quot;</highlight><highlight class="normal">)<sp/>),<sp/>get_voter_info(<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"></highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//bob111111111<sp/>should<sp/>not<sp/>be<sp/>able<sp/>to<sp/>vote<sp/>for<sp/>alice1111111<sp/>who<sp/>is<sp/>not<sp/>a<sp/>producer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(<sp/></highlight><highlight class="stringliteral">&quot;attempt<sp/>to<sp/>vote<sp/>for<sp/>too<sp/>many<sp/>producers&quot;</highlight><highlight class="normal"><sp/>),</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vote(<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">_n,<sp/>vector&lt;account_name&gt;(31,<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"></highlight></codeline>
<codeline lineno="1130"><highlight class="normal">}<sp/><ref refid="eosio_8system__tests_8cpp_1a057cb719bfa291fae56dc6ba5fa7a8d1" kindref="member">FC_LOG_AND_RETHROW</ref>()</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"></highlight></codeline>
<codeline lineno="1132"><highlight class="normal"></highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><ref refid="eosio_8system__tests_8cpp_1a8a1841911da283583ec346df954d73a1" kindref="member">BOOST_FIXTURE_TEST_CASE</ref>(<sp/>vote_same_producer_30_times,<sp/><ref refid="classeosio__system_1_1eosio__system__tester" kindref="compound">eosio_system_tester</ref><sp/>)<sp/><ref refid="eosio_8system__tests_8cpp_1ae89aac94d502abdd3c8d055174c221fc" kindref="member">try</ref><sp/>{</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a743a21c2e0e86a8aeacc66e5c80c51ef" kindref="member">issue_and_transfer</ref>(<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;2000.0000&quot;</highlight><highlight class="normal">),<sp/><sp/>config::system_account_name<sp/>);</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>stake(<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;50.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;50.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1abf3d4eb475605f9a73224e835cd3fb71" kindref="member">REQUIRE_MATCHING_OBJECT</ref>(<sp/><ref refid="namespaceeosio__system_1a88231cdd2d2c65528b97fb62b1fad462" kindref="member">voter</ref>(<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;100.0000&quot;</highlight><highlight class="normal">)<sp/>),<sp/>get_voter_info(<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"></highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//alice1111111<sp/>becomes<sp/>a<sp/>producer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a743a21c2e0e86a8aeacc66e5c80c51ef" kindref="member">issue_and_transfer</ref>(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1000.0000&quot;</highlight><highlight class="normal">),<sp/><sp/>config::system_account_name<sp/>);</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/>fc::variant<sp/><ref refid="eosio_8system__tests_8cpp_1a11bb71c4e33e79ea17fb60697717745f" kindref="member">params</ref><sp/>=<sp/>producer_parameters_example(1);</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;regproducer&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;producer&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;producer_key&quot;</highlight><highlight class="normal">,<sp/>get_public_key(</highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;active&quot;</highlight><highlight class="normal">)<sp/>)</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;url&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;location&quot;</highlight><highlight class="normal">,<sp/>0)</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"></highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//bob111111111<sp/>should<sp/>not<sp/>be<sp/>able<sp/>to<sp/>vote<sp/>for<sp/>alice1111111<sp/>who<sp/>is<sp/>not<sp/>a<sp/>producer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(<sp/></highlight><highlight class="stringliteral">&quot;producer<sp/>votes<sp/>must<sp/>be<sp/>unique<sp/>and<sp/>sorted&quot;</highlight><highlight class="normal"><sp/>),</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vote(<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">_n,<sp/>vector&lt;account_name&gt;(30,<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"></highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="eosio_8system__tests_8cpp_1a5a03a10daf5c20c6e9a103d00fcd085f" kindref="member">prod</ref><sp/>=<sp/>get_producer_info(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>0<sp/>==<sp/><ref refid="eosio_8system__tests_8cpp_1a5a03a10daf5c20c6e9a103d00fcd085f" kindref="member">prod</ref>[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"></highlight></codeline>
<codeline lineno="1156"><highlight class="normal">}<sp/><ref refid="eosio_8system__tests_8cpp_1a057cb719bfa291fae56dc6ba5fa7a8d1" kindref="member">FC_LOG_AND_RETHROW</ref>()</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"></highlight></codeline>
<codeline lineno="1158"><highlight class="normal"></highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><ref refid="eosio_8system__tests_8cpp_1a8a1841911da283583ec346df954d73a1" kindref="member">BOOST_FIXTURE_TEST_CASE</ref>(<sp/>producer_keep_votes,<sp/><ref refid="classeosio__system_1_1eosio__system__tester" kindref="compound">eosio_system_tester</ref>,<sp/>*<sp/>boost::unit_test::tolerance(1e+5)<sp/>)<sp/><ref refid="eosio_8system__tests_8cpp_1ae89aac94d502abdd3c8d055174c221fc" kindref="member">try</ref><sp/>{</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a743a21c2e0e86a8aeacc66e5c80c51ef" kindref="member">issue_and_transfer</ref>(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1000.0000&quot;</highlight><highlight class="normal">),<sp/><sp/>config::system_account_name<sp/>);</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/>fc::variant<sp/><ref refid="eosio_8system__tests_8cpp_1a11bb71c4e33e79ea17fb60697717745f" kindref="member">params</ref><sp/>=<sp/>producer_parameters_example(1);</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/>vector&lt;char&gt;<sp/><ref refid="eosio_8system__tests_8cpp_1a0bbff253b45c1c6e04cc32309feb55a1" kindref="member">key</ref><sp/>=<sp/>fc::raw::pack(<sp/>get_public_key(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;active&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;regproducer&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;producer&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;producer_key&quot;</highlight><highlight class="normal">,<sp/>get_public_key(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;active&quot;</highlight><highlight class="normal">)<sp/>)</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;url&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;location&quot;</highlight><highlight class="normal">,<sp/>0)</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"></highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//bob111111111<sp/>makes<sp/>stake</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a743a21c2e0e86a8aeacc66e5c80c51ef" kindref="member">issue_and_transfer</ref>(<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;2000.0000&quot;</highlight><highlight class="normal">),<sp/><sp/>config::system_account_name<sp/>);</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>stake(<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;13.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;0.5791&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1abf3d4eb475605f9a73224e835cd3fb71" kindref="member">REQUIRE_MATCHING_OBJECT</ref>(<sp/><ref refid="namespaceeosio__system_1a88231cdd2d2c65528b97fb62b1fad462" kindref="member">voter</ref>(<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;13.5791&quot;</highlight><highlight class="normal">)<sp/>),<sp/>get_voter_info(<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"></highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//bob111111111<sp/>votes<sp/>for<sp/>alice1111111</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>vote(</highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">_n,<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n<sp/>}<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"></highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="eosio_8system__tests_8cpp_1a5a03a10daf5c20c6e9a103d00fcd085f" kindref="member">prod</ref><sp/>=<sp/>get_producer_info(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>stake2votes(<ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;13.5791&quot;</highlight><highlight class="normal">))<sp/>==<sp/><ref refid="eosio_8system__tests_8cpp_1a5a03a10daf5c20c6e9a103d00fcd085f" kindref="member">prod</ref>[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"></highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//unregister<sp/>producer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(</highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;unregprod&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;producer&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a5a03a10daf5c20c6e9a103d00fcd085f" kindref="member">prod</ref><sp/>=<sp/>get_producer_info(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//key<sp/>should<sp/>be<sp/>empty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>fc::crypto::public_key(),<sp/>fc::crypto::public_key(<ref refid="eosio_8system__tests_8cpp_1a5a03a10daf5c20c6e9a103d00fcd085f" kindref="member">prod</ref>[</highlight><highlight class="stringliteral">&quot;producer_key&quot;</highlight><highlight class="normal">].as_string())<sp/>);</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//check<sp/>parameters<sp/>just<sp/>in<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//REQUIRE_MATCHING_OBJECT(<sp/>params,<sp/>prod[&quot;prefs&quot;]);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//votes<sp/>should<sp/>stay<sp/>the<sp/>same</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>stake2votes(<ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;13.5791&quot;</highlight><highlight class="normal">)),<sp/><ref refid="eosio_8system__tests_8cpp_1a5a03a10daf5c20c6e9a103d00fcd085f" kindref="member">prod</ref>[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"></highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//regtister<sp/>the<sp/>same<sp/>producer<sp/>again</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a11bb71c4e33e79ea17fb60697717745f" kindref="member">params</ref><sp/>=<sp/>producer_parameters_example(2);</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;regproducer&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;producer&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;producer_key&quot;</highlight><highlight class="normal">,<sp/>get_public_key(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;active&quot;</highlight><highlight class="normal">)<sp/>)</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;url&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;location&quot;</highlight><highlight class="normal">,<sp/>0)</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a5a03a10daf5c20c6e9a103d00fcd085f" kindref="member">prod</ref><sp/>=<sp/>get_producer_info(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//votes<sp/>should<sp/>stay<sp/>the<sp/>same</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>stake2votes(<ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;13.5791&quot;</highlight><highlight class="normal">)),<sp/><ref refid="eosio_8system__tests_8cpp_1a5a03a10daf5c20c6e9a103d00fcd085f" kindref="member">prod</ref>[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"></highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//change<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a11bb71c4e33e79ea17fb60697717745f" kindref="member">params</ref><sp/>=<sp/>producer_parameters_example(3);</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;regproducer&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;producer&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;producer_key&quot;</highlight><highlight class="normal">,<sp/>get_public_key(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;active&quot;</highlight><highlight class="normal">)<sp/>)</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;url&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;location&quot;</highlight><highlight class="normal">,<sp/>0)</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a5a03a10daf5c20c6e9a103d00fcd085f" kindref="member">prod</ref><sp/>=<sp/>get_producer_info(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//votes<sp/>should<sp/>stay<sp/>the<sp/>same</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>stake2votes(<ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;13.5791&quot;</highlight><highlight class="normal">)),<sp/><ref refid="eosio_8system__tests_8cpp_1a5a03a10daf5c20c6e9a103d00fcd085f" kindref="member">prod</ref>[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//check<sp/>parameters<sp/>just<sp/>in<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//REQUIRE_MATCHING_OBJECT(<sp/>params,<sp/>prod[&quot;prefs&quot;]);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1222"><highlight class="normal"></highlight></codeline>
<codeline lineno="1223"><highlight class="normal">}<sp/><ref refid="eosio_8system__tests_8cpp_1a057cb719bfa291fae56dc6ba5fa7a8d1" kindref="member">FC_LOG_AND_RETHROW</ref>()</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"></highlight></codeline>
<codeline lineno="1225"><highlight class="normal"></highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><ref refid="eosio_8system__tests_8cpp_1a8a1841911da283583ec346df954d73a1" kindref="member">BOOST_FIXTURE_TEST_CASE</ref>(<sp/>vote_for_two_producers,<sp/><ref refid="classeosio__system_1_1eosio__system__tester" kindref="compound">eosio_system_tester</ref>,<sp/>*<sp/>boost::unit_test::tolerance(1e+5)<sp/>)<sp/><ref refid="eosio_8system__tests_8cpp_1ae89aac94d502abdd3c8d055174c221fc" kindref="member">try</ref><sp/>{</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//alice1111111<sp/>becomes<sp/>a<sp/>producer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/>fc::variant<sp/><ref refid="eosio_8system__tests_8cpp_1a11bb71c4e33e79ea17fb60697717745f" kindref="member">params</ref><sp/>=<sp/>producer_parameters_example(1);</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="eosio_8system__tests_8cpp_1a0bbff253b45c1c6e04cc32309feb55a1" kindref="member">key</ref><sp/>=<sp/>get_public_key(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;active&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;regproducer&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;producer&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;producer_key&quot;</highlight><highlight class="normal">,<sp/>get_public_key(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;active&quot;</highlight><highlight class="normal">)<sp/>)</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;url&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;location&quot;</highlight><highlight class="normal">,<sp/>0)</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//bob111111111<sp/>becomes<sp/>a<sp/>producer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a11bb71c4e33e79ea17fb60697717745f" kindref="member">params</ref><sp/>=<sp/>producer_parameters_example(2);</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0bbff253b45c1c6e04cc32309feb55a1" kindref="member">key</ref><sp/>=<sp/>get_public_key(<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;active&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;regproducer&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;producer&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;producer_key&quot;</highlight><highlight class="normal">,<sp/>get_public_key(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;active&quot;</highlight><highlight class="normal">)<sp/>)</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;url&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;location&quot;</highlight><highlight class="normal">,<sp/>0)</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"></highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//carol1111111<sp/>votes<sp/>for<sp/>alice1111111<sp/>and<sp/>bob111111111</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a743a21c2e0e86a8aeacc66e5c80c51ef" kindref="member">issue_and_transfer</ref>(<sp/></highlight><highlight class="stringliteral">&quot;carol1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1000.0000&quot;</highlight><highlight class="normal">),<sp/><sp/>config::system_account_name<sp/>);</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>stake(<sp/></highlight><highlight class="stringliteral">&quot;carol1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;15.0005&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;5.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>vote(<sp/></highlight><highlight class="stringliteral">&quot;carol1111111&quot;</highlight><highlight class="normal">_n,<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">_n<sp/>}<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"></highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>alice_info<sp/>=<sp/>get_producer_info(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>stake2votes(<ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;20.0005&quot;</highlight><highlight class="normal">))<sp/>==<sp/>alice_info[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>bob_info<sp/>=<sp/>get_producer_info(<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>stake2votes(<ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;20.0005&quot;</highlight><highlight class="normal">))<sp/>==<sp/>bob_info[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"></highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//carol1111111<sp/>votes<sp/>for<sp/>alice1111111<sp/>(but<sp/>revokes<sp/>vote<sp/>for<sp/>bob111111111)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>vote(<sp/></highlight><highlight class="stringliteral">&quot;carol1111111&quot;</highlight><highlight class="normal">_n,<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n<sp/>}<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"></highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/>alice_info<sp/>=<sp/>get_producer_info(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>stake2votes(<ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;20.0005&quot;</highlight><highlight class="normal">))<sp/>==<sp/>alice_info[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/>bob_info<sp/>=<sp/>get_producer_info(<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>0<sp/>==<sp/>bob_info[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"></highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//alice1111111<sp/>votes<sp/>for<sp/>herself<sp/>and<sp/>bob111111111</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a743a21c2e0e86a8aeacc66e5c80c51ef" kindref="member">issue_and_transfer</ref>(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;2.0000&quot;</highlight><highlight class="normal">),<sp/><sp/>config::system_account_name<sp/>);</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>stake(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>vote(</highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n,<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">_n<sp/>}<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"></highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/>alice_info<sp/>=<sp/>get_producer_info(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>stake2votes(<ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;22.0005&quot;</highlight><highlight class="normal">))<sp/>==<sp/>alice_info[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"></highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/>bob_info<sp/>=<sp/>get_producer_info(<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>stake2votes(<ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;2.0000&quot;</highlight><highlight class="normal">))<sp/>==<sp/>bob_info[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"></highlight></codeline>
<codeline lineno="1277"><highlight class="normal">}<sp/><ref refid="eosio_8system__tests_8cpp_1a057cb719bfa291fae56dc6ba5fa7a8d1" kindref="member">FC_LOG_AND_RETHROW</ref>()</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"></highlight></codeline>
<codeline lineno="1279"><highlight class="normal"></highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><ref refid="eosio_8system__tests_8cpp_1a8a1841911da283583ec346df954d73a1" kindref="member">BOOST_FIXTURE_TEST_CASE</ref>(<sp/>proxy_register_unregister_keeps_stake,<sp/><ref refid="classeosio__system_1_1eosio__system__tester" kindref="compound">eosio_system_tester</ref><sp/>)<sp/><ref refid="eosio_8system__tests_8cpp_1ae89aac94d502abdd3c8d055174c221fc" kindref="member">try</ref><sp/>{</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//register<sp/>proxy<sp/>by<sp/>first<sp/>action<sp/>for<sp/>this<sp/>user<sp/>ever</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(</highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;regproxy&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;proxy&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;isproxy&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1abf3d4eb475605f9a73224e835cd3fb71" kindref="member">REQUIRE_MATCHING_OBJECT</ref>(<sp/><ref refid="eosio_8system__tests_8cpp_1ac440180674d61e14dbbe38c3d10269d3" kindref="member">proxy</ref>(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n<sp/>),<sp/>get_voter_info(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"></highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//unregister<sp/>proxy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(</highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;regproxy&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;proxy&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;isproxy&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1abf3d4eb475605f9a73224e835cd3fb71" kindref="member">REQUIRE_MATCHING_OBJECT</ref>(<sp/><ref refid="namespaceeosio__system_1a88231cdd2d2c65528b97fb62b1fad462" kindref="member">voter</ref>(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>),<sp/>get_voter_info(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"></highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//stake<sp/>and<sp/>then<sp/>register<sp/>as<sp/>a<sp/>proxy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a743a21c2e0e86a8aeacc66e5c80c51ef" kindref="member">issue_and_transfer</ref>(<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1000.0000&quot;</highlight><highlight class="normal">),<sp/><sp/>config::system_account_name<sp/>);</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>stake(<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;200.0002&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;100.0001&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;regproxy&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;proxy&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;isproxy&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1abf3d4eb475605f9a73224e835cd3fb71" kindref="member">REQUIRE_MATCHING_OBJECT</ref>(<sp/><ref refid="eosio_8system__tests_8cpp_1ac440180674d61e14dbbe38c3d10269d3" kindref="member">proxy</ref>(<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">_n<sp/>)(<sp/></highlight><highlight class="stringliteral">&quot;staked&quot;</highlight><highlight class="normal">,<sp/>3000003<sp/>),<sp/>get_voter_info(<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//unrgister<sp/>and<sp/>check<sp/>that<sp/>stake<sp/>is<sp/>still<sp/>in<sp/>place</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;regproxy&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;proxy&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;isproxy&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1abf3d4eb475605f9a73224e835cd3fb71" kindref="member">REQUIRE_MATCHING_OBJECT</ref>(<sp/><ref refid="namespaceeosio__system_1a88231cdd2d2c65528b97fb62b1fad462" kindref="member">voter</ref>(<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;300.0003&quot;</highlight><highlight class="normal">)<sp/>),<sp/>get_voter_info(<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"></highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//register<sp/>as<sp/>a<sp/>proxy<sp/>and<sp/>then<sp/>stake</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(<sp/></highlight><highlight class="stringliteral">&quot;carol1111111&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;regproxy&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;proxy&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="stringliteral">&quot;carol1111111&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;isproxy&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a743a21c2e0e86a8aeacc66e5c80c51ef" kindref="member">issue_and_transfer</ref>(<sp/></highlight><highlight class="stringliteral">&quot;carol1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1000.0000&quot;</highlight><highlight class="normal">),<sp/><sp/>config::system_account_name<sp/>);</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>stake(<sp/></highlight><highlight class="stringliteral">&quot;carol1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;246.0002&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;531.0001&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//check<sp/>that<sp/>both<sp/>proxy<sp/>flag<sp/>and<sp/>stake<sp/>a<sp/>correct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1abf3d4eb475605f9a73224e835cd3fb71" kindref="member">REQUIRE_MATCHING_OBJECT</ref>(<sp/><ref refid="eosio_8system__tests_8cpp_1ac440180674d61e14dbbe38c3d10269d3" kindref="member">proxy</ref>(<sp/></highlight><highlight class="stringliteral">&quot;carol1111111&quot;</highlight><highlight class="normal">_n<sp/>)(<sp/></highlight><highlight class="stringliteral">&quot;staked&quot;</highlight><highlight class="normal">,<sp/>7770003<sp/>),<sp/>get_voter_info(<sp/></highlight><highlight class="stringliteral">&quot;carol1111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"></highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//unregister</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(<sp/></highlight><highlight class="stringliteral">&quot;carol1111111&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;regproxy&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;proxy&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="stringliteral">&quot;carol1111111&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;isproxy&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1abf3d4eb475605f9a73224e835cd3fb71" kindref="member">REQUIRE_MATCHING_OBJECT</ref>(<sp/><ref refid="namespaceeosio__system_1a88231cdd2d2c65528b97fb62b1fad462" kindref="member">voter</ref>(<sp/></highlight><highlight class="stringliteral">&quot;carol1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;777.0003&quot;</highlight><highlight class="normal">)<sp/>),<sp/>get_voter_info(<sp/></highlight><highlight class="stringliteral">&quot;carol1111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"></highlight></codeline>
<codeline lineno="1333"><highlight class="normal">}<sp/><ref refid="eosio_8system__tests_8cpp_1a057cb719bfa291fae56dc6ba5fa7a8d1" kindref="member">FC_LOG_AND_RETHROW</ref>()</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"></highlight></codeline>
<codeline lineno="1335"><highlight class="normal"></highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><ref refid="eosio_8system__tests_8cpp_1a8a1841911da283583ec346df954d73a1" kindref="member">BOOST_FIXTURE_TEST_CASE</ref>(<sp/>proxy_stake_unstake_keeps_proxy_flag,<sp/><ref refid="classeosio__system_1_1eosio__system__tester" kindref="compound">eosio_system_tester</ref><sp/>)<sp/><ref refid="eosio_8system__tests_8cpp_1ae89aac94d502abdd3c8d055174c221fc" kindref="member">try</ref><sp/>{</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/>cross_15_percent_threshold();</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"></highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;regproxy&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;proxy&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;isproxy&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a743a21c2e0e86a8aeacc66e5c80c51ef" kindref="member">issue_and_transfer</ref>(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1000.0000&quot;</highlight><highlight class="normal">),<sp/><sp/>config::system_account_name<sp/>);</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1abf3d4eb475605f9a73224e835cd3fb71" kindref="member">REQUIRE_MATCHING_OBJECT</ref>(<sp/><ref refid="eosio_8system__tests_8cpp_1ac440180674d61e14dbbe38c3d10269d3" kindref="member">proxy</ref>(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n<sp/>),<sp/>get_voter_info(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"></highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//stake</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>stake(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;100.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;50.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//check<sp/>that<sp/>account<sp/>is<sp/>still<sp/>a<sp/>proxy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1abf3d4eb475605f9a73224e835cd3fb71" kindref="member">REQUIRE_MATCHING_OBJECT</ref>(<sp/><ref refid="eosio_8system__tests_8cpp_1ac440180674d61e14dbbe38c3d10269d3" kindref="member">proxy</ref>(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n<sp/>)(<sp/></highlight><highlight class="stringliteral">&quot;staked&quot;</highlight><highlight class="normal">,<sp/>1500000<sp/>),<sp/>get_voter_info(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"></highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//stake<sp/>more</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>stake(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;30.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;20.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//check<sp/>that<sp/>account<sp/>is<sp/>still<sp/>a<sp/>proxy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1abf3d4eb475605f9a73224e835cd3fb71" kindref="member">REQUIRE_MATCHING_OBJECT</ref>(<sp/><ref refid="eosio_8system__tests_8cpp_1ac440180674d61e14dbbe38c3d10269d3" kindref="member">proxy</ref>(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n<sp/>)(</highlight><highlight class="stringliteral">&quot;staked&quot;</highlight><highlight class="normal">,<sp/>2000000<sp/>),<sp/>get_voter_info(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"></highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//unstake<sp/>more</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>unstake(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;65.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;35.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1abf3d4eb475605f9a73224e835cd3fb71" kindref="member">REQUIRE_MATCHING_OBJECT</ref>(<sp/><ref refid="eosio_8system__tests_8cpp_1ac440180674d61e14dbbe38c3d10269d3" kindref="member">proxy</ref>(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n<sp/>)(</highlight><highlight class="stringliteral">&quot;staked&quot;</highlight><highlight class="normal">,<sp/>1000000<sp/>),<sp/>get_voter_info(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"></highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//unstake<sp/>the<sp/>rest</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>unstake(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;65.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;35.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1abf3d4eb475605f9a73224e835cd3fb71" kindref="member">REQUIRE_MATCHING_OBJECT</ref>(<sp/><ref refid="eosio_8system__tests_8cpp_1ac440180674d61e14dbbe38c3d10269d3" kindref="member">proxy</ref>(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n<sp/>)(<sp/></highlight><highlight class="stringliteral">&quot;staked&quot;</highlight><highlight class="normal">,<sp/>0<sp/>),<sp/>get_voter_info(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"></highlight></codeline>
<codeline lineno="1365"><highlight class="normal">}<sp/><ref refid="eosio_8system__tests_8cpp_1a057cb719bfa291fae56dc6ba5fa7a8d1" kindref="member">FC_LOG_AND_RETHROW</ref>()</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"></highlight></codeline>
<codeline lineno="1367"><highlight class="normal"></highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><ref refid="eosio_8system__tests_8cpp_1a8a1841911da283583ec346df954d73a1" kindref="member">BOOST_FIXTURE_TEST_CASE</ref>(<sp/>proxy_actions_affect_producers,<sp/><ref refid="classeosio__system_1_1eosio__system__tester" kindref="compound">eosio_system_tester</ref>,<sp/>*<sp/>boost::unit_test::tolerance(1e+5)<sp/>)<sp/><ref refid="eosio_8system__tests_8cpp_1ae89aac94d502abdd3c8d055174c221fc" kindref="member">try</ref><sp/>{</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/>cross_15_percent_threshold();</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"></highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/>create_accounts_with_resources(<sp/>{<sp/><sp/></highlight><highlight class="stringliteral">&quot;defproducer1&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;defproducer2&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;defproducer3&quot;</highlight><highlight class="normal">_n<sp/>}<sp/>);</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>regproducer(<sp/></highlight><highlight class="stringliteral">&quot;defproducer1&quot;</highlight><highlight class="normal">_n,<sp/>1)<sp/>);</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>regproducer(<sp/></highlight><highlight class="stringliteral">&quot;defproducer2&quot;</highlight><highlight class="normal">_n,<sp/>2)<sp/>);</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>regproducer(<sp/></highlight><highlight class="stringliteral">&quot;defproducer3&quot;</highlight><highlight class="normal">_n,<sp/>3)<sp/>);</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"></highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//register<sp/>as<sp/>a<sp/>proxy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;regproxy&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;proxy&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;isproxy&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"></highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//accumulate<sp/>proxied<sp/>votes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a743a21c2e0e86a8aeacc66e5c80c51ef" kindref="member">issue_and_transfer</ref>(<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1000.0000&quot;</highlight><highlight class="normal">),<sp/><sp/>config::system_account_name<sp/>);</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>stake(<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;100.0002&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;50.0001&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>vote(</highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">_n,<sp/>vector&lt;account_name&gt;(),<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1abf3d4eb475605f9a73224e835cd3fb71" kindref="member">REQUIRE_MATCHING_OBJECT</ref>(<sp/><ref refid="eosio_8system__tests_8cpp_1ac440180674d61e14dbbe38c3d10269d3" kindref="member">proxy</ref>(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n<sp/>)(<sp/></highlight><highlight class="stringliteral">&quot;proxied_vote_weight&quot;</highlight><highlight class="normal">,<sp/>stake2votes(<ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;150.0003&quot;</highlight><highlight class="normal">))<sp/>),<sp/>get_voter_info(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"></highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//vote<sp/>for<sp/>producers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>vote(</highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n,<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;defproducer1&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;defproducer2&quot;</highlight><highlight class="normal">_n<sp/>}<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>stake2votes(<ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;150.0003&quot;</highlight><highlight class="normal">))<sp/>==<sp/>get_producer_info(<sp/></highlight><highlight class="stringliteral">&quot;defproducer1&quot;</highlight><highlight class="normal"><sp/>)[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>stake2votes(<ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;150.0003&quot;</highlight><highlight class="normal">))<sp/>==<sp/>get_producer_info(<sp/></highlight><highlight class="stringliteral">&quot;defproducer2&quot;</highlight><highlight class="normal"><sp/>)[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>0<sp/>==<sp/>get_producer_info(<sp/></highlight><highlight class="stringliteral">&quot;defproducer3&quot;</highlight><highlight class="normal"><sp/>)[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"></highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//vote<sp/>for<sp/>another<sp/>producers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>vote(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n,<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;defproducer1&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;defproducer3&quot;</highlight><highlight class="normal">_n<sp/>}<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>stake2votes(<ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;150.0003&quot;</highlight><highlight class="normal">))<sp/>==<sp/>get_producer_info(<sp/></highlight><highlight class="stringliteral">&quot;defproducer1&quot;</highlight><highlight class="normal"><sp/>)[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>0,<sp/>get_producer_info(<sp/></highlight><highlight class="stringliteral">&quot;defproducer2&quot;</highlight><highlight class="normal"><sp/>)[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>stake2votes(<ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;150.0003&quot;</highlight><highlight class="normal">))<sp/>==<sp/>get_producer_info(<sp/></highlight><highlight class="stringliteral">&quot;defproducer3&quot;</highlight><highlight class="normal"><sp/>)[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"></highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//unregister<sp/>proxy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;regproxy&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;proxy&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;isproxy&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//REQUIRE_MATCHING_OBJECT(<sp/>voter(<sp/>&quot;alice1111111&quot;<sp/>)(<sp/>&quot;proxied_vote_weight&quot;,<sp/>stake2votes(core_sym::from_string(&quot;150.0003&quot;))<sp/>),<sp/>get_voter_info(<sp/>&quot;alice1111111&quot;<sp/>)<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>0,<sp/>get_producer_info(<sp/></highlight><highlight class="stringliteral">&quot;defproducer1&quot;</highlight><highlight class="normal"><sp/>)[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>0,<sp/>get_producer_info(<sp/></highlight><highlight class="stringliteral">&quot;defproducer2&quot;</highlight><highlight class="normal"><sp/>)[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>0,<sp/>get_producer_info(<sp/></highlight><highlight class="stringliteral">&quot;defproducer3&quot;</highlight><highlight class="normal"><sp/>)[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"></highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//register<sp/>proxy<sp/>again</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;regproxy&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;proxy&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;isproxy&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>stake2votes(<ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;150.0003&quot;</highlight><highlight class="normal">))<sp/>==<sp/>get_producer_info(<sp/></highlight><highlight class="stringliteral">&quot;defproducer1&quot;</highlight><highlight class="normal"><sp/>)[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>0,<sp/>get_producer_info(<sp/></highlight><highlight class="stringliteral">&quot;defproducer2&quot;</highlight><highlight class="normal"><sp/>)[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>stake2votes(<ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;150.0003&quot;</highlight><highlight class="normal">))<sp/>==<sp/>get_producer_info(<sp/></highlight><highlight class="stringliteral">&quot;defproducer3&quot;</highlight><highlight class="normal"><sp/>)[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"></highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//stake<sp/>increase<sp/>by<sp/>proxy<sp/>itself<sp/>affects<sp/>producers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a743a21c2e0e86a8aeacc66e5c80c51ef" kindref="member">issue_and_transfer</ref>(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1000.0000&quot;</highlight><highlight class="normal">),<sp/><sp/>config::system_account_name<sp/>);</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>stake(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;30.0001&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;20.0001&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>stake2votes(<ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;200.0005&quot;</highlight><highlight class="normal">)),<sp/>get_producer_info(<sp/></highlight><highlight class="stringliteral">&quot;defproducer1&quot;</highlight><highlight class="normal"><sp/>)[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>0,<sp/>get_producer_info(<sp/></highlight><highlight class="stringliteral">&quot;defproducer2&quot;</highlight><highlight class="normal"><sp/>)[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>stake2votes(<ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;200.0005&quot;</highlight><highlight class="normal">)),<sp/>get_producer_info(<sp/></highlight><highlight class="stringliteral">&quot;defproducer3&quot;</highlight><highlight class="normal"><sp/>)[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"></highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//stake<sp/>decrease<sp/>by<sp/>proxy<sp/>itself<sp/>affects<sp/>producers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>unstake(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;10.0001&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;10.0001&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>stake2votes(<ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;180.0003&quot;</highlight><highlight class="normal">))<sp/>==<sp/>get_producer_info(<sp/></highlight><highlight class="stringliteral">&quot;defproducer1&quot;</highlight><highlight class="normal"><sp/>)[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>0,<sp/>get_producer_info(<sp/></highlight><highlight class="stringliteral">&quot;defproducer2&quot;</highlight><highlight class="normal"><sp/>)[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>stake2votes(<ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;180.0003&quot;</highlight><highlight class="normal">))<sp/>==<sp/>get_producer_info(<sp/></highlight><highlight class="stringliteral">&quot;defproducer3&quot;</highlight><highlight class="normal"><sp/>)[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"></highlight></codeline>
<codeline lineno="1435"><highlight class="normal">}<sp/><ref refid="eosio_8system__tests_8cpp_1a057cb719bfa291fae56dc6ba5fa7a8d1" kindref="member">FC_LOG_AND_RETHROW</ref>()</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"></highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><ref refid="eosio_8system__tests_8cpp_1a8a1841911da283583ec346df954d73a1" kindref="member">BOOST_FIXTURE_TEST_CASE</ref>(producer_pay,<sp/><ref refid="classeosio__system_1_1eosio__system__tester" kindref="compound">eosio_system_tester</ref>,<sp/>*<sp/>boost::unit_test::tolerance(1e-10))<sp/><ref refid="eosio_8system__tests_8cpp_1ae89aac94d502abdd3c8d055174c221fc" kindref="member">try</ref><sp/>{</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"></highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>continuous_rate<sp/>=<sp/>std::log1p(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">(0.05));</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>usecs_per_year<sp/><sp/>=<sp/>52<sp/>*<sp/>7<sp/>*<sp/>24<sp/>*<sp/>3600<sp/>*<sp/>1000000ll;</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>secs_per_year<sp/><sp/><sp/>=<sp/>52<sp/>*<sp/>7<sp/>*<sp/>24<sp/>*<sp/>3600;</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"></highlight></codeline>
<codeline lineno="1443"><highlight class="normal"></highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>large_asset<sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;80.0000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a791a80df1bef25c60fe34353c84ed5bc" kindref="member">create_account_with_resources</ref>(<sp/></highlight><highlight class="stringliteral">&quot;defproducera&quot;</highlight><highlight class="normal">_n,<sp/>config::system_account_name,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1.0000&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>large_asset,<sp/>large_asset<sp/>);</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a791a80df1bef25c60fe34353c84ed5bc" kindref="member">create_account_with_resources</ref>(<sp/></highlight><highlight class="stringliteral">&quot;defproducerb&quot;</highlight><highlight class="normal">_n,<sp/>config::system_account_name,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1.0000&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>large_asset,<sp/>large_asset<sp/>);</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a791a80df1bef25c60fe34353c84ed5bc" kindref="member">create_account_with_resources</ref>(<sp/></highlight><highlight class="stringliteral">&quot;defproducerc&quot;</highlight><highlight class="normal">_n,<sp/>config::system_account_name,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1.0000&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>large_asset,<sp/>large_asset<sp/>);</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"></highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a791a80df1bef25c60fe34353c84ed5bc" kindref="member">create_account_with_resources</ref>(<sp/></highlight><highlight class="stringliteral">&quot;producvotera&quot;</highlight><highlight class="normal">_n,<sp/>config::system_account_name,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1.0000&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>large_asset,<sp/>large_asset<sp/>);</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a791a80df1bef25c60fe34353c84ed5bc" kindref="member">create_account_with_resources</ref>(<sp/></highlight><highlight class="stringliteral">&quot;producvoterb&quot;</highlight><highlight class="normal">_n,<sp/>config::system_account_name,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1.0000&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>large_asset,<sp/>large_asset<sp/>);</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"></highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(success(),<sp/>regproducer(</highlight><highlight class="stringliteral">&quot;defproducera&quot;</highlight><highlight class="normal">_n));</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(fc::hours(24));</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="eosio_8system__tests_8cpp_1a5a03a10daf5c20c6e9a103d00fcd085f" kindref="member">prod</ref><sp/>=<sp/>get_producer_info(<sp/></highlight><highlight class="stringliteral">&quot;defproducera&quot;</highlight><highlight class="normal">_n<sp/>);</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(</highlight><highlight class="stringliteral">&quot;defproducera&quot;</highlight><highlight class="normal">,<sp/><ref refid="eosio_8system__tests_8cpp_1a5a03a10daf5c20c6e9a103d00fcd085f" kindref="member">prod</ref>[</highlight><highlight class="stringliteral">&quot;owner&quot;</highlight><highlight class="normal">].as_string());</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(0,<sp/><ref refid="eosio_8system__tests_8cpp_1a5a03a10daf5c20c6e9a103d00fcd085f" kindref="member">prod</ref>[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as_double());</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"></highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a792dc87878d55cfa11f862e9e6d5cc05" kindref="member">transfer</ref>(<sp/>config::system_account_name,<sp/></highlight><highlight class="stringliteral">&quot;producvotera&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;400000000.0000&quot;</highlight><highlight class="normal">),<sp/>config::system_account_name);</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(success(),<sp/>stake(</highlight><highlight class="stringliteral">&quot;producvotera&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;100000000.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;100000000.0000&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(success(),<sp/>vote(<sp/></highlight><highlight class="stringliteral">&quot;producvotera&quot;</highlight><highlight class="normal">_n,<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;defproducera&quot;</highlight><highlight class="normal">_n<sp/>}));</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>defproducera<sp/>is<sp/>the<sp/>only<sp/>active<sp/>producer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>produce<sp/>enough<sp/>blocks<sp/>so<sp/>new<sp/>schedule<sp/>kicks<sp/>in<sp/>and<sp/>defproducera<sp/>produces<sp/>some<sp/>blocks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aa1213f0f2c7a53ea968859f3cab582c3" kindref="member">produce_blocks</ref>(50);</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"></highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>initial_global_state<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>get_global_state();</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>initial_claim_time<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>microseconds_since_epoch_of_iso_string(<sp/>initial_global_state[</highlight><highlight class="stringliteral">&quot;last_pervote_bucket_fill&quot;</highlight><highlight class="normal">]<sp/>);</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/><sp/>initial_pervote_bucket<sp/><sp/><sp/><sp/>=<sp/>initial_global_state[</highlight><highlight class="stringliteral">&quot;pervote_bucket&quot;</highlight><highlight class="normal">].as&lt;int64_t&gt;();</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/><sp/>initial_perblock_bucket<sp/><sp/><sp/>=<sp/>initial_global_state[</highlight><highlight class="stringliteral">&quot;perblock_bucket&quot;</highlight><highlight class="normal">].as&lt;int64_t&gt;();</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/><sp/>initial_savings<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>get_balance(</highlight><highlight class="stringliteral">&quot;eosio.saving&quot;</highlight><highlight class="normal">_n).get_amount();</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>initial_tot_unpaid_blocks<sp/>=<sp/>initial_global_state[</highlight><highlight class="stringliteral">&quot;total_unpaid_blocks&quot;</highlight><highlight class="normal">].as&lt;uint32_t&gt;();</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"></highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a5a03a10daf5c20c6e9a103d00fcd085f" kindref="member">prod</ref><sp/>=<sp/>get_producer_info(</highlight><highlight class="stringliteral">&quot;defproducera&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>unpaid_blocks<sp/>=<sp/><ref refid="eosio_8system__tests_8cpp_1a5a03a10daf5c20c6e9a103d00fcd085f" kindref="member">prod</ref>[</highlight><highlight class="stringliteral">&quot;unpaid_blocks&quot;</highlight><highlight class="normal">].as&lt;uint32_t&gt;();</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1ae00c608b8a40d03b8b8dd2daac50185b" kindref="member">BOOST_REQUIRE</ref>(1<sp/>&lt;<sp/>unpaid_blocks);</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"></highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(initial_tot_unpaid_blocks,<sp/>unpaid_blocks);</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"></highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>initial_supply<sp/><sp/>=<sp/>get_token_supply();</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>initial_balance<sp/>=<sp/>get_balance(</highlight><highlight class="stringliteral">&quot;defproducera&quot;</highlight><highlight class="normal">_n);</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"></highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(success(),<sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(</highlight><highlight class="stringliteral">&quot;defproducera&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;claimrewards&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()(</highlight><highlight class="stringliteral">&quot;owner&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;defproducera&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="1483"><highlight class="normal"></highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>global_state<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>get_global_state();</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>claim_time<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>microseconds_since_epoch_of_iso_string(<sp/>global_state[</highlight><highlight class="stringliteral">&quot;last_pervote_bucket_fill&quot;</highlight><highlight class="normal">]<sp/>);</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/><sp/>pervote_bucket<sp/><sp/><sp/><sp/>=<sp/>global_state[</highlight><highlight class="stringliteral">&quot;pervote_bucket&quot;</highlight><highlight class="normal">].as&lt;int64_t&gt;();</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/><sp/>perblock_bucket<sp/><sp/><sp/>=<sp/>global_state[</highlight><highlight class="stringliteral">&quot;perblock_bucket&quot;</highlight><highlight class="normal">].as&lt;int64_t&gt;();</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/><sp/>savings<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>get_balance(</highlight><highlight class="stringliteral">&quot;eosio.saving&quot;</highlight><highlight class="normal">_n).get_amount();</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>tot_unpaid_blocks<sp/>=<sp/>global_state[</highlight><highlight class="stringliteral">&quot;total_unpaid_blocks&quot;</highlight><highlight class="normal">].as&lt;uint32_t&gt;();</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"></highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a5a03a10daf5c20c6e9a103d00fcd085f" kindref="member">prod</ref><sp/>=<sp/>get_producer_info(</highlight><highlight class="stringliteral">&quot;defproducera&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(1,<sp/><ref refid="eosio_8system__tests_8cpp_1a5a03a10daf5c20c6e9a103d00fcd085f" kindref="member">prod</ref>[</highlight><highlight class="stringliteral">&quot;unpaid_blocks&quot;</highlight><highlight class="normal">].as&lt;uint32_t&gt;());</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(1,<sp/>tot_unpaid_blocks);</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/><ref refid="eosio_8token__tests_8cpp_1ad37587c54682d8fea3f46f4976e16437" kindref="member">supply</ref><sp/><sp/>=<sp/>get_token_supply();</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/><ref refid="eosio_8token__tests_8cpp_1a1e7ef09ce66d09456a55c47a8c42f3dc" kindref="member">balance</ref><sp/>=<sp/>get_balance(</highlight><highlight class="stringliteral">&quot;defproducera&quot;</highlight><highlight class="normal">_n);</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"></highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(claim_time,<sp/>microseconds_since_epoch_of_iso_string(<sp/><ref refid="eosio_8system__tests_8cpp_1a5a03a10daf5c20c6e9a103d00fcd085f" kindref="member">prod</ref>[</highlight><highlight class="stringliteral">&quot;last_claim_time&quot;</highlight><highlight class="normal">]<sp/>));</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"></highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>usecs_between_fills<sp/>=<sp/>claim_time<sp/>-<sp/>initial_claim_time;</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>secs_between_fills<sp/>=<sp/>usecs_between_fills/1000000;</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"></highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(0,<sp/>initial_savings);</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(0,<sp/>initial_perblock_bucket);</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(0,<sp/>initial_pervote_bucket);</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"></highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(int64_t(<sp/>(<sp/>initial_supply.get_amount()<sp/>*<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">(secs_between_fills)<sp/>*<sp/>continuous_rate<sp/>)<sp/>/<sp/>secs_per_year<sp/>),</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8token__tests_8cpp_1ad37587c54682d8fea3f46f4976e16437" kindref="member">supply</ref>.get_amount()<sp/>-<sp/>initial_supply.get_amount());</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1ae00c608b8a40d03b8b8dd2daac50185b" kindref="member">BOOST_REQUIRE</ref>(<ref refid="eosio_8system__tests_8cpp_1a2a34c6cca71b9f7b935a3b00648b2b41" kindref="member">within_one</ref>(int64_t(<sp/>(<sp/>initial_supply.get_amount()<sp/>*<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">(secs_between_fills)<sp/>*<sp/>(4.<sp/><sp/><sp/>*<sp/>continuous_rate/<sp/>5.)<sp/>/<sp/>secs_per_year<sp/>)<sp/>),</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>savings<sp/>-<sp/>initial_savings));</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1ae00c608b8a40d03b8b8dd2daac50185b" kindref="member">BOOST_REQUIRE</ref>(<ref refid="eosio_8system__tests_8cpp_1a2a34c6cca71b9f7b935a3b00648b2b41" kindref="member">within_one</ref>(int64_t(<sp/>(<sp/>initial_supply.get_amount()<sp/>*<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">(secs_between_fills)<sp/>*<sp/>(0.25<sp/>*<sp/>continuous_rate/<sp/>5.)<sp/>/<sp/>secs_per_year<sp/>)<sp/>),</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8token__tests_8cpp_1a1e7ef09ce66d09456a55c47a8c42f3dc" kindref="member">balance</ref>.get_amount()<sp/>-<sp/>initial_balance.get_amount()));</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"></highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>from_perblock_bucket<sp/>=<sp/>int64_t(<sp/>initial_supply.get_amount()<sp/>*<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">(secs_between_fills)<sp/>*<sp/>(0.25<sp/>*<sp/>continuous_rate/<sp/>5.)<sp/>/<sp/>secs_per_year<sp/>)<sp/>;</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>from_pervote_bucket<sp/><sp/>=<sp/>int64_t(<sp/>initial_supply.get_amount()<sp/>*<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">(secs_between_fills)<sp/>*<sp/>(0.75<sp/>*<sp/>continuous_rate/<sp/>5.)<sp/>/<sp/>secs_per_year<sp/>)<sp/>;</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"></highlight></codeline>
<codeline lineno="1516"><highlight class="normal"></highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(from_pervote_bucket<sp/>&gt;=<sp/>100<sp/>*<sp/>10000)<sp/>{</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(from_perblock_bucket<sp/>+<sp/>from_pervote_bucket,<sp/><ref refid="eosio_8token__tests_8cpp_1a1e7ef09ce66d09456a55c47a8c42f3dc" kindref="member">balance</ref>.get_amount()<sp/>-<sp/>initial_balance.get_amount());</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(0,<sp/>pervote_bucket);</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(from_perblock_bucket,<sp/><ref refid="eosio_8token__tests_8cpp_1a1e7ef09ce66d09456a55c47a8c42f3dc" kindref="member">balance</ref>.get_amount()<sp/>-<sp/>initial_balance.get_amount());</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(from_pervote_bucket,<sp/>pervote_bucket);</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"></highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;already<sp/>claimed<sp/>rewards<sp/>within<sp/>past<sp/>day&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(</highlight><highlight class="stringliteral">&quot;defproducera&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;claimrewards&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()(</highlight><highlight class="stringliteral">&quot;owner&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;defproducera&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"></highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>defproducera<sp/>waits<sp/>for<sp/>23<sp/>hours<sp/>and<sp/>55<sp/>minutes,<sp/>can&apos;t<sp/>claim<sp/>rewards<sp/>yet</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(fc::seconds(23<sp/>*<sp/>3600<sp/>+<sp/>55<sp/>*<sp/>60));</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;already<sp/>claimed<sp/>rewards<sp/>within<sp/>past<sp/>day&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(</highlight><highlight class="stringliteral">&quot;defproducera&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;claimrewards&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()(</highlight><highlight class="stringliteral">&quot;owner&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;defproducera&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"></highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>wait<sp/>5<sp/>more<sp/>minutes,<sp/>defproducera<sp/>can<sp/>now<sp/>claim<sp/>rewards<sp/>again</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(fc::seconds(5<sp/>*<sp/>60));</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"></highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>initial_global_state<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>get_global_state();</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>initial_claim_time<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>microseconds_since_epoch_of_iso_string(<sp/>initial_global_state[</highlight><highlight class="stringliteral">&quot;last_pervote_bucket_fill&quot;</highlight><highlight class="normal">]<sp/>);</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/><sp/>initial_pervote_bucket<sp/><sp/><sp/><sp/>=<sp/>initial_global_state[</highlight><highlight class="stringliteral">&quot;pervote_bucket&quot;</highlight><highlight class="normal">].as&lt;int64_t&gt;();</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/><sp/>initial_perblock_bucket<sp/><sp/><sp/>=<sp/>initial_global_state[</highlight><highlight class="stringliteral">&quot;perblock_bucket&quot;</highlight><highlight class="normal">].as&lt;int64_t&gt;();</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/><sp/>initial_savings<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>get_balance(</highlight><highlight class="stringliteral">&quot;eosio.saving&quot;</highlight><highlight class="normal">_n).get_amount();</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>initial_tot_unpaid_blocks<sp/>=<sp/>initial_global_state[</highlight><highlight class="stringliteral">&quot;total_unpaid_blocks&quot;</highlight><highlight class="normal">].as&lt;uint32_t&gt;();</highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/>initial_tot_vote_weight<sp/><sp/><sp/>=<sp/>initial_global_state[</highlight><highlight class="stringliteral">&quot;total_producer_vote_weight&quot;</highlight><highlight class="normal">].as&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;();</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"></highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a5a03a10daf5c20c6e9a103d00fcd085f" kindref="member">prod</ref><sp/>=<sp/>get_producer_info(</highlight><highlight class="stringliteral">&quot;defproducera&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>unpaid_blocks<sp/>=<sp/><ref refid="eosio_8system__tests_8cpp_1a5a03a10daf5c20c6e9a103d00fcd085f" kindref="member">prod</ref>[</highlight><highlight class="stringliteral">&quot;unpaid_blocks&quot;</highlight><highlight class="normal">].as&lt;uint32_t&gt;();</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1ae00c608b8a40d03b8b8dd2daac50185b" kindref="member">BOOST_REQUIRE</ref>(1<sp/>&lt;<sp/>unpaid_blocks);</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(initial_tot_unpaid_blocks,<sp/>unpaid_blocks);</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1ae00c608b8a40d03b8b8dd2daac50185b" kindref="member">BOOST_REQUIRE</ref>(0<sp/>&lt;<sp/><ref refid="eosio_8system__tests_8cpp_1a5a03a10daf5c20c6e9a103d00fcd085f" kindref="member">prod</ref>[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as&lt;double&gt;());</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_TEST(initial_tot_vote_weight,<sp/><ref refid="eosio_8system__tests_8cpp_1a5a03a10daf5c20c6e9a103d00fcd085f" kindref="member">prod</ref>[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as&lt;double&gt;());</highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1ae00c608b8a40d03b8b8dd2daac50185b" kindref="member">BOOST_REQUIRE</ref>(0<sp/>&lt;<sp/>microseconds_since_epoch_of_iso_string(<sp/><ref refid="eosio_8system__tests_8cpp_1a5a03a10daf5c20c6e9a103d00fcd085f" kindref="member">prod</ref>[</highlight><highlight class="stringliteral">&quot;last_claim_time&quot;</highlight><highlight class="normal">]<sp/>));</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"></highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(initial_tot_unpaid_blocks,<sp/>unpaid_blocks);</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"></highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>initial_supply<sp/><sp/>=<sp/>get_token_supply();</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>initial_balance<sp/>=<sp/>get_balance(</highlight><highlight class="stringliteral">&quot;defproducera&quot;</highlight><highlight class="normal">_n);</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"></highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(success(),<sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(</highlight><highlight class="stringliteral">&quot;defproducera&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;claimrewards&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()(</highlight><highlight class="stringliteral">&quot;owner&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;defproducera&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"></highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>global_state<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>get_global_state();</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>claim_time<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>microseconds_since_epoch_of_iso_string(<sp/>global_state[</highlight><highlight class="stringliteral">&quot;last_pervote_bucket_fill&quot;</highlight><highlight class="normal">]<sp/>);</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/><sp/>pervote_bucket<sp/><sp/><sp/><sp/>=<sp/>global_state[</highlight><highlight class="stringliteral">&quot;pervote_bucket&quot;</highlight><highlight class="normal">].as&lt;int64_t&gt;();</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/><sp/>perblock_bucket<sp/><sp/><sp/>=<sp/>global_state[</highlight><highlight class="stringliteral">&quot;perblock_bucket&quot;</highlight><highlight class="normal">].as&lt;int64_t&gt;();</highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/><sp/>savings<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>get_balance(</highlight><highlight class="stringliteral">&quot;eosio.saving&quot;</highlight><highlight class="normal">_n).get_amount();</highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>tot_unpaid_blocks<sp/>=<sp/>global_state[</highlight><highlight class="stringliteral">&quot;total_unpaid_blocks&quot;</highlight><highlight class="normal">].as&lt;uint32_t&gt;();</highlight></codeline>
<codeline lineno="1571"><highlight class="normal"></highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a5a03a10daf5c20c6e9a103d00fcd085f" kindref="member">prod</ref><sp/>=<sp/>get_producer_info(</highlight><highlight class="stringliteral">&quot;defproducera&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(1,<sp/><ref refid="eosio_8system__tests_8cpp_1a5a03a10daf5c20c6e9a103d00fcd085f" kindref="member">prod</ref>[</highlight><highlight class="stringliteral">&quot;unpaid_blocks&quot;</highlight><highlight class="normal">].as&lt;uint32_t&gt;());</highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(1,<sp/>tot_unpaid_blocks);</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/><ref refid="eosio_8token__tests_8cpp_1ad37587c54682d8fea3f46f4976e16437" kindref="member">supply</ref><sp/><sp/>=<sp/>get_token_supply();</highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/><ref refid="eosio_8token__tests_8cpp_1a1e7ef09ce66d09456a55c47a8c42f3dc" kindref="member">balance</ref><sp/>=<sp/>get_balance(</highlight><highlight class="stringliteral">&quot;defproducera&quot;</highlight><highlight class="normal">_n);</highlight></codeline>
<codeline lineno="1577"><highlight class="normal"></highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(claim_time,<sp/>microseconds_since_epoch_of_iso_string(<sp/><ref refid="eosio_8system__tests_8cpp_1a5a03a10daf5c20c6e9a103d00fcd085f" kindref="member">prod</ref>[</highlight><highlight class="stringliteral">&quot;last_claim_time&quot;</highlight><highlight class="normal">]<sp/>));</highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>usecs_between_fills<sp/>=<sp/>claim_time<sp/>-<sp/>initial_claim_time;</highlight></codeline>
<codeline lineno="1580"><highlight class="normal"></highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>int64_t(<sp/>initial_supply.get_amount()<sp/>*<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">(usecs_between_fills)<sp/>*<sp/>continuous_rate<sp/>/<sp/>usecs_per_year<sp/>),</highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8token__tests_8cpp_1ad37587c54682d8fea3f46f4976e16437" kindref="member">supply</ref>.get_amount()<sp/>-<sp/>initial_supply.get_amount()<sp/>);</highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>(<ref refid="eosio_8token__tests_8cpp_1ad37587c54682d8fea3f46f4976e16437" kindref="member">supply</ref>.get_amount()<sp/>-<sp/>initial_supply.get_amount())<sp/>-<sp/>(<ref refid="eosio_8token__tests_8cpp_1ad37587c54682d8fea3f46f4976e16437" kindref="member">supply</ref>.get_amount()<sp/>-<sp/>initial_supply.get_amount())<sp/>/<sp/>5,</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>savings<sp/>-<sp/>initial_savings<sp/>);</highlight></codeline>
<codeline lineno="1585"><highlight class="normal"></highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>to_producer<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>int64_t(<sp/>initial_supply.get_amount()<sp/>*<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">(usecs_between_fills)<sp/>*<sp/>continuous_rate<sp/>/<sp/>usecs_per_year<sp/>)<sp/>/<sp/>5;</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>to_perblock_bucket<sp/>=<sp/>to_producer<sp/>/<sp/>4;</highlight></codeline>
<codeline lineno="1588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>to_pervote_bucket<sp/><sp/>=<sp/>to_producer<sp/>-<sp/>to_perblock_bucket;</highlight></codeline>
<codeline lineno="1589"><highlight class="normal"></highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(to_pervote_bucket<sp/>+<sp/>initial_pervote_bucket<sp/>&gt;=<sp/>100<sp/>*<sp/>10000)<sp/>{</highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(to_perblock_bucket<sp/>+<sp/>to_pervote_bucket<sp/>+<sp/>initial_pervote_bucket,<sp/><ref refid="eosio_8token__tests_8cpp_1a1e7ef09ce66d09456a55c47a8c42f3dc" kindref="member">balance</ref>.get_amount()<sp/>-<sp/>initial_balance.get_amount());</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(0,<sp/>pervote_bucket);</highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(to_perblock_bucket,<sp/><ref refid="eosio_8token__tests_8cpp_1a1e7ef09ce66d09456a55c47a8c42f3dc" kindref="member">balance</ref>.get_amount()<sp/>-<sp/>initial_balance.get_amount());</highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(to_pervote_bucket<sp/>+<sp/>initial_pervote_bucket,<sp/>pervote_bucket);</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"></highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>defproducerb<sp/>tries<sp/>to<sp/>claim<sp/>rewards<sp/>but<sp/>he&apos;s<sp/>not<sp/>on<sp/>the<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;unable<sp/>to<sp/>find<sp/>key&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(</highlight><highlight class="stringliteral">&quot;defproducerb&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;claimrewards&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()(</highlight><highlight class="stringliteral">&quot;owner&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;defproducerb&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1604"><highlight class="normal"></highlight></codeline>
<codeline lineno="1605"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>test<sp/>stability<sp/>over<sp/>a<sp/>year</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>regproducer(</highlight><highlight class="stringliteral">&quot;defproducerb&quot;</highlight><highlight class="normal">_n);</highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>regproducer(</highlight><highlight class="stringliteral">&quot;defproducerc&quot;</highlight><highlight class="normal">_n);</highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(fc::hours(24));</highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/><sp/><sp/>initial_supply<sp/><sp/>=<sp/>get_token_supply();</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>initial_savings<sp/>=<sp/>get_balance(</highlight><highlight class="stringliteral">&quot;eosio.saving&quot;</highlight><highlight class="normal">_n).get_amount();</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint32_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>7<sp/>*<sp/>52;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(fc::seconds(8<sp/>*<sp/>3600));</highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(success(),<sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(</highlight><highlight class="stringliteral">&quot;defproducerc&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;claimrewards&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()(</highlight><highlight class="stringliteral">&quot;owner&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;defproducerc&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(fc::seconds(8<sp/>*<sp/>3600));</highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(success(),<sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(</highlight><highlight class="stringliteral">&quot;defproducerb&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;claimrewards&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()(</highlight><highlight class="stringliteral">&quot;owner&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;defproducerb&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(fc::seconds(8<sp/>*<sp/>3600));</highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(success(),<sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(</highlight><highlight class="stringliteral">&quot;defproducera&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;claimrewards&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()(</highlight><highlight class="stringliteral">&quot;owner&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;defproducera&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/><sp/><sp/><ref refid="eosio_8token__tests_8cpp_1ad37587c54682d8fea3f46f4976e16437" kindref="member">supply</ref><sp/><sp/>=<sp/>get_token_supply();</highlight></codeline>
<codeline lineno="1621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>savings<sp/>=<sp/>get_balance(</highlight><highlight class="stringliteral">&quot;eosio.saving&quot;</highlight><highlight class="normal">_n).get_amount();</highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Amount<sp/>issued<sp/>per<sp/>year<sp/>is<sp/>very<sp/>close<sp/>to<sp/>the<sp/>5%<sp/>inflation<sp/>target.<sp/>Small<sp/>difference<sp/>(500<sp/>tokens<sp/>out<sp/>of<sp/>50&apos;000&apos;000<sp/>issued)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>due<sp/>to<sp/>compounding<sp/>every<sp/>8<sp/>hours<sp/>in<sp/>this<sp/>test<sp/>as<sp/>opposed<sp/>to<sp/>theoretical<sp/>continuous<sp/>compounding</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1ae00c608b8a40d03b8b8dd2daac50185b" kindref="member">BOOST_REQUIRE</ref>(500<sp/>*<sp/>10000<sp/>&gt;<sp/>int64_t(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">(initial_supply.get_amount())<sp/>*<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">(0.05))<sp/>-<sp/>(<ref refid="eosio_8token__tests_8cpp_1ad37587c54682d8fea3f46f4976e16437" kindref="member">supply</ref>.get_amount()<sp/>-<sp/>initial_supply.get_amount()));</highlight></codeline>
<codeline lineno="1625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1ae00c608b8a40d03b8b8dd2daac50185b" kindref="member">BOOST_REQUIRE</ref>(500<sp/>*<sp/>10000<sp/>&gt;<sp/>int64_t(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">(initial_supply.get_amount())<sp/>*<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">(0.04))<sp/>-<sp/>(savings<sp/>-<sp/>initial_savings));</highlight></codeline>
<codeline lineno="1626"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1627"><highlight class="normal">}<sp/><ref refid="eosio_8system__tests_8cpp_1a057cb719bfa291fae56dc6ba5fa7a8d1" kindref="member">FC_LOG_AND_RETHROW</ref>()</highlight></codeline>
<codeline lineno="1628"><highlight class="normal"></highlight></codeline>
<codeline lineno="1629"><highlight class="normal"><ref refid="eosio_8system__tests_8cpp_1a8a1841911da283583ec346df954d73a1" kindref="member">BOOST_FIXTURE_TEST_CASE</ref>(change_inflation,<sp/><ref refid="classeosio__system_1_1eosio__system__tester" kindref="compound">eosio_system_tester</ref>)<sp/><ref refid="eosio_8system__tests_8cpp_1ae89aac94d502abdd3c8d055174c221fc" kindref="member">try</ref><sp/>{</highlight></codeline>
<codeline lineno="1630"><highlight class="normal"></highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),</highlight></codeline>
<codeline lineno="1633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setinflation(0,<sp/>10000,<sp/>10000)<sp/>);</highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;annual_rate<sp/>can&apos;t<sp/>be<sp/>negative&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setinflation(-1,<sp/>10000,<sp/>10000)<sp/>);</highlight></codeline>
<codeline lineno="1636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;inflation_pay_factor<sp/>must<sp/>not<sp/>be<sp/>less<sp/>than<sp/>10000&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setinflation(1,<sp/>9999,<sp/>10000)<sp/>);</highlight></codeline>
<codeline lineno="1638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;votepay_factor<sp/>must<sp/>not<sp/>be<sp/>less<sp/>than<sp/>10000&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setinflation(1,<sp/>10000,<sp/>9999)<sp/>);</highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"></highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>large_asset<sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;80.0000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a791a80df1bef25c60fe34353c84ed5bc" kindref="member">create_account_with_resources</ref>(<sp/></highlight><highlight class="stringliteral">&quot;defproducera&quot;</highlight><highlight class="normal">_n,<sp/>config::system_account_name,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1.0000&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>large_asset,<sp/>large_asset<sp/>);</highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a791a80df1bef25c60fe34353c84ed5bc" kindref="member">create_account_with_resources</ref>(<sp/></highlight><highlight class="stringliteral">&quot;defproducerb&quot;</highlight><highlight class="normal">_n,<sp/>config::system_account_name,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1.0000&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>large_asset,<sp/>large_asset<sp/>);</highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a791a80df1bef25c60fe34353c84ed5bc" kindref="member">create_account_with_resources</ref>(<sp/></highlight><highlight class="stringliteral">&quot;defproducerc&quot;</highlight><highlight class="normal">_n,<sp/>config::system_account_name,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1.0000&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>large_asset,<sp/>large_asset<sp/>);</highlight></codeline>
<codeline lineno="1647"><highlight class="normal"></highlight></codeline>
<codeline lineno="1648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a791a80df1bef25c60fe34353c84ed5bc" kindref="member">create_account_with_resources</ref>(<sp/></highlight><highlight class="stringliteral">&quot;producvotera&quot;</highlight><highlight class="normal">_n,<sp/>config::system_account_name,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1.0000&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>large_asset,<sp/>large_asset<sp/>);</highlight></codeline>
<codeline lineno="1649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a791a80df1bef25c60fe34353c84ed5bc" kindref="member">create_account_with_resources</ref>(<sp/></highlight><highlight class="stringliteral">&quot;producvoterb&quot;</highlight><highlight class="normal">_n,<sp/>config::system_account_name,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1.0000&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>large_asset,<sp/>large_asset<sp/>);</highlight></codeline>
<codeline lineno="1650"><highlight class="normal"></highlight></codeline>
<codeline lineno="1651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(success(),<sp/>regproducer(</highlight><highlight class="stringliteral">&quot;defproducera&quot;</highlight><highlight class="normal">_n));</highlight></codeline>
<codeline lineno="1652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(success(),<sp/>regproducer(</highlight><highlight class="stringliteral">&quot;defproducerb&quot;</highlight><highlight class="normal">_n));</highlight></codeline>
<codeline lineno="1653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(success(),<sp/>regproducer(</highlight><highlight class="stringliteral">&quot;defproducerc&quot;</highlight><highlight class="normal">_n));</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"></highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(fc::hours(24));</highlight></codeline>
<codeline lineno="1656"><highlight class="normal"></highlight></codeline>
<codeline lineno="1657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a792dc87878d55cfa11f862e9e6d5cc05" kindref="member">transfer</ref>(<sp/>config::system_account_name,<sp/></highlight><highlight class="stringliteral">&quot;producvotera&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;400000000.0000&quot;</highlight><highlight class="normal">),<sp/>config::system_account_name);</highlight></codeline>
<codeline lineno="1658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(success(),<sp/>stake(</highlight><highlight class="stringliteral">&quot;producvotera&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;100000000.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;100000000.0000&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="1659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(success(),<sp/>vote(<sp/></highlight><highlight class="stringliteral">&quot;producvotera&quot;</highlight><highlight class="normal">_n,<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;defproducera&quot;</highlight><highlight class="normal">_n,</highlight><highlight class="stringliteral">&quot;defproducerb&quot;</highlight><highlight class="normal">_n,</highlight><highlight class="stringliteral">&quot;defproducerc&quot;</highlight><highlight class="normal">_n<sp/>}));</highlight></codeline>
<codeline lineno="1660"><highlight class="normal"></highlight></codeline>
<codeline lineno="1661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>run_for_1year<sp/>=<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">](int64_t<sp/>annual_rate,<sp/>int64_t<sp/>inflation_pay_factor,<sp/>int64_t<sp/>votepay_factor)<sp/>{</highlight></codeline>
<codeline lineno="1662"><highlight class="normal"></highlight></codeline>
<codeline lineno="1663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>inflation<sp/>=<sp/>double(annual_rate)/double(10000);</highlight></codeline>
<codeline lineno="1664"><highlight class="normal"></highlight></codeline>
<codeline lineno="1665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(success(),<sp/>setinflation(</highlight></codeline>
<codeline lineno="1666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>annual_rate,</highlight></codeline>
<codeline lineno="1667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inflation_pay_factor,</highlight></codeline>
<codeline lineno="1668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>votepay_factor</highlight></codeline>
<codeline lineno="1669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>));</highlight></codeline>
<codeline lineno="1670"><highlight class="normal"></highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(fc::hours(24));</highlight></codeline>
<codeline lineno="1672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/><sp/><sp/>initial_supply<sp/><sp/>=<sp/>get_token_supply();</highlight></codeline>
<codeline lineno="1673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>initial_savings<sp/>=<sp/>get_balance(</highlight><highlight class="stringliteral">&quot;eosio.saving&quot;</highlight><highlight class="normal">_n).get_amount();</highlight></codeline>
<codeline lineno="1674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint32_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>7<sp/>*<sp/>52;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(fc::seconds(8<sp/>*<sp/>3600));</highlight></codeline>
<codeline lineno="1676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(success(),<sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(</highlight><highlight class="stringliteral">&quot;defproducerc&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;claimrewards&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()(</highlight><highlight class="stringliteral">&quot;owner&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;defproducerc&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="1677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(fc::seconds(8<sp/>*<sp/>3600));</highlight></codeline>
<codeline lineno="1678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(success(),<sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(</highlight><highlight class="stringliteral">&quot;defproducerb&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;claimrewards&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()(</highlight><highlight class="stringliteral">&quot;owner&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;defproducerb&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="1679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(fc::seconds(8<sp/>*<sp/>3600));</highlight></codeline>
<codeline lineno="1680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(success(),<sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(</highlight><highlight class="stringliteral">&quot;defproducera&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;claimrewards&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()(</highlight><highlight class="stringliteral">&quot;owner&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;defproducera&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="1681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/><sp/><sp/>final_supply<sp/><sp/>=<sp/>get_token_supply();</highlight></codeline>
<codeline lineno="1683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>final_savings<sp/>=<sp/>get_balance(</highlight><highlight class="stringliteral">&quot;eosio.saving&quot;</highlight><highlight class="normal">_n).get_amount();</highlight></codeline>
<codeline lineno="1684"><highlight class="normal"></highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>computed_new_tokens<sp/>=<sp/>double(final_supply.get_amount()<sp/>-<sp/>initial_supply.get_amount());</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>theoretical_new_tokens<sp/>=<sp/>double(initial_supply.get_amount())*inflation;</highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>diff_new_tokens<sp/>=<sp/>std::abs(theoretical_new_tokens-computed_new_tokens);</highlight></codeline>
<codeline lineno="1688"><highlight class="normal"></highlight></codeline>
<codeline lineno="1689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>annual_rate<sp/>&gt;<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Error<sp/>should<sp/>be<sp/>less<sp/>than<sp/>0.3%</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1ae00c608b8a40d03b8b8dd2daac50185b" kindref="member">BOOST_REQUIRE</ref>(<sp/>diff_new_tokens/theoretical_new_tokens<sp/>&lt;<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">(0.003)<sp/>);</highlight></codeline>
<codeline lineno="1692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>computed_new_tokens,<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="1694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>theoretical_new_tokens,<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1696"><highlight class="normal"></highlight></codeline>
<codeline lineno="1697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>savings_inflation<sp/>=<sp/>inflation<sp/>-<sp/>inflation<sp/>*<sp/>10000<sp/>/<sp/>inflation_pay_factor;</highlight></codeline>
<codeline lineno="1698"><highlight class="normal"></highlight></codeline>
<codeline lineno="1699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>computed_savings_tokens<sp/>=<sp/>double(final_savings-initial_savings);</highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>theoretical_savings_tokens<sp/>=<sp/>double(initial_supply.get_amount())*savings_inflation;</highlight></codeline>
<codeline lineno="1701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>diff_savings_tokens<sp/>=<sp/>std::abs(theoretical_savings_tokens-computed_savings_tokens);</highlight></codeline>
<codeline lineno="1702"><highlight class="normal"></highlight></codeline>
<codeline lineno="1703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>annual_rate<sp/>&gt;<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Error<sp/>should<sp/>be<sp/>less<sp/>than<sp/>0.3%</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1ae00c608b8a40d03b8b8dd2daac50185b" kindref="member">BOOST_REQUIRE</ref>(<sp/>diff_savings_tokens/theoretical_savings_tokens<sp/>&lt;<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">(0.003)<sp/>);</highlight></codeline>
<codeline lineno="1706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>computed_savings_tokens,<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>theoretical_savings_tokens,<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="1709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1711"><highlight class="normal"></highlight></codeline>
<codeline lineno="1712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1%<sp/>inflation<sp/>for<sp/>1<sp/>year.<sp/>50%<sp/>savings<sp/>/<sp/>50%<sp/>bp<sp/>reward.<sp/>10000<sp/>/<sp/>50000<sp/>=<sp/>0.2<sp/>=&gt;<sp/>20%<sp/>blockpay,<sp/>80%<sp/>votepay</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>run_for_1year(100,<sp/>20000,<sp/>50000);</highlight></codeline>
<codeline lineno="1714"><highlight class="normal"></highlight></codeline>
<codeline lineno="1715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>3%<sp/>inflation<sp/>for<sp/>1<sp/>year.<sp/>66.6%<sp/>savings<sp/>/<sp/>33.33%<sp/>bp<sp/>reward.<sp/>10000/13333<sp/>=<sp/>0.75<sp/>=&gt;<sp/>75%<sp/>blockpay,<sp/>25%<sp/>votepay</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>run_for_1year(300,<sp/>30000,<sp/>13333);</highlight></codeline>
<codeline lineno="1717"><highlight class="normal"></highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>0%<sp/>inflation<sp/>for<sp/>1<sp/>year</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>run_for_1year(0,<sp/>30000,<sp/>50000);</highlight></codeline>
<codeline lineno="1720"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1721"><highlight class="normal"></highlight></codeline>
<codeline lineno="1722"><highlight class="normal">}<sp/><ref refid="eosio_8system__tests_8cpp_1a057cb719bfa291fae56dc6ba5fa7a8d1" kindref="member">FC_LOG_AND_RETHROW</ref>()</highlight></codeline>
<codeline lineno="1723"><highlight class="normal"></highlight></codeline>
<codeline lineno="1724"><highlight class="normal"><ref refid="eosio_8powerup__tests_8cpp_1ac6a0c40e40fa78dc772714dae8b97c2e" kindref="member">BOOST_AUTO_TEST_CASE</ref>(extreme_inflation)<sp/><ref refid="eosio_8system__tests_8cpp_1ae89aac94d502abdd3c8d055174c221fc" kindref="member">try</ref><sp/>{</highlight></codeline>
<codeline lineno="1725"><highlight class="normal"><sp/><sp/><sp/><ref refid="classeosio__system_1_1eosio__system__tester" kindref="compound">eosio_system_tester</ref><sp/>t(eosio_system_tester::setup_level::minimal);</highlight></codeline>
<codeline lineno="1726"><highlight class="normal"><sp/><sp/><sp/>symbol<sp/>core_symbol{<ref refid="test__symbol_8hpp_1af288246ded3673b7a516aeaaca84ab01" kindref="member">CORE_SYM</ref>};</highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/><sp/>t.create_currency(<sp/></highlight><highlight class="stringliteral">&quot;eosio.token&quot;</highlight><highlight class="normal">_n,<sp/>config::system_account_name,<sp/>asset((1ll<sp/>&lt;&lt;<sp/>62)<sp/>-<sp/>1,<sp/>core_symbol)<sp/>);</highlight></codeline>
<codeline lineno="1728"><highlight class="normal"><sp/><sp/><sp/>t.issue(<sp/>asset(10000000000000,<sp/>core_symbol)<sp/>);</highlight></codeline>
<codeline lineno="1729"><highlight class="normal"><sp/><sp/><sp/>t.deploy_contract();</highlight></codeline>
<codeline lineno="1730"><highlight class="normal"><sp/><sp/><sp/>t.produce_block();</highlight></codeline>
<codeline lineno="1731"><highlight class="normal"><sp/><sp/><sp/>t.create_account_with_resources(</highlight><highlight class="stringliteral">&quot;defproducera&quot;</highlight><highlight class="normal">_n,<sp/>config::system_account_name,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1.0000&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1732"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(t.success(),<sp/>t.regproducer(</highlight><highlight class="stringliteral">&quot;defproducera&quot;</highlight><highlight class="normal">_n));</highlight></codeline>
<codeline lineno="1733"><highlight class="normal"><sp/><sp/><sp/>t.transfer(<sp/>config::system_account_name,<sp/></highlight><highlight class="stringliteral">&quot;defproducera&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;200000000.0000&quot;</highlight><highlight class="normal">),<sp/>config::system_account_name);</highlight></codeline>
<codeline lineno="1734"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(t.success(),<sp/>t.stake(</highlight><highlight class="stringliteral">&quot;defproducera&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;100000000.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;100000000.0000&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="1735"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(t.success(),<sp/>t.vote(<sp/></highlight><highlight class="stringliteral">&quot;defproducera&quot;</highlight><highlight class="normal">_n,<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;defproducera&quot;</highlight><highlight class="normal">_n<sp/>}));</highlight></codeline>
<codeline lineno="1736"><highlight class="normal"><sp/><sp/><sp/>t.produce_blocks(4);</highlight></codeline>
<codeline lineno="1737"><highlight class="normal"><sp/><sp/><sp/>t.produce_block(fc::hours(24));</highlight></codeline>
<codeline lineno="1738"><highlight class="normal"></highlight></codeline>
<codeline lineno="1739"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(t.success(),<sp/>t.push_action(</highlight><highlight class="stringliteral">&quot;defproducera&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;claimrewards&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()(</highlight><highlight class="stringliteral">&quot;owner&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;defproducera&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="1740"><highlight class="normal"><sp/><sp/><sp/>t.produce_block();</highlight></codeline>
<codeline lineno="1741"><highlight class="normal"><sp/><sp/><sp/>asset<sp/>current_supply;</highlight></codeline>
<codeline lineno="1742"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;char&gt;<sp/>data<sp/>=<sp/>t.get_row_by_account(<sp/></highlight><highlight class="stringliteral">&quot;eosio.token&quot;</highlight><highlight class="normal">_n,<sp/>name(core_symbol.to_symbol_code().value),<sp/></highlight><highlight class="stringliteral">&quot;stat&quot;</highlight><highlight class="normal">_n,<sp/>account_name(core_symbol.to_symbol_code().value)<sp/>);</highlight></codeline>
<codeline lineno="1744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>current_supply<sp/>=<sp/>t.token_abi_ser.binary_to_variant(</highlight><highlight class="stringliteral">&quot;currency_stats&quot;</highlight><highlight class="normal">,<sp/>data,<sp/>abi_serializer::create_yield_function(eosio_system_tester::abi_serializer_max_time))[</highlight><highlight class="stringliteral">&quot;supply&quot;</highlight><highlight class="normal">].template<sp/>as&lt;asset&gt;();</highlight></codeline>
<codeline lineno="1745"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1746"><highlight class="normal"><sp/><sp/><sp/>t.issue(<sp/>asset((1ll<sp/>&lt;&lt;<sp/>62)<sp/>-<sp/>1,<sp/>core_symbol)<sp/>-<sp/>current_supply<sp/>);</highlight></codeline>
<codeline lineno="1747"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(t.success(),<sp/>t.setinflation(<ref refid="eosio_8token__tests_8cpp_1a92759dbaf055ca451db93a2d11393122" kindref="member">std::numeric_limits&lt;int64_t&gt;::max</ref>(),<sp/>50000,<sp/>40000));</highlight></codeline>
<codeline lineno="1748"><highlight class="normal"><sp/><sp/><sp/>t.produce_block();</highlight></codeline>
<codeline lineno="1749"><highlight class="normal"></highlight></codeline>
<codeline lineno="1750"><highlight class="normal"><sp/><sp/><sp/>t.produce_block(fc::hours(10*24));</highlight></codeline>
<codeline lineno="1751"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(t.wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;quantity<sp/>exceeds<sp/>available<sp/>supply&quot;</highlight><highlight class="normal">),<sp/>t.push_action(</highlight><highlight class="stringliteral">&quot;defproducera&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;claimrewards&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()(</highlight><highlight class="stringliteral">&quot;owner&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;defproducera&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="1752"><highlight class="normal"></highlight></codeline>
<codeline lineno="1753"><highlight class="normal"><sp/><sp/><sp/>t.produce_block(fc::hours(11*24));</highlight></codeline>
<codeline lineno="1754"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(t.wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;magnitude<sp/>of<sp/>asset<sp/>amount<sp/>must<sp/>be<sp/>less<sp/>than<sp/>2^62&quot;</highlight><highlight class="normal">),<sp/>t.push_action(</highlight><highlight class="stringliteral">&quot;defproducera&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;claimrewards&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()(</highlight><highlight class="stringliteral">&quot;owner&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;defproducera&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="1755"><highlight class="normal"></highlight></codeline>
<codeline lineno="1756"><highlight class="normal"><sp/><sp/><sp/>t.produce_block(fc::hours(24));</highlight></codeline>
<codeline lineno="1757"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(t.wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;overflow<sp/>in<sp/>calculating<sp/>new<sp/>tokens<sp/>to<sp/>be<sp/>issued;<sp/>inflation<sp/>rate<sp/>is<sp/>too<sp/>high&quot;</highlight><highlight class="normal">),<sp/>t.push_action(</highlight><highlight class="stringliteral">&quot;defproducera&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;claimrewards&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()(</highlight><highlight class="stringliteral">&quot;owner&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;defproducera&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="1758"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(t.success(),<sp/>t.setinflation(500,<sp/>50000,<sp/>40000));</highlight></codeline>
<codeline lineno="1759"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(t.wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;quantity<sp/>exceeds<sp/>available<sp/>supply&quot;</highlight><highlight class="normal">),<sp/>t.push_action(</highlight><highlight class="stringliteral">&quot;defproducera&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;claimrewards&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()(</highlight><highlight class="stringliteral">&quot;owner&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;defproducera&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="1760"><highlight class="normal">}<sp/><ref refid="eosio_8system__tests_8cpp_1a057cb719bfa291fae56dc6ba5fa7a8d1" kindref="member">FC_LOG_AND_RETHROW</ref>()</highlight></codeline>
<codeline lineno="1761"><highlight class="normal"></highlight></codeline>
<codeline lineno="1762"><highlight class="normal"><ref refid="eosio_8system__tests_8cpp_1a8a1841911da283583ec346df954d73a1" kindref="member">BOOST_FIXTURE_TEST_CASE</ref>(multiple_producer_pay,<sp/><ref refid="classeosio__system_1_1eosio__system__tester" kindref="compound">eosio_system_tester</ref>,<sp/>*<sp/>boost::unit_test::tolerance(1e-10))<sp/><ref refid="eosio_8system__tests_8cpp_1ae89aac94d502abdd3c8d055174c221fc" kindref="member">try</ref><sp/>{</highlight></codeline>
<codeline lineno="1763"><highlight class="normal"></highlight></codeline>
<codeline lineno="1764"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>secs_per_year<sp/><sp/>=<sp/>52<sp/>*<sp/>7<sp/>*<sp/>24<sp/>*<sp/>3600;</highlight></codeline>
<codeline lineno="1765"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/>usecs_per_year<sp/>=<sp/>secs_per_year<sp/>*<sp/>1000000;</highlight></codeline>
<codeline lineno="1766"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/>cont_rate<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>std::log1p(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">(0.05));</highlight></codeline>
<codeline lineno="1767"><highlight class="normal"></highlight></codeline>
<codeline lineno="1768"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>net<sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;80.0000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1769"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>cpu<sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;80.0000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1770"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;account_name&gt;<sp/>voters<sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;producvotera&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;producvoterb&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;producvoterc&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;producvoterd&quot;</highlight><highlight class="normal">_n<sp/>};</highlight></codeline>
<codeline lineno="1771"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>v:<sp/>voters)<sp/>{</highlight></codeline>
<codeline lineno="1772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a791a80df1bef25c60fe34353c84ed5bc" kindref="member">create_account_with_resources</ref>(<sp/>v,<sp/>config::system_account_name,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1.0000&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>net,<sp/>cpu<sp/>);</highlight></codeline>
<codeline lineno="1773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a792dc87878d55cfa11f862e9e6d5cc05" kindref="member">transfer</ref>(<sp/>config::system_account_name,<sp/>v,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;100000000.0000&quot;</highlight><highlight class="normal">),<sp/>config::system_account_name<sp/>);</highlight></codeline>
<codeline lineno="1774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(success(),<sp/>stake(v,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;30000000.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;30000000.0000&quot;</highlight><highlight class="normal">))<sp/>);</highlight></codeline>
<codeline lineno="1775"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1776"><highlight class="normal"></highlight></codeline>
<codeline lineno="1777"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>accounts<sp/>{defproducera,<sp/>defproducerb,<sp/>...,<sp/>defproducerz,<sp/>abcproducera,<sp/>...,<sp/>defproducern}<sp/>and<sp/>register<sp/>as<sp/>producers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1778"><highlight class="normal"><sp/><sp/><sp/>std::vector&lt;account_name&gt;<sp/>producer_names;</highlight></codeline>
<codeline lineno="1779"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>producer_names.reserve(</highlight><highlight class="charliteral">&apos;z&apos;</highlight><highlight class="normal"><sp/>-<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal"><sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="1781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>root(</highlight><highlight class="stringliteral">&quot;defproducer&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c<sp/>=<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">;<sp/>c<sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;z&apos;</highlight><highlight class="normal">;<sp/>++c<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>producer_names.emplace_back(root<sp/>+<sp/>std::string(1,<sp/>c));</highlight></codeline>
<codeline lineno="1785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>root(</highlight><highlight class="stringliteral">&quot;abcproducer&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c<sp/>=<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">;<sp/>c<sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;n&apos;</highlight><highlight class="normal">;<sp/>++c<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>producer_names.emplace_back(root<sp/>+<sp/>std::string(1,<sp/>c));</highlight></codeline>
<codeline lineno="1791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setup_producer_accounts(producer_names);</highlight></codeline>
<codeline lineno="1794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>p:<sp/>producer_names)<sp/>{</highlight></codeline>
<codeline lineno="1795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>regproducer(p)<sp/>);</highlight></codeline>
<codeline lineno="1796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aa1213f0f2c7a53ea968859f3cab582c3" kindref="member">produce_blocks</ref>(1);</highlight></codeline>
<codeline lineno="1797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ilog(<sp/></highlight><highlight class="stringliteral">&quot;------<sp/>get<sp/>pro----------&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1ace57c45c9d9e2f0f9a438effcdb79ba5" kindref="member">wdump</ref>((p));</highlight></codeline>
<codeline lineno="1799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_TEST(0<sp/>==<sp/>get_producer_info(p)[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as&lt;double&gt;());</highlight></codeline>
<codeline lineno="1800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1801"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1802"><highlight class="normal"></highlight></codeline>
<codeline lineno="1803"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::hours(24)<sp/>);</highlight></codeline>
<codeline lineno="1804"><highlight class="normal"></highlight></codeline>
<codeline lineno="1805"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>producvotera<sp/>votes<sp/>for<sp/>defproducera<sp/>...<sp/>defproducerj</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1806"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>producvoterb<sp/>votes<sp/>for<sp/>defproducera<sp/>...<sp/>defproduceru</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1807"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>producvoterc<sp/>votes<sp/>for<sp/>defproducera<sp/>...<sp/>defproducerz</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1808"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>producvoterd<sp/>votes<sp/>for<sp/>abcproducera<sp/>...<sp/>abcproducern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1809"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(success(),<sp/>vote(</highlight><highlight class="stringliteral">&quot;producvotera&quot;</highlight><highlight class="normal">_n,<sp/>vector&lt;account_name&gt;(producer_names.begin(),<sp/>producer_names.begin()+10)));</highlight></codeline>
<codeline lineno="1811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(success(),<sp/>vote(</highlight><highlight class="stringliteral">&quot;producvoterb&quot;</highlight><highlight class="normal">_n,<sp/>vector&lt;account_name&gt;(producer_names.begin(),<sp/>producer_names.begin()+21)));</highlight></codeline>
<codeline lineno="1812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(success(),<sp/>vote(</highlight><highlight class="stringliteral">&quot;producvoterc&quot;</highlight><highlight class="normal">_n,<sp/>vector&lt;account_name&gt;(producer_names.begin(),<sp/>producer_names.begin()+26)));</highlight></codeline>
<codeline lineno="1813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(success(),<sp/>vote(</highlight><highlight class="stringliteral">&quot;producvoterd&quot;</highlight><highlight class="normal">_n,<sp/>vector&lt;account_name&gt;(producer_names.begin()+26,<sp/>producer_names.end())));</highlight></codeline>
<codeline lineno="1814"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1815"><highlight class="normal"></highlight></codeline>
<codeline lineno="1816"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>proda<sp/>=<sp/>get_producer_info(<sp/></highlight><highlight class="stringliteral">&quot;defproducera&quot;</highlight><highlight class="normal">_n<sp/>);</highlight></codeline>
<codeline lineno="1818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>prodj<sp/>=<sp/>get_producer_info(<sp/></highlight><highlight class="stringliteral">&quot;defproducerj&quot;</highlight><highlight class="normal">_n<sp/>);</highlight></codeline>
<codeline lineno="1819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>prodk<sp/>=<sp/>get_producer_info(<sp/></highlight><highlight class="stringliteral">&quot;defproducerk&quot;</highlight><highlight class="normal">_n<sp/>);</highlight></codeline>
<codeline lineno="1820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>produ<sp/>=<sp/>get_producer_info(<sp/></highlight><highlight class="stringliteral">&quot;defproduceru&quot;</highlight><highlight class="normal">_n<sp/>);</highlight></codeline>
<codeline lineno="1821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>prodv<sp/>=<sp/>get_producer_info(<sp/></highlight><highlight class="stringliteral">&quot;defproducerv&quot;</highlight><highlight class="normal">_n<sp/>);</highlight></codeline>
<codeline lineno="1822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>prodz<sp/>=<sp/>get_producer_info(<sp/></highlight><highlight class="stringliteral">&quot;defproducerz&quot;</highlight><highlight class="normal">_n<sp/>);</highlight></codeline>
<codeline lineno="1823"><highlight class="normal"></highlight></codeline>
<codeline lineno="1824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1ae00c608b8a40d03b8b8dd2daac50185b" kindref="member">BOOST_REQUIRE</ref><sp/>(0<sp/>==<sp/>proda[</highlight><highlight class="stringliteral">&quot;unpaid_blocks&quot;</highlight><highlight class="normal">].as&lt;uint32_t&gt;()<sp/>&amp;&amp;<sp/>0<sp/>==<sp/>prodz[</highlight><highlight class="stringliteral">&quot;unpaid_blocks&quot;</highlight><highlight class="normal">].as&lt;uint32_t&gt;());</highlight></codeline>
<codeline lineno="1825"><highlight class="normal"></highlight></codeline>
<codeline lineno="1826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>vote<sp/>ratios</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1ae00c608b8a40d03b8b8dd2daac50185b" kindref="member">BOOST_REQUIRE</ref><sp/>(<sp/>0<sp/>&lt;<sp/>proda[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as&lt;double&gt;()<sp/>&amp;&amp;<sp/>0<sp/>&lt;<sp/>prodz[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as&lt;double&gt;()<sp/>);</highlight></codeline>
<codeline lineno="1828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_TEST(<sp/>proda[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as&lt;double&gt;()<sp/>==<sp/>prodj[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as&lt;double&gt;()<sp/>);</highlight></codeline>
<codeline lineno="1829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_TEST(<sp/>prodk[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as&lt;double&gt;()<sp/>==<sp/>produ[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as&lt;double&gt;()<sp/>);</highlight></codeline>
<codeline lineno="1830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_TEST(<sp/>prodv[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as&lt;double&gt;()<sp/>==<sp/>prodz[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as&lt;double&gt;()<sp/>);</highlight></codeline>
<codeline lineno="1831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_TEST(<sp/>2<sp/>*<sp/>proda[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as&lt;double&gt;()<sp/>==<sp/>3<sp/>*<sp/>produ[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as&lt;double&gt;()<sp/>);</highlight></codeline>
<codeline lineno="1832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_TEST(<sp/>proda[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as&lt;double&gt;()<sp/>==<sp/><sp/>3<sp/>*<sp/>prodz[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as&lt;double&gt;()<sp/>);</highlight></codeline>
<codeline lineno="1833"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1834"><highlight class="normal"></highlight></codeline>
<codeline lineno="1835"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>give<sp/>a<sp/>chance<sp/>for<sp/>everyone<sp/>to<sp/>produce<sp/>blocks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1836"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aa1213f0f2c7a53ea968859f3cab582c3" kindref="member">produce_blocks</ref>(23<sp/>*<sp/>12<sp/>+<sp/>20);</highlight></codeline>
<codeline lineno="1838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>all_21_produced<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint32_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>21;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>==<sp/>get_producer_info(producer_names[i])[</highlight><highlight class="stringliteral">&quot;unpaid_blocks&quot;</highlight><highlight class="normal">].as&lt;uint32_t&gt;())<sp/>{</highlight></codeline>
<codeline lineno="1841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>all_21_produced<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>rest_didnt_produce<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint32_t<sp/>i<sp/>=<sp/>21;<sp/>i<sp/>&lt;<sp/>producer_names.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>&lt;<sp/>get_producer_info(producer_names[i])[</highlight><highlight class="stringliteral">&quot;unpaid_blocks&quot;</highlight><highlight class="normal">].as&lt;uint32_t&gt;())<sp/>{</highlight></codeline>
<codeline lineno="1847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rest_didnt_produce<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1ae00c608b8a40d03b8b8dd2daac50185b" kindref="member">BOOST_REQUIRE</ref>(all_21_produced<sp/>&amp;&amp;<sp/>rest_didnt_produce);</highlight></codeline>
<codeline lineno="1851"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1852"><highlight class="normal"></highlight></codeline>
<codeline lineno="1853"><highlight class="normal"><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/>vote_shares(producer_names.size());</highlight></codeline>
<codeline lineno="1854"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>total_votes<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint32_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>producer_names.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vote_shares[i]<sp/>=<sp/>get_producer_info(producer_names[i])[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;();</highlight></codeline>
<codeline lineno="1858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>total_votes<sp/>+=<sp/>vote_shares[i];</highlight></codeline>
<codeline lineno="1859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_TEST(total_votes<sp/>==<sp/>get_global_state()[</highlight><highlight class="stringliteral">&quot;total_producer_vote_weight&quot;</highlight><highlight class="normal">].as&lt;double&gt;());</highlight></codeline>
<codeline lineno="1861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::for_each(vote_shares.begin(),<sp/>vote_shares.end(),<sp/>[total_votes](</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>x)<sp/>{<sp/>x<sp/>/=<sp/>total_votes;<sp/>});</highlight></codeline>
<codeline lineno="1862"><highlight class="normal"></highlight></codeline>
<codeline lineno="1863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_TEST(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">(1)<sp/>==<sp/>std::accumulate(vote_shares.begin(),<sp/>vote_shares.end(),<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">(0)));</highlight></codeline>
<codeline lineno="1864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_TEST(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">(3./71.)<sp/>==<sp/>vote_shares.front());</highlight></codeline>
<codeline lineno="1865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_TEST(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">(1./71.)<sp/>==<sp/>vote_shares.back());</highlight></codeline>
<codeline lineno="1866"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1867"><highlight class="normal"></highlight></codeline>
<codeline lineno="1868"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>prod_index<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="1870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>prod_name<sp/>=<sp/>producer_names[prod_index];</highlight></codeline>
<codeline lineno="1871"><highlight class="normal"></highlight></codeline>
<codeline lineno="1872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>initial_global_state<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>get_global_state();</highlight></codeline>
<codeline lineno="1873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>initial_claim_time<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>microseconds_since_epoch_of_iso_string(<sp/>initial_global_state[</highlight><highlight class="stringliteral">&quot;last_pervote_bucket_fill&quot;</highlight><highlight class="normal">]<sp/>);</highlight></codeline>
<codeline lineno="1874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/><sp/>initial_pervote_bucket<sp/><sp/><sp/><sp/>=<sp/>initial_global_state[</highlight><highlight class="stringliteral">&quot;pervote_bucket&quot;</highlight><highlight class="normal">].as&lt;int64_t&gt;();</highlight></codeline>
<codeline lineno="1875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/><sp/>initial_perblock_bucket<sp/><sp/><sp/>=<sp/>initial_global_state[</highlight><highlight class="stringliteral">&quot;perblock_bucket&quot;</highlight><highlight class="normal">].as&lt;int64_t&gt;();</highlight></codeline>
<codeline lineno="1876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/><sp/>initial_savings<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>get_balance(</highlight><highlight class="stringliteral">&quot;eosio.saving&quot;</highlight><highlight class="normal">_n).get_amount();</highlight></codeline>
<codeline lineno="1877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>initial_tot_unpaid_blocks<sp/>=<sp/>initial_global_state[</highlight><highlight class="stringliteral">&quot;total_unpaid_blocks&quot;</highlight><highlight class="normal">].as&lt;uint32_t&gt;();</highlight></codeline>
<codeline lineno="1878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/><sp/><sp/><sp/>initial_supply<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>get_token_supply();</highlight></codeline>
<codeline lineno="1879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/><sp/><sp/><sp/>initial_bpay_balance<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>get_balance(</highlight><highlight class="stringliteral">&quot;eosio.bpay&quot;</highlight><highlight class="normal">_n);</highlight></codeline>
<codeline lineno="1880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/><sp/><sp/><sp/>initial_vpay_balance<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>get_balance(</highlight><highlight class="stringliteral">&quot;eosio.vpay&quot;</highlight><highlight class="normal">_n);</highlight></codeline>
<codeline lineno="1881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/><sp/><sp/><sp/>initial_balance<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>get_balance(prod_name);</highlight></codeline>
<codeline lineno="1882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>initial_unpaid_blocks<sp/><sp/><sp/><sp/><sp/>=<sp/>get_producer_info(prod_name)[</highlight><highlight class="stringliteral">&quot;unpaid_blocks&quot;</highlight><highlight class="normal">].as&lt;uint32_t&gt;();</highlight></codeline>
<codeline lineno="1883"><highlight class="normal"></highlight></codeline>
<codeline lineno="1884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(success(),<sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(prod_name,<sp/></highlight><highlight class="stringliteral">&quot;claimrewards&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()(</highlight><highlight class="stringliteral">&quot;owner&quot;</highlight><highlight class="normal">,<sp/>prod_name)));</highlight></codeline>
<codeline lineno="1885"><highlight class="normal"></highlight></codeline>
<codeline lineno="1886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>global_state<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>get_global_state();</highlight></codeline>
<codeline lineno="1887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>claim_time<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>microseconds_since_epoch_of_iso_string(<sp/>global_state[</highlight><highlight class="stringliteral">&quot;last_pervote_bucket_fill&quot;</highlight><highlight class="normal">]<sp/>);</highlight></codeline>
<codeline lineno="1888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/><sp/>pervote_bucket<sp/><sp/><sp/><sp/>=<sp/>global_state[</highlight><highlight class="stringliteral">&quot;pervote_bucket&quot;</highlight><highlight class="normal">].as&lt;int64_t&gt;();</highlight></codeline>
<codeline lineno="1889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/><sp/>perblock_bucket<sp/><sp/><sp/>=<sp/>global_state[</highlight><highlight class="stringliteral">&quot;perblock_bucket&quot;</highlight><highlight class="normal">].as&lt;int64_t&gt;();</highlight></codeline>
<codeline lineno="1890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/><sp/>savings<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>get_balance(</highlight><highlight class="stringliteral">&quot;eosio.saving&quot;</highlight><highlight class="normal">_n).get_amount();</highlight></codeline>
<codeline lineno="1891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>tot_unpaid_blocks<sp/>=<sp/>global_state[</highlight><highlight class="stringliteral">&quot;total_unpaid_blocks&quot;</highlight><highlight class="normal">].as&lt;uint32_t&gt;();</highlight></codeline>
<codeline lineno="1892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/><sp/><sp/><sp/><ref refid="eosio_8token__tests_8cpp_1ad37587c54682d8fea3f46f4976e16437" kindref="member">supply</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>get_token_supply();</highlight></codeline>
<codeline lineno="1893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/><sp/><sp/><sp/>bpay_balance<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>get_balance(</highlight><highlight class="stringliteral">&quot;eosio.bpay&quot;</highlight><highlight class="normal">_n);</highlight></codeline>
<codeline lineno="1894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/><sp/><sp/><sp/>vpay_balance<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>get_balance(</highlight><highlight class="stringliteral">&quot;eosio.vpay&quot;</highlight><highlight class="normal">_n);</highlight></codeline>
<codeline lineno="1895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/><sp/><sp/><sp/><ref refid="eosio_8token__tests_8cpp_1a1e7ef09ce66d09456a55c47a8c42f3dc" kindref="member">balance</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>get_balance(prod_name);</highlight></codeline>
<codeline lineno="1896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>unpaid_blocks<sp/><sp/><sp/><sp/><sp/>=<sp/>get_producer_info(prod_name)[</highlight><highlight class="stringliteral">&quot;unpaid_blocks&quot;</highlight><highlight class="normal">].as&lt;uint32_t&gt;();</highlight></codeline>
<codeline lineno="1897"><highlight class="normal"></highlight></codeline>
<codeline lineno="1898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>usecs_between_fills<sp/>=<sp/>claim_time<sp/>-<sp/>initial_claim_time;</highlight></codeline>
<codeline lineno="1899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>secs_between_fills<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">int32_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(usecs_between_fills<sp/>/<sp/>1000000);</highlight></codeline>
<codeline lineno="1900"><highlight class="normal"></highlight></codeline>
<codeline lineno="1901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>expected_supply_growth<sp/>=<sp/>initial_supply.get_amount()<sp/>*<sp/>double(usecs_between_fills)<sp/>*<sp/>cont_rate<sp/>/<sp/>usecs_per_year;</highlight></codeline>
<codeline lineno="1902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>int64_t(expected_supply_growth),<sp/><ref refid="eosio_8token__tests_8cpp_1ad37587c54682d8fea3f46f4976e16437" kindref="member">supply</ref>.get_amount()<sp/>-<sp/>initial_supply.get_amount()<sp/>);</highlight></codeline>
<codeline lineno="1903"><highlight class="normal"></highlight></codeline>
<codeline lineno="1904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>int64_t(expected_supply_growth)<sp/>-<sp/>int64_t(expected_supply_growth)/5,<sp/>savings<sp/>-<sp/>initial_savings<sp/>);</highlight></codeline>
<codeline lineno="1905"><highlight class="normal"></highlight></codeline>
<codeline lineno="1906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>expected_perblock_bucket<sp/>=<sp/>initial_supply.get_amount()<sp/>*<sp/>double(usecs_between_fills)<sp/>*<sp/>(0.25<sp/>*<sp/>cont_rate/<sp/>5.)<sp/>/<sp/>usecs_per_year;</highlight></codeline>
<codeline lineno="1907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>expected_pervote_bucket<sp/><sp/>=<sp/>initial_supply.get_amount()<sp/>*<sp/>double(usecs_between_fills)<sp/>*<sp/>(0.75<sp/>*<sp/>cont_rate/<sp/>5.)<sp/>/<sp/>usecs_per_year;</highlight></codeline>
<codeline lineno="1908"><highlight class="normal"></highlight></codeline>
<codeline lineno="1909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>from_perblock_bucket<sp/>=<sp/>initial_unpaid_blocks<sp/>*<sp/>expected_perblock_bucket<sp/>/<sp/>initial_tot_unpaid_blocks<sp/>;</highlight></codeline>
<codeline lineno="1910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>from_pervote_bucket<sp/><sp/>=<sp/>vote_shares[prod_index]<sp/>*<sp/>expected_pervote_bucket;</highlight></codeline>
<codeline lineno="1911"><highlight class="normal"></highlight></codeline>
<codeline lineno="1912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1ae00c608b8a40d03b8b8dd2daac50185b" kindref="member">BOOST_REQUIRE</ref>(<sp/>1<sp/>&gt;=<sp/>abs(int32_t(initial_tot_unpaid_blocks<sp/>-<sp/>tot_unpaid_blocks)<sp/>-<sp/>int32_t(initial_unpaid_blocks<sp/>-<sp/>unpaid_blocks))<sp/>);</highlight></codeline>
<codeline lineno="1913"><highlight class="normal"></highlight></codeline>
<codeline lineno="1914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(from_pervote_bucket<sp/>&gt;=<sp/>100<sp/>*<sp/>10000)<sp/>{</highlight></codeline>
<codeline lineno="1915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1ae00c608b8a40d03b8b8dd2daac50185b" kindref="member">BOOST_REQUIRE</ref>(<sp/><ref refid="eosio_8system__tests_8cpp_1a2a34c6cca71b9f7b935a3b00648b2b41" kindref="member">within_one</ref>(<sp/>from_perblock_bucket<sp/>+<sp/>from_pervote_bucket,<sp/><ref refid="eosio_8token__tests_8cpp_1a1e7ef09ce66d09456a55c47a8c42f3dc" kindref="member">balance</ref>.get_amount()<sp/>-<sp/>initial_balance.get_amount()<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1ae00c608b8a40d03b8b8dd2daac50185b" kindref="member">BOOST_REQUIRE</ref>(<sp/><ref refid="eosio_8system__tests_8cpp_1a2a34c6cca71b9f7b935a3b00648b2b41" kindref="member">within_one</ref>(<sp/>expected_pervote_bucket<sp/>-<sp/>from_pervote_bucket,<sp/>pervote_bucket<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1ae00c608b8a40d03b8b8dd2daac50185b" kindref="member">BOOST_REQUIRE</ref>(<sp/><ref refid="eosio_8system__tests_8cpp_1a2a34c6cca71b9f7b935a3b00648b2b41" kindref="member">within_one</ref>(<sp/>from_perblock_bucket,<sp/><ref refid="eosio_8token__tests_8cpp_1a1e7ef09ce66d09456a55c47a8c42f3dc" kindref="member">balance</ref>.get_amount()<sp/>-<sp/>initial_balance.get_amount()<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1ae00c608b8a40d03b8b8dd2daac50185b" kindref="member">BOOST_REQUIRE</ref>(<sp/><ref refid="eosio_8system__tests_8cpp_1a2a34c6cca71b9f7b935a3b00648b2b41" kindref="member">within_one</ref>(<sp/>expected_pervote_bucket,<sp/>pervote_bucket<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1ae00c608b8a40d03b8b8dd2daac50185b" kindref="member">BOOST_REQUIRE</ref>(<sp/><ref refid="eosio_8system__tests_8cpp_1a2a34c6cca71b9f7b935a3b00648b2b41" kindref="member">within_one</ref>(<sp/>expected_pervote_bucket,<sp/>vpay_balance.get_amount()<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1ae00c608b8a40d03b8b8dd2daac50185b" kindref="member">BOOST_REQUIRE</ref>(<sp/><ref refid="eosio_8system__tests_8cpp_1a2a34c6cca71b9f7b935a3b00648b2b41" kindref="member">within_one</ref>(<sp/>perblock_bucket,<sp/>bpay_balance.get_amount()<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1923"><highlight class="normal"></highlight></codeline>
<codeline lineno="1924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aa1213f0f2c7a53ea968859f3cab582c3" kindref="member">produce_blocks</ref>(5);</highlight></codeline>
<codeline lineno="1925"><highlight class="normal"></highlight></codeline>
<codeline lineno="1926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;already<sp/>claimed<sp/>rewards<sp/>within<sp/>past<sp/>day&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(prod_name,<sp/></highlight><highlight class="stringliteral">&quot;claimrewards&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()(</highlight><highlight class="stringliteral">&quot;owner&quot;</highlight><highlight class="normal">,<sp/>prod_name)));</highlight></codeline>
<codeline lineno="1928"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1929"><highlight class="normal"></highlight></codeline>
<codeline lineno="1930"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>prod_index<sp/>=<sp/>23;</highlight></codeline>
<codeline lineno="1932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>prod_name<sp/>=<sp/>producer_names[prod_index];</highlight></codeline>
<codeline lineno="1933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(success(),</highlight></codeline>
<codeline lineno="1934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(prod_name,<sp/></highlight><highlight class="stringliteral">&quot;claimrewards&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()(</highlight><highlight class="stringliteral">&quot;owner&quot;</highlight><highlight class="normal">,<sp/>prod_name)));</highlight></codeline>
<codeline lineno="1935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(0,<sp/>get_balance(prod_name).get_amount());</highlight></codeline>
<codeline lineno="1936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;already<sp/>claimed<sp/>rewards<sp/>within<sp/>past<sp/>day&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(prod_name,<sp/></highlight><highlight class="stringliteral">&quot;claimrewards&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()(</highlight><highlight class="stringliteral">&quot;owner&quot;</highlight><highlight class="normal">,<sp/>prod_name)));</highlight></codeline>
<codeline lineno="1938"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1939"><highlight class="normal"></highlight></codeline>
<codeline lineno="1940"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Wait<sp/>for<sp/>23<sp/>hours.<sp/>By<sp/>now,<sp/>pervote_bucket<sp/>has<sp/>grown<sp/>enough</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1941"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>that<sp/>a<sp/>producer&apos;s<sp/>share<sp/>is<sp/>more<sp/>than<sp/>100<sp/>tokens.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1942"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(fc::seconds(23<sp/>*<sp/>3600));</highlight></codeline>
<codeline lineno="1943"><highlight class="normal"></highlight></codeline>
<codeline lineno="1944"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>prod_index<sp/>=<sp/>15;</highlight></codeline>
<codeline lineno="1946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>prod_name<sp/>=<sp/>producer_names[prod_index];</highlight></codeline>
<codeline lineno="1947"><highlight class="normal"></highlight></codeline>
<codeline lineno="1948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>initial_global_state<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>get_global_state();</highlight></codeline>
<codeline lineno="1949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>initial_claim_time<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>microseconds_since_epoch_of_iso_string(<sp/>initial_global_state[</highlight><highlight class="stringliteral">&quot;last_pervote_bucket_fill&quot;</highlight><highlight class="normal">]<sp/>);</highlight></codeline>
<codeline lineno="1950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/><sp/>initial_pervote_bucket<sp/><sp/><sp/><sp/>=<sp/>initial_global_state[</highlight><highlight class="stringliteral">&quot;pervote_bucket&quot;</highlight><highlight class="normal">].as&lt;int64_t&gt;();</highlight></codeline>
<codeline lineno="1951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/><sp/>initial_perblock_bucket<sp/><sp/><sp/>=<sp/>initial_global_state[</highlight><highlight class="stringliteral">&quot;perblock_bucket&quot;</highlight><highlight class="normal">].as&lt;int64_t&gt;();</highlight></codeline>
<codeline lineno="1952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/><sp/>initial_savings<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>get_balance(</highlight><highlight class="stringliteral">&quot;eosio.saving&quot;</highlight><highlight class="normal">_n).get_amount();</highlight></codeline>
<codeline lineno="1953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>initial_tot_unpaid_blocks<sp/>=<sp/>initial_global_state[</highlight><highlight class="stringliteral">&quot;total_unpaid_blocks&quot;</highlight><highlight class="normal">].as&lt;uint32_t&gt;();</highlight></codeline>
<codeline lineno="1954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/><sp/><sp/><sp/>initial_supply<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>get_token_supply();</highlight></codeline>
<codeline lineno="1955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/><sp/><sp/><sp/>initial_bpay_balance<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>get_balance(</highlight><highlight class="stringliteral">&quot;eosio.bpay&quot;</highlight><highlight class="normal">_n);</highlight></codeline>
<codeline lineno="1956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/><sp/><sp/><sp/>initial_vpay_balance<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>get_balance(</highlight><highlight class="stringliteral">&quot;eosio.vpay&quot;</highlight><highlight class="normal">_n);</highlight></codeline>
<codeline lineno="1957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/><sp/><sp/><sp/>initial_balance<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>get_balance(prod_name);</highlight></codeline>
<codeline lineno="1958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>initial_unpaid_blocks<sp/><sp/><sp/><sp/><sp/>=<sp/>get_producer_info(prod_name)[</highlight><highlight class="stringliteral">&quot;unpaid_blocks&quot;</highlight><highlight class="normal">].as&lt;uint32_t&gt;();</highlight></codeline>
<codeline lineno="1959"><highlight class="normal"></highlight></codeline>
<codeline lineno="1960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(success(),<sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(prod_name,<sp/></highlight><highlight class="stringliteral">&quot;claimrewards&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()(</highlight><highlight class="stringliteral">&quot;owner&quot;</highlight><highlight class="normal">,<sp/>prod_name)));</highlight></codeline>
<codeline lineno="1961"><highlight class="normal"></highlight></codeline>
<codeline lineno="1962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>global_state<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>get_global_state();</highlight></codeline>
<codeline lineno="1963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>claim_time<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>microseconds_since_epoch_of_iso_string(<sp/>global_state[</highlight><highlight class="stringliteral">&quot;last_pervote_bucket_fill&quot;</highlight><highlight class="normal">]<sp/>);</highlight></codeline>
<codeline lineno="1964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/><sp/>pervote_bucket<sp/><sp/><sp/><sp/>=<sp/>global_state[</highlight><highlight class="stringliteral">&quot;pervote_bucket&quot;</highlight><highlight class="normal">].as&lt;int64_t&gt;();</highlight></codeline>
<codeline lineno="1965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/><sp/>perblock_bucket<sp/><sp/><sp/>=<sp/>global_state[</highlight><highlight class="stringliteral">&quot;perblock_bucket&quot;</highlight><highlight class="normal">].as&lt;int64_t&gt;();</highlight></codeline>
<codeline lineno="1966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/><sp/>savings<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>get_balance(</highlight><highlight class="stringliteral">&quot;eosio.saving&quot;</highlight><highlight class="normal">_n).get_amount();</highlight></codeline>
<codeline lineno="1967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>tot_unpaid_blocks<sp/>=<sp/>global_state[</highlight><highlight class="stringliteral">&quot;total_unpaid_blocks&quot;</highlight><highlight class="normal">].as&lt;uint32_t&gt;();</highlight></codeline>
<codeline lineno="1968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/><sp/><sp/><sp/><ref refid="eosio_8token__tests_8cpp_1ad37587c54682d8fea3f46f4976e16437" kindref="member">supply</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>get_token_supply();</highlight></codeline>
<codeline lineno="1969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/><sp/><sp/><sp/>bpay_balance<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>get_balance(</highlight><highlight class="stringliteral">&quot;eosio.bpay&quot;</highlight><highlight class="normal">_n);</highlight></codeline>
<codeline lineno="1970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/><sp/><sp/><sp/>vpay_balance<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>get_balance(</highlight><highlight class="stringliteral">&quot;eosio.vpay&quot;</highlight><highlight class="normal">_n);</highlight></codeline>
<codeline lineno="1971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/><sp/><sp/><sp/><ref refid="eosio_8token__tests_8cpp_1a1e7ef09ce66d09456a55c47a8c42f3dc" kindref="member">balance</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>get_balance(prod_name);</highlight></codeline>
<codeline lineno="1972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>unpaid_blocks<sp/><sp/><sp/><sp/><sp/>=<sp/>get_producer_info(prod_name)[</highlight><highlight class="stringliteral">&quot;unpaid_blocks&quot;</highlight><highlight class="normal">].as&lt;uint32_t&gt;();</highlight></codeline>
<codeline lineno="1973"><highlight class="normal"></highlight></codeline>
<codeline lineno="1974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>usecs_between_fills<sp/>=<sp/>claim_time<sp/>-<sp/>initial_claim_time;</highlight></codeline>
<codeline lineno="1975"><highlight class="normal"></highlight></codeline>
<codeline lineno="1976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>expected_supply_growth<sp/>=<sp/>initial_supply.get_amount()<sp/>*<sp/>double(usecs_between_fills)<sp/>*<sp/>cont_rate<sp/>/<sp/>usecs_per_year;</highlight></codeline>
<codeline lineno="1977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>int64_t(expected_supply_growth),<sp/><ref refid="eosio_8token__tests_8cpp_1ad37587c54682d8fea3f46f4976e16437" kindref="member">supply</ref>.get_amount()<sp/>-<sp/>initial_supply.get_amount()<sp/>);</highlight></codeline>
<codeline lineno="1978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>int64_t(expected_supply_growth)<sp/>-<sp/>int64_t(expected_supply_growth)/5,<sp/>savings<sp/>-<sp/>initial_savings<sp/>);</highlight></codeline>
<codeline lineno="1979"><highlight class="normal"></highlight></codeline>
<codeline lineno="1980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>expected_perblock_bucket<sp/>=<sp/>int64_t(<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">(initial_supply.get_amount())<sp/>*<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">(usecs_between_fills)<sp/>*<sp/>(0.25<sp/>*<sp/>cont_rate/<sp/>5.)<sp/>/<sp/>usecs_per_year<sp/>)</highlight></codeline>
<codeline lineno="1981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>initial_perblock_bucket;</highlight></codeline>
<codeline lineno="1982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>expected_pervote_bucket<sp/><sp/>=<sp/>int64_t(<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">(initial_supply.get_amount())<sp/>*<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">(usecs_between_fills)<sp/>*<sp/>(0.75<sp/>*<sp/>cont_rate/<sp/>5.)<sp/>/<sp/>usecs_per_year<sp/>)</highlight></codeline>
<codeline lineno="1983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>initial_pervote_bucket;</highlight></codeline>
<codeline lineno="1984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>from_perblock_bucket<sp/>=<sp/>initial_unpaid_blocks<sp/>*<sp/>expected_perblock_bucket<sp/>/<sp/>initial_tot_unpaid_blocks<sp/>;</highlight></codeline>
<codeline lineno="1985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>from_pervote_bucket<sp/><sp/>=<sp/>int64_t(<sp/>vote_shares[prod_index]<sp/>*<sp/>expected_pervote_bucket);</highlight></codeline>
<codeline lineno="1986"><highlight class="normal"></highlight></codeline>
<codeline lineno="1987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1ae00c608b8a40d03b8b8dd2daac50185b" kindref="member">BOOST_REQUIRE</ref>(<sp/>1<sp/>&gt;=<sp/>abs(int32_t(initial_tot_unpaid_blocks<sp/>-<sp/>tot_unpaid_blocks)<sp/>-<sp/>int32_t(initial_unpaid_blocks<sp/>-<sp/>unpaid_blocks))<sp/>);</highlight></codeline>
<codeline lineno="1988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(from_pervote_bucket<sp/>&gt;=<sp/>100<sp/>*<sp/>10000)<sp/>{</highlight></codeline>
<codeline lineno="1989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1ae00c608b8a40d03b8b8dd2daac50185b" kindref="member">BOOST_REQUIRE</ref>(<sp/><ref refid="eosio_8system__tests_8cpp_1a2a34c6cca71b9f7b935a3b00648b2b41" kindref="member">within_one</ref>(<sp/>from_perblock_bucket<sp/>+<sp/>from_pervote_bucket,<sp/><ref refid="eosio_8token__tests_8cpp_1a1e7ef09ce66d09456a55c47a8c42f3dc" kindref="member">balance</ref>.get_amount()<sp/>-<sp/>initial_balance.get_amount()<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1ae00c608b8a40d03b8b8dd2daac50185b" kindref="member">BOOST_REQUIRE</ref>(<sp/><ref refid="eosio_8system__tests_8cpp_1a2a34c6cca71b9f7b935a3b00648b2b41" kindref="member">within_one</ref>(<sp/>expected_pervote_bucket<sp/>-<sp/>from_pervote_bucket,<sp/>pervote_bucket<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1ae00c608b8a40d03b8b8dd2daac50185b" kindref="member">BOOST_REQUIRE</ref>(<sp/><ref refid="eosio_8system__tests_8cpp_1a2a34c6cca71b9f7b935a3b00648b2b41" kindref="member">within_one</ref>(<sp/>expected_pervote_bucket<sp/>-<sp/>from_pervote_bucket,<sp/>vpay_balance.get_amount()<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1ae00c608b8a40d03b8b8dd2daac50185b" kindref="member">BOOST_REQUIRE</ref>(<sp/><ref refid="eosio_8system__tests_8cpp_1a2a34c6cca71b9f7b935a3b00648b2b41" kindref="member">within_one</ref>(<sp/>expected_perblock_bucket<sp/>-<sp/>from_perblock_bucket,<sp/>perblock_bucket<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1ae00c608b8a40d03b8b8dd2daac50185b" kindref="member">BOOST_REQUIRE</ref>(<sp/><ref refid="eosio_8system__tests_8cpp_1a2a34c6cca71b9f7b935a3b00648b2b41" kindref="member">within_one</ref>(<sp/>expected_perblock_bucket<sp/>-<sp/>from_perblock_bucket,<sp/>bpay_balance.get_amount()<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1ae00c608b8a40d03b8b8dd2daac50185b" kindref="member">BOOST_REQUIRE</ref>(<sp/><ref refid="eosio_8system__tests_8cpp_1a2a34c6cca71b9f7b935a3b00648b2b41" kindref="member">within_one</ref>(<sp/>from_perblock_bucket,<sp/><ref refid="eosio_8token__tests_8cpp_1a1e7ef09ce66d09456a55c47a8c42f3dc" kindref="member">balance</ref>.get_amount()<sp/>-<sp/>initial_balance.get_amount()<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1ae00c608b8a40d03b8b8dd2daac50185b" kindref="member">BOOST_REQUIRE</ref>(<sp/><ref refid="eosio_8system__tests_8cpp_1a2a34c6cca71b9f7b935a3b00648b2b41" kindref="member">within_one</ref>(<sp/>expected_pervote_bucket,<sp/>pervote_bucket<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1998"><highlight class="normal"></highlight></codeline>
<codeline lineno="1999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aa1213f0f2c7a53ea968859f3cab582c3" kindref="member">produce_blocks</ref>(5);</highlight></codeline>
<codeline lineno="2000"><highlight class="normal"></highlight></codeline>
<codeline lineno="2001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;already<sp/>claimed<sp/>rewards<sp/>within<sp/>past<sp/>day&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="2002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(prod_name,<sp/></highlight><highlight class="stringliteral">&quot;claimrewards&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()(</highlight><highlight class="stringliteral">&quot;owner&quot;</highlight><highlight class="normal">,<sp/>prod_name)));</highlight></codeline>
<codeline lineno="2003"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2004"><highlight class="normal"></highlight></codeline>
<codeline lineno="2005"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>prod_index<sp/>=<sp/>24;</highlight></codeline>
<codeline lineno="2007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>prod_name<sp/>=<sp/>producer_names[prod_index];</highlight></codeline>
<codeline lineno="2008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(success(),</highlight></codeline>
<codeline lineno="2009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(prod_name,<sp/></highlight><highlight class="stringliteral">&quot;claimrewards&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()(</highlight><highlight class="stringliteral">&quot;owner&quot;</highlight><highlight class="normal">,<sp/>prod_name)));</highlight></codeline>
<codeline lineno="2010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1ae00c608b8a40d03b8b8dd2daac50185b" kindref="member">BOOST_REQUIRE</ref>(100<sp/>*<sp/>10000<sp/>&lt;=<sp/>get_balance(prod_name).get_amount());</highlight></codeline>
<codeline lineno="2011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;already<sp/>claimed<sp/>rewards<sp/>within<sp/>past<sp/>day&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="2012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(prod_name,<sp/></highlight><highlight class="stringliteral">&quot;claimrewards&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()(</highlight><highlight class="stringliteral">&quot;owner&quot;</highlight><highlight class="normal">,<sp/>prod_name)));</highlight></codeline>
<codeline lineno="2013"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2014"><highlight class="normal"></highlight></codeline>
<codeline lineno="2015"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>rmv_index<sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="2017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>account_name<sp/>prod_name<sp/>=<sp/>producer_names[rmv_index];</highlight></codeline>
<codeline lineno="2018"><highlight class="normal"></highlight></codeline>
<codeline lineno="2019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="eosio_8system__tests_8cpp_1a0ecaa1862f168e8a31db8236916a811e" kindref="member">info</ref><sp/>=<sp/>get_producer_info(prod_name);</highlight></codeline>
<codeline lineno="2020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1ae00c608b8a40d03b8b8dd2daac50185b" kindref="member">BOOST_REQUIRE</ref>(<sp/><ref refid="eosio_8system__tests_8cpp_1a0ecaa1862f168e8a31db8236916a811e" kindref="member">info</ref>[</highlight><highlight class="stringliteral">&quot;is_active&quot;</highlight><highlight class="normal">].as&lt;bool&gt;()<sp/>);</highlight></codeline>
<codeline lineno="2021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1ae00c608b8a40d03b8b8dd2daac50185b" kindref="member">BOOST_REQUIRE</ref>(<sp/>fc::crypto::public_key()<sp/>!=<sp/>fc::crypto::public_key(<ref refid="eosio_8system__tests_8cpp_1a0ecaa1862f168e8a31db8236916a811e" kindref="member">info</ref>[</highlight><highlight class="stringliteral">&quot;producer_key&quot;</highlight><highlight class="normal">].as_string())<sp/>);</highlight></codeline>
<codeline lineno="2022"><highlight class="normal"></highlight></codeline>
<codeline lineno="2023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>error(</highlight><highlight class="stringliteral">&quot;missing<sp/>authority<sp/>of<sp/>eosio&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="2024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(prod_name,<sp/></highlight><highlight class="stringliteral">&quot;rmvproducer&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()(</highlight><highlight class="stringliteral">&quot;producer&quot;</highlight><highlight class="normal">,<sp/>prod_name)));</highlight></codeline>
<codeline lineno="2025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>error(</highlight><highlight class="stringliteral">&quot;missing<sp/>authority<sp/>of<sp/>eosio&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="2026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(producer_names[rmv_index<sp/>+<sp/>2],<sp/></highlight><highlight class="stringliteral">&quot;rmvproducer&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()(</highlight><highlight class="stringliteral">&quot;producer&quot;</highlight><highlight class="normal">,<sp/>prod_name)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),</highlight></codeline>
<codeline lineno="2028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(config::system_account_name,<sp/></highlight><highlight class="stringliteral">&quot;rmvproducer&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()(</highlight><highlight class="stringliteral">&quot;producer&quot;</highlight><highlight class="normal">,<sp/>prod_name)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>rest_didnt_produce<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint32_t<sp/>i<sp/>=<sp/>21;<sp/>i<sp/>&lt;<sp/>producer_names.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="2032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>&lt;<sp/>get_producer_info(producer_names[i])[</highlight><highlight class="stringliteral">&quot;unpaid_blocks&quot;</highlight><highlight class="normal">].as&lt;uint32_t&gt;())<sp/>{</highlight></codeline>
<codeline lineno="2033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rest_didnt_produce<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1ae00c608b8a40d03b8b8dd2daac50185b" kindref="member">BOOST_REQUIRE</ref>(rest_didnt_produce);</highlight></codeline>
<codeline lineno="2037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2038"><highlight class="normal"></highlight></codeline>
<codeline lineno="2039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aa1213f0f2c7a53ea968859f3cab582c3" kindref="member">produce_blocks</ref>(3<sp/>*<sp/>21<sp/>*<sp/>12);</highlight></codeline>
<codeline lineno="2040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0ecaa1862f168e8a31db8236916a811e" kindref="member">info</ref><sp/>=<sp/>get_producer_info(prod_name);</highlight></codeline>
<codeline lineno="2041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>init_unpaid_blocks<sp/>=<sp/><ref refid="eosio_8system__tests_8cpp_1a0ecaa1862f168e8a31db8236916a811e" kindref="member">info</ref>[</highlight><highlight class="stringliteral">&quot;unpaid_blocks&quot;</highlight><highlight class="normal">].as&lt;uint32_t&gt;();</highlight></codeline>
<codeline lineno="2042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1ae00c608b8a40d03b8b8dd2daac50185b" kindref="member">BOOST_REQUIRE</ref>(<sp/>!<ref refid="eosio_8system__tests_8cpp_1a0ecaa1862f168e8a31db8236916a811e" kindref="member">info</ref>[</highlight><highlight class="stringliteral">&quot;is_active&quot;</highlight><highlight class="normal">].as&lt;bool&gt;()<sp/>);</highlight></codeline>
<codeline lineno="2043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1ae00c608b8a40d03b8b8dd2daac50185b" kindref="member">BOOST_REQUIRE</ref>(<sp/>fc::crypto::public_key()<sp/>==<sp/>fc::crypto::public_key(<ref refid="eosio_8system__tests_8cpp_1a0ecaa1862f168e8a31db8236916a811e" kindref="member">info</ref>[</highlight><highlight class="stringliteral">&quot;producer_key&quot;</highlight><highlight class="normal">].as_string())<sp/>);</highlight></codeline>
<codeline lineno="2044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;producer<sp/>does<sp/>not<sp/>have<sp/>an<sp/>active<sp/>key&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="2045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(prod_name,<sp/></highlight><highlight class="stringliteral">&quot;claimrewards&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()(</highlight><highlight class="stringliteral">&quot;owner&quot;</highlight><highlight class="normal">,<sp/>prod_name)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aa1213f0f2c7a53ea968859f3cab582c3" kindref="member">produce_blocks</ref>(3<sp/>*<sp/>21<sp/>*<sp/>12);</highlight></codeline>
<codeline lineno="2047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>init_unpaid_blocks,<sp/>get_producer_info(prod_name)[</highlight><highlight class="stringliteral">&quot;unpaid_blocks&quot;</highlight><highlight class="normal">].as&lt;uint32_t&gt;()<sp/>);</highlight></codeline>
<codeline lineno="2048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>prod_was_replaced<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint32_t<sp/>i<sp/>=<sp/>21;<sp/>i<sp/>&lt;<sp/>producer_names.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="2051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>&lt;<sp/>get_producer_info(producer_names[i])[</highlight><highlight class="stringliteral">&quot;unpaid_blocks&quot;</highlight><highlight class="normal">].as&lt;uint32_t&gt;())<sp/>{</highlight></codeline>
<codeline lineno="2052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prod_was_replaced<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1ae00c608b8a40d03b8b8dd2daac50185b" kindref="member">BOOST_REQUIRE</ref>(prod_was_replaced);</highlight></codeline>
<codeline lineno="2056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2057"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2058"><highlight class="normal"></highlight></codeline>
<codeline lineno="2059"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;producer<sp/>not<sp/>found&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="2061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(<sp/>config::system_account_name,<sp/></highlight><highlight class="stringliteral">&quot;rmvproducer&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()(</highlight><highlight class="stringliteral">&quot;producer&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nonexistingp&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2062"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2063"><highlight class="normal"></highlight></codeline>
<codeline lineno="2064"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(fc::hours(24));</highlight></codeline>
<codeline lineno="2065"><highlight class="normal"></highlight></codeline>
<codeline lineno="2066"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>switch<sp/>to<sp/>new<sp/>producer<sp/>pay<sp/>metric</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2067"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>0,<sp/>get_global_state2()[</highlight><highlight class="stringliteral">&quot;revision&quot;</highlight><highlight class="normal">].as&lt;uint8_t&gt;()<sp/>);</highlight></codeline>
<codeline lineno="2069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>error(</highlight><highlight class="stringliteral">&quot;missing<sp/>authority<sp/>of<sp/>eosio&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="2070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(producer_names[1],<sp/></highlight><highlight class="stringliteral">&quot;updtrevision&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()(</highlight><highlight class="stringliteral">&quot;revision&quot;</highlight><highlight class="normal">,<sp/>1)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),</highlight></codeline>
<codeline lineno="2072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(config::system_account_name,<sp/></highlight><highlight class="stringliteral">&quot;updtrevision&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()(</highlight><highlight class="stringliteral">&quot;revision&quot;</highlight><highlight class="normal">,<sp/>1)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>1,<sp/>get_global_state2()[</highlight><highlight class="stringliteral">&quot;revision&quot;</highlight><highlight class="normal">].as&lt;uint8_t&gt;()<sp/>);</highlight></codeline>
<codeline lineno="2074"><highlight class="normal"></highlight></codeline>
<codeline lineno="2075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>prod_index<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="2076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>prod_name<sp/>=<sp/>producer_names[prod_index];</highlight></codeline>
<codeline lineno="2077"><highlight class="normal"></highlight></codeline>
<codeline lineno="2078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>initial_prod_info<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>get_producer_info(prod_name);</highlight></codeline>
<codeline lineno="2079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>initial_prod_info2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>get_producer_info2(prod_name);</highlight></codeline>
<codeline lineno="2080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>initial_global_state<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>get_global_state();</highlight></codeline>
<codeline lineno="2081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/>initial_tot_votepay_share<sp/>=<sp/>get_global_state2()[</highlight><highlight class="stringliteral">&quot;total_producer_votepay_share&quot;</highlight><highlight class="normal">].as_double();</highlight></codeline>
<codeline lineno="2082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/>initial_tot_vpay_rate<sp/><sp/><sp/><sp/><sp/>=<sp/>get_global_state3()[</highlight><highlight class="stringliteral">&quot;total_vpay_share_change_rate&quot;</highlight><highlight class="normal">].as_double();</highlight></codeline>
<codeline lineno="2083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>initial_vpay_state_update<sp/>=<sp/>microseconds_since_epoch_of_iso_string(<sp/>get_global_state3()[</highlight><highlight class="stringliteral">&quot;last_vpay_state_update&quot;</highlight><highlight class="normal">]<sp/>);</highlight></codeline>
<codeline lineno="2084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>initial_bucket_fill_time<sp/><sp/>=<sp/>microseconds_since_epoch_of_iso_string(<sp/>initial_global_state[</highlight><highlight class="stringliteral">&quot;last_pervote_bucket_fill&quot;</highlight><highlight class="normal">]<sp/>);</highlight></codeline>
<codeline lineno="2085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/><sp/>initial_pervote_bucket<sp/><sp/><sp/><sp/>=<sp/>initial_global_state[</highlight><highlight class="stringliteral">&quot;pervote_bucket&quot;</highlight><highlight class="normal">].as&lt;int64_t&gt;();</highlight></codeline>
<codeline lineno="2086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/><sp/>initial_perblock_bucket<sp/><sp/><sp/>=<sp/>initial_global_state[</highlight><highlight class="stringliteral">&quot;perblock_bucket&quot;</highlight><highlight class="normal">].as&lt;int64_t&gt;();</highlight></codeline>
<codeline lineno="2087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>initial_tot_unpaid_blocks<sp/>=<sp/>initial_global_state[</highlight><highlight class="stringliteral">&quot;total_unpaid_blocks&quot;</highlight><highlight class="normal">].as&lt;uint32_t&gt;();</highlight></codeline>
<codeline lineno="2088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/><sp/><sp/><sp/>initial_supply<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>get_token_supply();</highlight></codeline>
<codeline lineno="2089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/><sp/><sp/><sp/>initial_balance<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>get_balance(prod_name);</highlight></codeline>
<codeline lineno="2090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>initial_unpaid_blocks<sp/><sp/><sp/><sp/><sp/>=<sp/>initial_prod_info[</highlight><highlight class="stringliteral">&quot;unpaid_blocks&quot;</highlight><highlight class="normal">].as&lt;uint32_t&gt;();</highlight></codeline>
<codeline lineno="2091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>initial_claim_time<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>microseconds_since_epoch_of_iso_string(<sp/>initial_prod_info[</highlight><highlight class="stringliteral">&quot;last_claim_time&quot;</highlight><highlight class="normal">]<sp/>);</highlight></codeline>
<codeline lineno="2092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>initial_prod_update_time<sp/><sp/>=<sp/>microseconds_since_epoch_of_iso_string(<sp/>initial_prod_info2[</highlight><highlight class="stringliteral">&quot;last_votepay_share_update&quot;</highlight><highlight class="normal">]<sp/>);</highlight></codeline>
<codeline lineno="2093"><highlight class="normal"></highlight></codeline>
<codeline lineno="2094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>0<sp/>==<sp/>get_producer_info2(prod_name)[</highlight><highlight class="stringliteral">&quot;votepay_share&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="2095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(prod_name,<sp/></highlight><highlight class="stringliteral">&quot;claimrewards&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()(</highlight><highlight class="stringliteral">&quot;owner&quot;</highlight><highlight class="normal">,<sp/>prod_name)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2096"><highlight class="normal"></highlight></codeline>
<codeline lineno="2097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>prod_info<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>get_producer_info(prod_name);</highlight></codeline>
<codeline lineno="2098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>prod_info2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>get_producer_info2(prod_name);</highlight></codeline>
<codeline lineno="2099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>global_state<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>get_global_state();</highlight></codeline>
<codeline lineno="2100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>vpay_state_update<sp/>=<sp/>microseconds_since_epoch_of_iso_string(<sp/>get_global_state3()[</highlight><highlight class="stringliteral">&quot;last_vpay_state_update&quot;</highlight><highlight class="normal">]<sp/>);</highlight></codeline>
<codeline lineno="2101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>bucket_fill_time<sp/><sp/>=<sp/>microseconds_since_epoch_of_iso_string(<sp/>global_state[</highlight><highlight class="stringliteral">&quot;last_pervote_bucket_fill&quot;</highlight><highlight class="normal">]<sp/>);</highlight></codeline>
<codeline lineno="2102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/><sp/>pervote_bucket<sp/><sp/><sp/><sp/>=<sp/>global_state[</highlight><highlight class="stringliteral">&quot;pervote_bucket&quot;</highlight><highlight class="normal">].as&lt;int64_t&gt;();</highlight></codeline>
<codeline lineno="2103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/><sp/>perblock_bucket<sp/><sp/><sp/>=<sp/>global_state[</highlight><highlight class="stringliteral">&quot;perblock_bucket&quot;</highlight><highlight class="normal">].as&lt;int64_t&gt;();</highlight></codeline>
<codeline lineno="2104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>tot_unpaid_blocks<sp/>=<sp/>global_state[</highlight><highlight class="stringliteral">&quot;total_unpaid_blocks&quot;</highlight><highlight class="normal">].as&lt;uint32_t&gt;();</highlight></codeline>
<codeline lineno="2105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/><sp/><sp/><sp/><ref refid="eosio_8token__tests_8cpp_1ad37587c54682d8fea3f46f4976e16437" kindref="member">supply</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>get_token_supply();</highlight></codeline>
<codeline lineno="2106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/><sp/><sp/><sp/><ref refid="eosio_8token__tests_8cpp_1a1e7ef09ce66d09456a55c47a8c42f3dc" kindref="member">balance</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>get_balance(prod_name);</highlight></codeline>
<codeline lineno="2107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>unpaid_blocks<sp/><sp/><sp/><sp/><sp/>=<sp/>prod_info[</highlight><highlight class="stringliteral">&quot;unpaid_blocks&quot;</highlight><highlight class="normal">].as&lt;uint32_t&gt;();</highlight></codeline>
<codeline lineno="2108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>claim_time<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>microseconds_since_epoch_of_iso_string(<sp/>prod_info[</highlight><highlight class="stringliteral">&quot;last_claim_time&quot;</highlight><highlight class="normal">]<sp/>);</highlight></codeline>
<codeline lineno="2109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>prod_update_time<sp/><sp/>=<sp/>microseconds_since_epoch_of_iso_string(<sp/>prod_info2[</highlight><highlight class="stringliteral">&quot;last_votepay_share_update&quot;</highlight><highlight class="normal">]<sp/>);</highlight></codeline>
<codeline lineno="2110"><highlight class="normal"></highlight></codeline>
<codeline lineno="2111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>usecs_between_fills<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>bucket_fill_time<sp/>-<sp/>initial_bucket_fill_time;</highlight></codeline>
<codeline lineno="2112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/>secs_between_global_updates<sp/>=<sp/>(vpay_state_update<sp/>-<sp/>initial_vpay_state_update)<sp/>/<sp/>1E6;</highlight></codeline>
<codeline lineno="2113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/>secs_between_prod_updates<sp/><sp/><sp/>=<sp/>(prod_update_time<sp/>-<sp/>initial_prod_update_time)<sp/>/<sp/>1E6;</highlight></codeline>
<codeline lineno="2114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/>votepay_share<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>initial_prod_info2[</highlight><highlight class="stringliteral">&quot;votepay_share&quot;</highlight><highlight class="normal">].as_double()<sp/>+<sp/>secs_between_prod_updates<sp/>*<sp/>prod_info[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as_double();</highlight></codeline>
<codeline lineno="2115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/>tot_votepay_share<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>initial_tot_votepay_share<sp/>+<sp/>initial_tot_vpay_rate<sp/>*<sp/>secs_between_global_updates;</highlight></codeline>
<codeline lineno="2116"><highlight class="normal"></highlight></codeline>
<codeline lineno="2117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>expected_perblock_bucket<sp/>=<sp/>int64_t(<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">(initial_supply.get_amount())<sp/>*<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">(usecs_between_fills)<sp/>*<sp/>(0.25<sp/>*<sp/>cont_rate/<sp/>5.)<sp/>/<sp/>usecs_per_year<sp/>)</highlight></codeline>
<codeline lineno="2118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>initial_perblock_bucket;</highlight></codeline>
<codeline lineno="2119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>expected_pervote_bucket<sp/><sp/>=<sp/>int64_t(<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">(initial_supply.get_amount())<sp/>*<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">(usecs_between_fills)<sp/>*<sp/>(0.75<sp/>*<sp/>cont_rate/<sp/>5.)<sp/>/<sp/>usecs_per_year<sp/>)</highlight></codeline>
<codeline lineno="2120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>initial_pervote_bucket;</highlight></codeline>
<codeline lineno="2121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>from_perblock_bucket<sp/>=<sp/>initial_unpaid_blocks<sp/>*<sp/>expected_perblock_bucket<sp/>/<sp/>initial_tot_unpaid_blocks;</highlight></codeline>
<codeline lineno="2122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>from_pervote_bucket<sp/><sp/>=<sp/>int64_t(<sp/>(<sp/>votepay_share<sp/>*<sp/>expected_pervote_bucket<sp/>)<sp/>/<sp/>tot_votepay_share<sp/>);</highlight></codeline>
<codeline lineno="2123"><highlight class="normal"></highlight></codeline>
<codeline lineno="2124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>expected_supply_growth<sp/>=<sp/>initial_supply.get_amount()<sp/>*<sp/>double(usecs_between_fills)<sp/>*<sp/>cont_rate<sp/>/<sp/>usecs_per_year;</highlight></codeline>
<codeline lineno="2125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>int64_t(expected_supply_growth),<sp/><ref refid="eosio_8token__tests_8cpp_1ad37587c54682d8fea3f46f4976e16437" kindref="member">supply</ref>.get_amount()<sp/>-<sp/>initial_supply.get_amount()<sp/>);</highlight></codeline>
<codeline lineno="2126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>claim_time,<sp/>vpay_state_update<sp/>);</highlight></codeline>
<codeline lineno="2127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1ae00c608b8a40d03b8b8dd2daac50185b" kindref="member">BOOST_REQUIRE</ref>(<sp/>100<sp/>*<sp/>10000<sp/>&lt;<sp/>from_pervote_bucket<sp/>);</highlight></codeline>
<codeline lineno="2128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a4ee2d1bad8d3238fe63a78bff6943bcd" kindref="member">BOOST_CHECK_EQUAL</ref>(<sp/>expected_pervote_bucket<sp/>-<sp/>from_pervote_bucket,<sp/>pervote_bucket<sp/>);</highlight></codeline>
<codeline lineno="2129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a4ee2d1bad8d3238fe63a78bff6943bcd" kindref="member">BOOST_CHECK_EQUAL</ref>(<sp/>from_perblock_bucket<sp/>+<sp/>from_pervote_bucket,<sp/><ref refid="eosio_8token__tests_8cpp_1a1e7ef09ce66d09456a55c47a8c42f3dc" kindref="member">balance</ref>.get_amount()<sp/>-<sp/>initial_balance.get_amount()<sp/>);</highlight></codeline>
<codeline lineno="2130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>0<sp/>==<sp/>get_producer_info2(prod_name)[</highlight><highlight class="stringliteral">&quot;votepay_share&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="2131"><highlight class="normal"></highlight></codeline>
<codeline lineno="2132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(fc::hours(2));</highlight></codeline>
<codeline lineno="2133"><highlight class="normal"></highlight></codeline>
<codeline lineno="2134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;already<sp/>claimed<sp/>rewards<sp/>within<sp/>past<sp/>day&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="2135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(prod_name,<sp/></highlight><highlight class="stringliteral">&quot;claimrewards&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()(</highlight><highlight class="stringliteral">&quot;owner&quot;</highlight><highlight class="normal">,<sp/>prod_name)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2136"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2137"><highlight class="normal"></highlight></codeline>
<codeline lineno="2138"><highlight class="normal">}<sp/><ref refid="eosio_8system__tests_8cpp_1a057cb719bfa291fae56dc6ba5fa7a8d1" kindref="member">FC_LOG_AND_RETHROW</ref>()</highlight></codeline>
<codeline lineno="2139"><highlight class="normal"></highlight></codeline>
<codeline lineno="2140"><highlight class="normal"></highlight></codeline>
<codeline lineno="2141"><highlight class="normal"><ref refid="eosio_8system__tests_8cpp_1a8a1841911da283583ec346df954d73a1" kindref="member">BOOST_FIXTURE_TEST_CASE</ref>(multiple_producer_votepay_share,<sp/><ref refid="classeosio__system_1_1eosio__system__tester" kindref="compound">eosio_system_tester</ref>,<sp/>*<sp/>boost::unit_test::tolerance(1e-10))<sp/><ref refid="eosio_8system__tests_8cpp_1ae89aac94d502abdd3c8d055174c221fc" kindref="member">try</ref><sp/>{</highlight></codeline>
<codeline lineno="2142"><highlight class="normal"></highlight></codeline>
<codeline lineno="2143"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>net<sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;80.0000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2144"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>cpu<sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;80.0000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2145"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;account_name&gt;<sp/>voters<sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;producvotera&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;producvoterb&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;producvoterc&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;producvoterd&quot;</highlight><highlight class="normal">_n<sp/>};</highlight></codeline>
<codeline lineno="2146"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>v:<sp/>voters)<sp/>{</highlight></codeline>
<codeline lineno="2147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a791a80df1bef25c60fe34353c84ed5bc" kindref="member">create_account_with_resources</ref>(<sp/>v,<sp/>config::system_account_name,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1.0000&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>net,<sp/>cpu<sp/>);</highlight></codeline>
<codeline lineno="2148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a792dc87878d55cfa11f862e9e6d5cc05" kindref="member">transfer</ref>(<sp/>config::system_account_name,<sp/>v,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;100000000.0000&quot;</highlight><highlight class="normal">),<sp/>config::system_account_name<sp/>);</highlight></codeline>
<codeline lineno="2149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(success(),<sp/>stake(v,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;30000000.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;30000000.0000&quot;</highlight><highlight class="normal">))<sp/>);</highlight></codeline>
<codeline lineno="2150"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2151"><highlight class="normal"></highlight></codeline>
<codeline lineno="2152"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>accounts<sp/>{defproducera,<sp/>defproducerb,<sp/>...,<sp/>defproducerz,<sp/>abcproducera,<sp/>...,<sp/>defproducern}<sp/>and<sp/>register<sp/>as<sp/>producers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2153"><highlight class="normal"><sp/><sp/><sp/>std::vector&lt;account_name&gt;<sp/>producer_names;</highlight></codeline>
<codeline lineno="2154"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>producer_names.reserve(</highlight><highlight class="charliteral">&apos;z&apos;</highlight><highlight class="normal"><sp/>-<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal"><sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="2156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>root(</highlight><highlight class="stringliteral">&quot;defproducer&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c<sp/>=<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">;<sp/>c<sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;z&apos;</highlight><highlight class="normal">;<sp/>++c<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>producer_names.emplace_back(root<sp/>+<sp/>std::string(1,<sp/>c));</highlight></codeline>
<codeline lineno="2160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>root(</highlight><highlight class="stringliteral">&quot;abcproducer&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c<sp/>=<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">;<sp/>c<sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;n&apos;</highlight><highlight class="normal">;<sp/>++c<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>producer_names.emplace_back(root<sp/>+<sp/>std::string(1,<sp/>c));</highlight></codeline>
<codeline lineno="2166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setup_producer_accounts(producer_names);</highlight></codeline>
<codeline lineno="2169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>p:<sp/>producer_names)<sp/>{</highlight></codeline>
<codeline lineno="2170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>regproducer(p)<sp/>);</highlight></codeline>
<codeline lineno="2171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aa1213f0f2c7a53ea968859f3cab582c3" kindref="member">produce_blocks</ref>(1);</highlight></codeline>
<codeline lineno="2172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ilog(<sp/></highlight><highlight class="stringliteral">&quot;------<sp/>get<sp/>pro----------&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1ace57c45c9d9e2f0f9a438effcdb79ba5" kindref="member">wdump</ref>((p));</highlight></codeline>
<codeline lineno="2174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(0<sp/>==<sp/>get_producer_info(p)[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as_double());</highlight></codeline>
<codeline lineno="2175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(0<sp/>==<sp/>get_producer_info2(p)[</highlight><highlight class="stringliteral">&quot;votepay_share&quot;</highlight><highlight class="normal">].as_double());</highlight></codeline>
<codeline lineno="2176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1ae00c608b8a40d03b8b8dd2daac50185b" kindref="member">BOOST_REQUIRE</ref>(0<sp/>&lt;<sp/>microseconds_since_epoch_of_iso_string(<sp/>get_producer_info2(p)[</highlight><highlight class="stringliteral">&quot;last_votepay_share_update&quot;</highlight><highlight class="normal">]<sp/>));</highlight></codeline>
<codeline lineno="2177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2178"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2179"><highlight class="normal"></highlight></codeline>
<codeline lineno="2180"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::hours(24)<sp/>);</highlight></codeline>
<codeline lineno="2181"><highlight class="normal"></highlight></codeline>
<codeline lineno="2182"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>producvotera<sp/>votes<sp/>for<sp/>defproducera<sp/>...<sp/>defproducerj</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2183"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>producvoterb<sp/>votes<sp/>for<sp/>defproducera<sp/>...<sp/>defproduceru</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2184"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>producvoterc<sp/>votes<sp/>for<sp/>defproducera<sp/>...<sp/>defproducerz</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2185"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>producvoterd<sp/>votes<sp/>for<sp/>abcproducera<sp/>...<sp/>abcproducern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2186"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>0<sp/>==<sp/>get_global_state3()[</highlight><highlight class="stringliteral">&quot;total_vpay_share_change_rate&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="2188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>vote(</highlight><highlight class="stringliteral">&quot;producvotera&quot;</highlight><highlight class="normal">_n,<sp/>vector&lt;account_name&gt;(producer_names.begin(),<sp/>producer_names.begin()+10))<sp/>);</highlight></codeline>
<codeline lineno="2189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::hours(10)<sp/>);</highlight></codeline>
<codeline lineno="2190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>0<sp/>==<sp/>get_global_state2()[</highlight><highlight class="stringliteral">&quot;total_producer_votepay_share&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="2191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>init_info<sp/><sp/>=<sp/>get_producer_info(producer_names[0]);</highlight></codeline>
<codeline lineno="2192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>init_info2<sp/>=<sp/>get_producer_info2(producer_names[0]);</highlight></codeline>
<codeline lineno="2193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>init_update<sp/>=<sp/>microseconds_since_epoch_of_iso_string(<sp/>init_info2[</highlight><highlight class="stringliteral">&quot;last_votepay_share_update&quot;</highlight><highlight class="normal">]<sp/>);</highlight></codeline>
<codeline lineno="2194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/>init_votes<sp/><sp/>=<sp/>init_info[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as_double();</highlight></codeline>
<codeline lineno="2195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>vote(</highlight><highlight class="stringliteral">&quot;producvoterb&quot;</highlight><highlight class="normal">_n,<sp/>vector&lt;account_name&gt;(producer_names.begin(),<sp/>producer_names.begin()+21))<sp/>);</highlight></codeline>
<codeline lineno="2196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/><ref refid="eosio_8system__tests_8cpp_1a0ecaa1862f168e8a31db8236916a811e" kindref="member">info</ref><sp/><sp/>=<sp/>get_producer_info(producer_names[0]);</highlight></codeline>
<codeline lineno="2197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>info2<sp/>=<sp/>get_producer_info2(producer_names[0]);</highlight></codeline>
<codeline lineno="2198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>((microseconds_since_epoch_of_iso_string(<sp/>info2[</highlight><highlight class="stringliteral">&quot;last_votepay_share_update&quot;</highlight><highlight class="normal">]<sp/>)<sp/>-<sp/>init_update)/</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">(1E6))<sp/>*<sp/>init_votes<sp/>==<sp/>info2[</highlight><highlight class="stringliteral">&quot;votepay_share&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="2199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>info2[</highlight><highlight class="stringliteral">&quot;votepay_share&quot;</highlight><highlight class="normal">].as_double()<sp/>*<sp/>10<sp/>==<sp/>get_global_state2()[</highlight><highlight class="stringliteral">&quot;total_producer_votepay_share&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="2200"><highlight class="normal"></highlight></codeline>
<codeline lineno="2201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>0<sp/>==<sp/>get_producer_info2(producer_names[11])[</highlight><highlight class="stringliteral">&quot;votepay_share&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="2202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::hours(13)<sp/>);</highlight></codeline>
<codeline lineno="2203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>vote(</highlight><highlight class="stringliteral">&quot;producvoterc&quot;</highlight><highlight class="normal">_n,<sp/>vector&lt;account_name&gt;(producer_names.begin(),<sp/>producer_names.begin()+26))<sp/>);</highlight></codeline>
<codeline lineno="2204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1ae00c608b8a40d03b8b8dd2daac50185b" kindref="member">BOOST_REQUIRE</ref>(<sp/>0<sp/>&lt;<sp/>get_producer_info2(producer_names[11])[</highlight><highlight class="stringliteral">&quot;votepay_share&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="2205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::hours(1)<sp/>);</highlight></codeline>
<codeline lineno="2206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>vote(</highlight><highlight class="stringliteral">&quot;producvoterd&quot;</highlight><highlight class="normal">_n,<sp/>vector&lt;account_name&gt;(producer_names.begin()+26,<sp/>producer_names.end()))<sp/>);</highlight></codeline>
<codeline lineno="2207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>0<sp/>==<sp/>get_producer_info2(producer_names[26])[</highlight><highlight class="stringliteral">&quot;votepay_share&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="2208"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2209"><highlight class="normal"></highlight></codeline>
<codeline lineno="2210"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>proda<sp/>=<sp/>get_producer_info(<sp/></highlight><highlight class="stringliteral">&quot;defproducera&quot;</highlight><highlight class="normal">_n<sp/>);</highlight></codeline>
<codeline lineno="2212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>prodj<sp/>=<sp/>get_producer_info(<sp/></highlight><highlight class="stringliteral">&quot;defproducerj&quot;</highlight><highlight class="normal">_n<sp/>);</highlight></codeline>
<codeline lineno="2213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>prodk<sp/>=<sp/>get_producer_info(<sp/></highlight><highlight class="stringliteral">&quot;defproducerk&quot;</highlight><highlight class="normal">_n<sp/>);</highlight></codeline>
<codeline lineno="2214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>produ<sp/>=<sp/>get_producer_info(<sp/></highlight><highlight class="stringliteral">&quot;defproduceru&quot;</highlight><highlight class="normal">_n<sp/>);</highlight></codeline>
<codeline lineno="2215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>prodv<sp/>=<sp/>get_producer_info(<sp/></highlight><highlight class="stringliteral">&quot;defproducerv&quot;</highlight><highlight class="normal">_n<sp/>);</highlight></codeline>
<codeline lineno="2216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>prodz<sp/>=<sp/>get_producer_info(<sp/></highlight><highlight class="stringliteral">&quot;defproducerz&quot;</highlight><highlight class="normal">_n<sp/>);</highlight></codeline>
<codeline lineno="2217"><highlight class="normal"></highlight></codeline>
<codeline lineno="2218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1ae00c608b8a40d03b8b8dd2daac50185b" kindref="member">BOOST_REQUIRE</ref><sp/>(0<sp/>==<sp/>proda[</highlight><highlight class="stringliteral">&quot;unpaid_blocks&quot;</highlight><highlight class="normal">].as&lt;uint32_t&gt;()<sp/>&amp;&amp;<sp/>0<sp/>==<sp/>prodz[</highlight><highlight class="stringliteral">&quot;unpaid_blocks&quot;</highlight><highlight class="normal">].as&lt;uint32_t&gt;());</highlight></codeline>
<codeline lineno="2219"><highlight class="normal"></highlight></codeline>
<codeline lineno="2220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>vote<sp/>ratios</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1ae00c608b8a40d03b8b8dd2daac50185b" kindref="member">BOOST_REQUIRE</ref><sp/>(<sp/>0<sp/>&lt;<sp/>proda[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as_double()<sp/>&amp;&amp;<sp/>0<sp/>&lt;<sp/>prodz[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="2222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>proda[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as_double()<sp/>==<sp/>prodj[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="2223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>prodk[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as_double()<sp/>==<sp/>produ[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="2224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>prodv[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as_double()<sp/>==<sp/>prodz[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="2225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>2<sp/>*<sp/>proda[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as_double()<sp/>==<sp/>3<sp/>*<sp/>produ[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="2226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>proda[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as_double()<sp/>==<sp/><sp/>3<sp/>*<sp/>prodz[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="2227"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2228"><highlight class="normal"></highlight></codeline>
<codeline lineno="2229"><highlight class="normal"><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/>vote_shares(producer_names.size());</highlight></codeline>
<codeline lineno="2230"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>total_votes<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint32_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>producer_names.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="2233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vote_shares[i]<sp/>=<sp/>get_producer_info(producer_names[i])[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as_double();</highlight></codeline>
<codeline lineno="2234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>total_votes<sp/>+=<sp/>vote_shares[i];</highlight></codeline>
<codeline lineno="2235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>total_votes<sp/>==<sp/>get_global_state()[</highlight><highlight class="stringliteral">&quot;total_producer_vote_weight&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="2237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>total_votes<sp/>==<sp/>get_global_state3()[</highlight><highlight class="stringliteral">&quot;total_vpay_share_change_rate&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="2238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>microseconds_since_epoch_of_iso_string(<sp/>get_producer_info2(producer_names.back())[</highlight><highlight class="stringliteral">&quot;last_votepay_share_update&quot;</highlight><highlight class="normal">]<sp/>),</highlight></codeline>
<codeline lineno="2239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>microseconds_since_epoch_of_iso_string(<sp/>get_global_state3()[</highlight><highlight class="stringliteral">&quot;last_vpay_state_update&quot;</highlight><highlight class="normal">]<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2240"><highlight class="normal"></highlight></codeline>
<codeline lineno="2241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::for_each(<sp/>vote_shares.begin(),<sp/>vote_shares.end(),<sp/>[total_votes](</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>x)<sp/>{<sp/>x<sp/>/=<sp/>total_votes;<sp/>}<sp/>);</highlight></codeline>
<codeline lineno="2242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">(1)<sp/>==<sp/>std::accumulate(vote_shares.begin(),<sp/>vote_shares.end(),<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">(0))<sp/>);</highlight></codeline>
<codeline lineno="2243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">(3./71.)<sp/>==<sp/>vote_shares.front()<sp/>);</highlight></codeline>
<codeline lineno="2244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">(1./71.)<sp/>==<sp/>vote_shares.back()<sp/>);</highlight></codeline>
<codeline lineno="2245"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2246"><highlight class="normal"></highlight></codeline>
<codeline lineno="2247"><highlight class="normal"><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/>votepay_shares(producer_names.size());</highlight></codeline>
<codeline lineno="2248"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>gs3<sp/>=<sp/>get_global_state3();</highlight></codeline>
<codeline lineno="2250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>total_votepay_shares<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>expected_total_votepay_shares<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint32_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>producer_names.size()<sp/>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="2253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/><ref refid="eosio_8system__tests_8cpp_1a0ecaa1862f168e8a31db8236916a811e" kindref="member">info</ref><sp/><sp/>=<sp/>get_producer_info(producer_names[i]);</highlight></codeline>
<codeline lineno="2254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>info2<sp/>=<sp/>get_producer_info2(producer_names[i]);</highlight></codeline>
<codeline lineno="2255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>votepay_shares[i]<sp/>=<sp/>info2[</highlight><highlight class="stringliteral">&quot;votepay_share&quot;</highlight><highlight class="normal">].as_double();</highlight></codeline>
<codeline lineno="2256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>total_votepay_shares<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+=<sp/>votepay_shares[i];</highlight></codeline>
<codeline lineno="2257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expected_total_votepay_shares<sp/>+=<sp/>votepay_shares[i];</highlight></codeline>
<codeline lineno="2258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expected_total_votepay_shares<sp/>+=<sp/><ref refid="eosio_8system__tests_8cpp_1a0ecaa1862f168e8a31db8236916a811e" kindref="member">info</ref>[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as_double()</highlight></codeline>
<codeline lineno="2259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>double(<sp/>(<sp/>microseconds_since_epoch_of_iso_string(<sp/>gs3[</highlight><highlight class="stringliteral">&quot;last_vpay_state_update&quot;</highlight><highlight class="normal">]<sp/>)</highlight></codeline>
<codeline lineno="2260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>microseconds_since_epoch_of_iso_string(<sp/>info2[</highlight><highlight class="stringliteral">&quot;last_votepay_share_update&quot;</highlight><highlight class="normal">]<sp/>)</highlight></codeline>
<codeline lineno="2261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>/<sp/>1E6<sp/>);</highlight></codeline>
<codeline lineno="2262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_TEST(<sp/>expected_total_votepay_shares<sp/>&gt;<sp/>total_votepay_shares<sp/>);</highlight></codeline>
<codeline lineno="2264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>expected_total_votepay_shares<sp/>==<sp/>get_global_state2()[</highlight><highlight class="stringliteral">&quot;total_producer_votepay_share&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="2265"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2266"><highlight class="normal"></highlight></codeline>
<codeline lineno="2267"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>prod_index<sp/>=<sp/>15;</highlight></codeline>
<codeline lineno="2269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>account_name<sp/>prod_name<sp/>=<sp/>producer_names[prod_index];</highlight></codeline>
<codeline lineno="2270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>init_info<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>get_producer_info(prod_name);</highlight></codeline>
<codeline lineno="2271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>init_info2<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>get_producer_info2(prod_name);</highlight></codeline>
<codeline lineno="2272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1ae00c608b8a40d03b8b8dd2daac50185b" kindref="member">BOOST_REQUIRE</ref>(<sp/>0<sp/>&lt;<sp/>init_info2[</highlight><highlight class="stringliteral">&quot;votepay_share&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="2273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1ae00c608b8a40d03b8b8dd2daac50185b" kindref="member">BOOST_REQUIRE</ref>(<sp/>0<sp/>&lt;<sp/>microseconds_since_epoch_of_iso_string(<sp/>init_info2[</highlight><highlight class="stringliteral">&quot;last_votepay_share_update&quot;</highlight><highlight class="normal">]<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2274"><highlight class="normal"></highlight></codeline>
<codeline lineno="2275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(prod_name,<sp/></highlight><highlight class="stringliteral">&quot;claimrewards&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()(</highlight><highlight class="stringliteral">&quot;owner&quot;</highlight><highlight class="normal">,<sp/>prod_name))<sp/>);</highlight></codeline>
<codeline lineno="2276"><highlight class="normal"></highlight></codeline>
<codeline lineno="2277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>0<sp/>==<sp/>get_producer_info2(prod_name)[</highlight><highlight class="stringliteral">&quot;votepay_share&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="2278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>get_producer_info(prod_name)[</highlight><highlight class="stringliteral">&quot;last_claim_time&quot;</highlight><highlight class="normal">].as_string(),</highlight></codeline>
<codeline lineno="2279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_producer_info2(prod_name)[</highlight><highlight class="stringliteral">&quot;last_votepay_share_update&quot;</highlight><highlight class="normal">].as_string()<sp/>);</highlight></codeline>
<codeline lineno="2280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>get_producer_info(prod_name)[</highlight><highlight class="stringliteral">&quot;last_claim_time&quot;</highlight><highlight class="normal">].as_string(),</highlight></codeline>
<codeline lineno="2281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_global_state3()[</highlight><highlight class="stringliteral">&quot;last_vpay_state_update&quot;</highlight><highlight class="normal">].as_string()<sp/>);</highlight></codeline>
<codeline lineno="2282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>gs3<sp/>=<sp/>get_global_state3();</highlight></codeline>
<codeline lineno="2283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>expected_total_votepay_shares<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint32_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>producer_names.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="2285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/><ref refid="eosio_8system__tests_8cpp_1a0ecaa1862f168e8a31db8236916a811e" kindref="member">info</ref><sp/><sp/>=<sp/>get_producer_info(producer_names[i]);</highlight></codeline>
<codeline lineno="2286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>info2<sp/>=<sp/>get_producer_info2(producer_names[i]);</highlight></codeline>
<codeline lineno="2287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expected_total_votepay_shares<sp/>+=<sp/>info2[</highlight><highlight class="stringliteral">&quot;votepay_share&quot;</highlight><highlight class="normal">].as_double();</highlight></codeline>
<codeline lineno="2288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expected_total_votepay_shares<sp/>+=<sp/><ref refid="eosio_8system__tests_8cpp_1a0ecaa1862f168e8a31db8236916a811e" kindref="member">info</ref>[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as_double()</highlight></codeline>
<codeline lineno="2289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>double(<sp/>(<sp/>microseconds_since_epoch_of_iso_string(<sp/>gs3[</highlight><highlight class="stringliteral">&quot;last_vpay_state_update&quot;</highlight><highlight class="normal">]<sp/>)</highlight></codeline>
<codeline lineno="2290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>microseconds_since_epoch_of_iso_string(<sp/>info2[</highlight><highlight class="stringliteral">&quot;last_votepay_share_update&quot;</highlight><highlight class="normal">]<sp/>)</highlight></codeline>
<codeline lineno="2291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>/<sp/>1E6<sp/>);</highlight></codeline>
<codeline lineno="2292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>expected_total_votepay_shares<sp/>==<sp/>get_global_state2()[</highlight><highlight class="stringliteral">&quot;total_producer_votepay_share&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="2294"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2295"><highlight class="normal"></highlight></codeline>
<codeline lineno="2296"><highlight class="normal">}<sp/><ref refid="eosio_8system__tests_8cpp_1a057cb719bfa291fae56dc6ba5fa7a8d1" kindref="member">FC_LOG_AND_RETHROW</ref>()</highlight></codeline>
<codeline lineno="2297"><highlight class="normal"></highlight></codeline>
<codeline lineno="2298"><highlight class="normal"><ref refid="eosio_8system__tests_8cpp_1a8a1841911da283583ec346df954d73a1" kindref="member">BOOST_FIXTURE_TEST_CASE</ref>(votepay_share_invariant,<sp/><ref refid="classeosio__system_1_1eosio__system__tester" kindref="compound">eosio_system_tester</ref>,<sp/>*<sp/>boost::unit_test::tolerance(1e-10))<sp/><ref refid="eosio_8system__tests_8cpp_1ae89aac94d502abdd3c8d055174c221fc" kindref="member">try</ref><sp/>{</highlight></codeline>
<codeline lineno="2299"><highlight class="normal"></highlight></codeline>
<codeline lineno="2300"><highlight class="normal"><sp/><sp/><sp/>cross_15_percent_threshold();</highlight></codeline>
<codeline lineno="2301"><highlight class="normal"></highlight></codeline>
<codeline lineno="2302"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>net<sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;80.0000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2303"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>cpu<sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;80.0000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2304"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;account_name&gt;<sp/><ref refid="structaccounts" kindref="compound">accounts</ref><sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;aliceaccount&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;bobbyaccount&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;carolaccount&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;emilyaccount&quot;</highlight><highlight class="normal">_n<sp/>};</highlight></codeline>
<codeline lineno="2305"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>a:<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a791a80df1bef25c60fe34353c84ed5bc" kindref="member">create_account_with_resources</ref>(<sp/>a,<sp/>config::system_account_name,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1.0000&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>net,<sp/>cpu<sp/>);</highlight></codeline>
<codeline lineno="2307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a792dc87878d55cfa11f862e9e6d5cc05" kindref="member">transfer</ref>(<sp/>config::system_account_name,<sp/>a,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1000.0000&quot;</highlight><highlight class="normal">),<sp/>config::system_account_name<sp/>);</highlight></codeline>
<codeline lineno="2308"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2309"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>vota<sp/><sp/>=<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>[0];</highlight></codeline>
<codeline lineno="2310"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>votb<sp/><sp/>=<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>[1];</highlight></codeline>
<codeline lineno="2311"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>proda<sp/>=<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>[2];</highlight></codeline>
<codeline lineno="2312"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>prodb<sp/>=<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>[3];</highlight></codeline>
<codeline lineno="2313"><highlight class="normal"></highlight></codeline>
<codeline lineno="2314"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>stake(<sp/>vota,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;100.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;100.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2315"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>stake(<sp/>votb,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;100.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;100.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2316"><highlight class="normal"></highlight></codeline>
<codeline lineno="2317"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>regproducer(<sp/>proda<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2318"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>regproducer(<sp/>prodb<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2319"><highlight class="normal"></highlight></codeline>
<codeline lineno="2320"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>vote(<sp/>vota,<sp/>{<sp/>proda<sp/>}<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2321"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>vote(<sp/>votb,<sp/>{<sp/>prodb<sp/>}<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2322"><highlight class="normal"></highlight></codeline>
<codeline lineno="2323"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::hours(25)<sp/>);</highlight></codeline>
<codeline lineno="2324"><highlight class="normal"></highlight></codeline>
<codeline lineno="2325"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>vote(<sp/>vota,<sp/>{<sp/>proda<sp/>}<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2326"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>vote(<sp/>votb,<sp/>{<sp/>prodb<sp/>}<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2327"><highlight class="normal"></highlight></codeline>
<codeline lineno="2328"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::hours(1)<sp/>);</highlight></codeline>
<codeline lineno="2329"><highlight class="normal"></highlight></codeline>
<codeline lineno="2330"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(proda,<sp/></highlight><highlight class="stringliteral">&quot;claimrewards&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()(</highlight><highlight class="stringliteral">&quot;owner&quot;</highlight><highlight class="normal">,<sp/>proda))<sp/>);</highlight></codeline>
<codeline lineno="2331"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>0<sp/>==<sp/>get_producer_info2(proda)[</highlight><highlight class="stringliteral">&quot;votepay_share&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="2332"><highlight class="normal"></highlight></codeline>
<codeline lineno="2333"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::hours(24)<sp/>);</highlight></codeline>
<codeline lineno="2334"><highlight class="normal"></highlight></codeline>
<codeline lineno="2335"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>vote(<sp/>vota,<sp/>{<sp/>proda<sp/>}<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2336"><highlight class="normal"></highlight></codeline>
<codeline lineno="2337"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::hours(24)<sp/>);</highlight></codeline>
<codeline lineno="2338"><highlight class="normal"></highlight></codeline>
<codeline lineno="2339"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(prodb,<sp/></highlight><highlight class="stringliteral">&quot;claimrewards&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()(</highlight><highlight class="stringliteral">&quot;owner&quot;</highlight><highlight class="normal">,<sp/>prodb))<sp/>);</highlight></codeline>
<codeline lineno="2340"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>0<sp/>==<sp/>get_producer_info2(prodb)[</highlight><highlight class="stringliteral">&quot;votepay_share&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="2341"><highlight class="normal"></highlight></codeline>
<codeline lineno="2342"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::hours(10)<sp/>);</highlight></codeline>
<codeline lineno="2343"><highlight class="normal"></highlight></codeline>
<codeline lineno="2344"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>vote(<sp/>votb,<sp/>{<sp/>prodb<sp/>}<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2345"><highlight class="normal"></highlight></codeline>
<codeline lineno="2346"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::hours(16)<sp/>);</highlight></codeline>
<codeline lineno="2347"><highlight class="normal"></highlight></codeline>
<codeline lineno="2348"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>vote(<sp/>votb,<sp/>{<sp/>prodb<sp/>}<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2349"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::hours(2)<sp/>);</highlight></codeline>
<codeline lineno="2350"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>vote(<sp/>vota,<sp/>{<sp/>proda<sp/>}<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2351"><highlight class="normal"></highlight></codeline>
<codeline lineno="2352"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/><ref refid="eosio_8system__tests_8cpp_1a0ecaa1862f168e8a31db8236916a811e" kindref="member">info</ref><sp/><sp/>=<sp/>get_producer_info(prodb);</highlight></codeline>
<codeline lineno="2353"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>info2<sp/>=<sp/>get_producer_info2(prodb);</highlight></codeline>
<codeline lineno="2354"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>gs2<sp/><sp/><sp/>=<sp/>get_global_state2();</highlight></codeline>
<codeline lineno="2355"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>gs3<sp/><sp/><sp/>=<sp/>get_global_state3();</highlight></codeline>
<codeline lineno="2356"><highlight class="normal"></highlight></codeline>
<codeline lineno="2357"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>expected_total_vpay_share<sp/>=<sp/>info2[</highlight><highlight class="stringliteral">&quot;votepay_share&quot;</highlight><highlight class="normal">].as_double()</highlight></codeline>
<codeline lineno="2358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/><ref refid="eosio_8system__tests_8cpp_1a0ecaa1862f168e8a31db8236916a811e" kindref="member">info</ref>[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as_double()</highlight></codeline>
<codeline lineno="2359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>(<sp/>microseconds_since_epoch_of_iso_string(<sp/>gs3[</highlight><highlight class="stringliteral">&quot;last_vpay_state_update&quot;</highlight><highlight class="normal">]<sp/>)</highlight></codeline>
<codeline lineno="2360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>microseconds_since_epoch_of_iso_string(<sp/>info2[</highlight><highlight class="stringliteral">&quot;last_votepay_share_update&quot;</highlight><highlight class="normal">]<sp/>)<sp/>)<sp/>/<sp/>1E6;</highlight></codeline>
<codeline lineno="2361"><highlight class="normal"></highlight></codeline>
<codeline lineno="2362"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>expected_total_vpay_share<sp/>==<sp/>gs2[</highlight><highlight class="stringliteral">&quot;total_producer_votepay_share&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="2363"><highlight class="normal"></highlight></codeline>
<codeline lineno="2364"><highlight class="normal">}<sp/><ref refid="eosio_8system__tests_8cpp_1a057cb719bfa291fae56dc6ba5fa7a8d1" kindref="member">FC_LOG_AND_RETHROW</ref>()</highlight></codeline>
<codeline lineno="2365"><highlight class="normal"></highlight></codeline>
<codeline lineno="2366"><highlight class="normal"><ref refid="eosio_8system__tests_8cpp_1a8a1841911da283583ec346df954d73a1" kindref="member">BOOST_FIXTURE_TEST_CASE</ref>(votepay_share_proxy,<sp/><ref refid="classeosio__system_1_1eosio__system__tester" kindref="compound">eosio_system_tester</ref>,<sp/>*<sp/>boost::unit_test::tolerance(1e-5))<sp/><ref refid="eosio_8system__tests_8cpp_1ae89aac94d502abdd3c8d055174c221fc" kindref="member">try</ref><sp/>{</highlight></codeline>
<codeline lineno="2367"><highlight class="normal"></highlight></codeline>
<codeline lineno="2368"><highlight class="normal"><sp/><sp/><sp/>cross_15_percent_threshold();</highlight></codeline>
<codeline lineno="2369"><highlight class="normal"></highlight></codeline>
<codeline lineno="2370"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>net<sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;80.0000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2371"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>cpu<sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;80.0000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2372"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;account_name&gt;<sp/><ref refid="structaccounts" kindref="compound">accounts</ref><sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;aliceaccount&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;bobbyaccount&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;carolaccount&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;emilyaccount&quot;</highlight><highlight class="normal">_n<sp/>};</highlight></codeline>
<codeline lineno="2373"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>a:<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a791a80df1bef25c60fe34353c84ed5bc" kindref="member">create_account_with_resources</ref>(<sp/>a,<sp/>config::system_account_name,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1.0000&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>net,<sp/>cpu<sp/>);</highlight></codeline>
<codeline lineno="2375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a792dc87878d55cfa11f862e9e6d5cc05" kindref="member">transfer</ref>(<sp/>config::system_account_name,<sp/>a,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1000.0000&quot;</highlight><highlight class="normal">),<sp/>config::system_account_name<sp/>);</highlight></codeline>
<codeline lineno="2376"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2377"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>=<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>[0];</highlight></codeline>
<codeline lineno="2378"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref><sp/><sp/><sp/>=<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>[1];</highlight></codeline>
<codeline lineno="2379"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref><sp/>=<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>[2];</highlight></codeline>
<codeline lineno="2380"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>emily<sp/>=<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>[3];</highlight></codeline>
<codeline lineno="2381"><highlight class="normal"></highlight></codeline>
<codeline lineno="2382"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>alice<sp/>becomes<sp/>a<sp/>proxy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2383"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/></highlight><highlight class="stringliteral">&quot;regproxy&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()(</highlight><highlight class="stringliteral">&quot;proxy&quot;</highlight><highlight class="normal">,<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>)(</highlight><highlight class="stringliteral">&quot;isproxy&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2384"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1abf3d4eb475605f9a73224e835cd3fb71" kindref="member">REQUIRE_MATCHING_OBJECT</ref>(<sp/><ref refid="eosio_8system__tests_8cpp_1ac440180674d61e14dbbe38c3d10269d3" kindref="member">proxy</ref>(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>),<sp/>get_voter_info(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2385"><highlight class="normal"></highlight></codeline>
<codeline lineno="2386"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>carol<sp/>and<sp/>emily<sp/>become<sp/>producers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2387"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>regproducer(<sp/><ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref>,<sp/>1)<sp/>);</highlight></codeline>
<codeline lineno="2388"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>regproducer(<sp/>emily,<sp/>1)<sp/>);</highlight></codeline>
<codeline lineno="2389"><highlight class="normal"></highlight></codeline>
<codeline lineno="2390"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bob<sp/>chooses<sp/>alice<sp/>as<sp/>proxy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2391"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>stake(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;100.0002&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;50.0001&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2392"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>stake(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;150.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;150.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2393"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>vote(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/>{<sp/>},<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2394"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>stake2votes(<ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;150.0003&quot;</highlight><highlight class="normal">))<sp/>==<sp/>get_voter_info(<ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>)[</highlight><highlight class="stringliteral">&quot;proxied_vote_weight&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="2395"><highlight class="normal"></highlight></codeline>
<codeline lineno="2396"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>alice<sp/>(proxy)<sp/>votes<sp/>for<sp/>carol</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2397"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>vote(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/>{<sp/><ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref><sp/>}<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2398"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>total_votes<sp/>=<sp/>get_producer_info(<ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref>)[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as_double();</highlight></codeline>
<codeline lineno="2399"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>stake2votes(<ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;450.0003&quot;</highlight><highlight class="normal">))<sp/>==<sp/>total_votes<sp/>);</highlight></codeline>
<codeline lineno="2400"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>0<sp/>==<sp/>get_producer_info2(<ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref>)[</highlight><highlight class="stringliteral">&quot;votepay_share&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="2401"><highlight class="normal"><sp/><sp/><sp/>uint64_t<sp/>last_update_time<sp/>=<sp/>microseconds_since_epoch_of_iso_string(<sp/>get_producer_info2(<ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref>)[</highlight><highlight class="stringliteral">&quot;last_votepay_share_update&quot;</highlight><highlight class="normal">]<sp/>);</highlight></codeline>
<codeline lineno="2402"><highlight class="normal"></highlight></codeline>
<codeline lineno="2403"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::hours(15)<sp/>);</highlight></codeline>
<codeline lineno="2404"><highlight class="normal"></highlight></codeline>
<codeline lineno="2405"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>alice<sp/>(proxy)<sp/>votes<sp/>again<sp/>for<sp/>carol</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2406"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>vote(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/>{<sp/><ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref><sp/>}<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2407"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>cur_info2<sp/>=<sp/>get_producer_info2(<ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref>);</highlight></codeline>
<codeline lineno="2408"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>expected_votepay_share<sp/>=<sp/>double(<sp/>(microseconds_since_epoch_of_iso_string(<sp/>cur_info2[</highlight><highlight class="stringliteral">&quot;last_votepay_share_update&quot;</highlight><highlight class="normal">]<sp/>)<sp/>-<sp/>last_update_time)<sp/>/<sp/>1E6<sp/>)<sp/>*<sp/>total_votes;</highlight></codeline>
<codeline lineno="2409"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>stake2votes(<ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;450.0003&quot;</highlight><highlight class="normal">))<sp/>==<sp/>get_producer_info(<ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref>)[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="2410"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>expected_votepay_share<sp/>==<sp/>cur_info2[</highlight><highlight class="stringliteral">&quot;votepay_share&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="2411"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>expected_votepay_share<sp/>==<sp/>get_global_state2()[</highlight><highlight class="stringliteral">&quot;total_producer_votepay_share&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="2412"><highlight class="normal"><sp/><sp/><sp/>last_update_time<sp/>=<sp/>microseconds_since_epoch_of_iso_string(<sp/>cur_info2[</highlight><highlight class="stringliteral">&quot;last_votepay_share_update&quot;</highlight><highlight class="normal">]<sp/>);</highlight></codeline>
<codeline lineno="2413"><highlight class="normal"><sp/><sp/><sp/>total_votes<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>get_producer_info(<ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref>)[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as_double();</highlight></codeline>
<codeline lineno="2414"><highlight class="normal"></highlight></codeline>
<codeline lineno="2415"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::hours(40)<sp/>);</highlight></codeline>
<codeline lineno="2416"><highlight class="normal"></highlight></codeline>
<codeline lineno="2417"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bob<sp/>unstakes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2418"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>unstake(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;10.0002&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;10.0001&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2419"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>stake2votes(<ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;430.0000&quot;</highlight><highlight class="normal">)),<sp/>get_producer_info(<ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref>)[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="2420"><highlight class="normal"></highlight></codeline>
<codeline lineno="2421"><highlight class="normal"><sp/><sp/><sp/>cur_info2<sp/>=<sp/>get_producer_info2(<ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref>);</highlight></codeline>
<codeline lineno="2422"><highlight class="normal"><sp/><sp/><sp/>expected_votepay_share<sp/>+=<sp/>double(<sp/>(microseconds_since_epoch_of_iso_string(<sp/>cur_info2[</highlight><highlight class="stringliteral">&quot;last_votepay_share_update&quot;</highlight><highlight class="normal">]<sp/>)<sp/>-<sp/>last_update_time)<sp/>/<sp/>1E6<sp/>)<sp/>*<sp/>total_votes;</highlight></codeline>
<codeline lineno="2423"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>expected_votepay_share<sp/>==<sp/>cur_info2[</highlight><highlight class="stringliteral">&quot;votepay_share&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="2424"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>expected_votepay_share<sp/>==<sp/>get_global_state2()[</highlight><highlight class="stringliteral">&quot;total_producer_votepay_share&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="2425"><highlight class="normal"><sp/><sp/><sp/>last_update_time<sp/>=<sp/>microseconds_since_epoch_of_iso_string(<sp/>cur_info2[</highlight><highlight class="stringliteral">&quot;last_votepay_share_update&quot;</highlight><highlight class="normal">]<sp/>);</highlight></codeline>
<codeline lineno="2426"><highlight class="normal"><sp/><sp/><sp/>total_votes<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>get_producer_info(<ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref>)[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as_double();</highlight></codeline>
<codeline lineno="2427"><highlight class="normal"></highlight></codeline>
<codeline lineno="2428"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>carol<sp/>claims<sp/>rewards</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2429"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(<ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref>,<sp/></highlight><highlight class="stringliteral">&quot;claimrewards&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()(</highlight><highlight class="stringliteral">&quot;owner&quot;</highlight><highlight class="normal">,<sp/><ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref>))<sp/>);</highlight></codeline>
<codeline lineno="2430"><highlight class="normal"></highlight></codeline>
<codeline lineno="2431"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::hours(20)<sp/>);</highlight></codeline>
<codeline lineno="2432"><highlight class="normal"></highlight></codeline>
<codeline lineno="2433"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bob<sp/>votes<sp/>for<sp/>carol</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2434"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>vote(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/>{<sp/><ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref><sp/>}<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2435"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>stake2votes(<ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;430.0000&quot;</highlight><highlight class="normal">)),<sp/>get_producer_info(<ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref>)[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="2436"><highlight class="normal"><sp/><sp/><sp/>cur_info2<sp/>=<sp/>get_producer_info2(<ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref>);</highlight></codeline>
<codeline lineno="2437"><highlight class="normal"><sp/><sp/><sp/>expected_votepay_share<sp/>=<sp/>double(<sp/>(microseconds_since_epoch_of_iso_string(<sp/>cur_info2[</highlight><highlight class="stringliteral">&quot;last_votepay_share_update&quot;</highlight><highlight class="normal">]<sp/>)<sp/>-<sp/>last_update_time)<sp/>/<sp/>1E6<sp/>)<sp/>*<sp/>total_votes;</highlight></codeline>
<codeline lineno="2438"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>expected_votepay_share<sp/>==<sp/>cur_info2[</highlight><highlight class="stringliteral">&quot;votepay_share&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="2439"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>expected_votepay_share<sp/>==<sp/>get_global_state2()[</highlight><highlight class="stringliteral">&quot;total_producer_votepay_share&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="2440"><highlight class="normal"></highlight></codeline>
<codeline lineno="2441"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::hours(54)<sp/>);</highlight></codeline>
<codeline lineno="2442"><highlight class="normal"></highlight></codeline>
<codeline lineno="2443"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bob<sp/>votes<sp/>for<sp/>carol<sp/>again</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2444"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>carol<sp/>hasn&apos;t<sp/>claimed<sp/>rewards<sp/>in<sp/>over<sp/>3<sp/>days</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2445"><highlight class="normal"><sp/><sp/><sp/>total_votes<sp/>=<sp/>get_producer_info(<ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref>)[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as_double();</highlight></codeline>
<codeline lineno="2446"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>vote(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/>{<sp/><ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref><sp/>}<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2447"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>get_producer_info2(<ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref>)[</highlight><highlight class="stringliteral">&quot;last_votepay_share_update&quot;</highlight><highlight class="normal">].as_string(),</highlight></codeline>
<codeline lineno="2448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_global_state3()[</highlight><highlight class="stringliteral">&quot;last_vpay_state_update&quot;</highlight><highlight class="normal">].as_string()<sp/>);</highlight></codeline>
<codeline lineno="2449"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>0<sp/>==<sp/>get_producer_info2(<ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref>)[</highlight><highlight class="stringliteral">&quot;votepay_share&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="2450"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>0<sp/>==<sp/>get_global_state2()[</highlight><highlight class="stringliteral">&quot;total_producer_votepay_share&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="2451"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>0<sp/>==<sp/>get_global_state3()[</highlight><highlight class="stringliteral">&quot;total_vpay_share_change_rate&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="2452"><highlight class="normal"></highlight></codeline>
<codeline lineno="2453"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::hours(20)<sp/>);</highlight></codeline>
<codeline lineno="2454"><highlight class="normal"></highlight></codeline>
<codeline lineno="2455"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bob<sp/>votes<sp/>for<sp/>carol<sp/>again</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2456"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>carol<sp/>still<sp/>hasn&apos;t<sp/>claimed<sp/>rewards</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2457"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>vote(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/>{<sp/><ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref><sp/>}<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2458"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(get_producer_info2(<ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref>)[</highlight><highlight class="stringliteral">&quot;last_votepay_share_update&quot;</highlight><highlight class="normal">].as_string(),</highlight></codeline>
<codeline lineno="2459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_global_state3()[</highlight><highlight class="stringliteral">&quot;last_vpay_state_update&quot;</highlight><highlight class="normal">].as_string()<sp/>);</highlight></codeline>
<codeline lineno="2460"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>0<sp/>==<sp/>get_producer_info2(<ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref>)[</highlight><highlight class="stringliteral">&quot;votepay_share&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="2461"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>0<sp/>==<sp/>get_global_state2()[</highlight><highlight class="stringliteral">&quot;total_producer_votepay_share&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="2462"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>0<sp/>==<sp/>get_global_state3()[</highlight><highlight class="stringliteral">&quot;total_vpay_share_change_rate&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="2463"><highlight class="normal"></highlight></codeline>
<codeline lineno="2464"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::hours(24)<sp/>);</highlight></codeline>
<codeline lineno="2465"><highlight class="normal"></highlight></codeline>
<codeline lineno="2466"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>carol<sp/>finally<sp/>claims<sp/>rewards</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2467"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(<sp/><ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref>,<sp/></highlight><highlight class="stringliteral">&quot;claimrewards&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()(</highlight><highlight class="stringliteral">&quot;owner&quot;</highlight><highlight class="normal">,<sp/><ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2468"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>==<sp/>get_producer_info2(<ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref>)[</highlight><highlight class="stringliteral">&quot;votepay_share&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="2469"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>==<sp/>get_global_state2()[</highlight><highlight class="stringliteral">&quot;total_producer_votepay_share&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="2470"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>total_votes<sp/>==<sp/>get_global_state3()[</highlight><highlight class="stringliteral">&quot;total_vpay_share_change_rate&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="2471"><highlight class="normal"></highlight></codeline>
<codeline lineno="2472"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::hours(5)<sp/>);</highlight></codeline>
<codeline lineno="2473"><highlight class="normal"></highlight></codeline>
<codeline lineno="2474"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>alice<sp/>votes<sp/>for<sp/>carol<sp/>and<sp/>emily</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2475"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>emily<sp/>hasn&apos;t<sp/>claimed<sp/>rewards<sp/>in<sp/>over<sp/>3<sp/>days</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2476"><highlight class="normal"><sp/><sp/><sp/>last_update_time<sp/>=<sp/>microseconds_since_epoch_of_iso_string(<sp/>get_producer_info2(<ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref>)[</highlight><highlight class="stringliteral">&quot;last_votepay_share_update&quot;</highlight><highlight class="normal">]<sp/>);</highlight></codeline>
<codeline lineno="2477"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>vote(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/>{<sp/><ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref>,<sp/>emily<sp/>}<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2478"><highlight class="normal"><sp/><sp/><sp/>cur_info2<sp/>=<sp/>get_producer_info2(<ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref>);</highlight></codeline>
<codeline lineno="2479"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>cur_info2_emily<sp/>=<sp/>get_producer_info2(emily);</highlight></codeline>
<codeline lineno="2480"><highlight class="normal"></highlight></codeline>
<codeline lineno="2481"><highlight class="normal"><sp/><sp/><sp/>expected_votepay_share<sp/>=<sp/>double(<sp/>(microseconds_since_epoch_of_iso_string(<sp/>cur_info2[</highlight><highlight class="stringliteral">&quot;last_votepay_share_update&quot;</highlight><highlight class="normal">]<sp/>)<sp/>-<sp/>last_update_time)<sp/>/<sp/>1E6<sp/>)<sp/>*<sp/>total_votes;</highlight></codeline>
<codeline lineno="2482"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>expected_votepay_share<sp/>==<sp/>cur_info2[</highlight><highlight class="stringliteral">&quot;votepay_share&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="2483"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>==<sp/>cur_info2_emily[</highlight><highlight class="stringliteral">&quot;votepay_share&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="2484"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>expected_votepay_share<sp/>==<sp/>get_global_state2()[</highlight><highlight class="stringliteral">&quot;total_producer_votepay_share&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="2485"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>get_producer_info(<ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref>)[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as_double()<sp/>==</highlight></codeline>
<codeline lineno="2486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_global_state3()[</highlight><highlight class="stringliteral">&quot;total_vpay_share_change_rate&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="2487"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>cur_info2[</highlight><highlight class="stringliteral">&quot;last_votepay_share_update&quot;</highlight><highlight class="normal">].as_string(),</highlight></codeline>
<codeline lineno="2488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_global_state3()[</highlight><highlight class="stringliteral">&quot;last_vpay_state_update&quot;</highlight><highlight class="normal">].as_string()<sp/>);</highlight></codeline>
<codeline lineno="2489"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>cur_info2_emily[</highlight><highlight class="stringliteral">&quot;last_votepay_share_update&quot;</highlight><highlight class="normal">].as_string(),</highlight></codeline>
<codeline lineno="2490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_global_state3()[</highlight><highlight class="stringliteral">&quot;last_vpay_state_update&quot;</highlight><highlight class="normal">].as_string()<sp/>);</highlight></codeline>
<codeline lineno="2491"><highlight class="normal"></highlight></codeline>
<codeline lineno="2492"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::hours(10)<sp/>);</highlight></codeline>
<codeline lineno="2493"><highlight class="normal"></highlight></codeline>
<codeline lineno="2494"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bob<sp/>chooses<sp/>alice<sp/>as<sp/>proxy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2495"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>emily<sp/>still<sp/>hasn&apos;t<sp/>claimed<sp/>rewards</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2496"><highlight class="normal"><sp/><sp/><sp/>last_update_time<sp/>=<sp/>microseconds_since_epoch_of_iso_string(<sp/>get_producer_info2(<ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref>)[</highlight><highlight class="stringliteral">&quot;last_votepay_share_update&quot;</highlight><highlight class="normal">]<sp/>);</highlight></codeline>
<codeline lineno="2497"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>vote(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/>{<sp/>},<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2498"><highlight class="normal"><sp/><sp/><sp/>cur_info2<sp/>=<sp/>get_producer_info2(<ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref>);</highlight></codeline>
<codeline lineno="2499"><highlight class="normal"><sp/><sp/><sp/>cur_info2_emily<sp/>=<sp/>get_producer_info2(emily);</highlight></codeline>
<codeline lineno="2500"><highlight class="normal"></highlight></codeline>
<codeline lineno="2501"><highlight class="normal"><sp/><sp/><sp/>expected_votepay_share<sp/>+=<sp/>double(<sp/>(microseconds_since_epoch_of_iso_string(<sp/>cur_info2[</highlight><highlight class="stringliteral">&quot;last_votepay_share_update&quot;</highlight><highlight class="normal">]<sp/>)<sp/>-<sp/>last_update_time)<sp/>/<sp/>1E6<sp/>)<sp/>*<sp/>total_votes;</highlight></codeline>
<codeline lineno="2502"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>expected_votepay_share<sp/>==<sp/>cur_info2[</highlight><highlight class="stringliteral">&quot;votepay_share&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="2503"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>==<sp/>cur_info2_emily[</highlight><highlight class="stringliteral">&quot;votepay_share&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="2504"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>expected_votepay_share<sp/>==<sp/>get_global_state2()[</highlight><highlight class="stringliteral">&quot;total_producer_votepay_share&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="2505"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>get_producer_info(<ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref>)[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as_double()<sp/>==</highlight></codeline>
<codeline lineno="2506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_global_state3()[</highlight><highlight class="stringliteral">&quot;total_vpay_share_change_rate&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="2507"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>cur_info2[</highlight><highlight class="stringliteral">&quot;last_votepay_share_update&quot;</highlight><highlight class="normal">].as_string(),</highlight></codeline>
<codeline lineno="2508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_global_state3()[</highlight><highlight class="stringliteral">&quot;last_vpay_state_update&quot;</highlight><highlight class="normal">].as_string()<sp/>);</highlight></codeline>
<codeline lineno="2509"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>cur_info2_emily[</highlight><highlight class="stringliteral">&quot;last_votepay_share_update&quot;</highlight><highlight class="normal">].as_string(),</highlight></codeline>
<codeline lineno="2510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_global_state3()[</highlight><highlight class="stringliteral">&quot;last_vpay_state_update&quot;</highlight><highlight class="normal">].as_string()<sp/>);</highlight></codeline>
<codeline lineno="2511"><highlight class="normal"></highlight></codeline>
<codeline lineno="2512"><highlight class="normal">}<sp/><ref refid="eosio_8system__tests_8cpp_1a057cb719bfa291fae56dc6ba5fa7a8d1" kindref="member">FC_LOG_AND_RETHROW</ref>()</highlight></codeline>
<codeline lineno="2513"><highlight class="normal"></highlight></codeline>
<codeline lineno="2514"><highlight class="normal"><ref refid="eosio_8system__tests_8cpp_1a8a1841911da283583ec346df954d73a1" kindref="member">BOOST_FIXTURE_TEST_CASE</ref>(votepay_share_update_order,<sp/><ref refid="classeosio__system_1_1eosio__system__tester" kindref="compound">eosio_system_tester</ref>,<sp/>*<sp/>boost::unit_test::tolerance(1e-10))<sp/><ref refid="eosio_8system__tests_8cpp_1ae89aac94d502abdd3c8d055174c221fc" kindref="member">try</ref><sp/>{</highlight></codeline>
<codeline lineno="2515"><highlight class="normal"></highlight></codeline>
<codeline lineno="2516"><highlight class="normal"><sp/><sp/><sp/>cross_15_percent_threshold();</highlight></codeline>
<codeline lineno="2517"><highlight class="normal"></highlight></codeline>
<codeline lineno="2518"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>net<sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;80.0000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2519"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>cpu<sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;80.0000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2520"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;account_name&gt;<sp/><ref refid="structaccounts" kindref="compound">accounts</ref><sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;aliceaccount&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;bobbyaccount&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;carolaccount&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;emilyaccount&quot;</highlight><highlight class="normal">_n<sp/>};</highlight></codeline>
<codeline lineno="2521"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>a:<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a791a80df1bef25c60fe34353c84ed5bc" kindref="member">create_account_with_resources</ref>(<sp/>a,<sp/>config::system_account_name,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1.0000&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>net,<sp/>cpu<sp/>);</highlight></codeline>
<codeline lineno="2523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a792dc87878d55cfa11f862e9e6d5cc05" kindref="member">transfer</ref>(<sp/>config::system_account_name,<sp/>a,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1000.0000&quot;</highlight><highlight class="normal">),<sp/>config::system_account_name<sp/>);</highlight></codeline>
<codeline lineno="2524"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2525"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>=<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>[0];</highlight></codeline>
<codeline lineno="2526"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref><sp/><sp/><sp/>=<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>[1];</highlight></codeline>
<codeline lineno="2527"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref><sp/>=<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>[2];</highlight></codeline>
<codeline lineno="2528"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>emily<sp/>=<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>[3];</highlight></codeline>
<codeline lineno="2529"><highlight class="normal"></highlight></codeline>
<codeline lineno="2530"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>regproducer(<sp/><ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2531"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>regproducer(<sp/>emily<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2532"><highlight class="normal"></highlight></codeline>
<codeline lineno="2533"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::hours(24)<sp/>);</highlight></codeline>
<codeline lineno="2534"><highlight class="normal"></highlight></codeline>
<codeline lineno="2535"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>stake(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;100.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;100.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2536"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>stake(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/><sp/><sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;100.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;100.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2537"><highlight class="normal"></highlight></codeline>
<codeline lineno="2538"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>vote(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/>{<sp/><ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref>,<sp/>emily<sp/>}<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2539"><highlight class="normal"></highlight></codeline>
<codeline lineno="2540"><highlight class="normal"></highlight></codeline>
<codeline lineno="2541"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(<sp/><ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref>,<sp/></highlight><highlight class="stringliteral">&quot;claimrewards&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()(</highlight><highlight class="stringliteral">&quot;owner&quot;</highlight><highlight class="normal">,<sp/><ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2542"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::hours(1)<sp/>);</highlight></codeline>
<codeline lineno="2543"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(<sp/>emily,<sp/></highlight><highlight class="stringliteral">&quot;claimrewards&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()(</highlight><highlight class="stringliteral">&quot;owner&quot;</highlight><highlight class="normal">,<sp/>emily)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2544"><highlight class="normal"></highlight></codeline>
<codeline lineno="2545"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::hours(3<sp/>*<sp/>24<sp/>+<sp/>1)<sp/>);</highlight></codeline>
<codeline lineno="2546"><highlight class="normal"></highlight></codeline>
<codeline lineno="2547"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>signed_transaction<sp/><ref refid="eosio_8msig__tests_8cpp_1a6935d36f50fec547a188728bc39593b6" kindref="member">trx</ref>;</highlight></codeline>
<codeline lineno="2549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>set_transaction_headers(<ref refid="eosio_8msig__tests_8cpp_1a6935d36f50fec547a188728bc39593b6" kindref="member">trx</ref>);</highlight></codeline>
<codeline lineno="2550"><highlight class="normal"></highlight></codeline>
<codeline lineno="2551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a6935d36f50fec547a188728bc39593b6" kindref="member">trx</ref>.actions.emplace_back(<sp/>get_action(<sp/>config::system_account_name,<sp/></highlight><highlight class="stringliteral">&quot;claimrewards&quot;</highlight><highlight class="normal">_n,<sp/>{<sp/>{<ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref>,<sp/>config::active_name}<sp/>},</highlight></codeline>
<codeline lineno="2552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()(</highlight><highlight class="stringliteral">&quot;owner&quot;</highlight><highlight class="normal">,<sp/><ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2553"><highlight class="normal"></highlight></codeline>
<codeline lineno="2554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;account_name&gt;<sp/>prods<sp/>=<sp/>{<sp/><ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref>,<sp/>emily<sp/>};</highlight></codeline>
<codeline lineno="2555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a6935d36f50fec547a188728bc39593b6" kindref="member">trx</ref>.actions.emplace_back(<sp/>get_action(<sp/>config::system_account_name,<sp/></highlight><highlight class="stringliteral">&quot;voteproducer&quot;</highlight><highlight class="normal">_n,<sp/>{<sp/>{<ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/>config::active_name}<sp/>},</highlight></codeline>
<codeline lineno="2556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()(</highlight><highlight class="stringliteral">&quot;voter&quot;</highlight><highlight class="normal">,<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>)(</highlight><highlight class="stringliteral">&quot;proxy&quot;</highlight><highlight class="normal">,<sp/>name(0))(</highlight><highlight class="stringliteral">&quot;producers&quot;</highlight><highlight class="normal">,<sp/>prods)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2557"><highlight class="normal"></highlight></codeline>
<codeline lineno="2558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a6935d36f50fec547a188728bc39593b6" kindref="member">trx</ref>.actions.emplace_back(<sp/>get_action(<sp/>config::system_account_name,<sp/></highlight><highlight class="stringliteral">&quot;claimrewards&quot;</highlight><highlight class="normal">_n,<sp/>{<sp/>{emily,<sp/>config::active_name}<sp/>},</highlight></codeline>
<codeline lineno="2559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()(</highlight><highlight class="stringliteral">&quot;owner&quot;</highlight><highlight class="normal">,<sp/>emily)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2560"><highlight class="normal"></highlight></codeline>
<codeline lineno="2561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a6935d36f50fec547a188728bc39593b6" kindref="member">trx</ref>.sign(<sp/>get_private_key(<sp/><ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref>,<sp/></highlight><highlight class="stringliteral">&quot;active&quot;</highlight><highlight class="normal"><sp/>),<sp/>control-&gt;get_chain_id()<sp/>);</highlight></codeline>
<codeline lineno="2562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a6935d36f50fec547a188728bc39593b6" kindref="member">trx</ref>.sign(<sp/>get_private_key(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/></highlight><highlight class="stringliteral">&quot;active&quot;</highlight><highlight class="normal"><sp/>),<sp/>control-&gt;get_chain_id()<sp/>);</highlight></codeline>
<codeline lineno="2563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a6935d36f50fec547a188728bc39593b6" kindref="member">trx</ref>.sign(<sp/>get_private_key(<sp/>emily,<sp/></highlight><highlight class="stringliteral">&quot;active&quot;</highlight><highlight class="normal"><sp/>),<sp/>control-&gt;get_chain_id()<sp/>);</highlight></codeline>
<codeline lineno="2564"><highlight class="normal"></highlight></codeline>
<codeline lineno="2565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>push_transaction(<sp/><ref refid="eosio_8msig__tests_8cpp_1a6935d36f50fec547a188728bc39593b6" kindref="member">trx</ref><sp/>);</highlight></codeline>
<codeline lineno="2566"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2567"><highlight class="normal"></highlight></codeline>
<codeline lineno="2568"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>carol_info<sp/><sp/>=<sp/>get_producer_info(<ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref>);</highlight></codeline>
<codeline lineno="2569"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>carol_info2<sp/>=<sp/>get_producer_info2(<ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref>);</highlight></codeline>
<codeline lineno="2570"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>emily_info<sp/><sp/>=<sp/>get_producer_info(emily);</highlight></codeline>
<codeline lineno="2571"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>emily_info2<sp/>=<sp/>get_producer_info2(emily);</highlight></codeline>
<codeline lineno="2572"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>gs3<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>get_global_state3();</highlight></codeline>
<codeline lineno="2573"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>carol_info2[</highlight><highlight class="stringliteral">&quot;last_votepay_share_update&quot;</highlight><highlight class="normal">].as_string(),<sp/>gs3[</highlight><highlight class="stringliteral">&quot;last_vpay_state_update&quot;</highlight><highlight class="normal">].as_string()<sp/>);</highlight></codeline>
<codeline lineno="2574"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>emily_info2[</highlight><highlight class="stringliteral">&quot;last_votepay_share_update&quot;</highlight><highlight class="normal">].as_string(),<sp/>gs3[</highlight><highlight class="stringliteral">&quot;last_vpay_state_update&quot;</highlight><highlight class="normal">].as_string()<sp/>);</highlight></codeline>
<codeline lineno="2575"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>0<sp/><sp/>==<sp/>carol_info2[</highlight><highlight class="stringliteral">&quot;votepay_share&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="2576"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>0<sp/><sp/>==<sp/>emily_info2[</highlight><highlight class="stringliteral">&quot;votepay_share&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="2577"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1ae00c608b8a40d03b8b8dd2daac50185b" kindref="member">BOOST_REQUIRE</ref>(<sp/>0<sp/>&lt;<sp/>carol_info[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="2578"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>carol_info[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as_double()<sp/>==<sp/>emily_info[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="2579"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>gs3[</highlight><highlight class="stringliteral">&quot;total_vpay_share_change_rate&quot;</highlight><highlight class="normal">].as_double()<sp/>==<sp/>2<sp/>*<sp/>carol_info[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="2580"><highlight class="normal"></highlight></codeline>
<codeline lineno="2581"><highlight class="normal">}<sp/><ref refid="eosio_8system__tests_8cpp_1a057cb719bfa291fae56dc6ba5fa7a8d1" kindref="member">FC_LOG_AND_RETHROW</ref>()</highlight></codeline>
<codeline lineno="2582"><highlight class="normal"></highlight></codeline>
<codeline lineno="2583"><highlight class="normal"><ref refid="eosio_8system__tests_8cpp_1a8a1841911da283583ec346df954d73a1" kindref="member">BOOST_FIXTURE_TEST_CASE</ref>(votepay_transition,<sp/><ref refid="classeosio__system_1_1eosio__system__tester" kindref="compound">eosio_system_tester</ref>,<sp/>*<sp/>boost::unit_test::tolerance(1e-10))<sp/><ref refid="eosio_8system__tests_8cpp_1ae89aac94d502abdd3c8d055174c221fc" kindref="member">try</ref><sp/>{</highlight></codeline>
<codeline lineno="2584"><highlight class="normal"></highlight></codeline>
<codeline lineno="2585"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>net<sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;80.0000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2586"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>cpu<sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;80.0000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2587"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;account_name&gt;<sp/>voters<sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;producvotera&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;producvoterb&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;producvoterc&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;producvoterd&quot;</highlight><highlight class="normal">_n<sp/>};</highlight></codeline>
<codeline lineno="2588"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>v:<sp/>voters)<sp/>{</highlight></codeline>
<codeline lineno="2589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a791a80df1bef25c60fe34353c84ed5bc" kindref="member">create_account_with_resources</ref>(<sp/>v,<sp/>config::system_account_name,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1.0000&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>net,<sp/>cpu<sp/>);</highlight></codeline>
<codeline lineno="2590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a792dc87878d55cfa11f862e9e6d5cc05" kindref="member">transfer</ref>(<sp/>config::system_account_name,<sp/>v,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;100000000.0000&quot;</highlight><highlight class="normal">),<sp/>config::system_account_name<sp/>);</highlight></codeline>
<codeline lineno="2591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(success(),<sp/>stake(v,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;30000000.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;30000000.0000&quot;</highlight><highlight class="normal">))<sp/>);</highlight></codeline>
<codeline lineno="2592"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2593"><highlight class="normal"></highlight></codeline>
<codeline lineno="2594"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>accounts<sp/>{defproducera,<sp/>defproducerb,<sp/>...,<sp/>defproducerz}<sp/>and<sp/>register<sp/>as<sp/>producers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2595"><highlight class="normal"><sp/><sp/><sp/>std::vector&lt;account_name&gt;<sp/>producer_names;</highlight></codeline>
<codeline lineno="2596"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>producer_names.reserve(</highlight><highlight class="charliteral">&apos;z&apos;</highlight><highlight class="normal"><sp/>-<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal"><sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="2598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>root(</highlight><highlight class="stringliteral">&quot;defproducer&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c<sp/>=<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">;<sp/>c<sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;d&apos;</highlight><highlight class="normal">;<sp/>++c<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>producer_names.emplace_back(root<sp/>+<sp/>std::string(1,<sp/>c));</highlight></codeline>
<codeline lineno="2602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setup_producer_accounts(producer_names);</highlight></codeline>
<codeline lineno="2605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>p:<sp/>producer_names)<sp/>{</highlight></codeline>
<codeline lineno="2606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>regproducer(p)<sp/>);</highlight></codeline>
<codeline lineno="2607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(0<sp/>==<sp/>get_producer_info(p)[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as_double());</highlight></codeline>
<codeline lineno="2608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(0<sp/>==<sp/>get_producer_info2(p)[</highlight><highlight class="stringliteral">&quot;votepay_share&quot;</highlight><highlight class="normal">].as_double());</highlight></codeline>
<codeline lineno="2609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1ae00c608b8a40d03b8b8dd2daac50185b" kindref="member">BOOST_REQUIRE</ref>(0<sp/>&lt;<sp/>microseconds_since_epoch_of_iso_string(<sp/>get_producer_info2(p)[</highlight><highlight class="stringliteral">&quot;last_votepay_share_update&quot;</highlight><highlight class="normal">]<sp/>));</highlight></codeline>
<codeline lineno="2610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2611"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2612"><highlight class="normal"></highlight></codeline>
<codeline lineno="2613"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>vote(</highlight><highlight class="stringliteral">&quot;producvotera&quot;</highlight><highlight class="normal">_n,<sp/>vector&lt;account_name&gt;(producer_names.begin(),<sp/>producer_names.end()))<sp/>);</highlight></codeline>
<codeline lineno="2614"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">*<sp/>tbl<sp/>=<sp/>control-&gt;db().find&lt;eosio::chain::table_id_object,<sp/>eosio::chain::by_code_scope_table&gt;(</highlight></codeline>
<codeline lineno="2615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::make_tuple(<sp/>config::system_account_name,</highlight></codeline>
<codeline lineno="2616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config::system_account_name,</highlight></codeline>
<codeline lineno="2617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;producers2&quot;</highlight><highlight class="normal">_n<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2618"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1ae00c608b8a40d03b8b8dd2daac50185b" kindref="member">BOOST_REQUIRE</ref>(<sp/>tbl<sp/>);</highlight></codeline>
<codeline lineno="2619"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1ae00c608b8a40d03b8b8dd2daac50185b" kindref="member">BOOST_REQUIRE</ref>(<sp/>0<sp/>&lt;<sp/>microseconds_since_epoch_of_iso_string(<sp/>get_producer_info2(</highlight><highlight class="stringliteral">&quot;defproducera&quot;</highlight><highlight class="normal">)[</highlight><highlight class="stringliteral">&quot;last_votepay_share_update&quot;</highlight><highlight class="normal">]<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2620"><highlight class="normal"></highlight></codeline>
<codeline lineno="2621"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>const_cast<sp/>hack<sp/>for<sp/>now</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2622"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">chainbase::database&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(control-&gt;db()).remove(<sp/>*tbl<sp/>);</highlight></codeline>
<codeline lineno="2623"><highlight class="normal"><sp/><sp/><sp/>tbl<sp/>=<sp/>control-&gt;db().find&lt;eosio::chain::table_id_object,<sp/>eosio::chain::by_code_scope_table&gt;(</highlight></codeline>
<codeline lineno="2624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::make_tuple(<sp/>config::system_account_name,</highlight></codeline>
<codeline lineno="2625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config::system_account_name,</highlight></codeline>
<codeline lineno="2626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;producers2&quot;</highlight><highlight class="normal">_n<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2627"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1ae00c608b8a40d03b8b8dd2daac50185b" kindref="member">BOOST_REQUIRE</ref>(<sp/>!tbl<sp/>);</highlight></codeline>
<codeline lineno="2628"><highlight class="normal"></highlight></codeline>
<codeline lineno="2629"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>vote(</highlight><highlight class="stringliteral">&quot;producvoterb&quot;</highlight><highlight class="normal">_n,<sp/>vector&lt;account_name&gt;(producer_names.begin(),<sp/>producer_names.end()))<sp/>);</highlight></codeline>
<codeline lineno="2630"><highlight class="normal"><sp/><sp/><sp/>tbl<sp/>=<sp/>control-&gt;db().find&lt;eosio::chain::table_id_object,<sp/>eosio::chain::by_code_scope_table&gt;(</highlight></codeline>
<codeline lineno="2631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::make_tuple(<sp/>config::system_account_name,</highlight></codeline>
<codeline lineno="2632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config::system_account_name,</highlight></codeline>
<codeline lineno="2633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;producers2&quot;</highlight><highlight class="normal">_n<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2634"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1ae00c608b8a40d03b8b8dd2daac50185b" kindref="member">BOOST_REQUIRE</ref>(<sp/>!tbl<sp/>);</highlight></codeline>
<codeline lineno="2635"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>regproducer(</highlight><highlight class="stringliteral">&quot;defproducera&quot;</highlight><highlight class="normal">_n)<sp/>);</highlight></codeline>
<codeline lineno="2636"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1ae00c608b8a40d03b8b8dd2daac50185b" kindref="member">BOOST_REQUIRE</ref>(<sp/>microseconds_since_epoch_of_iso_string(<sp/>get_producer_info(</highlight><highlight class="stringliteral">&quot;defproducera&quot;</highlight><highlight class="normal">_n)[</highlight><highlight class="stringliteral">&quot;last_claim_time&quot;</highlight><highlight class="normal">]<sp/>)<sp/>&lt;<sp/>microseconds_since_epoch_of_iso_string(<sp/>get_producer_info2(</highlight><highlight class="stringliteral">&quot;defproducera&quot;</highlight><highlight class="normal">_n)[</highlight><highlight class="stringliteral">&quot;last_votepay_share_update&quot;</highlight><highlight class="normal">]<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2637"><highlight class="normal"></highlight></codeline>
<codeline lineno="2638"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a791a80df1bef25c60fe34353c84ed5bc" kindref="member">create_account_with_resources</ref>(<sp/></highlight><highlight class="stringliteral">&quot;defproducer1&quot;</highlight><highlight class="normal">_n,<sp/>config::system_account_name,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1.0000&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>net,<sp/>cpu<sp/>);</highlight></codeline>
<codeline lineno="2639"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>regproducer(</highlight><highlight class="stringliteral">&quot;defproducer1&quot;</highlight><highlight class="normal">_n)<sp/>);</highlight></codeline>
<codeline lineno="2640"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1ae00c608b8a40d03b8b8dd2daac50185b" kindref="member">BOOST_REQUIRE</ref>(<sp/>0<sp/>&lt;<sp/>microseconds_since_epoch_of_iso_string(<sp/>get_producer_info(</highlight><highlight class="stringliteral">&quot;defproducer1&quot;</highlight><highlight class="normal">_n)[</highlight><highlight class="stringliteral">&quot;last_claim_time&quot;</highlight><highlight class="normal">]<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2641"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>get_producer_info(</highlight><highlight class="stringliteral">&quot;defproducer1&quot;</highlight><highlight class="normal">_n)[</highlight><highlight class="stringliteral">&quot;last_claim_time&quot;</highlight><highlight class="normal">].as_string(),</highlight></codeline>
<codeline lineno="2642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_producer_info2(</highlight><highlight class="stringliteral">&quot;defproducer1&quot;</highlight><highlight class="normal">_n)[</highlight><highlight class="stringliteral">&quot;last_votepay_share_update&quot;</highlight><highlight class="normal">].as_string()<sp/>);</highlight></codeline>
<codeline lineno="2643"><highlight class="normal"></highlight></codeline>
<codeline lineno="2644"><highlight class="normal">}<sp/><ref refid="eosio_8system__tests_8cpp_1a057cb719bfa291fae56dc6ba5fa7a8d1" kindref="member">FC_LOG_AND_RETHROW</ref>()</highlight></codeline>
<codeline lineno="2645"><highlight class="normal"></highlight></codeline>
<codeline lineno="2646"><highlight class="normal"></highlight></codeline>
<codeline lineno="2647"><highlight class="normal"><ref refid="eosio_8powerup__tests_8cpp_1ac6a0c40e40fa78dc772714dae8b97c2e" kindref="member">BOOST_AUTO_TEST_CASE</ref>(votepay_transition2,<sp/>*<sp/>boost::unit_test::tolerance(1e-10))<sp/><ref refid="eosio_8system__tests_8cpp_1ae89aac94d502abdd3c8d055174c221fc" kindref="member">try</ref><sp/>{</highlight></codeline>
<codeline lineno="2648"><highlight class="normal"><sp/><sp/><sp/><ref refid="classeosio__system_1_1eosio__system__tester" kindref="compound">eosio_system_tester</ref><sp/>t(eosio_system_tester::setup_level::minimal);</highlight></codeline>
<codeline lineno="2649"><highlight class="normal"></highlight></codeline>
<codeline lineno="2650"><highlight class="normal"><sp/><sp/><sp/>std::string<sp/>old_contract_core_symbol_name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;SYS&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>Set<sp/>to<sp/>core<sp/>symbol<sp/>used<sp/>in<sp/>contracts::util::system_wasm_old()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2651"><highlight class="normal"><sp/><sp/><sp/>symbol<sp/>old_contract_core_symbol{::eosio::chain::string_to_symbol_c(<sp/>4,<sp/>old_contract_core_symbol_name.c_str()<sp/>)};</highlight></codeline>
<codeline lineno="2652"><highlight class="normal"></highlight></codeline>
<codeline lineno="2653"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>old_core_from_string<sp/>=<sp/>[&amp;](<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>s<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>eosio::chain::asset::from_string(s<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>old_contract_core_symbol_name);</highlight></codeline>
<codeline lineno="2655"><highlight class="normal"><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="2656"><highlight class="normal"></highlight></codeline>
<codeline lineno="2657"><highlight class="normal"><sp/><sp/><sp/>t.create_core_token(<sp/>old_contract_core_symbol<sp/>);</highlight></codeline>
<codeline lineno="2658"><highlight class="normal"><sp/><sp/><sp/>t.set_code(<sp/>config::system_account_name,<sp/>contracts::util::system_wasm_old()<sp/>);</highlight></codeline>
<codeline lineno="2659"><highlight class="normal"><sp/><sp/><sp/>t.set_abi(<sp/><sp/>config::system_account_name,<sp/>contracts::util::system_abi_old().data()<sp/>);</highlight></codeline>
<codeline lineno="2660"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>accnt<sp/>=<sp/>t.control-&gt;db().get&lt;account_object,by_name&gt;(<sp/>config::system_account_name<sp/>);</highlight></codeline>
<codeline lineno="2662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>abi_def<sp/>abi;</highlight></codeline>
<codeline lineno="2663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(abi_serializer::to_abi(accnt.abi,<sp/>abi),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t.abi_ser.set_abi(abi,<sp/>abi_serializer::create_yield_function(eosio_system_tester::abi_serializer_max_time));</highlight></codeline>
<codeline lineno="2665"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2666"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>net<sp/>=<sp/>old_core_from_string(</highlight><highlight class="stringliteral">&quot;80.0000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2667"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>cpu<sp/>=<sp/>old_core_from_string(</highlight><highlight class="stringliteral">&quot;80.0000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2668"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;account_name&gt;<sp/>voters<sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;producvotera&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;producvoterb&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;producvoterc&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;producvoterd&quot;</highlight><highlight class="normal">_n<sp/>};</highlight></codeline>
<codeline lineno="2669"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>v:<sp/>voters)<sp/>{</highlight></codeline>
<codeline lineno="2670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t.create_account_with_resources(<sp/>v,<sp/>config::system_account_name,<sp/>old_core_from_string(</highlight><highlight class="stringliteral">&quot;1.0000&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>net,<sp/>cpu<sp/>);</highlight></codeline>
<codeline lineno="2671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t.transfer(<sp/>config::system_account_name,<sp/>v,<sp/>old_core_from_string(</highlight><highlight class="stringliteral">&quot;100000000.0000&quot;</highlight><highlight class="normal">),<sp/>config::system_account_name<sp/>);</highlight></codeline>
<codeline lineno="2672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(t.success(),<sp/>t.stake(v,<sp/>old_core_from_string(</highlight><highlight class="stringliteral">&quot;30000000.0000&quot;</highlight><highlight class="normal">),<sp/>old_core_from_string(</highlight><highlight class="stringliteral">&quot;30000000.0000&quot;</highlight><highlight class="normal">))<sp/>);</highlight></codeline>
<codeline lineno="2673"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2674"><highlight class="normal"></highlight></codeline>
<codeline lineno="2675"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>accounts<sp/>{defproducera,<sp/>defproducerb,<sp/>...,<sp/>defproducerz}<sp/>and<sp/>register<sp/>as<sp/>producers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2676"><highlight class="normal"><sp/><sp/><sp/>std::vector&lt;account_name&gt;<sp/>producer_names;</highlight></codeline>
<codeline lineno="2677"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>producer_names.reserve(</highlight><highlight class="charliteral">&apos;z&apos;</highlight><highlight class="normal"><sp/>-<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal"><sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="2679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>root(</highlight><highlight class="stringliteral">&quot;defproducer&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c<sp/>=<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">;<sp/>c<sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;d&apos;</highlight><highlight class="normal">;<sp/>++c<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>producer_names.emplace_back(root<sp/>+<sp/>std::string(1,<sp/>c));</highlight></codeline>
<codeline lineno="2683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>t.setup_producer_accounts(<sp/>producer_names,<sp/>old_core_from_string(</highlight><highlight class="stringliteral">&quot;1.0000&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="2686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>old_core_from_string(</highlight><highlight class="stringliteral">&quot;80.0000&quot;</highlight><highlight class="normal">),<sp/>old_core_from_string(</highlight><highlight class="stringliteral">&quot;80.0000&quot;</highlight><highlight class="normal">)<sp/>);</highlight></codeline>
<codeline lineno="2687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>p:<sp/>producer_names)<sp/>{</highlight></codeline>
<codeline lineno="2688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>t.success(),<sp/>t.regproducer(p)<sp/>);</highlight></codeline>
<codeline lineno="2689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(0<sp/>==<sp/>t.get_producer_info(p)[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as_double());</highlight></codeline>
<codeline lineno="2690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2691"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2692"><highlight class="normal"></highlight></codeline>
<codeline lineno="2693"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>t.success(),<sp/>t.vote(</highlight><highlight class="stringliteral">&quot;producvotera&quot;</highlight><highlight class="normal">_n,<sp/>vector&lt;account_name&gt;(producer_names.begin(),<sp/>producer_names.end()))<sp/>);</highlight></codeline>
<codeline lineno="2694"><highlight class="normal"><sp/><sp/><sp/>t.produce_block(<sp/>fc::hours(20)<sp/>);</highlight></codeline>
<codeline lineno="2695"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>t.success(),<sp/>t.vote(</highlight><highlight class="stringliteral">&quot;producvoterb&quot;</highlight><highlight class="normal">_n,<sp/>vector&lt;account_name&gt;(producer_names.begin(),<sp/>producer_names.end()))<sp/>);</highlight></codeline>
<codeline lineno="2696"><highlight class="normal"><sp/><sp/><sp/>t.produce_block(<sp/>fc::hours(30)<sp/>);</highlight></codeline>
<codeline lineno="2697"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>t.success(),<sp/>t.vote(</highlight><highlight class="stringliteral">&quot;producvoterc&quot;</highlight><highlight class="normal">_n,<sp/>vector&lt;account_name&gt;(producer_names.begin(),<sp/>producer_names.end()))<sp/>);</highlight></codeline>
<codeline lineno="2698"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>t.success(),<sp/>t.push_action(producer_names[0],<sp/></highlight><highlight class="stringliteral">&quot;claimrewards&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()(</highlight><highlight class="stringliteral">&quot;owner&quot;</highlight><highlight class="normal">,<sp/>producer_names[0]))<sp/>);</highlight></codeline>
<codeline lineno="2699"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>t.success(),<sp/>t.push_action(producer_names[1],<sp/></highlight><highlight class="stringliteral">&quot;claimrewards&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()(</highlight><highlight class="stringliteral">&quot;owner&quot;</highlight><highlight class="normal">,<sp/>producer_names[1]))<sp/>);</highlight></codeline>
<codeline lineno="2700"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">*<sp/>tbl<sp/>=<sp/>t.control-&gt;db().find&lt;eosio::chain::table_id_object,<sp/>eosio::chain::by_code_scope_table&gt;(</highlight></codeline>
<codeline lineno="2701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::make_tuple(<sp/>config::system_account_name,</highlight></codeline>
<codeline lineno="2702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config::system_account_name,</highlight></codeline>
<codeline lineno="2703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;producers2&quot;</highlight><highlight class="normal">_n<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2704"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1ae00c608b8a40d03b8b8dd2daac50185b" kindref="member">BOOST_REQUIRE</ref>(<sp/>!tbl<sp/>);</highlight></codeline>
<codeline lineno="2705"><highlight class="normal"></highlight></codeline>
<codeline lineno="2706"><highlight class="normal"><sp/><sp/><sp/>t.produce_block(<sp/>fc::hours(2*24)<sp/>);</highlight></codeline>
<codeline lineno="2707"><highlight class="normal"></highlight></codeline>
<codeline lineno="2708"><highlight class="normal"><sp/><sp/><sp/>t.deploy_contract(<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2709"><highlight class="normal"></highlight></codeline>
<codeline lineno="2710"><highlight class="normal"><sp/><sp/><sp/>t.produce_blocks(2);</highlight></codeline>
<codeline lineno="2711"><highlight class="normal"><sp/><sp/><sp/>t.produce_block(<sp/>fc::hours(24<sp/>+<sp/>1)<sp/>);</highlight></codeline>
<codeline lineno="2712"><highlight class="normal"></highlight></codeline>
<codeline lineno="2713"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>t.success(),<sp/>t.push_action(producer_names[0],<sp/></highlight><highlight class="stringliteral">&quot;claimrewards&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()(</highlight><highlight class="stringliteral">&quot;owner&quot;</highlight><highlight class="normal">,<sp/>producer_names[0]))<sp/>);</highlight></codeline>
<codeline lineno="2714"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>0<sp/>==<sp/>t.get_global_state2()[</highlight><highlight class="stringliteral">&quot;total_producer_votepay_share&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="2715"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>t.get_producer_info(producer_names[0])[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as_double()<sp/>==<sp/>t.get_global_state3()[</highlight><highlight class="stringliteral">&quot;total_vpay_share_change_rate&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="2716"><highlight class="normal"></highlight></codeline>
<codeline lineno="2717"><highlight class="normal"><sp/><sp/><sp/>t.produce_block(<sp/>fc::hours(5)<sp/>);</highlight></codeline>
<codeline lineno="2718"><highlight class="normal"></highlight></codeline>
<codeline lineno="2719"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>t.success(),<sp/>t.regproducer(producer_names[1])<sp/>);</highlight></codeline>
<codeline lineno="2720"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>t.get_producer_info(producer_names[0])[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as_double()<sp/>+<sp/>t.get_producer_info(producer_names[1])[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as_double()<sp/>==</highlight></codeline>
<codeline lineno="2721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t.get_global_state3()[</highlight><highlight class="stringliteral">&quot;total_vpay_share_change_rate&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="2722"><highlight class="normal"></highlight></codeline>
<codeline lineno="2723"><highlight class="normal">}<sp/><ref refid="eosio_8system__tests_8cpp_1a057cb719bfa291fae56dc6ba5fa7a8d1" kindref="member">FC_LOG_AND_RETHROW</ref>()</highlight></codeline>
<codeline lineno="2724"><highlight class="normal"></highlight></codeline>
<codeline lineno="2725"><highlight class="normal"></highlight></codeline>
<codeline lineno="2726"><highlight class="normal"><ref refid="eosio_8system__tests_8cpp_1a8a1841911da283583ec346df954d73a1" kindref="member">BOOST_FIXTURE_TEST_CASE</ref>(producers_upgrade_system_contract,<sp/><ref refid="classeosio__system_1_1eosio__system__tester" kindref="compound">eosio_system_tester</ref>)<sp/><ref refid="eosio_8system__tests_8cpp_1ae89aac94d502abdd3c8d055174c221fc" kindref="member">try</ref><sp/>{</highlight></codeline>
<codeline lineno="2727"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//install<sp/>multisig<sp/>contract</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2728"><highlight class="normal"><sp/><sp/><sp/>abi_serializer<sp/>msig_abi_ser<sp/>=<sp/>initialize_multisig();</highlight></codeline>
<codeline lineno="2729"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>producer_names<sp/>=<sp/>active_and_vote_producers();</highlight></codeline>
<codeline lineno="2730"><highlight class="normal"></highlight></codeline>
<codeline lineno="2731"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//change<sp/>`default_max_inline_action_size`<sp/>to<sp/>512<sp/>KB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2732"><highlight class="normal"><sp/><sp/><sp/>eosio::chain::chain_config<sp/><ref refid="eosio_8system__tests_8cpp_1a11bb71c4e33e79ea17fb60697717745f" kindref="member">params</ref><sp/>=<sp/>control-&gt;get_global_properties().configuration;</highlight></codeline>
<codeline lineno="2733"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a11bb71c4e33e79ea17fb60697717745f" kindref="member">params</ref>.max_inline_action_size<sp/>=<sp/>512<sp/>*<sp/>1024;</highlight></codeline>
<codeline lineno="2734"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">base_tester::push_action</ref>(<sp/>config::system_account_name,<sp/></highlight><highlight class="stringliteral">&quot;setparams&quot;</highlight><highlight class="normal">_n,<sp/>config::system_account_name,<sp/>mutable_variant_object()</highlight></codeline>
<codeline lineno="2735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;params&quot;</highlight><highlight class="normal">,<sp/><ref refid="eosio_8system__tests_8cpp_1a11bb71c4e33e79ea17fb60697717745f" kindref="member">params</ref>)<sp/>);</highlight></codeline>
<codeline lineno="2736"><highlight class="normal"></highlight></codeline>
<codeline lineno="2737"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aa1213f0f2c7a53ea968859f3cab582c3" kindref="member">produce_blocks</ref>();</highlight></codeline>
<codeline lineno="2738"><highlight class="normal"></highlight></codeline>
<codeline lineno="2739"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//helper<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2740"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>push_action_msig<sp/>=<sp/>[&amp;](<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>account_name&amp;<sp/>signer,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>action_name<sp/>&amp;name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>variant_object<sp/>&amp;data,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>auth<sp/>=<sp/>true<sp/>)<sp/>-&gt;<sp/>action_result<sp/>{</highlight></codeline>
<codeline lineno="2741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>action_type_name<sp/>=<sp/>msig_abi_ser.get_action_type(name);</highlight></codeline>
<codeline lineno="2742"><highlight class="normal"></highlight></codeline>
<codeline lineno="2743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>action<sp/><ref refid="eosio_8msig__tests_8cpp_1a7543cef806423d999bdf00434e158dcb" kindref="member">act</ref>;</highlight></codeline>
<codeline lineno="2744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a7543cef806423d999bdf00434e158dcb" kindref="member">act</ref>.account<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;eosio.msig&quot;</highlight><highlight class="normal">_n;</highlight></codeline>
<codeline lineno="2745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a7543cef806423d999bdf00434e158dcb" kindref="member">act</ref>.name<sp/>=<sp/>name;</highlight></codeline>
<codeline lineno="2746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a7543cef806423d999bdf00434e158dcb" kindref="member">act</ref>.data<sp/>=<sp/>msig_abi_ser.variant_to_binary(<sp/>action_type_name,<sp/>data,<sp/>abi_serializer::create_yield_function(abi_serializer_max_time)<sp/>);</highlight></codeline>
<codeline lineno="2747"><highlight class="normal"></highlight></codeline>
<codeline lineno="2748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">base_tester::push_action</ref>(<sp/>std::move(<ref refid="eosio_8msig__tests_8cpp_1a7543cef806423d999bdf00434e158dcb" kindref="member">act</ref>),<sp/>(auth<sp/>?<sp/>signer<sp/>:<sp/>signer<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">_n<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">_n).to_uint64_t()<sp/>);</highlight></codeline>
<codeline lineno="2749"><highlight class="normal"><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="2750"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>test<sp/>begins</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2751"><highlight class="normal"><sp/><sp/><sp/>vector&lt;permission_level&gt;<sp/>prod_perms;</highlight></codeline>
<codeline lineno="2752"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>x<sp/>:<sp/>producer_names<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>prod_perms.push_back(<sp/>{<sp/>name(x),<sp/>config::active_name<sp/>}<sp/>);</highlight></codeline>
<codeline lineno="2754"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2755"><highlight class="normal"></highlight></codeline>
<codeline lineno="2756"><highlight class="normal"><sp/><sp/><sp/>transaction<sp/><ref refid="eosio_8msig__tests_8cpp_1a6935d36f50fec547a188728bc39593b6" kindref="member">trx</ref>;</highlight></codeline>
<codeline lineno="2757"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//prepare<sp/>system<sp/>contract<sp/>with<sp/>different<sp/>hash<sp/>(contract<sp/>differs<sp/>in<sp/>one<sp/>byte)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>code<sp/>=<sp/>contracts::system_wasm();</highlight></codeline>
<codeline lineno="2760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>msg<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;producer<sp/>votes<sp/>must<sp/>be<sp/>unique<sp/>and<sp/>sorted&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>std::search(<sp/>code.begin(),<sp/>code.end(),<sp/>msg.begin(),<sp/>msg.end()<sp/>);</highlight></codeline>
<codeline lineno="2762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1ae00c608b8a40d03b8b8dd2daac50185b" kindref="member">BOOST_REQUIRE</ref>(<sp/>it<sp/>!=<sp/>code.end()<sp/>);</highlight></codeline>
<codeline lineno="2763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>msg[0]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;P&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::copy(<sp/>msg.begin(),<sp/>msg.end(),<sp/>it<sp/>);</highlight></codeline>
<codeline lineno="2765"><highlight class="normal"></highlight></codeline>
<codeline lineno="2766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fc::variant<sp/><ref refid="eosio_8msig__tests_8cpp_1aca4e76e2bcf756cc5322bfc942ffd88c" kindref="member">pretty_trx</ref><sp/>=<sp/>fc::mutable_variant_object()</highlight></codeline>
<codeline lineno="2767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;expiration&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;2020-01-01T00:30&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;ref_block_num&quot;</highlight><highlight class="normal">,<sp/>2)</highlight></codeline>
<codeline lineno="2769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;ref_block_prefix&quot;</highlight><highlight class="normal">,<sp/>3)</highlight></codeline>
<codeline lineno="2770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;net_usage_words&quot;</highlight><highlight class="normal">,<sp/>0)</highlight></codeline>
<codeline lineno="2771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;max_cpu_usage_ms&quot;</highlight><highlight class="normal">,<sp/>0)</highlight></codeline>
<codeline lineno="2772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;delay_sec&quot;</highlight><highlight class="normal">,<sp/>0)</highlight></codeline>
<codeline lineno="2773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;actions&quot;</highlight><highlight class="normal">,<sp/>fc::variants({</highlight></codeline>
<codeline lineno="2774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fc::mutable_variant_object()</highlight></codeline>
<codeline lineno="2775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;account&quot;</highlight><highlight class="normal">,<sp/>name(config::system_account_name))</highlight></codeline>
<codeline lineno="2776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;setcode&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;authorization&quot;</highlight><highlight class="normal">,<sp/>vector&lt;permission_level&gt;{<sp/>{<sp/>config::system_account_name,<sp/>config::active_name<sp/>}<sp/>})</highlight></codeline>
<codeline lineno="2778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;data&quot;</highlight><highlight class="normal">,<sp/>fc::mutable_variant_object()<sp/>(</highlight><highlight class="stringliteral">&quot;account&quot;</highlight><highlight class="normal">,<sp/>name(config::system_account_name))</highlight></codeline>
<codeline lineno="2779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;vmtype&quot;</highlight><highlight class="normal">,<sp/>0)</highlight></codeline>
<codeline lineno="2780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;vmversion&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;code&quot;</highlight><highlight class="normal">,<sp/><ref refid="eosio_8system__tests_8cpp_1aa09742f1818926903c43767d265ea664" kindref="member">bytes</ref>(<sp/>code.begin(),<sp/>code.end()<sp/>))</highlight></codeline>
<codeline lineno="2782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="2783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>})</highlight></codeline>
<codeline lineno="2784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="2785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>abi_serializer::from_variant(<ref refid="eosio_8msig__tests_8cpp_1aca4e76e2bcf756cc5322bfc942ffd88c" kindref="member">pretty_trx</ref>,<sp/><ref refid="eosio_8msig__tests_8cpp_1a6935d36f50fec547a188728bc39593b6" kindref="member">trx</ref>,<sp/>get_resolver(),<sp/>abi_serializer::create_yield_function(abi_serializer_max_time));</highlight></codeline>
<codeline lineno="2786"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2787"><highlight class="normal"></highlight></codeline>
<codeline lineno="2788"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(success(),<sp/>push_action_msig(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;propose&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()</highlight></codeline>
<codeline lineno="2789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;proposer&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;proposal_name&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;upgrade1&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;trx&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a6935d36f50fec547a188728bc39593b6" kindref="member">trx</ref>)</highlight></codeline>
<codeline lineno="2792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;requested&quot;</highlight><highlight class="normal">,<sp/>prod_perms)</highlight></codeline>
<codeline lineno="2793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="2794"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="2795"><highlight class="normal"></highlight></codeline>
<codeline lineno="2796"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>15<sp/>approvals</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2797"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>14;<sp/>++i<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(success(),<sp/>push_action_msig(<sp/>name(producer_names[i]),<sp/></highlight><highlight class="stringliteral">&quot;approve&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()</highlight></codeline>
<codeline lineno="2799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;proposer&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;proposal_name&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;upgrade1&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;level&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1adb5a7af6f4a8319d70ccf6363031f4dc" kindref="member">permission_level</ref>{<sp/>name(producer_names[i]),<sp/>config::active_name<sp/>})</highlight></codeline>
<codeline lineno="2802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="2803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="2804"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2805"><highlight class="normal"></highlight></codeline>
<codeline lineno="2806"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//should<sp/>fail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2807"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;transaction<sp/>authorization<sp/>failed&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="2808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>push_action_msig(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;exec&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()</highlight></codeline>
<codeline lineno="2809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;proposer&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;proposal_name&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;upgrade1&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;executer&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="2813"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="2814"><highlight class="normal"></highlight></codeline>
<codeline lineno="2815"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>one<sp/>more<sp/>approval</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2816"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(success(),<sp/>push_action_msig(<sp/>name(producer_names[14]),<sp/></highlight><highlight class="stringliteral">&quot;approve&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()</highlight></codeline>
<codeline lineno="2817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;proposer&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;proposal_name&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;upgrade1&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;level&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1adb5a7af6f4a8319d70ccf6363031f4dc" kindref="member">permission_level</ref>{<sp/>name(producer_names[14]),<sp/>config::active_name<sp/>})</highlight></codeline>
<codeline lineno="2820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="2821"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="2822"><highlight class="normal"></highlight></codeline>
<codeline lineno="2823"><highlight class="normal"><sp/><sp/><sp/>transaction_trace_ptr<sp/><ref refid="eosio_8msig__tests_8cpp_1a176b44375feec0c1f90f3bde5f1feb2e" kindref="member">trace</ref>;</highlight></codeline>
<codeline lineno="2824"><highlight class="normal"><sp/><sp/><sp/>control-&gt;applied_transaction.connect(</highlight></codeline>
<codeline lineno="2825"><highlight class="normal"><sp/><sp/><sp/>[&amp;](<sp/>std::tuple&lt;const<sp/>transaction_trace_ptr&amp;,<sp/>const<sp/>packed_transaction_ptr&amp;&gt;<sp/>p<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a176b44375feec0c1f90f3bde5f1feb2e" kindref="member">trace</ref><sp/>=<sp/>std::get&lt;0&gt;(p);</highlight></codeline>
<codeline lineno="2827"><highlight class="normal"><sp/><sp/><sp/>}<sp/>);</highlight></codeline>
<codeline lineno="2828"><highlight class="normal"></highlight></codeline>
<codeline lineno="2829"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(success(),<sp/>push_action_msig(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;exec&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()</highlight></codeline>
<codeline lineno="2830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;proposer&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;proposal_name&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;upgrade1&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;executer&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="2834"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="2835"><highlight class="normal"></highlight></codeline>
<codeline lineno="2836"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1ae00c608b8a40d03b8b8dd2daac50185b" kindref="member">BOOST_REQUIRE</ref>(<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">(<ref refid="eosio_8msig__tests_8cpp_1a176b44375feec0c1f90f3bde5f1feb2e" kindref="member">trace</ref>)<sp/>);</highlight></codeline>
<codeline lineno="2837"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>1,<sp/><ref refid="eosio_8msig__tests_8cpp_1a176b44375feec0c1f90f3bde5f1feb2e" kindref="member">trace</ref>-&gt;action_traces.size()<sp/>);</highlight></codeline>
<codeline lineno="2838"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>transaction_receipt::executed,<sp/><ref refid="eosio_8msig__tests_8cpp_1a176b44375feec0c1f90f3bde5f1feb2e" kindref="member">trace</ref>-&gt;receipt-&gt;status<sp/>);</highlight></codeline>
<codeline lineno="2839"><highlight class="normal"></highlight></codeline>
<codeline lineno="2840"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aa1213f0f2c7a53ea968859f3cab582c3" kindref="member">produce_blocks</ref>(<sp/>250<sp/>);</highlight></codeline>
<codeline lineno="2841"><highlight class="normal"></highlight></codeline>
<codeline lineno="2842"><highlight class="normal">}<sp/><ref refid="eosio_8system__tests_8cpp_1a057cb719bfa291fae56dc6ba5fa7a8d1" kindref="member">FC_LOG_AND_RETHROW</ref>()</highlight></codeline>
<codeline lineno="2843"><highlight class="normal"></highlight></codeline>
<codeline lineno="2844"><highlight class="normal"><ref refid="eosio_8system__tests_8cpp_1a8a1841911da283583ec346df954d73a1" kindref="member">BOOST_FIXTURE_TEST_CASE</ref>(producer_onblock_check,<sp/><ref refid="classeosio__system_1_1eosio__system__tester" kindref="compound">eosio_system_tester</ref>)<sp/><ref refid="eosio_8system__tests_8cpp_1ae89aac94d502abdd3c8d055174c221fc" kindref="member">try</ref><sp/>{</highlight></codeline>
<codeline lineno="2845"><highlight class="normal"></highlight></codeline>
<codeline lineno="2846"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>large_asset<sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;80.0000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2847"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a791a80df1bef25c60fe34353c84ed5bc" kindref="member">create_account_with_resources</ref>(<sp/></highlight><highlight class="stringliteral">&quot;producvotera&quot;</highlight><highlight class="normal">_n,<sp/>config::system_account_name,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1.0000&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>large_asset,<sp/>large_asset<sp/>);</highlight></codeline>
<codeline lineno="2848"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a791a80df1bef25c60fe34353c84ed5bc" kindref="member">create_account_with_resources</ref>(<sp/></highlight><highlight class="stringliteral">&quot;producvoterb&quot;</highlight><highlight class="normal">_n,<sp/>config::system_account_name,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1.0000&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>large_asset,<sp/>large_asset<sp/>);</highlight></codeline>
<codeline lineno="2849"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a791a80df1bef25c60fe34353c84ed5bc" kindref="member">create_account_with_resources</ref>(<sp/></highlight><highlight class="stringliteral">&quot;producvoterc&quot;</highlight><highlight class="normal">_n,<sp/>config::system_account_name,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1.0000&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>large_asset,<sp/>large_asset<sp/>);</highlight></codeline>
<codeline lineno="2850"><highlight class="normal"></highlight></codeline>
<codeline lineno="2851"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>accounts<sp/>{defproducera,<sp/>defproducerb,<sp/>...,<sp/>defproducerz}<sp/>and<sp/>register<sp/>as<sp/>producers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2852"><highlight class="normal"><sp/><sp/><sp/>std::vector&lt;account_name&gt;<sp/>producer_names;</highlight></codeline>
<codeline lineno="2853"><highlight class="normal"><sp/><sp/><sp/>producer_names.reserve(</highlight><highlight class="charliteral">&apos;z&apos;</highlight><highlight class="normal"><sp/>-<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal"><sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="2854"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>root(</highlight><highlight class="stringliteral">&quot;defproducer&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2855"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c<sp/>=<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">;<sp/>c<sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;z&apos;</highlight><highlight class="normal">;<sp/>++c<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>producer_names.emplace_back(root<sp/>+<sp/>std::string(1,<sp/>c));</highlight></codeline>
<codeline lineno="2857"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2858"><highlight class="normal"><sp/><sp/><sp/>setup_producer_accounts(producer_names);</highlight></codeline>
<codeline lineno="2859"><highlight class="normal"></highlight></codeline>
<codeline lineno="2860"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>a:producer_names)</highlight></codeline>
<codeline lineno="2861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>regproducer(a);</highlight></codeline>
<codeline lineno="2862"><highlight class="normal"></highlight></codeline>
<codeline lineno="2863"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(fc::hours(24));</highlight></codeline>
<codeline lineno="2864"><highlight class="normal"></highlight></codeline>
<codeline lineno="2865"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(0,<sp/>get_producer_info(<sp/>producer_names.front()<sp/>)[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;());</highlight></codeline>
<codeline lineno="2866"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(0,<sp/>get_producer_info(<sp/>producer_names.back()<sp/>)[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;());</highlight></codeline>
<codeline lineno="2867"><highlight class="normal"></highlight></codeline>
<codeline lineno="2868"><highlight class="normal"></highlight></codeline>
<codeline lineno="2869"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a792dc87878d55cfa11f862e9e6d5cc05" kindref="member">transfer</ref>(config::system_account_name,<sp/></highlight><highlight class="stringliteral">&quot;producvotera&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;200000000.0000&quot;</highlight><highlight class="normal">),<sp/>config::system_account_name);</highlight></codeline>
<codeline lineno="2870"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(success(),<sp/>stake(</highlight><highlight class="stringliteral">&quot;producvotera&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;70000000.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;70000000.0000&quot;</highlight><highlight class="normal">)<sp/>));</highlight></codeline>
<codeline lineno="2871"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(success(),<sp/>vote(<sp/></highlight><highlight class="stringliteral">&quot;producvotera&quot;</highlight><highlight class="normal">_n,<sp/>vector&lt;account_name&gt;(producer_names.begin(),<sp/>producer_names.begin()+10)));</highlight></codeline>
<codeline lineno="2872"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a4ee2d1bad8d3238fe63a78bff6943bcd" kindref="member">BOOST_CHECK_EQUAL</ref>(<sp/>wasm_assert_msg(<sp/></highlight><highlight class="stringliteral">&quot;cannot<sp/>undelegate<sp/>bandwidth<sp/>until<sp/>the<sp/>chain<sp/>is<sp/>activated<sp/>(at<sp/>least<sp/>15%<sp/>of<sp/>all<sp/>tokens<sp/>participate<sp/>in<sp/>voting)&quot;</highlight><highlight class="normal"><sp/>),</highlight></codeline>
<codeline lineno="2873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unstake(<sp/></highlight><highlight class="stringliteral">&quot;producvotera&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;50.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;50.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2874"><highlight class="normal"></highlight></codeline>
<codeline lineno="2875"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>give<sp/>a<sp/>chance<sp/>for<sp/>everyone<sp/>to<sp/>produce<sp/>blocks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2876"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aa1213f0f2c7a53ea968859f3cab582c3" kindref="member">produce_blocks</ref>(21<sp/>*<sp/>12);</highlight></codeline>
<codeline lineno="2878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>all_21_produced<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint32_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>21;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="2880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>==<sp/>get_producer_info(producer_names[i])[</highlight><highlight class="stringliteral">&quot;unpaid_blocks&quot;</highlight><highlight class="normal">].as&lt;uint32_t&gt;())<sp/>{</highlight></codeline>
<codeline lineno="2881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>all_21_produced=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>rest_didnt_produce<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint32_t<sp/>i<sp/>=<sp/>21;<sp/>i<sp/>&lt;<sp/>producer_names.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="2886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>&lt;<sp/>get_producer_info(producer_names[i])[</highlight><highlight class="stringliteral">&quot;unpaid_blocks&quot;</highlight><highlight class="normal">].as&lt;uint32_t&gt;())<sp/>{</highlight></codeline>
<codeline lineno="2887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rest_didnt_produce<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>all_21_produced);</highlight></codeline>
<codeline lineno="2891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>rest_didnt_produce);</highlight></codeline>
<codeline lineno="2892"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2893"><highlight class="normal"></highlight></codeline>
<codeline lineno="2894"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>claimrewards_activation_error_message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;cannot<sp/>claim<sp/>rewards<sp/>until<sp/>the<sp/>chain<sp/>is<sp/>activated<sp/>(at<sp/>least<sp/>15%<sp/>of<sp/>all<sp/>tokens<sp/>participate<sp/>in<sp/>voting)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a4ee2d1bad8d3238fe63a78bff6943bcd" kindref="member">BOOST_CHECK_EQUAL</ref>(0,<sp/>get_global_state()[</highlight><highlight class="stringliteral">&quot;total_unpaid_blocks&quot;</highlight><highlight class="normal">].as&lt;uint32_t&gt;());</highlight></codeline>
<codeline lineno="2897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(wasm_assert_msg(<sp/>claimrewards_activation_error_message<sp/>),</highlight></codeline>
<codeline lineno="2898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(producer_names.front(),<sp/></highlight><highlight class="stringliteral">&quot;claimrewards&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()(</highlight><highlight class="stringliteral">&quot;owner&quot;</highlight><highlight class="normal">,<sp/>producer_names.front())));</highlight></codeline>
<codeline lineno="2899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(0,<sp/>get_balance(producer_names.front()).get_amount());</highlight></codeline>
<codeline lineno="2900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(wasm_assert_msg(<sp/>claimrewards_activation_error_message<sp/>),</highlight></codeline>
<codeline lineno="2901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(producer_names.back(),<sp/></highlight><highlight class="stringliteral">&quot;claimrewards&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()(</highlight><highlight class="stringliteral">&quot;owner&quot;</highlight><highlight class="normal">,<sp/>producer_names.back())));</highlight></codeline>
<codeline lineno="2902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(0,<sp/>get_balance(producer_names.back()).get_amount());</highlight></codeline>
<codeline lineno="2903"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2904"><highlight class="normal"></highlight></codeline>
<codeline lineno="2905"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>stake<sp/>across<sp/>15%<sp/>boundary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2906"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a792dc87878d55cfa11f862e9e6d5cc05" kindref="member">transfer</ref>(config::system_account_name,<sp/></highlight><highlight class="stringliteral">&quot;producvoterb&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;100000000.0000&quot;</highlight><highlight class="normal">),<sp/>config::system_account_name);</highlight></codeline>
<codeline lineno="2907"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(success(),<sp/>stake(</highlight><highlight class="stringliteral">&quot;producvoterb&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;4000000.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;4000000.0000&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="2908"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a792dc87878d55cfa11f862e9e6d5cc05" kindref="member">transfer</ref>(config::system_account_name,<sp/></highlight><highlight class="stringliteral">&quot;producvoterc&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;100000000.0000&quot;</highlight><highlight class="normal">),<sp/>config::system_account_name);</highlight></codeline>
<codeline lineno="2909"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(success(),<sp/>stake(</highlight><highlight class="stringliteral">&quot;producvoterc&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;2000000.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;2000000.0000&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="2910"><highlight class="normal"></highlight></codeline>
<codeline lineno="2911"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(success(),<sp/>vote(<sp/></highlight><highlight class="stringliteral">&quot;producvoterb&quot;</highlight><highlight class="normal">_n,<sp/>vector&lt;account_name&gt;(producer_names.begin(),<sp/>producer_names.begin()+21)));</highlight></codeline>
<codeline lineno="2912"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(success(),<sp/>vote(<sp/></highlight><highlight class="stringliteral">&quot;producvoterc&quot;</highlight><highlight class="normal">_n,<sp/>vector&lt;account_name&gt;(producer_names.begin(),<sp/>producer_names.end())));</highlight></codeline>
<codeline lineno="2913"><highlight class="normal"></highlight></codeline>
<codeline lineno="2914"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>give<sp/>a<sp/>chance<sp/>for<sp/>everyone<sp/>to<sp/>produce<sp/>blocks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2915"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aa1213f0f2c7a53ea968859f3cab582c3" kindref="member">produce_blocks</ref>(21<sp/>*<sp/>12);</highlight></codeline>
<codeline lineno="2917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>all_21_produced<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint32_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>21;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="2919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>==<sp/>get_producer_info(producer_names[i])[</highlight><highlight class="stringliteral">&quot;unpaid_blocks&quot;</highlight><highlight class="normal">].as&lt;uint32_t&gt;())<sp/>{</highlight></codeline>
<codeline lineno="2920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>all_21_produced=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>rest_didnt_produce<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint32_t<sp/>i<sp/>=<sp/>21;<sp/>i<sp/>&lt;<sp/>producer_names.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="2925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>&lt;<sp/>get_producer_info(producer_names[i])[</highlight><highlight class="stringliteral">&quot;unpaid_blocks&quot;</highlight><highlight class="normal">].as&lt;uint32_t&gt;())<sp/>{</highlight></codeline>
<codeline lineno="2926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rest_didnt_produce<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>all_21_produced);</highlight></codeline>
<codeline lineno="2930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>rest_didnt_produce);</highlight></codeline>
<codeline lineno="2931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(success(),</highlight></codeline>
<codeline lineno="2932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(producer_names.front(),<sp/></highlight><highlight class="stringliteral">&quot;claimrewards&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()(</highlight><highlight class="stringliteral">&quot;owner&quot;</highlight><highlight class="normal">,<sp/>producer_names.front())));</highlight></codeline>
<codeline lineno="2933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1ae00c608b8a40d03b8b8dd2daac50185b" kindref="member">BOOST_REQUIRE</ref>(0<sp/>&lt;<sp/>get_balance(producer_names.front()).get_amount());</highlight></codeline>
<codeline lineno="2934"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2935"><highlight class="normal"></highlight></codeline>
<codeline lineno="2936"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a4ee2d1bad8d3238fe63a78bff6943bcd" kindref="member">BOOST_CHECK_EQUAL</ref>(<sp/>success(),<sp/>unstake(<sp/></highlight><highlight class="stringliteral">&quot;producvotera&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;50.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;50.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2937"><highlight class="normal"></highlight></codeline>
<codeline lineno="2938"><highlight class="normal">}<sp/><ref refid="eosio_8system__tests_8cpp_1a057cb719bfa291fae56dc6ba5fa7a8d1" kindref="member">FC_LOG_AND_RETHROW</ref>()</highlight></codeline>
<codeline lineno="2939"><highlight class="normal"></highlight></codeline>
<codeline lineno="2940"><highlight class="normal"><ref refid="eosio_8system__tests_8cpp_1a8a1841911da283583ec346df954d73a1" kindref="member">BOOST_FIXTURE_TEST_CASE</ref>(<sp/>voters_actions_affect_proxy_and_producers,<sp/><ref refid="classeosio__system_1_1eosio__system__tester" kindref="compound">eosio_system_tester</ref>,<sp/>*<sp/>boost::unit_test::tolerance(1e+6)<sp/>)<sp/><ref refid="eosio_8system__tests_8cpp_1ae89aac94d502abdd3c8d055174c221fc" kindref="member">try</ref><sp/>{</highlight></codeline>
<codeline lineno="2941"><highlight class="normal"><sp/><sp/><sp/>cross_15_percent_threshold();</highlight></codeline>
<codeline lineno="2942"><highlight class="normal"></highlight></codeline>
<codeline lineno="2943"><highlight class="normal"><sp/><sp/><sp/>create_accounts_with_resources(<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;donald111111&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;defproducer1&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;defproducer2&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;defproducer3&quot;</highlight><highlight class="normal">_n<sp/>}<sp/>);</highlight></codeline>
<codeline lineno="2944"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>regproducer(<sp/></highlight><highlight class="stringliteral">&quot;defproducer1&quot;</highlight><highlight class="normal">_n,<sp/>1)<sp/>);</highlight></codeline>
<codeline lineno="2945"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>regproducer(<sp/></highlight><highlight class="stringliteral">&quot;defproducer2&quot;</highlight><highlight class="normal">_n,<sp/>2)<sp/>);</highlight></codeline>
<codeline lineno="2946"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>regproducer(<sp/></highlight><highlight class="stringliteral">&quot;defproducer3&quot;</highlight><highlight class="normal">_n,<sp/>3)<sp/>);</highlight></codeline>
<codeline lineno="2947"><highlight class="normal"></highlight></codeline>
<codeline lineno="2948"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//alice1111111<sp/>becomes<sp/>a<sp/>producer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2949"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;regproxy&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()</highlight></codeline>
<codeline lineno="2950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;proxy&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;isproxy&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="2953"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="2954"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1abf3d4eb475605f9a73224e835cd3fb71" kindref="member">REQUIRE_MATCHING_OBJECT</ref>(<sp/><ref refid="eosio_8system__tests_8cpp_1ac440180674d61e14dbbe38c3d10269d3" kindref="member">proxy</ref>(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n<sp/>),<sp/>get_voter_info(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2955"><highlight class="normal"></highlight></codeline>
<codeline lineno="2956"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//alice1111111<sp/>makes<sp/>stake<sp/>and<sp/>votes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2957"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a743a21c2e0e86a8aeacc66e5c80c51ef" kindref="member">issue_and_transfer</ref>(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1000.0000&quot;</highlight><highlight class="normal">),<sp/><sp/>config::system_account_name<sp/>);</highlight></codeline>
<codeline lineno="2958"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>stake(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;30.0001&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;20.0001&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2959"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>vote(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n,<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;defproducer1&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;defproducer2&quot;</highlight><highlight class="normal">_n<sp/>}<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2960"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>stake2votes(<ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;50.0002&quot;</highlight><highlight class="normal">))<sp/>==<sp/>get_producer_info(<sp/></highlight><highlight class="stringliteral">&quot;defproducer1&quot;</highlight><highlight class="normal"><sp/>)[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="2961"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>stake2votes(<ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;50.0002&quot;</highlight><highlight class="normal">))<sp/>==<sp/>get_producer_info(<sp/></highlight><highlight class="stringliteral">&quot;defproducer2&quot;</highlight><highlight class="normal"><sp/>)[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="2962"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>0,<sp/>get_producer_info(<sp/></highlight><highlight class="stringliteral">&quot;defproducer3&quot;</highlight><highlight class="normal"><sp/>)[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="2963"><highlight class="normal"></highlight></codeline>
<codeline lineno="2964"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(<sp/></highlight><highlight class="stringliteral">&quot;donald111111&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;regproxy&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()</highlight></codeline>
<codeline lineno="2965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;proxy&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="stringliteral">&quot;donald111111&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;isproxy&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="2968"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="2969"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1abf3d4eb475605f9a73224e835cd3fb71" kindref="member">REQUIRE_MATCHING_OBJECT</ref>(<sp/><ref refid="eosio_8system__tests_8cpp_1ac440180674d61e14dbbe38c3d10269d3" kindref="member">proxy</ref>(<sp/></highlight><highlight class="stringliteral">&quot;donald111111&quot;</highlight><highlight class="normal">_n<sp/>),<sp/>get_voter_info(<sp/></highlight><highlight class="stringliteral">&quot;donald111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2970"><highlight class="normal"></highlight></codeline>
<codeline lineno="2971"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//bob111111111<sp/>chooses<sp/>alice1111111<sp/>as<sp/>a<sp/>proxy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2972"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a743a21c2e0e86a8aeacc66e5c80c51ef" kindref="member">issue_and_transfer</ref>(<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1000.0000&quot;</highlight><highlight class="normal">),<sp/><sp/>config::system_account_name<sp/>);</highlight></codeline>
<codeline lineno="2973"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>stake(<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;100.0002&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;50.0001&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2974"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>vote(<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">_n,<sp/>vector&lt;account_name&gt;(),<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2975"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>stake2votes(<ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;150.0003&quot;</highlight><highlight class="normal">))<sp/>==<sp/>get_voter_info(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>)[</highlight><highlight class="stringliteral">&quot;proxied_vote_weight&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="2976"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>stake2votes(<ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;200.0005&quot;</highlight><highlight class="normal">))<sp/>==<sp/>get_producer_info(<sp/></highlight><highlight class="stringliteral">&quot;defproducer1&quot;</highlight><highlight class="normal"><sp/>)[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="2977"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>stake2votes(<ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;200.0005&quot;</highlight><highlight class="normal">))<sp/>==<sp/>get_producer_info(<sp/></highlight><highlight class="stringliteral">&quot;defproducer2&quot;</highlight><highlight class="normal"><sp/>)[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="2978"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>0,<sp/>get_producer_info(<sp/></highlight><highlight class="stringliteral">&quot;defproducer3&quot;</highlight><highlight class="normal"><sp/>)[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="2979"><highlight class="normal"></highlight></codeline>
<codeline lineno="2980"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//carol1111111<sp/>chooses<sp/>alice1111111<sp/>as<sp/>a<sp/>proxy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2981"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a743a21c2e0e86a8aeacc66e5c80c51ef" kindref="member">issue_and_transfer</ref>(<sp/></highlight><highlight class="stringliteral">&quot;carol1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1000.0000&quot;</highlight><highlight class="normal">),<sp/><sp/>config::system_account_name<sp/>);</highlight></codeline>
<codeline lineno="2982"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>stake(<sp/></highlight><highlight class="stringliteral">&quot;carol1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;30.0001&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;20.0001&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2983"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>vote(<sp/></highlight><highlight class="stringliteral">&quot;carol1111111&quot;</highlight><highlight class="normal">_n,<sp/>vector&lt;account_name&gt;(),<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2984"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>stake2votes(<ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;200.0005&quot;</highlight><highlight class="normal">))<sp/>==<sp/>get_voter_info(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>)[</highlight><highlight class="stringliteral">&quot;proxied_vote_weight&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="2985"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>stake2votes(<ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;250.0007&quot;</highlight><highlight class="normal">))<sp/>==<sp/>get_producer_info(<sp/></highlight><highlight class="stringliteral">&quot;defproducer1&quot;</highlight><highlight class="normal"><sp/>)[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="2986"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>stake2votes(<ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;250.0007&quot;</highlight><highlight class="normal">))<sp/>==<sp/>get_producer_info(<sp/></highlight><highlight class="stringliteral">&quot;defproducer2&quot;</highlight><highlight class="normal"><sp/>)[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="2987"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>0,<sp/>get_producer_info(<sp/></highlight><highlight class="stringliteral">&quot;defproducer3&quot;</highlight><highlight class="normal"><sp/>)[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="2988"><highlight class="normal"></highlight></codeline>
<codeline lineno="2989"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//proxied<sp/>voter<sp/>carol1111111<sp/>increases<sp/>stake</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2990"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>stake(<sp/></highlight><highlight class="stringliteral">&quot;carol1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;50.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;70.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2991"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>stake2votes(<ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;320.0005&quot;</highlight><highlight class="normal">))<sp/>==<sp/>get_voter_info(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>)[</highlight><highlight class="stringliteral">&quot;proxied_vote_weight&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="2992"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>stake2votes(<ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;370.0007&quot;</highlight><highlight class="normal">))<sp/>==<sp/>get_producer_info(<sp/></highlight><highlight class="stringliteral">&quot;defproducer1&quot;</highlight><highlight class="normal"><sp/>)[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="2993"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>stake2votes(<ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;370.0007&quot;</highlight><highlight class="normal">))<sp/>==<sp/>get_producer_info(<sp/></highlight><highlight class="stringliteral">&quot;defproducer2&quot;</highlight><highlight class="normal"><sp/>)[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="2994"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>0,<sp/>get_producer_info(<sp/></highlight><highlight class="stringliteral">&quot;defproducer3&quot;</highlight><highlight class="normal"><sp/>)[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="2995"><highlight class="normal"></highlight></codeline>
<codeline lineno="2996"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//proxied<sp/>voter<sp/>bob111111111<sp/>decreases<sp/>stake</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2997"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>unstake(<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;50.0001&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;50.0001&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2998"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>stake2votes(<ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;220.0003&quot;</highlight><highlight class="normal">))<sp/>==<sp/>get_voter_info(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>)[</highlight><highlight class="stringliteral">&quot;proxied_vote_weight&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="2999"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>stake2votes(<ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;270.0005&quot;</highlight><highlight class="normal">))<sp/>==<sp/>get_producer_info(<sp/></highlight><highlight class="stringliteral">&quot;defproducer1&quot;</highlight><highlight class="normal"><sp/>)[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="3000"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>stake2votes(<ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;270.0005&quot;</highlight><highlight class="normal">))<sp/>==<sp/>get_producer_info(<sp/></highlight><highlight class="stringliteral">&quot;defproducer2&quot;</highlight><highlight class="normal"><sp/>)[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="3001"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>0,<sp/>get_producer_info(<sp/></highlight><highlight class="stringliteral">&quot;defproducer3&quot;</highlight><highlight class="normal"><sp/>)[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="3002"><highlight class="normal"></highlight></codeline>
<codeline lineno="3003"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//proxied<sp/>voter<sp/>carol1111111<sp/>chooses<sp/>another<sp/>proxy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3004"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>vote(<sp/></highlight><highlight class="stringliteral">&quot;carol1111111&quot;</highlight><highlight class="normal">_n,<sp/>vector&lt;account_name&gt;(),<sp/></highlight><highlight class="stringliteral">&quot;donald111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3005"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>stake2votes(<ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;50.0001&quot;</highlight><highlight class="normal">)),<sp/>get_voter_info(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>)[</highlight><highlight class="stringliteral">&quot;proxied_vote_weight&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="3006"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>stake2votes(<ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;170.0002&quot;</highlight><highlight class="normal">)),<sp/>get_voter_info(<sp/></highlight><highlight class="stringliteral">&quot;donald111111&quot;</highlight><highlight class="normal"><sp/>)[</highlight><highlight class="stringliteral">&quot;proxied_vote_weight&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="3007"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>stake2votes(<ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;100.0003&quot;</highlight><highlight class="normal">)),<sp/>get_producer_info(<sp/></highlight><highlight class="stringliteral">&quot;defproducer1&quot;</highlight><highlight class="normal"><sp/>)[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="3008"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>stake2votes(<ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;100.0003&quot;</highlight><highlight class="normal">)),<sp/>get_producer_info(<sp/></highlight><highlight class="stringliteral">&quot;defproducer2&quot;</highlight><highlight class="normal"><sp/>)[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="3009"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>0,<sp/>get_producer_info(<sp/></highlight><highlight class="stringliteral">&quot;defproducer3&quot;</highlight><highlight class="normal"><sp/>)[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="3010"><highlight class="normal"></highlight></codeline>
<codeline lineno="3011"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//bob111111111<sp/>switches<sp/>to<sp/>direct<sp/>voting<sp/>and<sp/>votes<sp/>for<sp/>one<sp/>of<sp/>the<sp/>same<sp/>producers,<sp/>but<sp/>not<sp/>for<sp/>another<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3012"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>vote(<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">_n,<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;defproducer2&quot;</highlight><highlight class="normal">_n<sp/>}<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3013"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>0.0<sp/>==<sp/>get_voter_info(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>)[</highlight><highlight class="stringliteral">&quot;proxied_vote_weight&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="3014"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/><sp/>stake2votes(<ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;50.0002&quot;</highlight><highlight class="normal">)),<sp/>get_producer_info(<sp/></highlight><highlight class="stringliteral">&quot;defproducer1&quot;</highlight><highlight class="normal"><sp/>)[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="3015"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>stake2votes(<ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;100.0003&quot;</highlight><highlight class="normal">)),<sp/>get_producer_info(<sp/></highlight><highlight class="stringliteral">&quot;defproducer2&quot;</highlight><highlight class="normal"><sp/>)[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="3016"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>0.0<sp/>==<sp/>get_producer_info(<sp/></highlight><highlight class="stringliteral">&quot;defproducer3&quot;</highlight><highlight class="normal"><sp/>)[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="3017"><highlight class="normal"></highlight></codeline>
<codeline lineno="3018"><highlight class="normal">}<sp/><ref refid="eosio_8system__tests_8cpp_1a057cb719bfa291fae56dc6ba5fa7a8d1" kindref="member">FC_LOG_AND_RETHROW</ref>()</highlight></codeline>
<codeline lineno="3019"><highlight class="normal"></highlight></codeline>
<codeline lineno="3020"><highlight class="normal"></highlight></codeline>
<codeline lineno="3021"><highlight class="normal"><ref refid="eosio_8system__tests_8cpp_1a8a1841911da283583ec346df954d73a1" kindref="member">BOOST_FIXTURE_TEST_CASE</ref>(<sp/>vote_both_proxy_and_producers,<sp/><ref refid="classeosio__system_1_1eosio__system__tester" kindref="compound">eosio_system_tester</ref><sp/>)<sp/><ref refid="eosio_8system__tests_8cpp_1ae89aac94d502abdd3c8d055174c221fc" kindref="member">try</ref><sp/>{</highlight></codeline>
<codeline lineno="3022"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//alice1111111<sp/>becomes<sp/>a<sp/>proxy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3023"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;regproxy&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()</highlight></codeline>
<codeline lineno="3024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;proxy&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;isproxy&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="3027"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="3028"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1abf3d4eb475605f9a73224e835cd3fb71" kindref="member">REQUIRE_MATCHING_OBJECT</ref>(<sp/><ref refid="eosio_8system__tests_8cpp_1ac440180674d61e14dbbe38c3d10269d3" kindref="member">proxy</ref>(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n<sp/>),<sp/>get_voter_info(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3029"><highlight class="normal"></highlight></codeline>
<codeline lineno="3030"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//carol1111111<sp/>becomes<sp/>a<sp/>producer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3031"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>regproducer(<sp/></highlight><highlight class="stringliteral">&quot;carol1111111&quot;</highlight><highlight class="normal">_n,<sp/>1)<sp/>);</highlight></codeline>
<codeline lineno="3032"><highlight class="normal"></highlight></codeline>
<codeline lineno="3033"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//bob111111111<sp/>chooses<sp/>alice1111111<sp/>as<sp/>a<sp/>proxy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3034"><highlight class="normal"></highlight></codeline>
<codeline lineno="3035"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a743a21c2e0e86a8aeacc66e5c80c51ef" kindref="member">issue_and_transfer</ref>(<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1000.0000&quot;</highlight><highlight class="normal">),<sp/><sp/>config::system_account_name<sp/>);</highlight></codeline>
<codeline lineno="3036"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>stake(<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;100.0002&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;50.0001&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3037"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;cannot<sp/>vote<sp/>for<sp/>producers<sp/>and<sp/>proxy<sp/>at<sp/>same<sp/>time&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="3038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vote(<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">_n,<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;carol1111111&quot;</highlight><highlight class="normal">_n<sp/>},<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3039"><highlight class="normal"></highlight></codeline>
<codeline lineno="3040"><highlight class="normal">}<sp/><ref refid="eosio_8system__tests_8cpp_1a057cb719bfa291fae56dc6ba5fa7a8d1" kindref="member">FC_LOG_AND_RETHROW</ref>()</highlight></codeline>
<codeline lineno="3041"><highlight class="normal"></highlight></codeline>
<codeline lineno="3042"><highlight class="normal"></highlight></codeline>
<codeline lineno="3043"><highlight class="normal"><ref refid="eosio_8system__tests_8cpp_1a8a1841911da283583ec346df954d73a1" kindref="member">BOOST_FIXTURE_TEST_CASE</ref>(<sp/>select_invalid_proxy,<sp/><ref refid="classeosio__system_1_1eosio__system__tester" kindref="compound">eosio_system_tester</ref><sp/>)<sp/><ref refid="eosio_8system__tests_8cpp_1ae89aac94d502abdd3c8d055174c221fc" kindref="member">try</ref><sp/>{</highlight></codeline>
<codeline lineno="3044"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//accumulate<sp/>proxied<sp/>votes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3045"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a743a21c2e0e86a8aeacc66e5c80c51ef" kindref="member">issue_and_transfer</ref>(<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1000.0000&quot;</highlight><highlight class="normal">),<sp/><sp/>config::system_account_name<sp/>);</highlight></codeline>
<codeline lineno="3046"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>stake(<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;100.0002&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;50.0001&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3047"><highlight class="normal"></highlight></codeline>
<codeline lineno="3048"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//selecting<sp/>account<sp/>not<sp/>registered<sp/>as<sp/>a<sp/>proxy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3049"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>proxy<sp/>specified&quot;</highlight><highlight class="normal"><sp/>),</highlight></codeline>
<codeline lineno="3050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vote(<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">_n,<sp/>vector&lt;account_name&gt;(),<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3051"><highlight class="normal"></highlight></codeline>
<codeline lineno="3052"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//selecting<sp/>not<sp/>existing<sp/>account<sp/>as<sp/>a<sp/>proxy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3053"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>proxy<sp/>specified&quot;</highlight><highlight class="normal"><sp/>),</highlight></codeline>
<codeline lineno="3054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vote(<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">_n,<sp/>vector&lt;account_name&gt;(),<sp/></highlight><highlight class="stringliteral">&quot;notexist&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3055"><highlight class="normal"></highlight></codeline>
<codeline lineno="3056"><highlight class="normal">}<sp/><ref refid="eosio_8system__tests_8cpp_1a057cb719bfa291fae56dc6ba5fa7a8d1" kindref="member">FC_LOG_AND_RETHROW</ref>()</highlight></codeline>
<codeline lineno="3057"><highlight class="normal"></highlight></codeline>
<codeline lineno="3058"><highlight class="normal"></highlight></codeline>
<codeline lineno="3059"><highlight class="normal"><ref refid="eosio_8system__tests_8cpp_1a8a1841911da283583ec346df954d73a1" kindref="member">BOOST_FIXTURE_TEST_CASE</ref>(<sp/>double_register_unregister_proxy_keeps_votes,<sp/><ref refid="classeosio__system_1_1eosio__system__tester" kindref="compound">eosio_system_tester</ref><sp/>)<sp/><ref refid="eosio_8system__tests_8cpp_1ae89aac94d502abdd3c8d055174c221fc" kindref="member">try</ref><sp/>{</highlight></codeline>
<codeline lineno="3060"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//alice1111111<sp/>becomes<sp/>a<sp/>proxy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3061"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;regproxy&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()</highlight></codeline>
<codeline lineno="3062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;proxy&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;isproxy&quot;</highlight><highlight class="normal">,<sp/><sp/>1)</highlight></codeline>
<codeline lineno="3064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="3065"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="3066"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a743a21c2e0e86a8aeacc66e5c80c51ef" kindref="member">issue_and_transfer</ref>(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1000.0000&quot;</highlight><highlight class="normal">),<sp/><sp/>config::system_account_name<sp/>);</highlight></codeline>
<codeline lineno="3067"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>stake(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;5.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;5.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3068"><highlight class="normal"><sp/><sp/><sp/>edump((get_voter_info(</highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="3069"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1abf3d4eb475605f9a73224e835cd3fb71" kindref="member">REQUIRE_MATCHING_OBJECT</ref>(<sp/><ref refid="eosio_8system__tests_8cpp_1ac440180674d61e14dbbe38c3d10269d3" kindref="member">proxy</ref>(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n<sp/>)(<sp/></highlight><highlight class="stringliteral">&quot;staked&quot;</highlight><highlight class="normal">,<sp/>100000<sp/>),<sp/>get_voter_info(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3070"><highlight class="normal"></highlight></codeline>
<codeline lineno="3071"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//bob111111111<sp/>stakes<sp/>and<sp/>selects<sp/>alice1111111<sp/>as<sp/>a<sp/>proxy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3072"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a743a21c2e0e86a8aeacc66e5c80c51ef" kindref="member">issue_and_transfer</ref>(<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1000.0000&quot;</highlight><highlight class="normal">),<sp/><sp/>config::system_account_name<sp/>);</highlight></codeline>
<codeline lineno="3073"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>stake(<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;100.0002&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;50.0001&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3074"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>vote(<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">_n,<sp/>vector&lt;account_name&gt;(),<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3075"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1abf3d4eb475605f9a73224e835cd3fb71" kindref="member">REQUIRE_MATCHING_OBJECT</ref>(<sp/><ref refid="eosio_8system__tests_8cpp_1ac440180674d61e14dbbe38c3d10269d3" kindref="member">proxy</ref>(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n<sp/>)(<sp/></highlight><highlight class="stringliteral">&quot;proxied_vote_weight&quot;</highlight><highlight class="normal">,<sp/>stake2votes(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;150.0003&quot;</highlight><highlight class="normal">)<sp/>))(<sp/></highlight><highlight class="stringliteral">&quot;staked&quot;</highlight><highlight class="normal">,<sp/>100000<sp/>),<sp/>get_voter_info(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3076"><highlight class="normal"></highlight></codeline>
<codeline lineno="3077"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//double<sp/>regestering<sp/>should<sp/>fail<sp/>without<sp/>affecting<sp/>total<sp/>votes<sp/>and<sp/>stake</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3078"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(<sp/></highlight><highlight class="stringliteral">&quot;action<sp/>has<sp/>no<sp/>effect&quot;</highlight><highlight class="normal"><sp/>),</highlight></codeline>
<codeline lineno="3079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;regproxy&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()</highlight></codeline>
<codeline lineno="3080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;proxy&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;isproxy&quot;</highlight><highlight class="normal">,<sp/><sp/>1)</highlight></codeline>
<codeline lineno="3082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="3083"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="3084"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1abf3d4eb475605f9a73224e835cd3fb71" kindref="member">REQUIRE_MATCHING_OBJECT</ref>(<sp/><ref refid="eosio_8system__tests_8cpp_1ac440180674d61e14dbbe38c3d10269d3" kindref="member">proxy</ref>(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n<sp/>)(<sp/></highlight><highlight class="stringliteral">&quot;proxied_vote_weight&quot;</highlight><highlight class="normal">,<sp/>stake2votes(<ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;150.0003&quot;</highlight><highlight class="normal">))<sp/>)(<sp/></highlight><highlight class="stringliteral">&quot;staked&quot;</highlight><highlight class="normal">,<sp/>100000<sp/>),<sp/>get_voter_info(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3085"><highlight class="normal"></highlight></codeline>
<codeline lineno="3086"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//uregister</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3087"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;regproxy&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()</highlight></codeline>
<codeline lineno="3088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;proxy&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;isproxy&quot;</highlight><highlight class="normal">,<sp/><sp/>0)</highlight></codeline>
<codeline lineno="3090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="3091"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="3092"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1abf3d4eb475605f9a73224e835cd3fb71" kindref="member">REQUIRE_MATCHING_OBJECT</ref>(<sp/><ref refid="namespaceeosio__system_1a88231cdd2d2c65528b97fb62b1fad462" kindref="member">voter</ref>(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>)(<sp/></highlight><highlight class="stringliteral">&quot;proxied_vote_weight&quot;</highlight><highlight class="normal">,<sp/>stake2votes(<ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;150.0003&quot;</highlight><highlight class="normal">))<sp/>)(<sp/></highlight><highlight class="stringliteral">&quot;staked&quot;</highlight><highlight class="normal">,<sp/>100000<sp/>),<sp/>get_voter_info(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3093"><highlight class="normal"></highlight></codeline>
<codeline lineno="3094"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//double<sp/>unregistering<sp/>should<sp/>not<sp/>affect<sp/>proxied_votes<sp/>and<sp/>stake</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3095"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(<sp/></highlight><highlight class="stringliteral">&quot;action<sp/>has<sp/>no<sp/>effect&quot;</highlight><highlight class="normal"><sp/>),</highlight></codeline>
<codeline lineno="3096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;regproxy&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()</highlight></codeline>
<codeline lineno="3097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;proxy&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;isproxy&quot;</highlight><highlight class="normal">,<sp/><sp/>0)</highlight></codeline>
<codeline lineno="3099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="3100"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="3101"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1abf3d4eb475605f9a73224e835cd3fb71" kindref="member">REQUIRE_MATCHING_OBJECT</ref>(<sp/><ref refid="namespaceeosio__system_1a88231cdd2d2c65528b97fb62b1fad462" kindref="member">voter</ref>(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>)(<sp/></highlight><highlight class="stringliteral">&quot;proxied_vote_weight&quot;</highlight><highlight class="normal">,<sp/>stake2votes(<ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;150.0003&quot;</highlight><highlight class="normal">)))(<sp/></highlight><highlight class="stringliteral">&quot;staked&quot;</highlight><highlight class="normal">,<sp/>100000<sp/>),<sp/>get_voter_info(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3102"><highlight class="normal"></highlight></codeline>
<codeline lineno="3103"><highlight class="normal">}<sp/><ref refid="eosio_8system__tests_8cpp_1a057cb719bfa291fae56dc6ba5fa7a8d1" kindref="member">FC_LOG_AND_RETHROW</ref>()</highlight></codeline>
<codeline lineno="3104"><highlight class="normal"></highlight></codeline>
<codeline lineno="3105"><highlight class="normal"></highlight></codeline>
<codeline lineno="3106"><highlight class="normal"><ref refid="eosio_8system__tests_8cpp_1a8a1841911da283583ec346df954d73a1" kindref="member">BOOST_FIXTURE_TEST_CASE</ref>(<sp/>proxy_cannot_use_another_proxy,<sp/><ref refid="classeosio__system_1_1eosio__system__tester" kindref="compound">eosio_system_tester</ref><sp/>)<sp/><ref refid="eosio_8system__tests_8cpp_1ae89aac94d502abdd3c8d055174c221fc" kindref="member">try</ref><sp/>{</highlight></codeline>
<codeline lineno="3107"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//alice1111111<sp/>becomes<sp/>a<sp/>proxy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3108"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;regproxy&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()</highlight></codeline>
<codeline lineno="3109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;proxy&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;isproxy&quot;</highlight><highlight class="normal">,<sp/><sp/>1)</highlight></codeline>
<codeline lineno="3111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="3112"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="3113"><highlight class="normal"></highlight></codeline>
<codeline lineno="3114"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//bob111111111<sp/>becomes<sp/>a<sp/>proxy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3115"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;regproxy&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()</highlight></codeline>
<codeline lineno="3116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;proxy&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;isproxy&quot;</highlight><highlight class="normal">,<sp/><sp/>1)</highlight></codeline>
<codeline lineno="3118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="3119"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="3120"><highlight class="normal"></highlight></codeline>
<codeline lineno="3121"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//proxy<sp/>should<sp/>not<sp/>be<sp/>able<sp/>to<sp/>use<sp/>a<sp/>proxy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3122"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a743a21c2e0e86a8aeacc66e5c80c51ef" kindref="member">issue_and_transfer</ref>(<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1000.0000&quot;</highlight><highlight class="normal">),<sp/><sp/>config::system_account_name<sp/>);</highlight></codeline>
<codeline lineno="3123"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>stake(<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;100.0002&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;50.0001&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3124"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(<sp/></highlight><highlight class="stringliteral">&quot;account<sp/>registered<sp/>as<sp/>a<sp/>proxy<sp/>is<sp/>not<sp/>allowed<sp/>to<sp/>use<sp/>a<sp/>proxy&quot;</highlight><highlight class="normal"><sp/>),</highlight></codeline>
<codeline lineno="3125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vote(<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">_n,<sp/>vector&lt;account_name&gt;(),<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3126"><highlight class="normal"></highlight></codeline>
<codeline lineno="3127"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//voter<sp/>that<sp/>uses<sp/>a<sp/>proxy<sp/>should<sp/>not<sp/>be<sp/>allowed<sp/>to<sp/>become<sp/>a<sp/>proxy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3128"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a743a21c2e0e86a8aeacc66e5c80c51ef" kindref="member">issue_and_transfer</ref>(<sp/></highlight><highlight class="stringliteral">&quot;carol1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1000.0000&quot;</highlight><highlight class="normal">),<sp/><sp/>config::system_account_name<sp/>);</highlight></codeline>
<codeline lineno="3129"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>stake(<sp/></highlight><highlight class="stringliteral">&quot;carol1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;100.0002&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;50.0001&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3130"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>vote(<sp/></highlight><highlight class="stringliteral">&quot;carol1111111&quot;</highlight><highlight class="normal">_n,<sp/>vector&lt;account_name&gt;(),<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3131"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(<sp/></highlight><highlight class="stringliteral">&quot;account<sp/>that<sp/>uses<sp/>a<sp/>proxy<sp/>is<sp/>not<sp/>allowed<sp/>to<sp/>become<sp/>a<sp/>proxy&quot;</highlight><highlight class="normal"><sp/>),</highlight></codeline>
<codeline lineno="3132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(<sp/></highlight><highlight class="stringliteral">&quot;carol1111111&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;regproxy&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()</highlight></codeline>
<codeline lineno="3133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;proxy&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="stringliteral">&quot;carol1111111&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;isproxy&quot;</highlight><highlight class="normal">,<sp/><sp/>1)</highlight></codeline>
<codeline lineno="3135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="3136"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="3137"><highlight class="normal"></highlight></codeline>
<codeline lineno="3138"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//proxy<sp/>should<sp/>not<sp/>be<sp/>able<sp/>to<sp/>use<sp/>itself<sp/>as<sp/>a<sp/>proxy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3139"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(<sp/></highlight><highlight class="stringliteral">&quot;cannot<sp/>proxy<sp/>to<sp/>self&quot;</highlight><highlight class="normal"><sp/>),</highlight></codeline>
<codeline lineno="3140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vote(<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">_n,<sp/>vector&lt;account_name&gt;(),<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3141"><highlight class="normal"></highlight></codeline>
<codeline lineno="3142"><highlight class="normal">}<sp/><ref refid="eosio_8system__tests_8cpp_1a057cb719bfa291fae56dc6ba5fa7a8d1" kindref="member">FC_LOG_AND_RETHROW</ref>()</highlight></codeline>
<codeline lineno="3143"><highlight class="normal"></highlight></codeline>
<codeline lineno="3144"><highlight class="normal">fc::mutable_variant_object<sp/>config_to_variant(<sp/>const<sp/><ref refid="namespaceeosio" kindref="compound">eosio</ref>::chain::chain_config&amp;<sp/>config<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3145"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mutable_variant_object()</highlight></codeline>
<codeline lineno="3146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/></highlight><highlight class="stringliteral">&quot;max_block_net_usage&quot;</highlight><highlight class="normal">,<sp/>config.max_block_net_usage<sp/>)</highlight></codeline>
<codeline lineno="3147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/></highlight><highlight class="stringliteral">&quot;target_block_net_usage_pct&quot;</highlight><highlight class="normal">,<sp/>config.target_block_net_usage_pct<sp/>)</highlight></codeline>
<codeline lineno="3148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/></highlight><highlight class="stringliteral">&quot;max_transaction_net_usage&quot;</highlight><highlight class="normal">,<sp/>config.max_transaction_net_usage<sp/>)</highlight></codeline>
<codeline lineno="3149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/></highlight><highlight class="stringliteral">&quot;base_per_transaction_net_usage&quot;</highlight><highlight class="normal">,<sp/>config.base_per_transaction_net_usage<sp/>)</highlight></codeline>
<codeline lineno="3150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/></highlight><highlight class="stringliteral">&quot;context_free_discount_net_usage_num&quot;</highlight><highlight class="normal">,<sp/>config.context_free_discount_net_usage_num<sp/>)</highlight></codeline>
<codeline lineno="3151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/></highlight><highlight class="stringliteral">&quot;context_free_discount_net_usage_den&quot;</highlight><highlight class="normal">,<sp/>config.context_free_discount_net_usage_den<sp/>)</highlight></codeline>
<codeline lineno="3152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/></highlight><highlight class="stringliteral">&quot;max_block_cpu_usage&quot;</highlight><highlight class="normal">,<sp/>config.max_block_cpu_usage<sp/>)</highlight></codeline>
<codeline lineno="3153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/></highlight><highlight class="stringliteral">&quot;target_block_cpu_usage_pct&quot;</highlight><highlight class="normal">,<sp/>config.target_block_cpu_usage_pct<sp/>)</highlight></codeline>
<codeline lineno="3154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/></highlight><highlight class="stringliteral">&quot;max_transaction_cpu_usage&quot;</highlight><highlight class="normal">,<sp/>config.max_transaction_cpu_usage<sp/>)</highlight></codeline>
<codeline lineno="3155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/></highlight><highlight class="stringliteral">&quot;min_transaction_cpu_usage&quot;</highlight><highlight class="normal">,<sp/>config.min_transaction_cpu_usage<sp/>)</highlight></codeline>
<codeline lineno="3156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/></highlight><highlight class="stringliteral">&quot;max_transaction_lifetime&quot;</highlight><highlight class="normal">,<sp/>config.max_transaction_lifetime<sp/>)</highlight></codeline>
<codeline lineno="3157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/></highlight><highlight class="stringliteral">&quot;deferred_trx_expiration_window&quot;</highlight><highlight class="normal">,<sp/>config.deferred_trx_expiration_window<sp/>)</highlight></codeline>
<codeline lineno="3158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/></highlight><highlight class="stringliteral">&quot;max_transaction_delay&quot;</highlight><highlight class="normal">,<sp/>config.max_transaction_delay<sp/>)</highlight></codeline>
<codeline lineno="3159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/></highlight><highlight class="stringliteral">&quot;max_inline_action_size&quot;</highlight><highlight class="normal">,<sp/>config.max_inline_action_size<sp/>)</highlight></codeline>
<codeline lineno="3160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/></highlight><highlight class="stringliteral">&quot;max_inline_action_depth&quot;</highlight><highlight class="normal">,<sp/>config.max_inline_action_depth<sp/>)</highlight></codeline>
<codeline lineno="3161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/></highlight><highlight class="stringliteral">&quot;max_authority_depth&quot;</highlight><highlight class="normal">,<sp/>config.max_authority_depth<sp/>);</highlight></codeline>
<codeline lineno="3162"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3163"><highlight class="normal"></highlight></codeline>
<codeline lineno="3164"><highlight class="normal"><ref refid="eosio_8system__tests_8cpp_1a8a1841911da283583ec346df954d73a1" kindref="member">BOOST_FIXTURE_TEST_CASE</ref>(<sp/>elect_producers<sp/></highlight><highlight class="comment">/*_and_parameters*/</highlight><highlight class="normal">,<sp/><ref refid="classeosio__system_1_1eosio__system__tester" kindref="compound">eosio_system_tester</ref><sp/>)<sp/></highlight><highlight class="keyword">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3165"><highlight class="normal"><sp/><sp/><sp/>create_accounts_with_resources(<sp/>{<sp/><sp/></highlight><highlight class="stringliteral">&quot;defproducer1&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;defproducer2&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;defproducer3&quot;</highlight><highlight class="normal">_n<sp/>}<sp/>);</highlight></codeline>
<codeline lineno="3166"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>regproducer(<sp/></highlight><highlight class="stringliteral">&quot;defproducer1&quot;</highlight><highlight class="normal">_n,<sp/>1)<sp/>);</highlight></codeline>
<codeline lineno="3167"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>regproducer(<sp/></highlight><highlight class="stringliteral">&quot;defproducer2&quot;</highlight><highlight class="normal">_n,<sp/>2)<sp/>);</highlight></codeline>
<codeline lineno="3168"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>regproducer(<sp/></highlight><highlight class="stringliteral">&quot;defproducer3&quot;</highlight><highlight class="normal">_n,<sp/>3)<sp/>);</highlight></codeline>
<codeline lineno="3169"><highlight class="normal"></highlight></codeline>
<codeline lineno="3170"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//stake<sp/>more<sp/>than<sp/>15%<sp/>of<sp/>total<sp/>EOS<sp/>supply<sp/>to<sp/>activate<sp/>chain</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3171"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a792dc87878d55cfa11f862e9e6d5cc05" kindref="member">transfer</ref>(<sp/></highlight><highlight class="stringliteral">&quot;eosio&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;600000000.0000&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;eosio&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3172"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>stake(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;300000000.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;300000000.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3173"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//vote<sp/>for<sp/>producers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3174"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>vote(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n,<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;defproducer1&quot;</highlight><highlight class="normal">_n<sp/>}<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3175"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aa1213f0f2c7a53ea968859f3cab582c3" kindref="member">produce_blocks</ref>(250);</highlight></codeline>
<codeline lineno="3176"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>producer_keys<sp/>=<sp/>control-&gt;head_block_state()-&gt;active_schedule.producers;</highlight></codeline>
<codeline lineno="3177"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>1,<sp/>producer_keys.size()<sp/>);</highlight></codeline>
<codeline lineno="3178"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>name(</highlight><highlight class="stringliteral">&quot;defproducer1&quot;</highlight><highlight class="normal">),<sp/>producer_keys[0].producer_name<sp/>);</highlight></codeline>
<codeline lineno="3179"><highlight class="normal"></highlight></codeline>
<codeline lineno="3180"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//auto<sp/>config<sp/>=<sp/>config_to_variant(<sp/>control-&gt;get_global_properties().configuration<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3181"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//auto<sp/>prod1_config<sp/>=<sp/>testing::filter_fields(<sp/>config,<sp/>producer_parameters_example(<sp/>1<sp/>)<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3182"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//REQUIRE_EQUAL_OBJECTS(prod1_config,<sp/>config);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3183"><highlight class="normal"></highlight></codeline>
<codeline lineno="3184"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>elect<sp/>2<sp/>producers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3185"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a743a21c2e0e86a8aeacc66e5c80c51ef" kindref="member">issue_and_transfer</ref>(<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;80000.0000&quot;</highlight><highlight class="normal">),<sp/><sp/>config::system_account_name<sp/>);</highlight></codeline>
<codeline lineno="3186"><highlight class="normal"><sp/><sp/><sp/>ilog(</highlight><highlight class="stringliteral">&quot;stake&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3187"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>stake(<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;40000.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;40000.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3188"><highlight class="normal"><sp/><sp/><sp/>ilog(</highlight><highlight class="stringliteral">&quot;start<sp/>vote&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3189"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>vote(<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">_n,<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;defproducer2&quot;</highlight><highlight class="normal">_n<sp/>}<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3190"><highlight class="normal"><sp/><sp/><sp/>ilog(</highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3191"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aa1213f0f2c7a53ea968859f3cab582c3" kindref="member">produce_blocks</ref>(250);</highlight></codeline>
<codeline lineno="3192"><highlight class="normal"><sp/><sp/><sp/>producer_keys<sp/>=<sp/>control-&gt;head_block_state()-&gt;active_schedule.producers;</highlight></codeline>
<codeline lineno="3193"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>2,<sp/>producer_keys.size()<sp/>);</highlight></codeline>
<codeline lineno="3194"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>name(</highlight><highlight class="stringliteral">&quot;defproducer1&quot;</highlight><highlight class="normal">),<sp/>producer_keys[0].producer_name<sp/>);</highlight></codeline>
<codeline lineno="3195"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>name(</highlight><highlight class="stringliteral">&quot;defproducer2&quot;</highlight><highlight class="normal">),<sp/>producer_keys[1].producer_name<sp/>);</highlight></codeline>
<codeline lineno="3196"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//config<sp/>=<sp/>config_to_variant(<sp/>control-&gt;get_global_properties().configuration<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3197"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//auto<sp/>prod2_config<sp/>=<sp/>testing::filter_fields(<sp/>config,<sp/>producer_parameters_example(<sp/>2<sp/>)<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3198"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//REQUIRE_EQUAL_OBJECTS(prod2_config,<sp/>config);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3199"><highlight class="normal"></highlight></codeline>
<codeline lineno="3200"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>elect<sp/>3<sp/>producers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3201"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>vote(<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">_n,<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;defproducer2&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;defproducer3&quot;</highlight><highlight class="normal">_n<sp/>}<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3202"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aa1213f0f2c7a53ea968859f3cab582c3" kindref="member">produce_blocks</ref>(250);</highlight></codeline>
<codeline lineno="3203"><highlight class="normal"><sp/><sp/><sp/>producer_keys<sp/>=<sp/>control-&gt;head_block_state()-&gt;active_schedule.producers;</highlight></codeline>
<codeline lineno="3204"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>3,<sp/>producer_keys.size()<sp/>);</highlight></codeline>
<codeline lineno="3205"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>name(</highlight><highlight class="stringliteral">&quot;defproducer1&quot;</highlight><highlight class="normal">),<sp/>producer_keys[0].producer_name<sp/>);</highlight></codeline>
<codeline lineno="3206"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>name(</highlight><highlight class="stringliteral">&quot;defproducer2&quot;</highlight><highlight class="normal">),<sp/>producer_keys[1].producer_name<sp/>);</highlight></codeline>
<codeline lineno="3207"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>name(</highlight><highlight class="stringliteral">&quot;defproducer3&quot;</highlight><highlight class="normal">),<sp/>producer_keys[2].producer_name<sp/>);</highlight></codeline>
<codeline lineno="3208"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//config<sp/>=<sp/>config_to_variant(<sp/>control-&gt;get_global_properties().configuration<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3209"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//REQUIRE_EQUAL_OBJECTS(prod2_config,<sp/>config);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3210"><highlight class="normal"></highlight></codeline>
<codeline lineno="3211"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>try<sp/>to<sp/>go<sp/>back<sp/>to<sp/>2<sp/>producers<sp/>and<sp/>fail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3212"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>vote(<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">_n,<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;defproducer3&quot;</highlight><highlight class="normal">_n<sp/>}<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3213"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aa1213f0f2c7a53ea968859f3cab582c3" kindref="member">produce_blocks</ref>(250);</highlight></codeline>
<codeline lineno="3214"><highlight class="normal"><sp/><sp/><sp/>producer_keys<sp/>=<sp/>control-&gt;head_block_state()-&gt;active_schedule.producers;</highlight></codeline>
<codeline lineno="3215"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>3,<sp/>producer_keys.size()<sp/>);</highlight></codeline>
<codeline lineno="3216"><highlight class="normal"></highlight></codeline>
<codeline lineno="3217"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>test<sp/>below<sp/>is<sp/>invalid<sp/>now,<sp/>producer<sp/>schedule<sp/>is<sp/>not<sp/>updated<sp/>if<sp/>there<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3218"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fewer<sp/>producers<sp/>in<sp/>the<sp/>new<sp/>schedule</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3219"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3220"><highlight class="comment"><sp/><sp/><sp/>BOOST_REQUIRE_EQUAL(<sp/>2,<sp/>producer_keys.size()<sp/>);</highlight></codeline>
<codeline lineno="3221"><highlight class="comment"><sp/><sp/><sp/>BOOST_REQUIRE_EQUAL(<sp/>name(&quot;defproducer1&quot;),<sp/>producer_keys[0].producer_name<sp/>);</highlight></codeline>
<codeline lineno="3222"><highlight class="comment"><sp/><sp/><sp/>BOOST_REQUIRE_EQUAL(<sp/>name(&quot;defproducer3&quot;),<sp/>producer_keys[1].producer_name<sp/>);</highlight></codeline>
<codeline lineno="3223"><highlight class="comment"><sp/><sp/><sp/>//config<sp/>=<sp/>config_to_variant(<sp/>control-&gt;get_global_properties().configuration<sp/>);</highlight></codeline>
<codeline lineno="3224"><highlight class="comment"><sp/><sp/><sp/>//auto<sp/>prod3_config<sp/>=<sp/>testing::filter_fields(<sp/>config,<sp/>producer_parameters_example(<sp/>3<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3225"><highlight class="comment"><sp/><sp/><sp/>//REQUIRE_EQUAL_OBJECTS(prod3_config,<sp/>config);</highlight></codeline>
<codeline lineno="3226"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3227"><highlight class="normal"></highlight></codeline>
<codeline lineno="3228"><highlight class="normal">}<sp/><ref refid="eosio_8system__tests_8cpp_1a057cb719bfa291fae56dc6ba5fa7a8d1" kindref="member">FC_LOG_AND_RETHROW</ref>()</highlight></codeline>
<codeline lineno="3229"><highlight class="normal"></highlight></codeline>
<codeline lineno="3230"><highlight class="normal"></highlight></codeline>
<codeline lineno="3231"><highlight class="normal"><ref refid="eosio_8system__tests_8cpp_1a8a1841911da283583ec346df954d73a1" kindref="member">BOOST_FIXTURE_TEST_CASE</ref>(<sp/>buyname,<sp/><ref refid="classeosio__system_1_1eosio__system__tester" kindref="compound">eosio_system_tester</ref><sp/>)<sp/><ref refid="eosio_8system__tests_8cpp_1ae89aac94d502abdd3c8d055174c221fc" kindref="member">try</ref><sp/>{</highlight></codeline>
<codeline lineno="3232"><highlight class="normal"><sp/><sp/><sp/>create_accounts_with_resources(<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;dan&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;sam&quot;</highlight><highlight class="normal">_n<sp/>}<sp/>);</highlight></codeline>
<codeline lineno="3233"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a792dc87878d55cfa11f862e9e6d5cc05" kindref="member">transfer</ref>(<sp/>config::system_account_name,<sp/></highlight><highlight class="stringliteral">&quot;dan&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(<sp/></highlight><highlight class="stringliteral">&quot;10000.0000&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3234"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a792dc87878d55cfa11f862e9e6d5cc05" kindref="member">transfer</ref>(<sp/>config::system_account_name,<sp/></highlight><highlight class="stringliteral">&quot;sam&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(<sp/></highlight><highlight class="stringliteral">&quot;10000.0000&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3235"><highlight class="normal"><sp/><sp/><sp/>stake_with_transfer(<sp/>config::system_account_name,<sp/></highlight><highlight class="stringliteral">&quot;sam&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(<sp/></highlight><highlight class="stringliteral">&quot;80000000.0000&quot;</highlight><highlight class="normal"><sp/>),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(<sp/></highlight><highlight class="stringliteral">&quot;80000000.0000&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3236"><highlight class="normal"><sp/><sp/><sp/>stake_with_transfer(<sp/>config::system_account_name,<sp/></highlight><highlight class="stringliteral">&quot;dan&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(<sp/></highlight><highlight class="stringliteral">&quot;80000000.0000&quot;</highlight><highlight class="normal"><sp/>),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(<sp/></highlight><highlight class="stringliteral">&quot;80000000.0000&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3237"><highlight class="normal"></highlight></codeline>
<codeline lineno="3238"><highlight class="normal"><sp/><sp/><sp/>regproducer(<sp/>config::system_account_name<sp/>);</highlight></codeline>
<codeline lineno="3239"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>vote(<sp/></highlight><highlight class="stringliteral">&quot;sam&quot;</highlight><highlight class="normal">_n,<sp/>{<sp/>config::system_account_name<sp/>}<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3240"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>wait<sp/>14<sp/>days<sp/>after<sp/>min<sp/>required<sp/>amount<sp/>has<sp/>been<sp/>staked</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3241"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::days(7)<sp/>);</highlight></codeline>
<codeline lineno="3242"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>vote(<sp/></highlight><highlight class="stringliteral">&quot;dan&quot;</highlight><highlight class="normal">_n,<sp/>{<sp/>config::system_account_name<sp/>}<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3243"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::days(7)<sp/>);</highlight></codeline>
<codeline lineno="3244"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>();</highlight></codeline>
<codeline lineno="3245"><highlight class="normal"></highlight></codeline>
<codeline lineno="3246"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1ae2769fc43413630418d86ae9d0bfc792" kindref="member">BOOST_REQUIRE_EXCEPTION</ref>(<sp/>create_accounts_with_resources(<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;fail&quot;</highlight><highlight class="normal">_n<sp/>},<sp/></highlight><highlight class="stringliteral">&quot;dan&quot;</highlight><highlight class="normal">_n<sp/>),<sp/></highlight><highlight class="comment">//<sp/>dan<sp/>shouldn&apos;t<sp/>be<sp/>able<sp/>to<sp/>create<sp/>fail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1ab76bd4660c490cd9938c4daad9c92077" kindref="member">eosio_assert_message_exception</ref>,<sp/><ref refid="eosio_8msig__tests_8cpp_1ae53689a88727b2583f9317c0b61ff4fd" kindref="member">eosio_assert_message_is</ref>(<sp/></highlight><highlight class="stringliteral">&quot;no<sp/>active<sp/>bid<sp/>for<sp/>name&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3248"><highlight class="normal"><sp/><sp/><sp/>bidname(<sp/></highlight><highlight class="stringliteral">&quot;dan&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nofail&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(<sp/></highlight><highlight class="stringliteral">&quot;1.0000&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3249"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/></highlight><highlight class="stringliteral">&quot;assertion<sp/>failure<sp/>with<sp/>message:<sp/>must<sp/>increase<sp/>bid<sp/>by<sp/>10%&quot;</highlight><highlight class="normal">,<sp/>bidname(<sp/></highlight><highlight class="stringliteral">&quot;sam&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nofail&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(<sp/></highlight><highlight class="stringliteral">&quot;1.0000&quot;</highlight><highlight class="normal"><sp/>)<sp/>));<sp/></highlight><highlight class="comment">//<sp/>didn&apos;t<sp/>increase<sp/>bid<sp/>by<sp/>10%</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3250"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>bidname(<sp/></highlight><highlight class="stringliteral">&quot;sam&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nofail&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(<sp/></highlight><highlight class="stringliteral">&quot;2.0000&quot;</highlight><highlight class="normal"><sp/>)<sp/>));<sp/></highlight><highlight class="comment">//<sp/>didn&apos;t<sp/>increase<sp/>bid<sp/>by<sp/>10%</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3251"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::days(1)<sp/>);</highlight></codeline>
<codeline lineno="3252"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>();</highlight></codeline>
<codeline lineno="3253"><highlight class="normal"></highlight></codeline>
<codeline lineno="3254"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1ae2769fc43413630418d86ae9d0bfc792" kindref="member">BOOST_REQUIRE_EXCEPTION</ref>(<sp/>create_accounts_with_resources(<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;nofail&quot;</highlight><highlight class="normal">_n<sp/>},<sp/></highlight><highlight class="stringliteral">&quot;dan&quot;</highlight><highlight class="normal">_n<sp/>),<sp/></highlight><highlight class="comment">//<sp/>dan<sp/>shoudn&apos;t<sp/>be<sp/>able<sp/>to<sp/>do<sp/>this,<sp/>sam<sp/>won</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1ab76bd4660c490cd9938c4daad9c92077" kindref="member">eosio_assert_message_exception</ref>,<sp/><ref refid="eosio_8msig__tests_8cpp_1ae53689a88727b2583f9317c0b61ff4fd" kindref="member">eosio_assert_message_is</ref>(<sp/></highlight><highlight class="stringliteral">&quot;only<sp/>highest<sp/>bidder<sp/>can<sp/>claim&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3256"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//wlog(<sp/>&quot;verify<sp/>sam<sp/>can<sp/>create<sp/>nofail&quot;<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3257"><highlight class="normal"><sp/><sp/><sp/>create_accounts_with_resources(<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;nofail&quot;</highlight><highlight class="normal">_n<sp/>},<sp/></highlight><highlight class="stringliteral">&quot;sam&quot;</highlight><highlight class="normal">_n<sp/>);<sp/></highlight><highlight class="comment">//<sp/>sam<sp/>should<sp/>be<sp/>able<sp/>to<sp/>do<sp/>this,<sp/>he<sp/>won<sp/>the<sp/>bid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3258"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//wlog(<sp/>&quot;verify<sp/>nofail<sp/>can<sp/>create<sp/>test.nofail&quot;<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3259"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a792dc87878d55cfa11f862e9e6d5cc05" kindref="member">transfer</ref>(<sp/></highlight><highlight class="stringliteral">&quot;eosio&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nofail&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(<sp/></highlight><highlight class="stringliteral">&quot;1000.0000&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3260"><highlight class="normal"><sp/><sp/><sp/>create_accounts_with_resources(<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;test.nofail&quot;</highlight><highlight class="normal">_n<sp/>},<sp/></highlight><highlight class="stringliteral">&quot;nofail&quot;</highlight><highlight class="normal">_n<sp/>);<sp/></highlight><highlight class="comment">//<sp/>only<sp/>nofail<sp/>can<sp/>create<sp/>test.nofail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3261"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//wlog(<sp/>&quot;verify<sp/>dan<sp/>cannot<sp/>create<sp/>test.fail&quot;<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3262"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1ae2769fc43413630418d86ae9d0bfc792" kindref="member">BOOST_REQUIRE_EXCEPTION</ref>(<sp/>create_accounts_with_resources(<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;test.fail&quot;</highlight><highlight class="normal">_n<sp/>},<sp/></highlight><highlight class="stringliteral">&quot;dan&quot;</highlight><highlight class="normal">_n<sp/>),<sp/></highlight><highlight class="comment">//<sp/>dan<sp/>shouldn&apos;t<sp/>be<sp/>able<sp/>to<sp/>do<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1ab76bd4660c490cd9938c4daad9c92077" kindref="member">eosio_assert_message_exception</ref>,<sp/><ref refid="eosio_8msig__tests_8cpp_1ae53689a88727b2583f9317c0b61ff4fd" kindref="member">eosio_assert_message_is</ref>(<sp/></highlight><highlight class="stringliteral">&quot;only<sp/>suffix<sp/>may<sp/>create<sp/>this<sp/>account&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3264"><highlight class="normal"></highlight></codeline>
<codeline lineno="3265"><highlight class="normal"><sp/><sp/><sp/>create_accounts_with_resources(<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;goodgoodgood&quot;</highlight><highlight class="normal">_n<sp/>},<sp/></highlight><highlight class="stringliteral">&quot;dan&quot;</highlight><highlight class="normal">_n<sp/>);<sp/></highlight></codeline>
<codeline lineno="3266"><highlight class="normal">}<sp/><ref refid="eosio_8system__tests_8cpp_1a057cb719bfa291fae56dc6ba5fa7a8d1" kindref="member">FC_LOG_AND_RETHROW</ref>()</highlight></codeline>
<codeline lineno="3267"><highlight class="normal"></highlight></codeline>
<codeline lineno="3268"><highlight class="normal"><ref refid="eosio_8system__tests_8cpp_1a8a1841911da283583ec346df954d73a1" kindref="member">BOOST_FIXTURE_TEST_CASE</ref>(<sp/>bid_invalid_names,<sp/><ref refid="classeosio__system_1_1eosio__system__tester" kindref="compound">eosio_system_tester</ref><sp/>)<sp/><ref refid="eosio_8system__tests_8cpp_1ae89aac94d502abdd3c8d055174c221fc" kindref="member">try</ref><sp/>{</highlight></codeline>
<codeline lineno="3269"><highlight class="normal"><sp/><sp/><sp/>create_accounts_with_resources(<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;dan&quot;</highlight><highlight class="normal">_n<sp/>}<sp/>);</highlight></codeline>
<codeline lineno="3270"><highlight class="normal"></highlight></codeline>
<codeline lineno="3271"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(<sp/></highlight><highlight class="stringliteral">&quot;you<sp/>can<sp/>only<sp/>bid<sp/>on<sp/>top-level<sp/>suffix&quot;</highlight><highlight class="normal"><sp/>),</highlight></codeline>
<codeline lineno="3272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bidname(<sp/></highlight><highlight class="stringliteral">&quot;dan&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;abcdefg.12345&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(<sp/></highlight><highlight class="stringliteral">&quot;1.0000&quot;</highlight><highlight class="normal"><sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3273"><highlight class="normal"></highlight></codeline>
<codeline lineno="3274"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(<sp/></highlight><highlight class="stringliteral">&quot;the<sp/>empty<sp/>name<sp/>is<sp/>not<sp/>a<sp/>valid<sp/>account<sp/>name<sp/>to<sp/>bid<sp/>on&quot;</highlight><highlight class="normal"><sp/>),</highlight></codeline>
<codeline lineno="3275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bidname(<sp/></highlight><highlight class="stringliteral">&quot;dan&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(<sp/></highlight><highlight class="stringliteral">&quot;1.0000&quot;</highlight><highlight class="normal"><sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3276"><highlight class="normal"></highlight></codeline>
<codeline lineno="3277"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(<sp/></highlight><highlight class="stringliteral">&quot;13<sp/>character<sp/>names<sp/>are<sp/>not<sp/>valid<sp/>account<sp/>names<sp/>to<sp/>bid<sp/>on&quot;</highlight><highlight class="normal"><sp/>),</highlight></codeline>
<codeline lineno="3278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bidname(<sp/></highlight><highlight class="stringliteral">&quot;dan&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;abcdefgh12345&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(<sp/></highlight><highlight class="stringliteral">&quot;1.0000&quot;</highlight><highlight class="normal"><sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3279"><highlight class="normal"></highlight></codeline>
<codeline lineno="3280"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(<sp/></highlight><highlight class="stringliteral">&quot;accounts<sp/>with<sp/>12<sp/>character<sp/>names<sp/>and<sp/>no<sp/>dots<sp/>can<sp/>be<sp/>created<sp/>without<sp/>bidding<sp/>required&quot;</highlight><highlight class="normal"><sp/>),</highlight></codeline>
<codeline lineno="3281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bidname(<sp/></highlight><highlight class="stringliteral">&quot;dan&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;abcdefg12345&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(<sp/></highlight><highlight class="stringliteral">&quot;1.0000&quot;</highlight><highlight class="normal"><sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3282"><highlight class="normal"></highlight></codeline>
<codeline lineno="3283"><highlight class="normal">}<sp/><ref refid="eosio_8system__tests_8cpp_1a057cb719bfa291fae56dc6ba5fa7a8d1" kindref="member">FC_LOG_AND_RETHROW</ref>()</highlight></codeline>
<codeline lineno="3284"><highlight class="normal"></highlight></codeline>
<codeline lineno="3285"><highlight class="normal"><ref refid="eosio_8system__tests_8cpp_1a8a1841911da283583ec346df954d73a1" kindref="member">BOOST_FIXTURE_TEST_CASE</ref>(<sp/>multiple_namebids,<sp/><ref refid="classeosio__system_1_1eosio__system__tester" kindref="compound">eosio_system_tester</ref><sp/>)<sp/><ref refid="eosio_8system__tests_8cpp_1ae89aac94d502abdd3c8d055174c221fc" kindref="member">try</ref><sp/>{</highlight></codeline>
<codeline lineno="3286"><highlight class="normal"></highlight></codeline>
<codeline lineno="3287"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>not_closed_message(</highlight><highlight class="stringliteral">&quot;auction<sp/>for<sp/>name<sp/>is<sp/>not<sp/>closed<sp/>yet&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3288"><highlight class="normal"></highlight></codeline>
<codeline lineno="3289"><highlight class="normal"><sp/><sp/><sp/>std::vector&lt;account_name&gt;<sp/><ref refid="structaccounts" kindref="compound">accounts</ref><sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;alice&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;bob&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;carl&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;david&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;eve&quot;</highlight><highlight class="normal">_n<sp/>};</highlight></codeline>
<codeline lineno="3290"><highlight class="normal"><sp/><sp/><sp/>create_accounts_with_resources(<sp/><ref refid="structaccounts" kindref="compound">accounts</ref><sp/>);</highlight></codeline>
<codeline lineno="3291"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>a:<sp/><ref refid="structaccounts" kindref="compound">accounts</ref><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a792dc87878d55cfa11f862e9e6d5cc05" kindref="member">transfer</ref>(<sp/>config::system_account_name,<sp/>a,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(<sp/></highlight><highlight class="stringliteral">&quot;10000.0000&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(<sp/></highlight><highlight class="stringliteral">&quot;10000.0000&quot;</highlight><highlight class="normal"><sp/>),<sp/>get_balance(a)<sp/>);</highlight></codeline>
<codeline lineno="3294"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3295"><highlight class="normal"><sp/><sp/><sp/>create_accounts_with_resources(<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;producer&quot;</highlight><highlight class="normal">_n<sp/>}<sp/>);</highlight></codeline>
<codeline lineno="3296"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>regproducer(<sp/></highlight><highlight class="stringliteral">&quot;producer&quot;</highlight><highlight class="normal">_n<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3297"><highlight class="normal"></highlight></codeline>
<codeline lineno="3298"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>();</highlight></codeline>
<codeline lineno="3299"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>stake<sp/>but<sp/>but<sp/>not<sp/>enough<sp/>to<sp/>go<sp/>live</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3300"><highlight class="normal"><sp/><sp/><sp/>stake_with_transfer(<sp/>config::system_account_name,<sp/></highlight><highlight class="stringliteral">&quot;bob&quot;</highlight><highlight class="normal">_n,<sp/><sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(<sp/></highlight><highlight class="stringliteral">&quot;35000000.0000&quot;</highlight><highlight class="normal"><sp/>),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(<sp/></highlight><highlight class="stringliteral">&quot;35000000.0000&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3301"><highlight class="normal"><sp/><sp/><sp/>stake_with_transfer(<sp/>config::system_account_name,<sp/></highlight><highlight class="stringliteral">&quot;carl&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(<sp/></highlight><highlight class="stringliteral">&quot;35000000.0000&quot;</highlight><highlight class="normal"><sp/>),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(<sp/></highlight><highlight class="stringliteral">&quot;35000000.0000&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3302"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>vote(<sp/></highlight><highlight class="stringliteral">&quot;bob&quot;</highlight><highlight class="normal">_n,<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;producer&quot;</highlight><highlight class="normal">_n<sp/>}<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3303"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>vote(<sp/></highlight><highlight class="stringliteral">&quot;carl&quot;</highlight><highlight class="normal">_n,<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;producer&quot;</highlight><highlight class="normal">_n<sp/>}<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3304"><highlight class="normal"></highlight></codeline>
<codeline lineno="3305"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>start<sp/>bids</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3306"><highlight class="normal"><sp/><sp/><sp/>bidname(<sp/></highlight><highlight class="stringliteral">&quot;bob&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="stringliteral">&quot;prefa&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1.0003&quot;</highlight><highlight class="normal">)<sp/>);</highlight></codeline>
<codeline lineno="3307"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(<sp/></highlight><highlight class="stringliteral">&quot;9998.9997&quot;</highlight><highlight class="normal"><sp/>),<sp/>get_balance(</highlight><highlight class="stringliteral">&quot;bob&quot;</highlight><highlight class="normal">)<sp/>);</highlight></codeline>
<codeline lineno="3308"><highlight class="normal"><sp/><sp/><sp/>bidname(<sp/></highlight><highlight class="stringliteral">&quot;bob&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="stringliteral">&quot;prefb&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1.0000&quot;</highlight><highlight class="normal">)<sp/>);</highlight></codeline>
<codeline lineno="3309"><highlight class="normal"><sp/><sp/><sp/>bidname(<sp/></highlight><highlight class="stringliteral">&quot;bob&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="stringliteral">&quot;prefc&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1.0000&quot;</highlight><highlight class="normal">)<sp/>);</highlight></codeline>
<codeline lineno="3310"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(<sp/></highlight><highlight class="stringliteral">&quot;9996.9997&quot;</highlight><highlight class="normal"><sp/>),<sp/>get_balance(</highlight><highlight class="stringliteral">&quot;bob&quot;</highlight><highlight class="normal">)<sp/>);</highlight></codeline>
<codeline lineno="3311"><highlight class="normal"></highlight></codeline>
<codeline lineno="3312"><highlight class="normal"><sp/><sp/><sp/>bidname(<sp/></highlight><highlight class="stringliteral">&quot;carl&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;prefd&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1.0000&quot;</highlight><highlight class="normal">)<sp/>);</highlight></codeline>
<codeline lineno="3313"><highlight class="normal"><sp/><sp/><sp/>bidname(<sp/></highlight><highlight class="stringliteral">&quot;carl&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;prefe&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1.0000&quot;</highlight><highlight class="normal">)<sp/>);</highlight></codeline>
<codeline lineno="3314"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(<sp/></highlight><highlight class="stringliteral">&quot;9998.0000&quot;</highlight><highlight class="normal"><sp/>),<sp/>get_balance(</highlight><highlight class="stringliteral">&quot;carl&quot;</highlight><highlight class="normal">)<sp/>);</highlight></codeline>
<codeline lineno="3315"><highlight class="normal"></highlight></codeline>
<codeline lineno="3316"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>error(</highlight><highlight class="stringliteral">&quot;assertion<sp/>failure<sp/>with<sp/>message:<sp/>account<sp/>is<sp/>already<sp/>highest<sp/>bidder&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="3317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bidname(<sp/></highlight><highlight class="stringliteral">&quot;bob&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;prefb&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1.1001&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3318"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>error(</highlight><highlight class="stringliteral">&quot;assertion<sp/>failure<sp/>with<sp/>message:<sp/>must<sp/>increase<sp/>bid<sp/>by<sp/>10%&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="3319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bidname(<sp/></highlight><highlight class="stringliteral">&quot;alice&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;prefb&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1.0999&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3320"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(<sp/></highlight><highlight class="stringliteral">&quot;9996.9997&quot;</highlight><highlight class="normal"><sp/>),<sp/>get_balance(</highlight><highlight class="stringliteral">&quot;bob&quot;</highlight><highlight class="normal">)<sp/>);</highlight></codeline>
<codeline lineno="3321"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(<sp/></highlight><highlight class="stringliteral">&quot;10000.0000&quot;</highlight><highlight class="normal"><sp/>),<sp/>get_balance(</highlight><highlight class="stringliteral">&quot;alice&quot;</highlight><highlight class="normal">)<sp/>);</highlight></codeline>
<codeline lineno="3322"><highlight class="normal"></highlight></codeline>
<codeline lineno="3323"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>alice<sp/>outbids<sp/>bob<sp/>on<sp/>prefb</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3324"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>initial_names_balance<sp/>=<sp/>get_balance(</highlight><highlight class="stringliteral">&quot;eosio.names&quot;</highlight><highlight class="normal">_n);</highlight></codeline>
<codeline lineno="3326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),</highlight></codeline>
<codeline lineno="3327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bidname(<sp/></highlight><highlight class="stringliteral">&quot;alice&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;prefb&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1.1001&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(<sp/></highlight><highlight class="stringliteral">&quot;9997.9997&quot;</highlight><highlight class="normal"><sp/>),<sp/>get_balance(</highlight><highlight class="stringliteral">&quot;bob&quot;</highlight><highlight class="normal">)<sp/>);</highlight></codeline>
<codeline lineno="3329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(<sp/></highlight><highlight class="stringliteral">&quot;9998.8999&quot;</highlight><highlight class="normal"><sp/>),<sp/>get_balance(</highlight><highlight class="stringliteral">&quot;alice&quot;</highlight><highlight class="normal">)<sp/>);</highlight></codeline>
<codeline lineno="3330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>initial_names_balance<sp/>+<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;0.1001&quot;</highlight><highlight class="normal">),<sp/>get_balance(</highlight><highlight class="stringliteral">&quot;eosio.names&quot;</highlight><highlight class="normal">_n)<sp/>);</highlight></codeline>
<codeline lineno="3331"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3332"><highlight class="normal"></highlight></codeline>
<codeline lineno="3333"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>david<sp/>outbids<sp/>carl<sp/>on<sp/>prefd</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3334"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(<sp/></highlight><highlight class="stringliteral">&quot;9998.0000&quot;</highlight><highlight class="normal"><sp/>),<sp/>get_balance(</highlight><highlight class="stringliteral">&quot;carl&quot;</highlight><highlight class="normal">)<sp/>);</highlight></codeline>
<codeline lineno="3336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(<sp/></highlight><highlight class="stringliteral">&quot;10000.0000&quot;</highlight><highlight class="normal"><sp/>),<sp/>get_balance(</highlight><highlight class="stringliteral">&quot;david&quot;</highlight><highlight class="normal">)<sp/>);</highlight></codeline>
<codeline lineno="3337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),</highlight></codeline>
<codeline lineno="3338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bidname(<sp/></highlight><highlight class="stringliteral">&quot;david&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;prefd&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1.9900&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(<sp/></highlight><highlight class="stringliteral">&quot;9999.0000&quot;</highlight><highlight class="normal"><sp/>),<sp/>get_balance(</highlight><highlight class="stringliteral">&quot;carl&quot;</highlight><highlight class="normal">)<sp/>);</highlight></codeline>
<codeline lineno="3340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(<sp/></highlight><highlight class="stringliteral">&quot;9998.0100&quot;</highlight><highlight class="normal"><sp/>),<sp/>get_balance(</highlight><highlight class="stringliteral">&quot;david&quot;</highlight><highlight class="normal">)<sp/>);</highlight></codeline>
<codeline lineno="3341"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3342"><highlight class="normal"></highlight></codeline>
<codeline lineno="3343"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>eve<sp/>outbids<sp/>carl<sp/>on<sp/>prefe</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3344"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),</highlight></codeline>
<codeline lineno="3346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bidname(<sp/></highlight><highlight class="stringliteral">&quot;eve&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;prefe&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1.7200&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3347"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3348"><highlight class="normal"></highlight></codeline>
<codeline lineno="3349"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::days(14)<sp/>);</highlight></codeline>
<codeline lineno="3350"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>();</highlight></codeline>
<codeline lineno="3351"><highlight class="normal"></highlight></codeline>
<codeline lineno="3352"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>highest<sp/>bid<sp/>is<sp/>from<sp/>david<sp/>for<sp/>prefd<sp/>but<sp/>no<sp/>bids<sp/>can<sp/>be<sp/>closed<sp/>yet</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3353"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1ae2769fc43413630418d86ae9d0bfc792" kindref="member">BOOST_REQUIRE_EXCEPTION</ref>(<sp/><ref refid="eosio_8msig__tests_8cpp_1a791a80df1bef25c60fe34353c84ed5bc" kindref="member">create_account_with_resources</ref>(<sp/></highlight><highlight class="stringliteral">&quot;prefd&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;david&quot;</highlight><highlight class="normal">_n<sp/>),</highlight></codeline>
<codeline lineno="3354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fc::exception,<sp/>fc_assert_exception_message_is(<sp/>not_closed_message<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3355"><highlight class="normal"></highlight></codeline>
<codeline lineno="3356"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>stake<sp/>enough<sp/>to<sp/>go<sp/>above<sp/>the<sp/>15%<sp/>threshold</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3357"><highlight class="normal"><sp/><sp/><sp/>stake_with_transfer(<sp/>config::system_account_name,<sp/></highlight><highlight class="stringliteral">&quot;alice&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(<sp/></highlight><highlight class="stringliteral">&quot;10000000.0000&quot;</highlight><highlight class="normal"><sp/>),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(<sp/></highlight><highlight class="stringliteral">&quot;10000000.0000&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3358"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(0,<sp/>get_producer_info(</highlight><highlight class="stringliteral">&quot;producer&quot;</highlight><highlight class="normal">)[</highlight><highlight class="stringliteral">&quot;unpaid_blocks&quot;</highlight><highlight class="normal">].as&lt;uint32_t&gt;());</highlight></codeline>
<codeline lineno="3359"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>vote(<sp/></highlight><highlight class="stringliteral">&quot;alice&quot;</highlight><highlight class="normal">_n,<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;producer&quot;</highlight><highlight class="normal">_n<sp/>}<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3360"><highlight class="normal"></highlight></codeline>
<codeline lineno="3361"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>need<sp/>to<sp/>wait<sp/>for<sp/>14<sp/>days<sp/>after<sp/>going<sp/>live</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3362"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aa1213f0f2c7a53ea968859f3cab582c3" kindref="member">produce_blocks</ref>(10);</highlight></codeline>
<codeline lineno="3363"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::days(2)<sp/>);</highlight></codeline>
<codeline lineno="3364"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aa1213f0f2c7a53ea968859f3cab582c3" kindref="member">produce_blocks</ref>(<sp/>10<sp/>);</highlight></codeline>
<codeline lineno="3365"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1ae2769fc43413630418d86ae9d0bfc792" kindref="member">BOOST_REQUIRE_EXCEPTION</ref>(<sp/><ref refid="eosio_8msig__tests_8cpp_1a791a80df1bef25c60fe34353c84ed5bc" kindref="member">create_account_with_resources</ref>(<sp/></highlight><highlight class="stringliteral">&quot;prefd&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;david&quot;</highlight><highlight class="normal">_n<sp/>),</highlight></codeline>
<codeline lineno="3366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fc::exception,<sp/>fc_assert_exception_message_is(<sp/>not_closed_message<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3367"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>it&apos;s<sp/>been<sp/>14<sp/>days,<sp/>auction<sp/>for<sp/>prefd<sp/>has<sp/>been<sp/>closed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3368"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::days(12)<sp/>);</highlight></codeline>
<codeline lineno="3369"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a791a80df1bef25c60fe34353c84ed5bc" kindref="member">create_account_with_resources</ref>(<sp/></highlight><highlight class="stringliteral">&quot;prefd&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;david&quot;</highlight><highlight class="normal">_n<sp/>);</highlight></codeline>
<codeline lineno="3370"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aa1213f0f2c7a53ea968859f3cab582c3" kindref="member">produce_blocks</ref>(2);</highlight></codeline>
<codeline lineno="3371"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::hours(23)<sp/>);</highlight></codeline>
<codeline lineno="3372"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>auctions<sp/>for<sp/>prefa,<sp/>prefb,<sp/>prefc,<sp/>prefe<sp/>haven&apos;t<sp/>been<sp/>closed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3373"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1ae2769fc43413630418d86ae9d0bfc792" kindref="member">BOOST_REQUIRE_EXCEPTION</ref>(<sp/><ref refid="eosio_8msig__tests_8cpp_1a791a80df1bef25c60fe34353c84ed5bc" kindref="member">create_account_with_resources</ref>(<sp/></highlight><highlight class="stringliteral">&quot;prefa&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;bob&quot;</highlight><highlight class="normal">_n<sp/>),</highlight></codeline>
<codeline lineno="3374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fc::exception,<sp/>fc_assert_exception_message_is(<sp/>not_closed_message<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3375"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1ae2769fc43413630418d86ae9d0bfc792" kindref="member">BOOST_REQUIRE_EXCEPTION</ref>(<sp/><ref refid="eosio_8msig__tests_8cpp_1a791a80df1bef25c60fe34353c84ed5bc" kindref="member">create_account_with_resources</ref>(<sp/></highlight><highlight class="stringliteral">&quot;prefb&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;alice&quot;</highlight><highlight class="normal">_n<sp/>),</highlight></codeline>
<codeline lineno="3376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fc::exception,<sp/>fc_assert_exception_message_is(<sp/>not_closed_message<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3377"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1ae2769fc43413630418d86ae9d0bfc792" kindref="member">BOOST_REQUIRE_EXCEPTION</ref>(<sp/><ref refid="eosio_8msig__tests_8cpp_1a791a80df1bef25c60fe34353c84ed5bc" kindref="member">create_account_with_resources</ref>(<sp/></highlight><highlight class="stringliteral">&quot;prefc&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;bob&quot;</highlight><highlight class="normal">_n<sp/>),</highlight></codeline>
<codeline lineno="3378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fc::exception,<sp/>fc_assert_exception_message_is(<sp/>not_closed_message<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3379"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1ae2769fc43413630418d86ae9d0bfc792" kindref="member">BOOST_REQUIRE_EXCEPTION</ref>(<sp/><ref refid="eosio_8msig__tests_8cpp_1a791a80df1bef25c60fe34353c84ed5bc" kindref="member">create_account_with_resources</ref>(<sp/></highlight><highlight class="stringliteral">&quot;prefe&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;eve&quot;</highlight><highlight class="normal">_n<sp/>),</highlight></codeline>
<codeline lineno="3380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fc::exception,<sp/>fc_assert_exception_message_is(<sp/>not_closed_message<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3381"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>attemp<sp/>to<sp/>create<sp/>account<sp/>with<sp/>no<sp/>bid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3382"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1ae2769fc43413630418d86ae9d0bfc792" kindref="member">BOOST_REQUIRE_EXCEPTION</ref>(<sp/><ref refid="eosio_8msig__tests_8cpp_1a791a80df1bef25c60fe34353c84ed5bc" kindref="member">create_account_with_resources</ref>(<sp/></highlight><highlight class="stringliteral">&quot;prefg&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;alice&quot;</highlight><highlight class="normal">_n<sp/>),</highlight></codeline>
<codeline lineno="3383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fc::exception,<sp/>fc_assert_exception_message_is(<sp/></highlight><highlight class="stringliteral">&quot;no<sp/>active<sp/>bid<sp/>for<sp/>name&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3384"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>changing<sp/>highest<sp/>bid<sp/>pushes<sp/>auction<sp/>closing<sp/>time<sp/>by<sp/>24<sp/>hours</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3385"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),</highlight></codeline>
<codeline lineno="3386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bidname(<sp/></highlight><highlight class="stringliteral">&quot;eve&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="stringliteral">&quot;prefb&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;2.1880&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3387"><highlight class="normal"></highlight></codeline>
<codeline lineno="3388"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::hours(22)<sp/>);</highlight></codeline>
<codeline lineno="3389"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aa1213f0f2c7a53ea968859f3cab582c3" kindref="member">produce_blocks</ref>(2);</highlight></codeline>
<codeline lineno="3390"><highlight class="normal"></highlight></codeline>
<codeline lineno="3391"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1ae2769fc43413630418d86ae9d0bfc792" kindref="member">BOOST_REQUIRE_EXCEPTION</ref>(<sp/><ref refid="eosio_8msig__tests_8cpp_1a791a80df1bef25c60fe34353c84ed5bc" kindref="member">create_account_with_resources</ref>(<sp/></highlight><highlight class="stringliteral">&quot;prefb&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;eve&quot;</highlight><highlight class="normal">_n<sp/>),</highlight></codeline>
<codeline lineno="3392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fc::exception,<sp/>fc_assert_exception_message_is(<sp/>not_closed_message<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3393"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>changing<sp/>a<sp/>bid<sp/>that<sp/>is<sp/>not<sp/>the<sp/>highest<sp/>does<sp/>not<sp/>push<sp/>closing<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3394"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),</highlight></codeline>
<codeline lineno="3395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bidname(<sp/></highlight><highlight class="stringliteral">&quot;carl&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;prefe&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;2.0980&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3396"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::hours(2)<sp/>);</highlight></codeline>
<codeline lineno="3397"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aa1213f0f2c7a53ea968859f3cab582c3" kindref="member">produce_blocks</ref>(2);</highlight></codeline>
<codeline lineno="3398"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bid<sp/>for<sp/>prefb<sp/>has<sp/>closed,<sp/>only<sp/>highest<sp/>bidder<sp/>can<sp/>claim</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3399"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1ae2769fc43413630418d86ae9d0bfc792" kindref="member">BOOST_REQUIRE_EXCEPTION</ref>(<sp/><ref refid="eosio_8msig__tests_8cpp_1a791a80df1bef25c60fe34353c84ed5bc" kindref="member">create_account_with_resources</ref>(<sp/></highlight><highlight class="stringliteral">&quot;prefb&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;alice&quot;</highlight><highlight class="normal">_n<sp/>),</highlight></codeline>
<codeline lineno="3400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1ab76bd4660c490cd9938c4daad9c92077" kindref="member">eosio_assert_message_exception</ref>,<sp/><ref refid="eosio_8msig__tests_8cpp_1ae53689a88727b2583f9317c0b61ff4fd" kindref="member">eosio_assert_message_is</ref>(<sp/></highlight><highlight class="stringliteral">&quot;only<sp/>highest<sp/>bidder<sp/>can<sp/>claim&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3401"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1ae2769fc43413630418d86ae9d0bfc792" kindref="member">BOOST_REQUIRE_EXCEPTION</ref>(<sp/><ref refid="eosio_8msig__tests_8cpp_1a791a80df1bef25c60fe34353c84ed5bc" kindref="member">create_account_with_resources</ref>(<sp/></highlight><highlight class="stringliteral">&quot;prefb&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;carl&quot;</highlight><highlight class="normal">_n<sp/>),</highlight></codeline>
<codeline lineno="3402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1ab76bd4660c490cd9938c4daad9c92077" kindref="member">eosio_assert_message_exception</ref>,<sp/><ref refid="eosio_8msig__tests_8cpp_1ae53689a88727b2583f9317c0b61ff4fd" kindref="member">eosio_assert_message_is</ref>(<sp/></highlight><highlight class="stringliteral">&quot;only<sp/>highest<sp/>bidder<sp/>can<sp/>claim&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3403"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a791a80df1bef25c60fe34353c84ed5bc" kindref="member">create_account_with_resources</ref>(<sp/></highlight><highlight class="stringliteral">&quot;prefb&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;eve&quot;</highlight><highlight class="normal">_n<sp/>);</highlight></codeline>
<codeline lineno="3404"><highlight class="normal"></highlight></codeline>
<codeline lineno="3405"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1ae2769fc43413630418d86ae9d0bfc792" kindref="member">BOOST_REQUIRE_EXCEPTION</ref>(<sp/><ref refid="eosio_8msig__tests_8cpp_1a791a80df1bef25c60fe34353c84ed5bc" kindref="member">create_account_with_resources</ref>(<sp/></highlight><highlight class="stringliteral">&quot;prefe&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;carl&quot;</highlight><highlight class="normal">_n<sp/>),</highlight></codeline>
<codeline lineno="3406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fc::exception,<sp/>fc_assert_exception_message_is(<sp/>not_closed_message<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3407"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>();</highlight></codeline>
<codeline lineno="3408"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::hours(24)<sp/>);</highlight></codeline>
<codeline lineno="3409"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>by<sp/>now<sp/>bid<sp/>for<sp/>prefe<sp/>has<sp/>closed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3410"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a791a80df1bef25c60fe34353c84ed5bc" kindref="member">create_account_with_resources</ref>(<sp/></highlight><highlight class="stringliteral">&quot;prefe&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;carl&quot;</highlight><highlight class="normal">_n<sp/>);</highlight></codeline>
<codeline lineno="3411"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>prefe<sp/>can<sp/>now<sp/>create<sp/>*.prefe</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3412"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1ae2769fc43413630418d86ae9d0bfc792" kindref="member">BOOST_REQUIRE_EXCEPTION</ref>(<sp/><ref refid="eosio_8msig__tests_8cpp_1a791a80df1bef25c60fe34353c84ed5bc" kindref="member">create_account_with_resources</ref>(<sp/></highlight><highlight class="stringliteral">&quot;xyz.prefe&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;carl&quot;</highlight><highlight class="normal">_n<sp/>),</highlight></codeline>
<codeline lineno="3413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fc::exception,<sp/>fc_assert_exception_message_is(</highlight><highlight class="stringliteral">&quot;only<sp/>suffix<sp/>may<sp/>create<sp/>this<sp/>account&quot;</highlight><highlight class="normal">)<sp/>);</highlight></codeline>
<codeline lineno="3414"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a792dc87878d55cfa11f862e9e6d5cc05" kindref="member">transfer</ref>(<sp/>config::system_account_name,<sp/></highlight><highlight class="stringliteral">&quot;prefe&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;10000.0000&quot;</highlight><highlight class="normal">)<sp/>);</highlight></codeline>
<codeline lineno="3415"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a791a80df1bef25c60fe34353c84ed5bc" kindref="member">create_account_with_resources</ref>(<sp/></highlight><highlight class="stringliteral">&quot;xyz.prefe&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;prefe&quot;</highlight><highlight class="normal">_n<sp/>);</highlight></codeline>
<codeline lineno="3416"><highlight class="normal"></highlight></codeline>
<codeline lineno="3417"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>other<sp/>auctions<sp/>haven&apos;t<sp/>closed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3418"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1ae2769fc43413630418d86ae9d0bfc792" kindref="member">BOOST_REQUIRE_EXCEPTION</ref>(<sp/><ref refid="eosio_8msig__tests_8cpp_1a791a80df1bef25c60fe34353c84ed5bc" kindref="member">create_account_with_resources</ref>(<sp/></highlight><highlight class="stringliteral">&quot;prefa&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;bob&quot;</highlight><highlight class="normal">_n<sp/>),</highlight></codeline>
<codeline lineno="3419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fc::exception,<sp/>fc_assert_exception_message_is(<sp/>not_closed_message<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3420"><highlight class="normal"></highlight></codeline>
<codeline lineno="3421"><highlight class="normal">}<sp/><ref refid="eosio_8system__tests_8cpp_1a057cb719bfa291fae56dc6ba5fa7a8d1" kindref="member">FC_LOG_AND_RETHROW</ref>()</highlight></codeline>
<codeline lineno="3422"><highlight class="normal"></highlight></codeline>
<codeline lineno="3423"><highlight class="normal"><ref refid="eosio_8system__tests_8cpp_1a8a1841911da283583ec346df954d73a1" kindref="member">BOOST_FIXTURE_TEST_CASE</ref>(<sp/>namebid_pending_winner,<sp/><ref refid="classeosio__system_1_1eosio__system__tester" kindref="compound">eosio_system_tester</ref><sp/>)<sp/><ref refid="eosio_8system__tests_8cpp_1ae89aac94d502abdd3c8d055174c221fc" kindref="member">try</ref><sp/>{</highlight></codeline>
<codeline lineno="3424"><highlight class="normal"><sp/><sp/><sp/>cross_15_percent_threshold();</highlight></codeline>
<codeline lineno="3425"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::hours(14*24)<sp/>);<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//wait<sp/>14<sp/>day<sp/>for<sp/>name<sp/>auction<sp/>activation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3426"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a792dc87878d55cfa11f862e9e6d5cc05" kindref="member">transfer</ref>(<sp/>config::system_account_name,<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;10000.0000&quot;</highlight><highlight class="normal">)<sp/>);</highlight></codeline>
<codeline lineno="3427"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a792dc87878d55cfa11f862e9e6d5cc05" kindref="member">transfer</ref>(<sp/>config::system_account_name,<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;10000.0000&quot;</highlight><highlight class="normal">)<sp/>);</highlight></codeline>
<codeline lineno="3428"><highlight class="normal"></highlight></codeline>
<codeline lineno="3429"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>bidname(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;prefa&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(<sp/></highlight><highlight class="stringliteral">&quot;50.0000&quot;</highlight><highlight class="normal"><sp/>)<sp/>));</highlight></codeline>
<codeline lineno="3430"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>bidname(<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;prefb&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(<sp/></highlight><highlight class="stringliteral">&quot;30.0000&quot;</highlight><highlight class="normal"><sp/>)<sp/>));</highlight></codeline>
<codeline lineno="3431"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::hours(100)<sp/>);<sp/></highlight><highlight class="comment">//should<sp/>close<sp/>&quot;perfa&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3432"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::hours(100)<sp/>);<sp/></highlight><highlight class="comment">//should<sp/>close<sp/>&quot;perfb&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3433"><highlight class="normal"></highlight></codeline>
<codeline lineno="3434"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//despite<sp/>&quot;perfa&quot;<sp/>account<sp/>hasn&apos;t<sp/>been<sp/>created,<sp/>we<sp/>should<sp/>be<sp/>able<sp/>to<sp/>create<sp/>&quot;perfb&quot;<sp/>account</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3435"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a791a80df1bef25c60fe34353c84ed5bc" kindref="member">create_account_with_resources</ref>(<sp/></highlight><highlight class="stringliteral">&quot;prefb&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">_n<sp/>);</highlight></codeline>
<codeline lineno="3436"><highlight class="normal">}<sp/><ref refid="eosio_8system__tests_8cpp_1a057cb719bfa291fae56dc6ba5fa7a8d1" kindref="member">FC_LOG_AND_RETHROW</ref>()</highlight></codeline>
<codeline lineno="3437"><highlight class="normal"></highlight></codeline>
<codeline lineno="3438"><highlight class="normal"><ref refid="eosio_8system__tests_8cpp_1a8a1841911da283583ec346df954d73a1" kindref="member">BOOST_FIXTURE_TEST_CASE</ref>(<sp/>vote_producers_in_and_out,<sp/><ref refid="classeosio__system_1_1eosio__system__tester" kindref="compound">eosio_system_tester</ref><sp/>)<sp/><ref refid="eosio_8system__tests_8cpp_1ae89aac94d502abdd3c8d055174c221fc" kindref="member">try</ref><sp/>{</highlight></codeline>
<codeline lineno="3439"><highlight class="normal"></highlight></codeline>
<codeline lineno="3440"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>net<sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;80.0000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3441"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>cpu<sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;80.0000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3442"><highlight class="normal"><sp/><sp/><sp/>std::vector&lt;account_name&gt;<sp/>voters<sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;producvotera&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;producvoterb&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;producvoterc&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;producvoterd&quot;</highlight><highlight class="normal">_n<sp/>};</highlight></codeline>
<codeline lineno="3443"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>v:<sp/>voters)<sp/>{</highlight></codeline>
<codeline lineno="3444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a791a80df1bef25c60fe34353c84ed5bc" kindref="member">create_account_with_resources</ref>(v,<sp/>config::system_account_name,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1.0000&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>net,<sp/>cpu);</highlight></codeline>
<codeline lineno="3445"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3446"><highlight class="normal"></highlight></codeline>
<codeline lineno="3447"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>accounts<sp/>{defproducera,<sp/>defproducerb,<sp/>...,<sp/>defproducerz}<sp/>and<sp/>register<sp/>as<sp/>producers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3448"><highlight class="normal"><sp/><sp/><sp/>std::vector&lt;account_name&gt;<sp/>producer_names;</highlight></codeline>
<codeline lineno="3449"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>producer_names.reserve(</highlight><highlight class="charliteral">&apos;z&apos;</highlight><highlight class="normal"><sp/>-<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal"><sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="3451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>root(</highlight><highlight class="stringliteral">&quot;defproducer&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c<sp/>=<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">;<sp/>c<sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;z&apos;</highlight><highlight class="normal">;<sp/>++c<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>producer_names.emplace_back(root<sp/>+<sp/>std::string(1,<sp/>c));</highlight></codeline>
<codeline lineno="3454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setup_producer_accounts(producer_names);</highlight></codeline>
<codeline lineno="3456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>p:<sp/>producer_names)<sp/>{</highlight></codeline>
<codeline lineno="3457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>regproducer(p)<sp/>);</highlight></codeline>
<codeline lineno="3458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aa1213f0f2c7a53ea968859f3cab582c3" kindref="member">produce_blocks</ref>(1);</highlight></codeline>
<codeline lineno="3459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ilog(<sp/></highlight><highlight class="stringliteral">&quot;------<sp/>get<sp/>pro----------&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1ace57c45c9d9e2f0f9a438effcdb79ba5" kindref="member">wdump</ref>((p));</highlight></codeline>
<codeline lineno="3461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_TEST(0<sp/>==<sp/>get_producer_info(p)[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as&lt;double&gt;());</highlight></codeline>
<codeline lineno="3462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3463"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3464"><highlight class="normal"></highlight></codeline>
<codeline lineno="3465"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>v:<sp/>voters)<sp/>{</highlight></codeline>
<codeline lineno="3466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a792dc87878d55cfa11f862e9e6d5cc05" kindref="member">transfer</ref>(<sp/>config::system_account_name,<sp/>v,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;200000000.0000&quot;</highlight><highlight class="normal">),<sp/>config::system_account_name<sp/>);</highlight></codeline>
<codeline lineno="3467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(success(),<sp/>stake(v,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;30000000.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;30000000.0000&quot;</highlight><highlight class="normal">))<sp/>);</highlight></codeline>
<codeline lineno="3468"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3469"><highlight class="normal"></highlight></codeline>
<codeline lineno="3470"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(success(),<sp/>vote(</highlight><highlight class="stringliteral">&quot;producvotera&quot;</highlight><highlight class="normal">_n,<sp/>vector&lt;account_name&gt;(producer_names.begin(),<sp/>producer_names.begin()+20)));</highlight></codeline>
<codeline lineno="3472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(success(),<sp/>vote(</highlight><highlight class="stringliteral">&quot;producvoterb&quot;</highlight><highlight class="normal">_n,<sp/>vector&lt;account_name&gt;(producer_names.begin(),<sp/>producer_names.begin()+21)));</highlight></codeline>
<codeline lineno="3473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(success(),<sp/>vote(</highlight><highlight class="stringliteral">&quot;producvoterc&quot;</highlight><highlight class="normal">_n,<sp/>vector&lt;account_name&gt;(producer_names.begin(),<sp/>producer_names.end())));</highlight></codeline>
<codeline lineno="3474"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3475"><highlight class="normal"></highlight></codeline>
<codeline lineno="3476"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>give<sp/>a<sp/>chance<sp/>for<sp/>everyone<sp/>to<sp/>produce<sp/>blocks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3477"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aa1213f0f2c7a53ea968859f3cab582c3" kindref="member">produce_blocks</ref>(23<sp/>*<sp/>12<sp/>+<sp/>20);</highlight></codeline>
<codeline lineno="3479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>all_21_produced<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint32_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>21;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="3481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>==<sp/>get_producer_info(producer_names[i])[</highlight><highlight class="stringliteral">&quot;unpaid_blocks&quot;</highlight><highlight class="normal">].as&lt;uint32_t&gt;())<sp/>{</highlight></codeline>
<codeline lineno="3482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>all_21_produced<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>rest_didnt_produce<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint32_t<sp/>i<sp/>=<sp/>21;<sp/>i<sp/>&lt;<sp/>producer_names.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="3487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>&lt;<sp/>get_producer_info(producer_names[i])[</highlight><highlight class="stringliteral">&quot;unpaid_blocks&quot;</highlight><highlight class="normal">].as&lt;uint32_t&gt;())<sp/>{</highlight></codeline>
<codeline lineno="3488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rest_didnt_produce<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1ae00c608b8a40d03b8b8dd2daac50185b" kindref="member">BOOST_REQUIRE</ref>(all_21_produced<sp/>&amp;&amp;<sp/>rest_didnt_produce);</highlight></codeline>
<codeline lineno="3492"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3493"><highlight class="normal"></highlight></codeline>
<codeline lineno="3494"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(fc::hours(7));</highlight></codeline>
<codeline lineno="3496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>voted_out_index<sp/>=<sp/>20;</highlight></codeline>
<codeline lineno="3497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>new_prod_index<sp/><sp/>=<sp/>23;</highlight></codeline>
<codeline lineno="3498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(success(),<sp/>stake(</highlight><highlight class="stringliteral">&quot;producvoterd&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;40000000.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;40000000.0000&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="3499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(success(),<sp/>vote(</highlight><highlight class="stringliteral">&quot;producvoterd&quot;</highlight><highlight class="normal">_n,<sp/>{<sp/>producer_names[new_prod_index]<sp/>}));</highlight></codeline>
<codeline lineno="3500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(0,<sp/>get_producer_info(producer_names[new_prod_index])[</highlight><highlight class="stringliteral">&quot;unpaid_blocks&quot;</highlight><highlight class="normal">].as&lt;uint32_t&gt;());</highlight></codeline>
<codeline lineno="3501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aa1213f0f2c7a53ea968859f3cab582c3" kindref="member">produce_blocks</ref>(4<sp/>*<sp/>12<sp/>*<sp/>21);</highlight></codeline>
<codeline lineno="3502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1ae00c608b8a40d03b8b8dd2daac50185b" kindref="member">BOOST_REQUIRE</ref>(0<sp/>&lt;<sp/>get_producer_info(producer_names[new_prod_index])[</highlight><highlight class="stringliteral">&quot;unpaid_blocks&quot;</highlight><highlight class="normal">].as&lt;uint32_t&gt;());</highlight></codeline>
<codeline lineno="3503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>initial_unpaid_blocks<sp/>=<sp/>get_producer_info(producer_names[voted_out_index])[</highlight><highlight class="stringliteral">&quot;unpaid_blocks&quot;</highlight><highlight class="normal">].as&lt;uint32_t&gt;();</highlight></codeline>
<codeline lineno="3504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aa1213f0f2c7a53ea968859f3cab582c3" kindref="member">produce_blocks</ref>(2<sp/>*<sp/>12<sp/>*<sp/>21);</highlight></codeline>
<codeline lineno="3505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(initial_unpaid_blocks,<sp/>get_producer_info(producer_names[voted_out_index])[</highlight><highlight class="stringliteral">&quot;unpaid_blocks&quot;</highlight><highlight class="normal">].as&lt;uint32_t&gt;());</highlight></codeline>
<codeline lineno="3506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(fc::hours(24));</highlight></codeline>
<codeline lineno="3507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(success(),<sp/>vote(</highlight><highlight class="stringliteral">&quot;producvoterd&quot;</highlight><highlight class="normal">_n,<sp/>{<sp/>producer_names[voted_out_index]<sp/>}));</highlight></codeline>
<codeline lineno="3508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aa1213f0f2c7a53ea968859f3cab582c3" kindref="member">produce_blocks</ref>(2<sp/>*<sp/>12<sp/>*<sp/>21);</highlight></codeline>
<codeline lineno="3509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1ae00c608b8a40d03b8b8dd2daac50185b" kindref="member">BOOST_REQUIRE</ref>(fc::crypto::public_key()<sp/>!=<sp/>fc::crypto::public_key(get_producer_info(producer_names[voted_out_index])[</highlight><highlight class="stringliteral">&quot;producer_key&quot;</highlight><highlight class="normal">].as_string()));</highlight></codeline>
<codeline lineno="3510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(success(),<sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(producer_names[voted_out_index],<sp/></highlight><highlight class="stringliteral">&quot;claimrewards&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()(</highlight><highlight class="stringliteral">&quot;owner&quot;</highlight><highlight class="normal">,<sp/>producer_names[voted_out_index])));</highlight></codeline>
<codeline lineno="3511"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3512"><highlight class="normal"></highlight></codeline>
<codeline lineno="3513"><highlight class="normal">}<sp/><ref refid="eosio_8system__tests_8cpp_1a057cb719bfa291fae56dc6ba5fa7a8d1" kindref="member">FC_LOG_AND_RETHROW</ref>()</highlight></codeline>
<codeline lineno="3514"><highlight class="normal"></highlight></codeline>
<codeline lineno="3515"><highlight class="normal"><ref refid="eosio_8system__tests_8cpp_1a8a1841911da283583ec346df954d73a1" kindref="member">BOOST_FIXTURE_TEST_CASE</ref>(<sp/>setparams,<sp/><ref refid="classeosio__system_1_1eosio__system__tester" kindref="compound">eosio_system_tester</ref><sp/>)<sp/><ref refid="eosio_8system__tests_8cpp_1ae89aac94d502abdd3c8d055174c221fc" kindref="member">try</ref><sp/>{</highlight></codeline>
<codeline lineno="3516"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//install<sp/>multisig<sp/>contract</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3517"><highlight class="normal"><sp/><sp/><sp/>abi_serializer<sp/>msig_abi_ser<sp/>=<sp/>initialize_multisig();</highlight></codeline>
<codeline lineno="3518"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>producer_names<sp/>=<sp/>active_and_vote_producers();</highlight></codeline>
<codeline lineno="3519"><highlight class="normal"></highlight></codeline>
<codeline lineno="3520"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//helper<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3521"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>push_action_msig<sp/>=<sp/>[&amp;](<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>account_name&amp;<sp/>signer,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>action_name<sp/>&amp;name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>variant_object<sp/>&amp;data,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>auth<sp/>=<sp/>true<sp/>)<sp/>-&gt;<sp/>action_result<sp/>{</highlight></codeline>
<codeline lineno="3522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>action_type_name<sp/>=<sp/>msig_abi_ser.get_action_type(name);</highlight></codeline>
<codeline lineno="3523"><highlight class="normal"></highlight></codeline>
<codeline lineno="3524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>action<sp/><ref refid="eosio_8msig__tests_8cpp_1a7543cef806423d999bdf00434e158dcb" kindref="member">act</ref>;</highlight></codeline>
<codeline lineno="3525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a7543cef806423d999bdf00434e158dcb" kindref="member">act</ref>.account<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;eosio.msig&quot;</highlight><highlight class="normal">_n;</highlight></codeline>
<codeline lineno="3526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a7543cef806423d999bdf00434e158dcb" kindref="member">act</ref>.name<sp/>=<sp/>name;</highlight></codeline>
<codeline lineno="3527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a7543cef806423d999bdf00434e158dcb" kindref="member">act</ref>.data<sp/>=<sp/>msig_abi_ser.variant_to_binary(<sp/>action_type_name,<sp/>data,<sp/>abi_serializer::create_yield_function(abi_serializer_max_time)<sp/>);</highlight></codeline>
<codeline lineno="3528"><highlight class="normal"></highlight></codeline>
<codeline lineno="3529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">base_tester::push_action</ref>(<sp/>std::move(<ref refid="eosio_8msig__tests_8cpp_1a7543cef806423d999bdf00434e158dcb" kindref="member">act</ref>),<sp/>(auth<sp/>?<sp/>signer<sp/>:<sp/>signer<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">_n<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">_n).to_uint64_t()<sp/>);</highlight></codeline>
<codeline lineno="3530"><highlight class="normal"><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3531"><highlight class="normal"></highlight></codeline>
<codeline lineno="3532"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>test<sp/>begins</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3533"><highlight class="normal"><sp/><sp/><sp/>vector&lt;permission_level&gt;<sp/>prod_perms;</highlight></codeline>
<codeline lineno="3534"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>x<sp/>:<sp/>producer_names<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>prod_perms.push_back(<sp/>{<sp/>name(x),<sp/>config::active_name<sp/>}<sp/>);</highlight></codeline>
<codeline lineno="3536"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3537"><highlight class="normal"></highlight></codeline>
<codeline lineno="3538"><highlight class="normal"><sp/><sp/><sp/>eosio::chain::chain_config<sp/><ref refid="eosio_8system__tests_8cpp_1a11bb71c4e33e79ea17fb60697717745f" kindref="member">params</ref>;</highlight></codeline>
<codeline lineno="3539"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a11bb71c4e33e79ea17fb60697717745f" kindref="member">params</ref><sp/>=<sp/>control-&gt;get_global_properties().configuration;</highlight></codeline>
<codeline lineno="3540"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//change<sp/>some<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3541"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a11bb71c4e33e79ea17fb60697717745f" kindref="member">params</ref>.max_block_net_usage<sp/>+=<sp/>10;</highlight></codeline>
<codeline lineno="3542"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a11bb71c4e33e79ea17fb60697717745f" kindref="member">params</ref>.max_transaction_lifetime<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="3543"><highlight class="normal"></highlight></codeline>
<codeline lineno="3544"><highlight class="normal"><sp/><sp/><sp/>transaction<sp/><ref refid="eosio_8msig__tests_8cpp_1a6935d36f50fec547a188728bc39593b6" kindref="member">trx</ref>;</highlight></codeline>
<codeline lineno="3545"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fc::variant<sp/><ref refid="eosio_8msig__tests_8cpp_1aca4e76e2bcf756cc5322bfc942ffd88c" kindref="member">pretty_trx</ref><sp/>=<sp/>fc::mutable_variant_object()</highlight></codeline>
<codeline lineno="3547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;expiration&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;2020-01-01T00:30&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;ref_block_num&quot;</highlight><highlight class="normal">,<sp/>2)</highlight></codeline>
<codeline lineno="3549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;ref_block_prefix&quot;</highlight><highlight class="normal">,<sp/>3)</highlight></codeline>
<codeline lineno="3550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;net_usage_words&quot;</highlight><highlight class="normal">,<sp/>0)</highlight></codeline>
<codeline lineno="3551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;max_cpu_usage_ms&quot;</highlight><highlight class="normal">,<sp/>0)</highlight></codeline>
<codeline lineno="3552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;delay_sec&quot;</highlight><highlight class="normal">,<sp/>0)</highlight></codeline>
<codeline lineno="3553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;actions&quot;</highlight><highlight class="normal">,<sp/>fc::variants({</highlight></codeline>
<codeline lineno="3554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fc::mutable_variant_object()</highlight></codeline>
<codeline lineno="3555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;account&quot;</highlight><highlight class="normal">,<sp/>name(config::system_account_name))</highlight></codeline>
<codeline lineno="3556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;setparams&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;authorization&quot;</highlight><highlight class="normal">,<sp/>vector&lt;permission_level&gt;{<sp/>{<sp/>config::system_account_name,<sp/>config::active_name<sp/>}<sp/>})</highlight></codeline>
<codeline lineno="3558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;data&quot;</highlight><highlight class="normal">,<sp/>fc::mutable_variant_object()</highlight></codeline>
<codeline lineno="3559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;params&quot;</highlight><highlight class="normal">,<sp/><ref refid="eosio_8system__tests_8cpp_1a11bb71c4e33e79ea17fb60697717745f" kindref="member">params</ref>)</highlight></codeline>
<codeline lineno="3560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="3561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>})</highlight></codeline>
<codeline lineno="3562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="3563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>abi_serializer::from_variant(<ref refid="eosio_8msig__tests_8cpp_1aca4e76e2bcf756cc5322bfc942ffd88c" kindref="member">pretty_trx</ref>,<sp/><ref refid="eosio_8msig__tests_8cpp_1a6935d36f50fec547a188728bc39593b6" kindref="member">trx</ref>,<sp/>get_resolver(),<sp/>abi_serializer::create_yield_function(abi_serializer_max_time));</highlight></codeline>
<codeline lineno="3564"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3565"><highlight class="normal"></highlight></codeline>
<codeline lineno="3566"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(success(),<sp/>push_action_msig(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;propose&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()</highlight></codeline>
<codeline lineno="3567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;proposer&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;proposal_name&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;setparams1&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;trx&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a6935d36f50fec547a188728bc39593b6" kindref="member">trx</ref>)</highlight></codeline>
<codeline lineno="3570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;requested&quot;</highlight><highlight class="normal">,<sp/>prod_perms)</highlight></codeline>
<codeline lineno="3571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="3572"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="3573"><highlight class="normal"></highlight></codeline>
<codeline lineno="3574"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>16<sp/>approvals</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3575"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>15;<sp/>++i<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(success(),<sp/>push_action_msig(<sp/>name(producer_names[i]),<sp/></highlight><highlight class="stringliteral">&quot;approve&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()</highlight></codeline>
<codeline lineno="3577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;proposer&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;proposal_name&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;setparams1&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;level&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1adb5a7af6f4a8319d70ccf6363031f4dc" kindref="member">permission_level</ref>{<sp/>name(producer_names[i]),<sp/>config::active_name<sp/>})</highlight></codeline>
<codeline lineno="3580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="3581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="3582"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3583"><highlight class="normal"></highlight></codeline>
<codeline lineno="3584"><highlight class="normal"><sp/><sp/><sp/>transaction_trace_ptr<sp/><ref refid="eosio_8msig__tests_8cpp_1a176b44375feec0c1f90f3bde5f1feb2e" kindref="member">trace</ref>;</highlight></codeline>
<codeline lineno="3585"><highlight class="normal"><sp/><sp/><sp/>control-&gt;applied_transaction.connect(</highlight></codeline>
<codeline lineno="3586"><highlight class="normal"><sp/><sp/><sp/>[&amp;](<sp/>std::tuple&lt;const<sp/>transaction_trace_ptr&amp;,<sp/>const<sp/>packed_transaction_ptr&amp;&gt;<sp/>p<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a176b44375feec0c1f90f3bde5f1feb2e" kindref="member">trace</ref><sp/>=<sp/>std::get&lt;0&gt;(p);</highlight></codeline>
<codeline lineno="3588"><highlight class="normal"><sp/><sp/><sp/>}<sp/>);</highlight></codeline>
<codeline lineno="3589"><highlight class="normal"></highlight></codeline>
<codeline lineno="3590"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(success(),<sp/>push_action_msig(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;exec&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()</highlight></codeline>
<codeline lineno="3591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;proposer&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;proposal_name&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;setparams1&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;executer&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="3595"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="3596"><highlight class="normal"></highlight></codeline>
<codeline lineno="3597"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1ae00c608b8a40d03b8b8dd2daac50185b" kindref="member">BOOST_REQUIRE</ref>(<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">(<ref refid="eosio_8msig__tests_8cpp_1a176b44375feec0c1f90f3bde5f1feb2e" kindref="member">trace</ref>)<sp/>);</highlight></codeline>
<codeline lineno="3598"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>1,<sp/><ref refid="eosio_8msig__tests_8cpp_1a176b44375feec0c1f90f3bde5f1feb2e" kindref="member">trace</ref>-&gt;action_traces.size()<sp/>);</highlight></codeline>
<codeline lineno="3599"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>transaction_receipt::executed,<sp/><ref refid="eosio_8msig__tests_8cpp_1a176b44375feec0c1f90f3bde5f1feb2e" kindref="member">trace</ref>-&gt;receipt-&gt;status<sp/>);</highlight></codeline>
<codeline lineno="3600"><highlight class="normal"></highlight></codeline>
<codeline lineno="3601"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aa1213f0f2c7a53ea968859f3cab582c3" kindref="member">produce_blocks</ref>(<sp/>250<sp/>);</highlight></codeline>
<codeline lineno="3602"><highlight class="normal"></highlight></codeline>
<codeline lineno="3603"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>sure<sp/>that<sp/>changed<sp/>parameters<sp/>were<sp/>applied</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3604"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>active_params<sp/>=<sp/>control-&gt;get_global_properties().configuration;</highlight></codeline>
<codeline lineno="3605"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="eosio_8system__tests_8cpp_1a11bb71c4e33e79ea17fb60697717745f" kindref="member">params</ref>.max_block_net_usage,<sp/>active_params.max_block_net_usage<sp/>);</highlight></codeline>
<codeline lineno="3606"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="eosio_8system__tests_8cpp_1a11bb71c4e33e79ea17fb60697717745f" kindref="member">params</ref>.max_transaction_lifetime,<sp/>active_params.max_transaction_lifetime<sp/>);</highlight></codeline>
<codeline lineno="3607"><highlight class="normal"></highlight></codeline>
<codeline lineno="3608"><highlight class="normal">}<sp/><ref refid="eosio_8system__tests_8cpp_1a057cb719bfa291fae56dc6ba5fa7a8d1" kindref="member">FC_LOG_AND_RETHROW</ref>()</highlight></codeline>
<codeline lineno="3609"><highlight class="normal"></highlight></codeline>
<codeline lineno="3610"><highlight class="normal"></highlight></codeline>
<codeline lineno="3611"><highlight class="normal"><ref refid="eosio_8system__tests_8cpp_1a8a1841911da283583ec346df954d73a1" kindref="member">BOOST_FIXTURE_TEST_CASE</ref>(<sp/>wasmcfg,<sp/><ref refid="classeosio__system_1_1eosio__system__tester" kindref="compound">eosio_system_tester</ref><sp/>)<sp/><ref refid="eosio_8system__tests_8cpp_1ae89aac94d502abdd3c8d055174c221fc" kindref="member">try</ref><sp/>{</highlight></codeline>
<codeline lineno="3612"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//install<sp/>multisig<sp/>contract</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3613"><highlight class="normal"><sp/><sp/><sp/>abi_serializer<sp/>msig_abi_ser<sp/>=<sp/>initialize_multisig();</highlight></codeline>
<codeline lineno="3614"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>producer_names<sp/>=<sp/>active_and_vote_producers();</highlight></codeline>
<codeline lineno="3615"><highlight class="normal"></highlight></codeline>
<codeline lineno="3616"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//helper<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3617"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>push_action_msig<sp/>=<sp/>[&amp;](<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>account_name&amp;<sp/>signer,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>action_name<sp/>&amp;name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>variant_object<sp/>&amp;data,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>auth<sp/>=<sp/>true<sp/>)<sp/>-&gt;<sp/>action_result<sp/>{</highlight></codeline>
<codeline lineno="3618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>action_type_name<sp/>=<sp/>msig_abi_ser.get_action_type(name);</highlight></codeline>
<codeline lineno="3619"><highlight class="normal"></highlight></codeline>
<codeline lineno="3620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>action<sp/><ref refid="eosio_8msig__tests_8cpp_1a7543cef806423d999bdf00434e158dcb" kindref="member">act</ref>;</highlight></codeline>
<codeline lineno="3621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a7543cef806423d999bdf00434e158dcb" kindref="member">act</ref>.account<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;eosio.msig&quot;</highlight><highlight class="normal">_n;</highlight></codeline>
<codeline lineno="3622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a7543cef806423d999bdf00434e158dcb" kindref="member">act</ref>.name<sp/>=<sp/>name;</highlight></codeline>
<codeline lineno="3623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a7543cef806423d999bdf00434e158dcb" kindref="member">act</ref>.data<sp/>=<sp/>msig_abi_ser.variant_to_binary(<sp/>action_type_name,<sp/>data,<sp/>abi_serializer::create_yield_function(abi_serializer_max_time)<sp/>);</highlight></codeline>
<codeline lineno="3624"><highlight class="normal"></highlight></codeline>
<codeline lineno="3625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">base_tester::push_action</ref>(<sp/>std::move(<ref refid="eosio_8msig__tests_8cpp_1a7543cef806423d999bdf00434e158dcb" kindref="member">act</ref>),<sp/>(auth<sp/>?<sp/>signer<sp/>:<sp/>signer<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">_n<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;bob111111111&quot;</highlight><highlight class="normal">_n).to_uint64_t()<sp/>);</highlight></codeline>
<codeline lineno="3626"><highlight class="normal"><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3627"><highlight class="normal"></highlight></codeline>
<codeline lineno="3628"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>test<sp/>begins</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3629"><highlight class="normal"><sp/><sp/><sp/>vector&lt;permission_level&gt;<sp/>prod_perms;</highlight></codeline>
<codeline lineno="3630"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>x<sp/>:<sp/>producer_names<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>prod_perms.push_back(<sp/>{<sp/>name(x),<sp/>config::active_name<sp/>}<sp/>);</highlight></codeline>
<codeline lineno="3632"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3633"><highlight class="normal"></highlight></codeline>
<codeline lineno="3634"><highlight class="normal"><sp/><sp/><sp/>transaction<sp/><ref refid="eosio_8msig__tests_8cpp_1a6935d36f50fec547a188728bc39593b6" kindref="member">trx</ref>;</highlight></codeline>
<codeline lineno="3635"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fc::variant<sp/><ref refid="eosio_8msig__tests_8cpp_1aca4e76e2bcf756cc5322bfc942ffd88c" kindref="member">pretty_trx</ref><sp/>=<sp/>fc::mutable_variant_object()</highlight></codeline>
<codeline lineno="3637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;expiration&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;2020-01-01T00:30&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;ref_block_num&quot;</highlight><highlight class="normal">,<sp/>2)</highlight></codeline>
<codeline lineno="3639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;ref_block_prefix&quot;</highlight><highlight class="normal">,<sp/>3)</highlight></codeline>
<codeline lineno="3640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;net_usage_words&quot;</highlight><highlight class="normal">,<sp/>0)</highlight></codeline>
<codeline lineno="3641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;max_cpu_usage_ms&quot;</highlight><highlight class="normal">,<sp/>0)</highlight></codeline>
<codeline lineno="3642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;delay_sec&quot;</highlight><highlight class="normal">,<sp/>0)</highlight></codeline>
<codeline lineno="3643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;actions&quot;</highlight><highlight class="normal">,<sp/>fc::variants({</highlight></codeline>
<codeline lineno="3644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fc::mutable_variant_object()</highlight></codeline>
<codeline lineno="3645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;account&quot;</highlight><highlight class="normal">,<sp/>name(config::system_account_name))</highlight></codeline>
<codeline lineno="3646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;wasmcfg&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;authorization&quot;</highlight><highlight class="normal">,<sp/>vector&lt;permission_level&gt;{<sp/>{<sp/>config::system_account_name,<sp/>config::active_name<sp/>}<sp/>})</highlight></codeline>
<codeline lineno="3648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;data&quot;</highlight><highlight class="normal">,<sp/>fc::mutable_variant_object()</highlight></codeline>
<codeline lineno="3649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;settings&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;high&quot;</highlight><highlight class="normal">_n)</highlight></codeline>
<codeline lineno="3650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="3651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>})</highlight></codeline>
<codeline lineno="3652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="3653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>abi_serializer::from_variant(<ref refid="eosio_8msig__tests_8cpp_1aca4e76e2bcf756cc5322bfc942ffd88c" kindref="member">pretty_trx</ref>,<sp/><ref refid="eosio_8msig__tests_8cpp_1a6935d36f50fec547a188728bc39593b6" kindref="member">trx</ref>,<sp/>get_resolver(),<sp/>abi_serializer::create_yield_function(abi_serializer_max_time));</highlight></codeline>
<codeline lineno="3654"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3655"><highlight class="normal"></highlight></codeline>
<codeline lineno="3656"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(success(),<sp/>push_action_msig(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;propose&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()</highlight></codeline>
<codeline lineno="3657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;proposer&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;proposal_name&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;setparams1&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;trx&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a6935d36f50fec547a188728bc39593b6" kindref="member">trx</ref>)</highlight></codeline>
<codeline lineno="3660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;requested&quot;</highlight><highlight class="normal">,<sp/>prod_perms)</highlight></codeline>
<codeline lineno="3661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="3662"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="3663"><highlight class="normal"></highlight></codeline>
<codeline lineno="3664"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>16<sp/>approvals</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3665"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>15;<sp/>++i<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(success(),<sp/>push_action_msig(<sp/>name(producer_names[i]),<sp/></highlight><highlight class="stringliteral">&quot;approve&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()</highlight></codeline>
<codeline lineno="3667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;proposer&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;proposal_name&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;setparams1&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;level&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1adb5a7af6f4a8319d70ccf6363031f4dc" kindref="member">permission_level</ref>{<sp/>name(producer_names[i]),<sp/>config::active_name<sp/>})</highlight></codeline>
<codeline lineno="3670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="3671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="3672"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3673"><highlight class="normal"></highlight></codeline>
<codeline lineno="3674"><highlight class="normal"><sp/><sp/><sp/>transaction_trace_ptr<sp/><ref refid="eosio_8msig__tests_8cpp_1a176b44375feec0c1f90f3bde5f1feb2e" kindref="member">trace</ref>;</highlight></codeline>
<codeline lineno="3675"><highlight class="normal"><sp/><sp/><sp/>control-&gt;applied_transaction.connect(</highlight></codeline>
<codeline lineno="3676"><highlight class="normal"><sp/><sp/><sp/>[&amp;](<sp/>std::tuple&lt;const<sp/>transaction_trace_ptr&amp;,<sp/>const<sp/>packed_transaction_ptr&amp;&gt;<sp/>p<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a176b44375feec0c1f90f3bde5f1feb2e" kindref="member">trace</ref><sp/>=<sp/>std::get&lt;0&gt;(p);</highlight></codeline>
<codeline lineno="3678"><highlight class="normal"><sp/><sp/><sp/>}<sp/>);</highlight></codeline>
<codeline lineno="3679"><highlight class="normal"></highlight></codeline>
<codeline lineno="3680"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(success(),<sp/>push_action_msig(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;exec&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()</highlight></codeline>
<codeline lineno="3681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;proposer&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;proposal_name&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;setparams1&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;executer&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="3685"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="3686"><highlight class="normal"></highlight></codeline>
<codeline lineno="3687"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1ae00c608b8a40d03b8b8dd2daac50185b" kindref="member">BOOST_REQUIRE</ref>(<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">(<ref refid="eosio_8msig__tests_8cpp_1a176b44375feec0c1f90f3bde5f1feb2e" kindref="member">trace</ref>)<sp/>);</highlight></codeline>
<codeline lineno="3688"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>1,<sp/><ref refid="eosio_8msig__tests_8cpp_1a176b44375feec0c1f90f3bde5f1feb2e" kindref="member">trace</ref>-&gt;action_traces.size()<sp/>);</highlight></codeline>
<codeline lineno="3689"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>transaction_receipt::executed,<sp/><ref refid="eosio_8msig__tests_8cpp_1a176b44375feec0c1f90f3bde5f1feb2e" kindref="member">trace</ref>-&gt;receipt-&gt;status<sp/>);</highlight></codeline>
<codeline lineno="3690"><highlight class="normal"></highlight></codeline>
<codeline lineno="3691"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aa1213f0f2c7a53ea968859f3cab582c3" kindref="member">produce_blocks</ref>(<sp/>250<sp/>);</highlight></codeline>
<codeline lineno="3692"><highlight class="normal"></highlight></codeline>
<codeline lineno="3693"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>sure<sp/>that<sp/>changed<sp/>parameters<sp/>were<sp/>applied</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3694"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>active_params<sp/>=<sp/>control-&gt;get_global_properties().wasm_configuration;</highlight></codeline>
<codeline lineno="3695"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>active_params.max_table_elements,<sp/>8192<sp/>);</highlight></codeline>
<codeline lineno="3696"><highlight class="normal">}<sp/><ref refid="eosio_8system__tests_8cpp_1a057cb719bfa291fae56dc6ba5fa7a8d1" kindref="member">FC_LOG_AND_RETHROW</ref>()</highlight></codeline>
<codeline lineno="3697"><highlight class="normal"></highlight></codeline>
<codeline lineno="3698"><highlight class="normal"><ref refid="eosio_8system__tests_8cpp_1a8a1841911da283583ec346df954d73a1" kindref="member">BOOST_FIXTURE_TEST_CASE</ref>(<sp/>setram_effect,<sp/><ref refid="classeosio__system_1_1eosio__system__tester" kindref="compound">eosio_system_tester</ref><sp/>)<sp/><ref refid="eosio_8system__tests_8cpp_1ae89aac94d502abdd3c8d055174c221fc" kindref="member">try</ref><sp/>{</highlight></codeline>
<codeline lineno="3699"><highlight class="normal"></highlight></codeline>
<codeline lineno="3700"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>net<sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;8.0000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3701"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>cpu<sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;8.0000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3702"><highlight class="normal"><sp/><sp/><sp/>std::vector&lt;account_name&gt;<sp/><ref refid="structaccounts" kindref="compound">accounts</ref><sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;aliceaccount&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;bobbyaccount&quot;</highlight><highlight class="normal">_n<sp/>};</highlight></codeline>
<codeline lineno="3703"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>a:<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>)<sp/>{</highlight></codeline>
<codeline lineno="3704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a791a80df1bef25c60fe34353c84ed5bc" kindref="member">create_account_with_resources</ref>(a,<sp/>config::system_account_name,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1.0000&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>net,<sp/>cpu);</highlight></codeline>
<codeline lineno="3705"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3706"><highlight class="normal"></highlight></codeline>
<codeline lineno="3707"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>name_a<sp/>=<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>[0];</highlight></codeline>
<codeline lineno="3709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a792dc87878d55cfa11f862e9e6d5cc05" kindref="member">transfer</ref>(<sp/>config::system_account_name,<sp/>name_a,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1000.0000&quot;</highlight><highlight class="normal">)<sp/>);</highlight></codeline>
<codeline lineno="3710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1000.0000&quot;</highlight><highlight class="normal">),<sp/>get_balance(name_a)<sp/>);</highlight></codeline>
<codeline lineno="3711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>init_bytes_a<sp/>=<sp/>get_total_stake(name_a)[</highlight><highlight class="stringliteral">&quot;ram_bytes&quot;</highlight><highlight class="normal">].as_uint64();</highlight></codeline>
<codeline lineno="3712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>buyram(<sp/>name_a,<sp/>name_a,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;300.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;700.0000&quot;</highlight><highlight class="normal">),<sp/>get_balance(name_a)<sp/>);</highlight></codeline>
<codeline lineno="3714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>bought_bytes_a<sp/>=<sp/>get_total_stake(name_a)[</highlight><highlight class="stringliteral">&quot;ram_bytes&quot;</highlight><highlight class="normal">].as_uint64()<sp/>-<sp/>init_bytes_a;</highlight></codeline>
<codeline lineno="3715"><highlight class="normal"></highlight></codeline>
<codeline lineno="3716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>after<sp/>buying<sp/>and<sp/>selling<sp/>balance<sp/>should<sp/>be<sp/>700<sp/>+<sp/>300<sp/>*<sp/>0.995<sp/>*<sp/>0.995<sp/>=<sp/>997.0075<sp/>(actually<sp/>997.0074<sp/>due<sp/>to<sp/>rounding<sp/>fees<sp/>up)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>sellram(name_a,<sp/>bought_bytes_a<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;997.0074&quot;</highlight><highlight class="normal">),<sp/>get_balance(name_a)<sp/>);</highlight></codeline>
<codeline lineno="3719"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3720"><highlight class="normal"></highlight></codeline>
<codeline lineno="3721"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>name_b<sp/>=<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>[1];</highlight></codeline>
<codeline lineno="3723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a792dc87878d55cfa11f862e9e6d5cc05" kindref="member">transfer</ref>(<sp/>config::system_account_name,<sp/>name_b,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1000.0000&quot;</highlight><highlight class="normal">)<sp/>);</highlight></codeline>
<codeline lineno="3724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1000.0000&quot;</highlight><highlight class="normal">),<sp/>get_balance(name_b)<sp/>);</highlight></codeline>
<codeline lineno="3725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>init_bytes_b<sp/>=<sp/>get_total_stake(name_b)[</highlight><highlight class="stringliteral">&quot;ram_bytes&quot;</highlight><highlight class="normal">].as_uint64();</highlight></codeline>
<codeline lineno="3726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>name_b<sp/>buys<sp/>ram<sp/>at<sp/>current<sp/>price</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>buyram(<sp/>name_b,<sp/>name_b,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;300.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;700.0000&quot;</highlight><highlight class="normal">),<sp/>get_balance(name_b)<sp/>);</highlight></codeline>
<codeline lineno="3729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>bought_bytes_b<sp/>=<sp/>get_total_stake(name_b)[</highlight><highlight class="stringliteral">&quot;ram_bytes&quot;</highlight><highlight class="normal">].as_uint64()<sp/>-<sp/>init_bytes_b;</highlight></codeline>
<codeline lineno="3730"><highlight class="normal"></highlight></codeline>
<codeline lineno="3731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>increase<sp/>max_ram_size,<sp/>ram<sp/>bought<sp/>by<sp/>name_b<sp/>loses<sp/>part<sp/>of<sp/>its<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;ram<sp/>may<sp/>only<sp/>be<sp/>increased&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="3733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(config::system_account_name,<sp/></highlight><highlight class="stringliteral">&quot;setram&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()(</highlight><highlight class="stringliteral">&quot;max_ram_size&quot;</highlight><highlight class="normal">,<sp/>64ll*1024<sp/>*<sp/>1024<sp/>*<sp/>1024))<sp/>);</highlight></codeline>
<codeline lineno="3734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>error(</highlight><highlight class="stringliteral">&quot;missing<sp/>authority<sp/>of<sp/>eosio&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="3735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(name_b,<sp/></highlight><highlight class="stringliteral">&quot;setram&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()(</highlight><highlight class="stringliteral">&quot;max_ram_size&quot;</highlight><highlight class="normal">,<sp/>80ll*1024<sp/>*<sp/>1024<sp/>*<sp/>1024))<sp/>);</highlight></codeline>
<codeline lineno="3736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),</highlight></codeline>
<codeline lineno="3737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(config::system_account_name,<sp/></highlight><highlight class="stringliteral">&quot;setram&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()(</highlight><highlight class="stringliteral">&quot;max_ram_size&quot;</highlight><highlight class="normal">,<sp/>80ll*1024<sp/>*<sp/>1024<sp/>*<sp/>1024))<sp/>);</highlight></codeline>
<codeline lineno="3738"><highlight class="normal"></highlight></codeline>
<codeline lineno="3739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>sellram(name_b,<sp/>bought_bytes_b<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1ae00c608b8a40d03b8b8dd2daac50185b" kindref="member">BOOST_REQUIRE</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;900.0000&quot;</highlight><highlight class="normal">)<sp/>&lt;<sp/>get_balance(name_b)<sp/>);</highlight></codeline>
<codeline lineno="3741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1ae00c608b8a40d03b8b8dd2daac50185b" kindref="member">BOOST_REQUIRE</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;950.0000&quot;</highlight><highlight class="normal">)<sp/>&gt;<sp/>get_balance(name_b)<sp/>);</highlight></codeline>
<codeline lineno="3742"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3743"><highlight class="normal"></highlight></codeline>
<codeline lineno="3744"><highlight class="normal">}<sp/><ref refid="eosio_8system__tests_8cpp_1a057cb719bfa291fae56dc6ba5fa7a8d1" kindref="member">FC_LOG_AND_RETHROW</ref>()</highlight></codeline>
<codeline lineno="3745"><highlight class="normal"></highlight></codeline>
<codeline lineno="3746"><highlight class="normal"><ref refid="eosio_8system__tests_8cpp_1a8a1841911da283583ec346df954d73a1" kindref="member">BOOST_FIXTURE_TEST_CASE</ref>(<sp/>ram_inflation,<sp/><ref refid="classeosio__system_1_1eosio__system__tester" kindref="compound">eosio_system_tester</ref><sp/>)<sp/><ref refid="eosio_8system__tests_8cpp_1ae89aac94d502abdd3c8d055174c221fc" kindref="member">try</ref><sp/>{</highlight></codeline>
<codeline lineno="3747"><highlight class="normal"></highlight></codeline>
<codeline lineno="3748"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>init_max_ram_size<sp/>=<sp/>64ll*1024<sp/>*<sp/>1024<sp/>*<sp/>1024;</highlight></codeline>
<codeline lineno="3749"><highlight class="normal"></highlight></codeline>
<codeline lineno="3750"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>init_max_ram_size,<sp/>get_global_state()[</highlight><highlight class="stringliteral">&quot;max_ram_size&quot;</highlight><highlight class="normal">].as_uint64()<sp/>);</highlight></codeline>
<codeline lineno="3751"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aa1213f0f2c7a53ea968859f3cab582c3" kindref="member">produce_blocks</ref>(20);</highlight></codeline>
<codeline lineno="3752"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>init_max_ram_size,<sp/>get_global_state()[</highlight><highlight class="stringliteral">&quot;max_ram_size&quot;</highlight><highlight class="normal">].as_uint64()<sp/>);</highlight></codeline>
<codeline lineno="3753"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a792dc87878d55cfa11f862e9e6d5cc05" kindref="member">transfer</ref>(<sp/>config::system_account_name,<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1000.0000&quot;</highlight><highlight class="normal">),<sp/>config::system_account_name<sp/>);</highlight></codeline>
<codeline lineno="3754"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>buyram(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;100.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3755"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aa1213f0f2c7a53ea968859f3cab582c3" kindref="member">produce_blocks</ref>(3);</highlight></codeline>
<codeline lineno="3756"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>init_max_ram_size,<sp/>get_global_state()[</highlight><highlight class="stringliteral">&quot;max_ram_size&quot;</highlight><highlight class="normal">].as_uint64()<sp/>);</highlight></codeline>
<codeline lineno="3757"><highlight class="normal"><sp/><sp/><sp/>uint16_t<sp/>rate<sp/>=<sp/>1000;</highlight></codeline>
<codeline lineno="3758"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(<sp/>config::system_account_name,<sp/></highlight><highlight class="stringliteral">&quot;setramrate&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()(</highlight><highlight class="stringliteral">&quot;bytes_per_block&quot;</highlight><highlight class="normal">,<sp/>rate)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3759"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>rate,<sp/>get_global_state2()[</highlight><highlight class="stringliteral">&quot;new_ram_per_block&quot;</highlight><highlight class="normal">].as&lt;uint16_t&gt;()<sp/>);</highlight></codeline>
<codeline lineno="3760"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>last<sp/>time<sp/>update_ram_supply<sp/>called<sp/>is<sp/>in<sp/>buyram,<sp/>num<sp/>of<sp/>blocks<sp/>since<sp/>then<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3761"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>block<sp/>that<sp/>includes<sp/>the<sp/>setramrate<sp/>action<sp/>is<sp/>1<sp/>+<sp/>3<sp/>=<sp/>4.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3762"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>However,<sp/>those<sp/>4<sp/>blocks<sp/>were<sp/>accumulating<sp/>at<sp/>a<sp/>rate<sp/>of<sp/>0,<sp/>so<sp/>the<sp/>max_ram_size<sp/>should<sp/>not<sp/>have<sp/>changed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3763"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>init_max_ram_size,<sp/>get_global_state()[</highlight><highlight class="stringliteral">&quot;max_ram_size&quot;</highlight><highlight class="normal">].as_uint64()<sp/>);</highlight></codeline>
<codeline lineno="3764"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>But<sp/>with<sp/>additional<sp/>blocks,<sp/>it<sp/>should<sp/>start<sp/>accumulating<sp/>at<sp/>the<sp/>new<sp/>rate.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3765"><highlight class="normal"><sp/><sp/><sp/>uint64_t<sp/>cur_ram_size<sp/>=<sp/>get_global_state()[</highlight><highlight class="stringliteral">&quot;max_ram_size&quot;</highlight><highlight class="normal">].as_uint64();</highlight></codeline>
<codeline lineno="3766"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aa1213f0f2c7a53ea968859f3cab582c3" kindref="member">produce_blocks</ref>(10);</highlight></codeline>
<codeline lineno="3767"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>buyram(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;100.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3768"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>cur_ram_size<sp/>+<sp/>11<sp/>*<sp/>rate,<sp/>get_global_state()[</highlight><highlight class="stringliteral">&quot;max_ram_size&quot;</highlight><highlight class="normal">].as_uint64()<sp/>);</highlight></codeline>
<codeline lineno="3769"><highlight class="normal"><sp/><sp/><sp/>cur_ram_size<sp/>=<sp/>get_global_state()[</highlight><highlight class="stringliteral">&quot;max_ram_size&quot;</highlight><highlight class="normal">].as_uint64();</highlight></codeline>
<codeline lineno="3770"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aa1213f0f2c7a53ea968859f3cab582c3" kindref="member">produce_blocks</ref>(5);</highlight></codeline>
<codeline lineno="3771"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>cur_ram_size,<sp/>get_global_state()[</highlight><highlight class="stringliteral">&quot;max_ram_size&quot;</highlight><highlight class="normal">].as_uint64()<sp/>);</highlight></codeline>
<codeline lineno="3772"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>sellram(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/>100<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3773"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>cur_ram_size<sp/>+<sp/>6<sp/>*<sp/>rate,<sp/>get_global_state()[</highlight><highlight class="stringliteral">&quot;max_ram_size&quot;</highlight><highlight class="normal">].as_uint64()<sp/>);</highlight></codeline>
<codeline lineno="3774"><highlight class="normal"><sp/><sp/><sp/>cur_ram_size<sp/>=<sp/>get_global_state()[</highlight><highlight class="stringliteral">&quot;max_ram_size&quot;</highlight><highlight class="normal">].as_uint64();</highlight></codeline>
<codeline lineno="3775"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aa1213f0f2c7a53ea968859f3cab582c3" kindref="member">produce_blocks</ref>();</highlight></codeline>
<codeline lineno="3776"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>buyrambytes(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/>100<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3777"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>cur_ram_size<sp/>+<sp/>2<sp/>*<sp/>rate,<sp/>get_global_state()[</highlight><highlight class="stringliteral">&quot;max_ram_size&quot;</highlight><highlight class="normal">].as_uint64()<sp/>);</highlight></codeline>
<codeline lineno="3778"><highlight class="normal"></highlight></codeline>
<codeline lineno="3779"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>error(</highlight><highlight class="stringliteral">&quot;missing<sp/>authority<sp/>of<sp/>eosio&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="3780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;setramrate&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()(</highlight><highlight class="stringliteral">&quot;bytes_per_block&quot;</highlight><highlight class="normal">,<sp/>rate)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3781"><highlight class="normal"></highlight></codeline>
<codeline lineno="3782"><highlight class="normal"><sp/><sp/><sp/>cur_ram_size<sp/>=<sp/>get_global_state()[</highlight><highlight class="stringliteral">&quot;max_ram_size&quot;</highlight><highlight class="normal">].as_uint64();</highlight></codeline>
<codeline lineno="3783"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aa1213f0f2c7a53ea968859f3cab582c3" kindref="member">produce_blocks</ref>(10);</highlight></codeline>
<codeline lineno="3784"><highlight class="normal"><sp/><sp/><sp/>uint16_t<sp/>old_rate<sp/>=<sp/>rate;</highlight></codeline>
<codeline lineno="3785"><highlight class="normal"><sp/><sp/><sp/>rate<sp/>=<sp/>5000;</highlight></codeline>
<codeline lineno="3786"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(<sp/>config::system_account_name,<sp/></highlight><highlight class="stringliteral">&quot;setramrate&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()(</highlight><highlight class="stringliteral">&quot;bytes_per_block&quot;</highlight><highlight class="normal">,<sp/>rate)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3787"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>cur_ram_size<sp/>+<sp/>11<sp/>*<sp/>old_rate,<sp/>get_global_state()[</highlight><highlight class="stringliteral">&quot;max_ram_size&quot;</highlight><highlight class="normal">].as_uint64()<sp/>);</highlight></codeline>
<codeline lineno="3788"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aa1213f0f2c7a53ea968859f3cab582c3" kindref="member">produce_blocks</ref>(5);</highlight></codeline>
<codeline lineno="3789"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>buyrambytes(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/>100<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3790"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>cur_ram_size<sp/>+<sp/>11<sp/>*<sp/>old_rate<sp/>+<sp/>6<sp/>*<sp/>rate,<sp/>get_global_state()[</highlight><highlight class="stringliteral">&quot;max_ram_size&quot;</highlight><highlight class="normal">].as_uint64()<sp/>);</highlight></codeline>
<codeline lineno="3791"><highlight class="normal"></highlight></codeline>
<codeline lineno="3792"><highlight class="normal">}<sp/><ref refid="eosio_8system__tests_8cpp_1a057cb719bfa291fae56dc6ba5fa7a8d1" kindref="member">FC_LOG_AND_RETHROW</ref>()</highlight></codeline>
<codeline lineno="3793"><highlight class="normal"></highlight></codeline>
<codeline lineno="3794"><highlight class="normal"><ref refid="eosio_8system__tests_8cpp_1a8a1841911da283583ec346df954d73a1" kindref="member">BOOST_FIXTURE_TEST_CASE</ref>(<sp/>eosioram_ramusage,<sp/><ref refid="classeosio__system_1_1eosio__system__tester" kindref="compound">eosio_system_tester</ref><sp/>)<sp/><ref refid="eosio_8system__tests_8cpp_1ae89aac94d502abdd3c8d055174c221fc" kindref="member">try</ref><sp/>{</highlight></codeline>
<codeline lineno="3795"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;0.0000&quot;</highlight><highlight class="normal">),<sp/>get_balance(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3796"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a792dc87878d55cfa11f862e9e6d5cc05" kindref="member">transfer</ref>(<sp/></highlight><highlight class="stringliteral">&quot;eosio&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1000.0000&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;eosio&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3797"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>stake(<sp/></highlight><highlight class="stringliteral">&quot;eosio&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;200.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;100.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3798"><highlight class="normal"></highlight></codeline>
<codeline lineno="3799"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>initial_ram_balance<sp/>=<sp/>get_balance(</highlight><highlight class="stringliteral">&quot;eosio.ram&quot;</highlight><highlight class="normal">_n);</highlight></codeline>
<codeline lineno="3800"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>initial_ramfee_balance<sp/>=<sp/>get_balance(</highlight><highlight class="stringliteral">&quot;eosio.ramfee&quot;</highlight><highlight class="normal">_n);</highlight></codeline>
<codeline lineno="3801"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>buyram(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1000.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3802"><highlight class="normal"></highlight></codeline>
<codeline lineno="3803"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>get_row_by_account(<sp/></highlight><highlight class="stringliteral">&quot;eosio.token&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;accounts&quot;</highlight><highlight class="normal">_n,<sp/>account_name(symbol{<ref refid="test__symbol_8hpp_1af288246ded3673b7a516aeaaca84ab01" kindref="member">CORE_SYM</ref>}.to_symbol_code())<sp/>).empty()<sp/>);</highlight></codeline>
<codeline lineno="3804"><highlight class="normal"></highlight></codeline>
<codeline lineno="3805"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//remove<sp/>row</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3806"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">base_tester::push_action</ref>(<sp/></highlight><highlight class="stringliteral">&quot;eosio.token&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;close&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()</highlight></codeline>
<codeline lineno="3807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/></highlight><highlight class="stringliteral">&quot;owner&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="3808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/></highlight><highlight class="stringliteral">&quot;symbol&quot;</highlight><highlight class="normal">,<sp/>symbol{<ref refid="test__symbol_8hpp_1af288246ded3673b7a516aeaaca84ab01" kindref="member">CORE_SYM</ref>}<sp/>)</highlight></codeline>
<codeline lineno="3809"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="3810"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>get_row_by_account(<sp/></highlight><highlight class="stringliteral">&quot;eosio.token&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;accounts&quot;</highlight><highlight class="normal">_n,<sp/>account_name(symbol{<ref refid="test__symbol_8hpp_1af288246ded3673b7a516aeaaca84ab01" kindref="member">CORE_SYM</ref>}.to_symbol_code())<sp/>).empty()<sp/>);</highlight></codeline>
<codeline lineno="3811"><highlight class="normal"></highlight></codeline>
<codeline lineno="3812"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="eosio_8system__tests_8cpp_1ab6141e60ec62bffdd9519ddd45f56e6a" kindref="member">rlm</ref><sp/>=<sp/>control-&gt;get_resource_limits_manager();</highlight></codeline>
<codeline lineno="3813"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>eosioram_ram_usage<sp/>=<sp/><ref refid="eosio_8system__tests_8cpp_1ab6141e60ec62bffdd9519ddd45f56e6a" kindref="member">rlm</ref>.get_account_ram_usage(</highlight><highlight class="stringliteral">&quot;eosio.ram&quot;</highlight><highlight class="normal">_n);</highlight></codeline>
<codeline lineno="3814"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="eosio_8system__tests_8cpp_1a24d0cbbddeeee8a3afa3b12468449349" kindref="member">alice_ram_usage</ref><sp/>=<sp/><ref refid="eosio_8system__tests_8cpp_1ab6141e60ec62bffdd9519ddd45f56e6a" kindref="member">rlm</ref>.get_account_ram_usage(</highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n);</highlight></codeline>
<codeline lineno="3815"><highlight class="normal"></highlight></codeline>
<codeline lineno="3816"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>sellram(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/>2048<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3817"><highlight class="normal"></highlight></codeline>
<codeline lineno="3818"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//make<sp/>sure<sp/>that<sp/>ram<sp/>was<sp/>billed<sp/>to<sp/>alice,<sp/>not<sp/>to<sp/>eosio.ram</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3819"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/><ref refid="eosio_8system__tests_8cpp_1a24d0cbbddeeee8a3afa3b12468449349" kindref="member">alice_ram_usage</ref><sp/>&lt;<sp/><ref refid="eosio_8system__tests_8cpp_1ab6141e60ec62bffdd9519ddd45f56e6a" kindref="member">rlm</ref>.get_account_ram_usage(</highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n)<sp/>);</highlight></codeline>
<codeline lineno="3820"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>eosioram_ram_usage,<sp/><ref refid="eosio_8system__tests_8cpp_1ab6141e60ec62bffdd9519ddd45f56e6a" kindref="member">rlm</ref>.get_account_ram_usage(</highlight><highlight class="stringliteral">&quot;eosio.ram&quot;</highlight><highlight class="normal">_n)<sp/>);</highlight></codeline>
<codeline lineno="3821"><highlight class="normal"></highlight></codeline>
<codeline lineno="3822"><highlight class="normal">}<sp/><ref refid="eosio_8system__tests_8cpp_1a057cb719bfa291fae56dc6ba5fa7a8d1" kindref="member">FC_LOG_AND_RETHROW</ref>()</highlight></codeline>
<codeline lineno="3823"><highlight class="normal"></highlight></codeline>
<codeline lineno="3824"><highlight class="normal"><ref refid="eosio_8system__tests_8cpp_1a8a1841911da283583ec346df954d73a1" kindref="member">BOOST_FIXTURE_TEST_CASE</ref>(<sp/>ram_gift,<sp/><ref refid="classeosio__system_1_1eosio__system__tester" kindref="compound">eosio_system_tester</ref><sp/>)<sp/><ref refid="eosio_8system__tests_8cpp_1ae89aac94d502abdd3c8d055174c221fc" kindref="member">try</ref><sp/>{</highlight></codeline>
<codeline lineno="3825"><highlight class="normal"><sp/><sp/><sp/>active_and_vote_producers();</highlight></codeline>
<codeline lineno="3826"><highlight class="normal"></highlight></codeline>
<codeline lineno="3827"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="eosio_8system__tests_8cpp_1ab6141e60ec62bffdd9519ddd45f56e6a" kindref="member">rlm</ref><sp/>=<sp/>control-&gt;get_resource_limits_manager();</highlight></codeline>
<codeline lineno="3828"><highlight class="normal"><sp/><sp/><sp/>int64_t<sp/>ram_bytes_orig,<sp/>net_weight,<sp/>cpu_weight;</highlight></codeline>
<codeline lineno="3829"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1ab6141e60ec62bffdd9519ddd45f56e6a" kindref="member">rlm</ref>.get_account_limits(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n,<sp/>ram_bytes_orig,<sp/>net_weight,<sp/>cpu_weight<sp/>);</highlight></codeline>
<codeline lineno="3830"><highlight class="normal"></highlight></codeline>
<codeline lineno="3831"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3832"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>It<sp/>seems<sp/>impossible<sp/>to<sp/>write<sp/>this<sp/>test,<sp/>because<sp/>buyrambytes<sp/>action<sp/>doesn&apos;t<sp/>give<sp/>you<sp/>exact<sp/>amount<sp/>of<sp/>bytes<sp/>requested</highlight></codeline>
<codeline lineno="3833"><highlight class="comment"><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="3834"><highlight class="comment"><sp/><sp/><sp/>//check<sp/>that<sp/>it&apos;s<sp/>possible<sp/>to<sp/>create<sp/>account<sp/>bying<sp/>required_bytes(2724)<sp/>+<sp/>userres<sp/>table(112)<sp/>+<sp/>userres<sp/>row(160)<sp/>-<sp/>ram_gift_bytes(1400)</highlight></codeline>
<codeline lineno="3835"><highlight class="comment"><sp/><sp/><sp/>create_account_with_resources(<sp/>&quot;abcdefghklmn&quot;_n,<sp/>&quot;alice1111111&quot;_n,<sp/>2724<sp/>+<sp/>112<sp/>+<sp/>160<sp/>-<sp/>1400<sp/>);</highlight></codeline>
<codeline lineno="3836"><highlight class="comment"></highlight></codeline>
<codeline lineno="3837"><highlight class="comment"><sp/><sp/><sp/>//check<sp/>that<sp/>one<sp/>byte<sp/>less<sp/>is<sp/>not<sp/>enough</highlight></codeline>
<codeline lineno="3838"><highlight class="comment"><sp/><sp/><sp/>BOOST_REQUIRE_THROW(<sp/>create_account_with_resources(<sp/>&quot;abcdefghklmn&quot;_n,<sp/>&quot;alice1111111&quot;_n,<sp/>2724<sp/>+<sp/>112<sp/>+<sp/>160<sp/>-<sp/>1400<sp/>-<sp/>1<sp/>),</highlight></codeline>
<codeline lineno="3839"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ram_usage_exceeded<sp/>);</highlight></codeline>
<codeline lineno="3840"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3841"><highlight class="normal"></highlight></codeline>
<codeline lineno="3842"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//check<sp/>that<sp/>stake/unstake<sp/>keeps<sp/>the<sp/>gift</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3843"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a792dc87878d55cfa11f862e9e6d5cc05" kindref="member">transfer</ref>(<sp/></highlight><highlight class="stringliteral">&quot;eosio&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1000.0000&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;eosio&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3844"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>stake(<sp/></highlight><highlight class="stringliteral">&quot;eosio&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;200.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;100.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3845"><highlight class="normal"><sp/><sp/><sp/>int64_t<sp/>ram_bytes_after_stake;</highlight></codeline>
<codeline lineno="3846"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1ab6141e60ec62bffdd9519ddd45f56e6a" kindref="member">rlm</ref>.get_account_limits(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n,<sp/>ram_bytes_after_stake,<sp/>net_weight,<sp/>cpu_weight<sp/>);</highlight></codeline>
<codeline lineno="3847"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>ram_bytes_orig,<sp/>ram_bytes_after_stake<sp/>);</highlight></codeline>
<codeline lineno="3848"><highlight class="normal"></highlight></codeline>
<codeline lineno="3849"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>unstake(<sp/></highlight><highlight class="stringliteral">&quot;eosio&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;20.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;10.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3850"><highlight class="normal"><sp/><sp/><sp/>int64_t<sp/>ram_bytes_after_unstake;</highlight></codeline>
<codeline lineno="3851"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1ab6141e60ec62bffdd9519ddd45f56e6a" kindref="member">rlm</ref>.get_account_limits(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n,<sp/>ram_bytes_after_unstake,<sp/>net_weight,<sp/>cpu_weight<sp/>);</highlight></codeline>
<codeline lineno="3852"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>ram_bytes_orig,<sp/>ram_bytes_after_unstake<sp/>);</highlight></codeline>
<codeline lineno="3853"><highlight class="normal"></highlight></codeline>
<codeline lineno="3854"><highlight class="normal"><sp/><sp/><sp/>uint64_t<sp/>ram_gift<sp/>=<sp/>1400;</highlight></codeline>
<codeline lineno="3855"><highlight class="normal"></highlight></codeline>
<codeline lineno="3856"><highlight class="normal"><sp/><sp/><sp/>int64_t<sp/>ram_bytes;</highlight></codeline>
<codeline lineno="3857"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>buyram(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1000.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3858"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1ab6141e60ec62bffdd9519ddd45f56e6a" kindref="member">rlm</ref>.get_account_limits(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n,<sp/>ram_bytes,<sp/>net_weight,<sp/>cpu_weight<sp/>);</highlight></codeline>
<codeline lineno="3859"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>userres<sp/>=<sp/>get_total_stake(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n<sp/>);</highlight></codeline>
<codeline lineno="3860"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>userres[</highlight><highlight class="stringliteral">&quot;ram_bytes&quot;</highlight><highlight class="normal">].as_uint64()<sp/>+<sp/>ram_gift,<sp/>ram_bytes<sp/>);</highlight></codeline>
<codeline lineno="3861"><highlight class="normal"></highlight></codeline>
<codeline lineno="3862"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>sellram(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">,<sp/>1024<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3863"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1ab6141e60ec62bffdd9519ddd45f56e6a" kindref="member">rlm</ref>.get_account_limits(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n,<sp/>ram_bytes,<sp/>net_weight,<sp/>cpu_weight<sp/>);</highlight></codeline>
<codeline lineno="3864"><highlight class="normal"><sp/><sp/><sp/>userres<sp/>=<sp/>get_total_stake(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n<sp/>);</highlight></codeline>
<codeline lineno="3865"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>userres[</highlight><highlight class="stringliteral">&quot;ram_bytes&quot;</highlight><highlight class="normal">].as_uint64()<sp/>+<sp/>ram_gift,<sp/>ram_bytes<sp/>);</highlight></codeline>
<codeline lineno="3866"><highlight class="normal"></highlight></codeline>
<codeline lineno="3867"><highlight class="normal">}<sp/><ref refid="eosio_8system__tests_8cpp_1a057cb719bfa291fae56dc6ba5fa7a8d1" kindref="member">FC_LOG_AND_RETHROW</ref>()</highlight></codeline>
<codeline lineno="3868"><highlight class="normal"></highlight></codeline>
<codeline lineno="3869"><highlight class="normal"><ref refid="eosio_8system__tests_8cpp_1a8a1841911da283583ec346df954d73a1" kindref="member">BOOST_FIXTURE_TEST_CASE</ref>(<sp/>rex_rounding_issue,<sp/><ref refid="classeosio__system_1_1eosio__system__tester" kindref="compound">eosio_system_tester</ref><sp/>)<sp/><ref refid="eosio_8system__tests_8cpp_1ae89aac94d502abdd3c8d055174c221fc" kindref="member">try</ref><sp/>{</highlight></codeline>
<codeline lineno="3870"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;name&gt;<sp/>whales<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;whale1&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;whale2&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;whale3&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;whale4&quot;</highlight><highlight class="normal">_n<sp/>,<sp/></highlight><highlight class="stringliteral">&quot;whale5&quot;</highlight><highlight class="normal">_n<sp/><sp/>};</highlight></codeline>
<codeline lineno="3871"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>name<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>{<sp/></highlight><highlight class="stringliteral">&quot;bob&quot;</highlight><highlight class="normal">_n<sp/>},<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>{<sp/></highlight><highlight class="stringliteral">&quot;alice&quot;</highlight><highlight class="normal">_n<sp/>};</highlight></codeline>
<codeline lineno="3872"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;name&gt;<sp/><ref refid="structaccounts" kindref="compound">accounts</ref><sp/>=<sp/>{<ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>};</highlight></codeline>
<codeline lineno="3873"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;name&gt;<sp/>rexborrowers<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;rex1&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;rex2&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;rex3&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;rex4&quot;</highlight><highlight class="normal">_n};</highlight></codeline>
<codeline lineno="3874"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>one_eos<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1.0000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3875"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>one_rex<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>asset::from_string(</highlight><highlight class="stringliteral">&quot;1.0000<sp/>REX&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3876"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>init_balance<sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1000.0000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3877"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>whale_balance<sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1000000.0000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3878"><highlight class="normal"></highlight></codeline>
<codeline lineno="3879"><highlight class="normal"><sp/><sp/><sp/>setup_rex_accounts(<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>,<sp/>init_balance<sp/>);</highlight></codeline>
<codeline lineno="3880"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create_accounts_with_resources({<sp/>bob,<sp/>whale<sp/>});</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3881"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>w<sp/>:<sp/>whales)<sp/>{</highlight></codeline>
<codeline lineno="3882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>create_accounts_with_resources({<sp/>w<sp/>});</highlight></codeline>
<codeline lineno="3883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stake_with_transfer(config::system_account_name,<sp/>w,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1000.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1000.0000&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a743a21c2e0e86a8aeacc66e5c80c51ef" kindref="member">issue_and_transfer</ref>(w,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;100000000.0000&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>vote(<sp/>w,<sp/>{<sp/>},<sp/></highlight><highlight class="stringliteral">&quot;proxyaccount&quot;</highlight><highlight class="normal">_n<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(<sp/>w,<sp/></highlight><highlight class="stringliteral">&quot;deposit&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()(</highlight><highlight class="stringliteral">&quot;owner&quot;</highlight><highlight class="normal">,<sp/>w)(</highlight><highlight class="stringliteral">&quot;amount&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1000000.0000&quot;</highlight><highlight class="normal">))<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(<sp/>w,<sp/></highlight><highlight class="stringliteral">&quot;buyrex&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()(</highlight><highlight class="stringliteral">&quot;from&quot;</highlight><highlight class="normal">,<sp/>w)(</highlight><highlight class="stringliteral">&quot;amount&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1000000.0000&quot;</highlight><highlight class="normal">))<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3888"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3889"><highlight class="normal"></highlight></codeline>
<codeline lineno="3890"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a743a21c2e0e86a8aeacc66e5c80c51ef" kindref="member">issue_and_transfer</ref>(<ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/>init_balance);</highlight></codeline>
<codeline lineno="3891"><highlight class="normal"></highlight></codeline>
<codeline lineno="3892"><highlight class="normal"></highlight></codeline>
<codeline lineno="3893"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>rb<sp/>:<sp/>rexborrowers)<sp/>{</highlight></codeline>
<codeline lineno="3894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>create_accounts_with_resources({<sp/>rb<sp/>});</highlight></codeline>
<codeline lineno="3895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buyram(config::system_account_name,<sp/>rb,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;10.0000&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a743a21c2e0e86a8aeacc66e5c80c51ef" kindref="member">issue_and_transfer</ref>(rb,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1000000.0000&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stake_with_transfer(config::system_account_name,<sp/>rb,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1000.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1000.0000&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>vote(<sp/>rb,<sp/>{<sp/>},<sp/></highlight><highlight class="stringliteral">&quot;proxyaccount&quot;</highlight><highlight class="normal">_n<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(<sp/>rb,<sp/></highlight><highlight class="stringliteral">&quot;deposit&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()(</highlight><highlight class="stringliteral">&quot;owner&quot;</highlight><highlight class="normal">,<sp/>rb)(</highlight><highlight class="stringliteral">&quot;amount&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1000000.0000&quot;</highlight><highlight class="normal">))<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3900"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3901"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>accounts<sp/>into<sp/>rex</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3902"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>acct<sp/>:<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>){</highlight></codeline>
<codeline lineno="3903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stake_with_transfer(config::system_account_name,<sp/>acct,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1000.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1000.0000&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a743a21c2e0e86a8aeacc66e5c80c51ef" kindref="member">issue_and_transfer</ref>(acct,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;100.1239&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>vote(<sp/>acct,<sp/>{<sp/>},<sp/></highlight><highlight class="stringliteral">&quot;proxyaccount&quot;</highlight><highlight class="normal">_n<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(<sp/>acct,<sp/></highlight><highlight class="stringliteral">&quot;deposit&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()(</highlight><highlight class="stringliteral">&quot;owner&quot;</highlight><highlight class="normal">,<sp/>acct)(</highlight><highlight class="stringliteral">&quot;amount&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;100.1239&quot;</highlight><highlight class="normal">))<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(<sp/>acct,<sp/></highlight><highlight class="stringliteral">&quot;buyrex&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()(</highlight><highlight class="stringliteral">&quot;from&quot;</highlight><highlight class="normal">,<sp/>acct)(</highlight><highlight class="stringliteral">&quot;amount&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;100.1239&quot;</highlight><highlight class="normal">))<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3908"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3909"><highlight class="normal"></highlight></codeline>
<codeline lineno="3910"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>rent_and_go<sp/>=<sp/>[&amp;]<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cnt)<sp/>{</highlight></codeline>
<codeline lineno="3911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>rb<sp/>:<sp/>rexborrowers)<sp/>{</highlight></codeline>
<codeline lineno="3912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),</highlight></codeline>
<codeline lineno="3913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(<sp/>rb,<sp/></highlight><highlight class="stringliteral">&quot;rentcpu&quot;</highlight><highlight class="normal">_n,<sp/></highlight></codeline>
<codeline lineno="3914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()</highlight></codeline>
<codeline lineno="3915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;from&quot;</highlight><highlight class="normal">,<sp/>rb)</highlight></codeline>
<codeline lineno="3916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;receiver&quot;</highlight><highlight class="normal">,<sp/>rb)</highlight></codeline>
<codeline lineno="3917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;loan_payment&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;100.0000&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="3918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;loan_fund&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;0.0000&quot;</highlight><highlight class="normal">))<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>exec<sp/>and<sp/>update</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>acct<sp/>:<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>)<sp/>{</highlight></codeline>
<codeline lineno="3922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(cnt<sp/>%<sp/>10<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="3923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(<sp/>acct,<sp/></highlight><highlight class="stringliteral">&quot;rexexec&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()(</highlight><highlight class="stringliteral">&quot;user&quot;</highlight><highlight class="normal">,<sp/>acct)(</highlight><highlight class="stringliteral">&quot;max&quot;</highlight><highlight class="normal">,<sp/>2)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(<sp/>acct,<sp/></highlight><highlight class="stringliteral">&quot;updaterex&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()(</highlight><highlight class="stringliteral">&quot;owner&quot;</highlight><highlight class="normal">,<sp/>acct)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(<sp/>acct,<sp/></highlight><highlight class="stringliteral">&quot;sellrex&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()(</highlight><highlight class="stringliteral">&quot;from&quot;</highlight><highlight class="normal">,<sp/>acct)(</highlight><highlight class="stringliteral">&quot;rex&quot;</highlight><highlight class="normal">,one_rex)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),</highlight></codeline>
<codeline lineno="3928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(<sp/>acct,<sp/></highlight><highlight class="stringliteral">&quot;unstaketorex&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()(</highlight><highlight class="stringliteral">&quot;owner&quot;</highlight><highlight class="normal">,<sp/>acct)(</highlight><highlight class="stringliteral">&quot;receiver&quot;</highlight><highlight class="normal">,<sp/>acct)(</highlight><highlight class="stringliteral">&quot;from_net&quot;</highlight><highlight class="normal">,<sp/>one_eos)(</highlight><highlight class="stringliteral">&quot;from_cpu&quot;</highlight><highlight class="normal">,<sp/>one_eos)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3930"><highlight class="normal"></highlight></codeline>
<codeline lineno="3931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::days(1)<sp/>);</highlight></codeline>
<codeline lineno="3932"><highlight class="normal"><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3933"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>BOOST_REQUIRE_EQUAL(<sp/>get_rex_vote_stake(<sp/>alice<sp/>),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>init_rex_stake<sp/>-<sp/>core_sym::from_string(&quot;0.0006&quot;)<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3934"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>check_tables<sp/>=<sp/>[&amp;]<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>name&amp;<sp/>acct,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_error=</highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="3935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>rex_stake<sp/>=<sp/>get_rex_vote_stake(acct);</highlight></codeline>
<codeline lineno="3936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>vote_staked<sp/>=<sp/>get_voter_info(acct)[</highlight><highlight class="stringliteral">&quot;staked&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="3937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>delband<sp/>=<sp/>get_dbw_obj(acct,<sp/>acct);</highlight></codeline>
<codeline lineno="3938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>cpu_stake<sp/>=<sp/>delband[</highlight><highlight class="stringliteral">&quot;cpu_weight&quot;</highlight><highlight class="normal">].as&lt;asset&gt;();</highlight></codeline>
<codeline lineno="3939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>net_stake<sp/>=<sp/>delband[</highlight><highlight class="stringliteral">&quot;net_weight&quot;</highlight><highlight class="normal">].as&lt;asset&gt;();</highlight></codeline>
<codeline lineno="3940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ilog(<sp/></highlight><highlight class="stringliteral">&quot;voter:\t${voter}&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="stringliteral">&quot;voter&quot;</highlight><highlight class="normal">,<sp/>vote_staked));</highlight></codeline>
<codeline lineno="3941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ilog(<sp/></highlight><highlight class="stringliteral">&quot;calc_vote:\t${calc_vote}&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="stringliteral">&quot;calc_vote&quot;</highlight><highlight class="normal">,<sp/>(rex_stake<sp/>+<sp/>cpu_stake<sp/>+<sp/>net_stake).get_amount()));</highlight></codeline>
<codeline lineno="3942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(is_error){</highlight></codeline>
<codeline lineno="3943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>vote_staked<sp/>-<sp/>(rex_stake<sp/>+<sp/>cpu_stake<sp/>+<sp/>net_stake).get_amount(),<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="3944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>(rex_stake<sp/>+<sp/>cpu_stake<sp/>+<sp/>net_stake).get_amount(),<sp/>vote_staked<sp/>);</highlight></codeline>
<codeline lineno="3947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3948"><highlight class="normal"><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="3949"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>move<sp/>ahead<sp/>5<sp/>days<sp/>to<sp/>unlock<sp/>rex</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3950"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(fc::days(5));</highlight></codeline>
<codeline lineno="3951"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>159;<sp/>++i){</highlight></codeline>
<codeline lineno="3952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rent_and_go(i);</highlight></codeline>
<codeline lineno="3953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i<sp/>%<sp/>10<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="3954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>acct<sp/>:<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>)<sp/>{</highlight></codeline>
<codeline lineno="3955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ilog(</highlight><highlight class="stringliteral">&quot;${i}&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="stringliteral">&quot;i&quot;</highlight><highlight class="normal">,i));</highlight></codeline>
<codeline lineno="3956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>check_tables(acct);</highlight></codeline>
<codeline lineno="3957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3958"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3959"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>day<sp/>160<sp/>there<sp/>was<sp/>a<sp/>divergence<sp/>of<sp/>voter.staked<sp/>and<sp/>(rex_bal<sp/>+<sp/>delband.cpu<sp/>+<sp/>delband.net)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3960"><highlight class="normal"><sp/><sp/><sp/>rent_and_go(160);</highlight></codeline>
<codeline lineno="3961"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>acct<sp/>:<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>)<sp/>{</highlight></codeline>
<codeline lineno="3962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>check_tables(acct,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3963"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3964"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>vote</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3965"><highlight class="normal"><sp/><sp/><sp/>std::vector&lt;name&gt;<sp/>delegates<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="3966"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>acct<sp/>:<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>)<sp/>{</highlight></codeline>
<codeline lineno="3967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),</highlight></codeline>
<codeline lineno="3968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(<sp/>acct,<sp/></highlight><highlight class="stringliteral">&quot;voteupdate&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()(</highlight><highlight class="stringliteral">&quot;voter_name&quot;</highlight><highlight class="normal">,<sp/>acct)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3969"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3970"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>that<sp/>values<sp/>are<sp/>equal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3971"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>acct<sp/>:<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>)<sp/>{</highlight></codeline>
<codeline lineno="3972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>check_tables(acct,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3973"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3974"><highlight class="normal"></highlight></codeline>
<codeline lineno="3975"><highlight class="normal">}<sp/><ref refid="eosio_8system__tests_8cpp_1a057cb719bfa291fae56dc6ba5fa7a8d1" kindref="member">FC_LOG_AND_RETHROW</ref>()</highlight></codeline>
<codeline lineno="3976"><highlight class="normal"></highlight></codeline>
<codeline lineno="3977"><highlight class="normal"><ref refid="eosio_8system__tests_8cpp_1a8a1841911da283583ec346df954d73a1" kindref="member">BOOST_FIXTURE_TEST_CASE</ref>(<sp/>rex_auth,<sp/><ref refid="classeosio__system_1_1eosio__system__tester" kindref="compound">eosio_system_tester</ref><sp/>)<sp/><ref refid="eosio_8system__tests_8cpp_1ae89aac94d502abdd3c8d055174c221fc" kindref="member">try</ref><sp/>{</highlight></codeline>
<codeline lineno="3978"><highlight class="normal"></highlight></codeline>
<codeline lineno="3979"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;account_name&gt;<sp/><ref refid="structaccounts" kindref="compound">accounts</ref><sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;aliceaccount&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;bobbyaccount&quot;</highlight><highlight class="normal">_n<sp/>};</highlight></codeline>
<codeline lineno="3980"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>account_name<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>=<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>[0],<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref><sp/>=<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>[1];</highlight></codeline>
<codeline lineno="3981"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>init_balance<sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1000.0000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3982"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>one_eos<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1.0000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3983"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>one_rex<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>asset::from_string(</highlight><highlight class="stringliteral">&quot;1.0000<sp/>REX&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3984"><highlight class="normal"><sp/><sp/><sp/>setup_rex_accounts(<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>,<sp/>init_balance<sp/>);</highlight></codeline>
<codeline lineno="3985"><highlight class="normal"></highlight></codeline>
<codeline lineno="3986"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>error_msg(</highlight><highlight class="stringliteral">&quot;missing<sp/>authority<sp/>of<sp/>aliceaccount&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3987"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>error(error_msg),<sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/></highlight><highlight class="stringliteral">&quot;deposit&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()(</highlight><highlight class="stringliteral">&quot;owner&quot;</highlight><highlight class="normal">,<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>)(</highlight><highlight class="stringliteral">&quot;amount&quot;</highlight><highlight class="normal">,<sp/>one_eos)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3988"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>error(error_msg),<sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/></highlight><highlight class="stringliteral">&quot;withdraw&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()(</highlight><highlight class="stringliteral">&quot;owner&quot;</highlight><highlight class="normal">,<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>)(</highlight><highlight class="stringliteral">&quot;amount&quot;</highlight><highlight class="normal">,<sp/>one_eos)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3989"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>error(error_msg),<sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/></highlight><highlight class="stringliteral">&quot;buyrex&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()(</highlight><highlight class="stringliteral">&quot;from&quot;</highlight><highlight class="normal">,<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>)(</highlight><highlight class="stringliteral">&quot;amount&quot;</highlight><highlight class="normal">,<sp/>one_eos)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3990"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>error(error_msg),</highlight></codeline>
<codeline lineno="3991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/></highlight><highlight class="stringliteral">&quot;unstaketorex&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()(</highlight><highlight class="stringliteral">&quot;owner&quot;</highlight><highlight class="normal">,<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>)(</highlight><highlight class="stringliteral">&quot;receiver&quot;</highlight><highlight class="normal">,<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>)(</highlight><highlight class="stringliteral">&quot;from_net&quot;</highlight><highlight class="normal">,<sp/>one_eos)(</highlight><highlight class="stringliteral">&quot;from_cpu&quot;</highlight><highlight class="normal">,<sp/>one_eos)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3992"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>error(error_msg),<sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/></highlight><highlight class="stringliteral">&quot;sellrex&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()(</highlight><highlight class="stringliteral">&quot;from&quot;</highlight><highlight class="normal">,<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>)(</highlight><highlight class="stringliteral">&quot;rex&quot;</highlight><highlight class="normal">,<sp/>one_rex)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3993"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>error(error_msg),<sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/></highlight><highlight class="stringliteral">&quot;cnclrexorder&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()(</highlight><highlight class="stringliteral">&quot;owner&quot;</highlight><highlight class="normal">,<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3994"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>error(error_msg),</highlight></codeline>
<codeline lineno="3995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/></highlight><highlight class="stringliteral">&quot;rentcpu&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()(</highlight><highlight class="stringliteral">&quot;from&quot;</highlight><highlight class="normal">,<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>)(</highlight><highlight class="stringliteral">&quot;receiver&quot;</highlight><highlight class="normal">,<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>)(</highlight><highlight class="stringliteral">&quot;loan_payment&quot;</highlight><highlight class="normal">,<sp/>one_eos)(</highlight><highlight class="stringliteral">&quot;loan_fund&quot;</highlight><highlight class="normal">,<sp/>one_eos)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3996"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>error(error_msg),</highlight></codeline>
<codeline lineno="3997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/></highlight><highlight class="stringliteral">&quot;rentnet&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()(</highlight><highlight class="stringliteral">&quot;from&quot;</highlight><highlight class="normal">,<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>)(</highlight><highlight class="stringliteral">&quot;receiver&quot;</highlight><highlight class="normal">,<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>)(</highlight><highlight class="stringliteral">&quot;loan_payment&quot;</highlight><highlight class="normal">,<sp/>one_eos)(</highlight><highlight class="stringliteral">&quot;loan_fund&quot;</highlight><highlight class="normal">,<sp/>one_eos)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3998"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>error(error_msg),<sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/></highlight><highlight class="stringliteral">&quot;fundcpuloan&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()(</highlight><highlight class="stringliteral">&quot;from&quot;</highlight><highlight class="normal">,<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>)(</highlight><highlight class="stringliteral">&quot;loan_num&quot;</highlight><highlight class="normal">,<sp/>1)(</highlight><highlight class="stringliteral">&quot;payment&quot;</highlight><highlight class="normal">,<sp/>one_eos)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3999"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>error(error_msg),<sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/></highlight><highlight class="stringliteral">&quot;fundnetloan&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()(</highlight><highlight class="stringliteral">&quot;from&quot;</highlight><highlight class="normal">,<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>)(</highlight><highlight class="stringliteral">&quot;loan_num&quot;</highlight><highlight class="normal">,<sp/>1)(</highlight><highlight class="stringliteral">&quot;payment&quot;</highlight><highlight class="normal">,<sp/>one_eos)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4000"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>error(error_msg),<sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/></highlight><highlight class="stringliteral">&quot;defcpuloan&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()(</highlight><highlight class="stringliteral">&quot;from&quot;</highlight><highlight class="normal">,<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>)(</highlight><highlight class="stringliteral">&quot;loan_num&quot;</highlight><highlight class="normal">,<sp/>1)(</highlight><highlight class="stringliteral">&quot;amount&quot;</highlight><highlight class="normal">,<sp/>one_eos)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4001"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>error(error_msg),<sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/></highlight><highlight class="stringliteral">&quot;defnetloan&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()(</highlight><highlight class="stringliteral">&quot;from&quot;</highlight><highlight class="normal">,<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>)(</highlight><highlight class="stringliteral">&quot;loan_num&quot;</highlight><highlight class="normal">,<sp/>1)(</highlight><highlight class="stringliteral">&quot;amount&quot;</highlight><highlight class="normal">,<sp/>one_eos)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4002"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>error(error_msg),<sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/></highlight><highlight class="stringliteral">&quot;updaterex&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()(</highlight><highlight class="stringliteral">&quot;owner&quot;</highlight><highlight class="normal">,<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4003"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>error(error_msg),<sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/></highlight><highlight class="stringliteral">&quot;rexexec&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()(</highlight><highlight class="stringliteral">&quot;user&quot;</highlight><highlight class="normal">,<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>)(</highlight><highlight class="stringliteral">&quot;max&quot;</highlight><highlight class="normal">,<sp/>1)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4004"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>error(error_msg),<sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/></highlight><highlight class="stringliteral">&quot;consolidate&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()(</highlight><highlight class="stringliteral">&quot;owner&quot;</highlight><highlight class="normal">,<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4005"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>error(error_msg),<sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/></highlight><highlight class="stringliteral">&quot;mvtosavings&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()(</highlight><highlight class="stringliteral">&quot;owner&quot;</highlight><highlight class="normal">,<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>)(</highlight><highlight class="stringliteral">&quot;rex&quot;</highlight><highlight class="normal">,<sp/>one_rex)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4006"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>error(error_msg),<sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/></highlight><highlight class="stringliteral">&quot;mvfrsavings&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()(</highlight><highlight class="stringliteral">&quot;owner&quot;</highlight><highlight class="normal">,<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>)(</highlight><highlight class="stringliteral">&quot;rex&quot;</highlight><highlight class="normal">,<sp/>one_rex)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4007"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>error(error_msg),<sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/></highlight><highlight class="stringliteral">&quot;closerex&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()(</highlight><highlight class="stringliteral">&quot;owner&quot;</highlight><highlight class="normal">,<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4008"><highlight class="normal"></highlight></codeline>
<codeline lineno="4009"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>error(</highlight><highlight class="stringliteral">&quot;missing<sp/>authority<sp/>of<sp/>eosio&quot;</highlight><highlight class="normal">),<sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/></highlight><highlight class="stringliteral">&quot;setrex&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()(</highlight><highlight class="stringliteral">&quot;balance&quot;</highlight><highlight class="normal">,<sp/>one_eos)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4010"><highlight class="normal"></highlight></codeline>
<codeline lineno="4011"><highlight class="normal">}<sp/><ref refid="eosio_8system__tests_8cpp_1a057cb719bfa291fae56dc6ba5fa7a8d1" kindref="member">FC_LOG_AND_RETHROW</ref>()</highlight></codeline>
<codeline lineno="4012"><highlight class="normal"></highlight></codeline>
<codeline lineno="4013"><highlight class="normal"></highlight></codeline>
<codeline lineno="4014"><highlight class="normal"><ref refid="eosio_8system__tests_8cpp_1a8a1841911da283583ec346df954d73a1" kindref="member">BOOST_FIXTURE_TEST_CASE</ref>(<sp/>buy_sell_rex,<sp/><ref refid="classeosio__system_1_1eosio__system__tester" kindref="compound">eosio_system_tester</ref><sp/>)<sp/><ref refid="eosio_8system__tests_8cpp_1ae89aac94d502abdd3c8d055174c221fc" kindref="member">try</ref><sp/>{</highlight></codeline>
<codeline lineno="4015"><highlight class="normal"></highlight></codeline>
<codeline lineno="4016"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>ratio<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>10000;</highlight></codeline>
<codeline lineno="4017"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/><sp/><sp/>init_rent<sp/><sp/><sp/><sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;20000.0000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4018"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/><sp/><sp/>init_balance<sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1000.0000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4019"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;account_name&gt;<sp/><ref refid="structaccounts" kindref="compound">accounts</ref><sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;aliceaccount&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;bobbyaccount&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;carolaccount&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;emilyaccount&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;frankaccount&quot;</highlight><highlight class="normal">_n<sp/>};</highlight></codeline>
<codeline lineno="4020"><highlight class="normal"><sp/><sp/><sp/>account_name<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>=<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>[0],<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref><sp/>=<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>[1],<sp/><ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref><sp/>=<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>[2],<sp/>emily<sp/>=<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>[3],<sp/>frank<sp/>=<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>[4];</highlight></codeline>
<codeline lineno="4021"><highlight class="normal"><sp/><sp/><sp/>setup_rex_accounts(<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>,<sp/>init_balance<sp/>);</highlight></codeline>
<codeline lineno="4022"><highlight class="normal"></highlight></codeline>
<codeline lineno="4023"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>one_unit<sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;0.0001&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4024"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;insufficient<sp/>funds&quot;</highlight><highlight class="normal">),<sp/>buyrex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/>init_balance<sp/>+<sp/>one_unit<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4025"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>asset::from_string(</highlight><highlight class="stringliteral">&quot;25000.0000<sp/>REX&quot;</highlight><highlight class="normal">),<sp/><sp/>get_buyrex_result(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;2.5000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4026"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aa1213f0f2c7a53ea968859f3cab582c3" kindref="member">produce_blocks</ref>(2);</highlight></codeline>
<codeline lineno="4027"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(fc::days(5));</highlight></codeline>
<codeline lineno="4028"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;2.5000&quot;</highlight><highlight class="normal">),<sp/><sp/><sp/><sp/><sp/>get_sellrex_result(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/>asset::from_string(</highlight><highlight class="stringliteral">&quot;25000.0000<sp/>REX&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4029"><highlight class="normal"></highlight></codeline>
<codeline lineno="4030"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buyrex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;13.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4031"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;13.0000&quot;</highlight><highlight class="normal">),<sp/><sp/><sp/><sp/>get_rex_vote_stake(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4032"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buyrex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;17.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4033"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;30.0000&quot;</highlight><highlight class="normal">),<sp/><sp/><sp/><sp/>get_rex_vote_stake(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4034"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;970.0000&quot;</highlight><highlight class="normal">),<sp/><sp/><sp/>get_rex_fund(<ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>)<sp/>);</highlight></codeline>
<codeline lineno="4035"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>get_rex_balance(<ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>).get_amount(),<sp/>ratio<sp/>*<sp/>asset::from_string(</highlight><highlight class="stringliteral">&quot;30.0000<sp/>REX&quot;</highlight><highlight class="normal">).get_amount()<sp/>);</highlight></codeline>
<codeline lineno="4036"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>rex_pool<sp/>=<sp/>get_rex_pool();</highlight></codeline>
<codeline lineno="4037"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;30.0000&quot;</highlight><highlight class="normal">),<sp/><sp/>rex_pool[</highlight><highlight class="stringliteral">&quot;total_lendable&quot;</highlight><highlight class="normal">].as&lt;asset&gt;()<sp/>);</highlight></codeline>
<codeline lineno="4038"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;30.0000&quot;</highlight><highlight class="normal">),<sp/><sp/>rex_pool[</highlight><highlight class="stringliteral">&quot;total_unlent&quot;</highlight><highlight class="normal">].as&lt;asset&gt;()<sp/>);</highlight></codeline>
<codeline lineno="4039"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;0.0000&quot;</highlight><highlight class="normal">),<sp/><sp/><sp/>rex_pool[</highlight><highlight class="stringliteral">&quot;total_lent&quot;</highlight><highlight class="normal">].as&lt;asset&gt;()<sp/>);</highlight></codeline>
<codeline lineno="4040"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>init_rent,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rex_pool[</highlight><highlight class="stringliteral">&quot;total_rent&quot;</highlight><highlight class="normal">].as&lt;asset&gt;()<sp/>);</highlight></codeline>
<codeline lineno="4041"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>get_rex_balance(<ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rex_pool[</highlight><highlight class="stringliteral">&quot;total_rex&quot;</highlight><highlight class="normal">].as&lt;asset&gt;()<sp/>);</highlight></codeline>
<codeline lineno="4042"><highlight class="normal"></highlight></codeline>
<codeline lineno="4043"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>buyrex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;75.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4044"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;925.0000&quot;</highlight><highlight class="normal">),<sp/>get_rex_fund(<ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>)<sp/>);</highlight></codeline>
<codeline lineno="4045"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>ratio<sp/>*<sp/>asset::from_string(</highlight><highlight class="stringliteral">&quot;75.0000<sp/>REX&quot;</highlight><highlight class="normal">).get_amount(),<sp/>get_rex_balance(<ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>).get_amount()<sp/>);</highlight></codeline>
<codeline lineno="4046"><highlight class="normal"><sp/><sp/><sp/>rex_pool<sp/>=<sp/>get_rex_pool();</highlight></codeline>
<codeline lineno="4047"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;105.0000&quot;</highlight><highlight class="normal">),<sp/>rex_pool[</highlight><highlight class="stringliteral">&quot;total_lendable&quot;</highlight><highlight class="normal">].as&lt;asset&gt;()<sp/>);</highlight></codeline>
<codeline lineno="4048"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;105.0000&quot;</highlight><highlight class="normal">),<sp/>rex_pool[</highlight><highlight class="stringliteral">&quot;total_unlent&quot;</highlight><highlight class="normal">].as&lt;asset&gt;()<sp/>);</highlight></codeline>
<codeline lineno="4049"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;0.0000&quot;</highlight><highlight class="normal">),<sp/><sp/><sp/>rex_pool[</highlight><highlight class="stringliteral">&quot;total_lent&quot;</highlight><highlight class="normal">].as&lt;asset&gt;()<sp/>);</highlight></codeline>
<codeline lineno="4050"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>init_rent,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rex_pool[</highlight><highlight class="stringliteral">&quot;total_rent&quot;</highlight><highlight class="normal">].as&lt;asset&gt;()<sp/>);</highlight></codeline>
<codeline lineno="4051"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>get_rex_balance(<ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>)<sp/>+<sp/>get_rex_balance(<ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>),<sp/>rex_pool[</highlight><highlight class="stringliteral">&quot;total_rex&quot;</highlight><highlight class="normal">].as&lt;asset&gt;()<sp/>);</highlight></codeline>
<codeline lineno="4052"><highlight class="normal"></highlight></codeline>
<codeline lineno="4053"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::days(6)<sp/>);</highlight></codeline>
<codeline lineno="4054"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;user<sp/>must<sp/>first<sp/>buyrex&quot;</highlight><highlight class="normal">),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sellrex(<sp/><ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref>,<sp/>asset::from_string(</highlight><highlight class="stringliteral">&quot;5.0000<sp/>REX&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4055"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;asset<sp/>must<sp/>be<sp/>a<sp/>positive<sp/>amount<sp/>of<sp/>(REX,<sp/>4)&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="4056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sellrex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;55.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4057"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;asset<sp/>must<sp/>be<sp/>a<sp/>positive<sp/>amount<sp/>of<sp/>(REX,<sp/>4)&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="4058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sellrex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/>asset::from_string(</highlight><highlight class="stringliteral">&quot;-75.0030<sp/>REX&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4059"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;insufficient<sp/>available<sp/>rex&quot;</highlight><highlight class="normal">),<sp/><sp/><sp/><sp/>sellrex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/>asset::from_string(</highlight><highlight class="stringliteral">&quot;750000.0030<sp/>REX&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4060"><highlight class="normal"></highlight></codeline>
<codeline lineno="4061"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>init_total_rex<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>rex_pool[</highlight><highlight class="stringliteral">&quot;total_rex&quot;</highlight><highlight class="normal">].as&lt;asset&gt;().get_amount();</highlight></codeline>
<codeline lineno="4062"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>init_total_lendable<sp/>=<sp/>rex_pool[</highlight><highlight class="stringliteral">&quot;total_lendable&quot;</highlight><highlight class="normal">].as&lt;asset&gt;().get_amount();</highlight></codeline>
<codeline lineno="4063"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sellrex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/>asset::from_string(</highlight><highlight class="stringliteral">&quot;550001.0000<sp/>REX&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4064"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>asset::from_string(</highlight><highlight class="stringliteral">&quot;199999.0000<sp/>REX&quot;</highlight><highlight class="normal">),<sp/>get_rex_balance(<ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>)<sp/>);</highlight></codeline>
<codeline lineno="4065"><highlight class="normal"><sp/><sp/><sp/>rex_pool<sp/>=<sp/>get_rex_pool();</highlight></codeline>
<codeline lineno="4066"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>total_rex<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>rex_pool[</highlight><highlight class="stringliteral">&quot;total_rex&quot;</highlight><highlight class="normal">].as&lt;asset&gt;().get_amount();</highlight></codeline>
<codeline lineno="4067"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>total_lendable<sp/>=<sp/>rex_pool[</highlight><highlight class="stringliteral">&quot;total_lendable&quot;</highlight><highlight class="normal">].as&lt;asset&gt;().get_amount();</highlight></codeline>
<codeline lineno="4068"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>init_total_rex<sp/>/<sp/>init_total_lendable,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>total_rex<sp/>/<sp/>total_lendable<sp/>);</highlight></codeline>
<codeline lineno="4069"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>total_lendable,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rex_pool[</highlight><highlight class="stringliteral">&quot;total_unlent&quot;</highlight><highlight class="normal">].as&lt;asset&gt;().get_amount()<sp/>);</highlight></codeline>
<codeline lineno="4070"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;0.0000&quot;</highlight><highlight class="normal">),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rex_pool[</highlight><highlight class="stringliteral">&quot;total_lent&quot;</highlight><highlight class="normal">].as&lt;asset&gt;()<sp/>);</highlight></codeline>
<codeline lineno="4071"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>init_rent,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rex_pool[</highlight><highlight class="stringliteral">&quot;total_rent&quot;</highlight><highlight class="normal">].as&lt;asset&gt;()<sp/>);</highlight></codeline>
<codeline lineno="4072"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>get_rex_balance(<ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>)<sp/>+<sp/>get_rex_balance(<ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>),<sp/>rex_pool[</highlight><highlight class="stringliteral">&quot;total_rex&quot;</highlight><highlight class="normal">].as&lt;asset&gt;()<sp/>);</highlight></codeline>
<codeline lineno="4073"><highlight class="normal"></highlight></codeline>
<codeline lineno="4074"><highlight class="normal">}<sp/><ref refid="eosio_8system__tests_8cpp_1a057cb719bfa291fae56dc6ba5fa7a8d1" kindref="member">FC_LOG_AND_RETHROW</ref>()</highlight></codeline>
<codeline lineno="4075"><highlight class="normal"></highlight></codeline>
<codeline lineno="4076"><highlight class="normal"></highlight></codeline>
<codeline lineno="4077"><highlight class="normal"><ref refid="eosio_8system__tests_8cpp_1a8a1841911da283583ec346df954d73a1" kindref="member">BOOST_FIXTURE_TEST_CASE</ref>(<sp/>buy_sell_small_rex,<sp/><ref refid="classeosio__system_1_1eosio__system__tester" kindref="compound">eosio_system_tester</ref><sp/>)<sp/><ref refid="eosio_8system__tests_8cpp_1ae89aac94d502abdd3c8d055174c221fc" kindref="member">try</ref><sp/>{</highlight></codeline>
<codeline lineno="4078"><highlight class="normal"></highlight></codeline>
<codeline lineno="4079"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>ratio<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>10000;</highlight></codeline>
<codeline lineno="4080"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/><sp/><sp/>init_balance<sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;50000.0000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4081"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;account_name&gt;<sp/><ref refid="structaccounts" kindref="compound">accounts</ref><sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;aliceaccount&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;bobbyaccount&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;carolaccount&quot;</highlight><highlight class="normal">_n<sp/>};</highlight></codeline>
<codeline lineno="4082"><highlight class="normal"><sp/><sp/><sp/>account_name<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>=<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>[0],<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref><sp/>=<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>[1],<sp/><ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref><sp/>=<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>[2];</highlight></codeline>
<codeline lineno="4083"><highlight class="normal"><sp/><sp/><sp/>setup_rex_accounts(<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>,<sp/>init_balance<sp/>);</highlight></codeline>
<codeline lineno="4084"><highlight class="normal"></highlight></codeline>
<codeline lineno="4085"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>payment<sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;40000.0000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4086"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>ratio<sp/>*<sp/>payment.get_amount(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_buyrex_result(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/>payment<sp/>).get_amount()<sp/>);</highlight></codeline>
<codeline lineno="4087"><highlight class="normal"></highlight></codeline>
<codeline lineno="4088"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aa1213f0f2c7a53ea968859f3cab582c3" kindref="member">produce_blocks</ref>(2);</highlight></codeline>
<codeline lineno="4089"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::days(5)<sp/>);</highlight></codeline>
<codeline lineno="4090"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aa1213f0f2c7a53ea968859f3cab582c3" kindref="member">produce_blocks</ref>(2);</highlight></codeline>
<codeline lineno="4091"><highlight class="normal"></highlight></codeline>
<codeline lineno="4092"><highlight class="normal"><sp/><sp/><sp/>asset<sp/>init_rex_stake<sp/>=<sp/>get_rex_vote_stake(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>);</highlight></codeline>
<codeline lineno="4093"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;proceeds<sp/>are<sp/>negligible&quot;</highlight><highlight class="normal">),<sp/>sellrex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/>asset::from_string(</highlight><highlight class="stringliteral">&quot;0.0001<sp/>REX&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4094"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;proceeds<sp/>are<sp/>negligible&quot;</highlight><highlight class="normal">),<sp/>sellrex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/>asset::from_string(</highlight><highlight class="stringliteral">&quot;0.9999<sp/>REX&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4095"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;0.0001&quot;</highlight><highlight class="normal">),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_sellrex_result(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/>asset::from_string(</highlight><highlight class="stringliteral">&quot;1.0000<sp/>REX&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4096"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;0.0001&quot;</highlight><highlight class="normal">),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_sellrex_result(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/>asset::from_string(</highlight><highlight class="stringliteral">&quot;1.9999<sp/>REX&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4097"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;0.0002&quot;</highlight><highlight class="normal">),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_sellrex_result(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/>asset::from_string(</highlight><highlight class="stringliteral">&quot;2.0000<sp/>REX&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4098"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;0.0002&quot;</highlight><highlight class="normal">),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_sellrex_result(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/>asset::from_string(</highlight><highlight class="stringliteral">&quot;2.9999<sp/>REX&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4099"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>get_rex_vote_stake(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>init_rex_stake<sp/>-<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;0.0006&quot;</highlight><highlight class="normal">)<sp/>);</highlight></codeline>
<codeline lineno="4100"><highlight class="normal"></highlight></codeline>
<codeline lineno="4101"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rentcpu(<sp/><ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref>,<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;10.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4102"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sellrex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/>asset::from_string(</highlight><highlight class="stringliteral">&quot;1.0000<sp/>REX&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4103"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;proceeds<sp/>are<sp/>negligible&quot;</highlight><highlight class="normal">),<sp/>sellrex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/>asset::from_string(</highlight><highlight class="stringliteral">&quot;0.4000<sp/>REX&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4104"><highlight class="normal"></highlight></codeline>
<codeline lineno="4105"><highlight class="normal">}<sp/><ref refid="eosio_8system__tests_8cpp_1a057cb719bfa291fae56dc6ba5fa7a8d1" kindref="member">FC_LOG_AND_RETHROW</ref>()</highlight></codeline>
<codeline lineno="4106"><highlight class="normal"></highlight></codeline>
<codeline lineno="4107"><highlight class="normal"></highlight></codeline>
<codeline lineno="4108"><highlight class="normal"><ref refid="eosio_8system__tests_8cpp_1a8a1841911da283583ec346df954d73a1" kindref="member">BOOST_FIXTURE_TEST_CASE</ref>(<sp/>unstake_buy_rex,<sp/><ref refid="classeosio__system_1_1eosio__system__tester" kindref="compound">eosio_system_tester</ref>,<sp/>*<sp/>boost::unit_test::tolerance(1e-10)<sp/>)<sp/><ref refid="eosio_8system__tests_8cpp_1ae89aac94d502abdd3c8d055174c221fc" kindref="member">try</ref><sp/>{</highlight></codeline>
<codeline lineno="4109"><highlight class="normal"></highlight></codeline>
<codeline lineno="4110"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>ratio<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>10000;</highlight></codeline>
<codeline lineno="4111"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/><sp/><sp/>zero_asset<sp/><sp/><sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;0.0000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4112"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/><sp/><sp/>neg_asset<sp/><sp/><sp/><sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;-0.0001&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4113"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/><sp/><sp/>one_token<sp/><sp/><sp/><sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1.0000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4114"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/><sp/><sp/>init_balance<sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;10000.0000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4115"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/><sp/><sp/>init_net<sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;70.0000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4116"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/><sp/><sp/>init_cpu<sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;90.0000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4117"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;account_name&gt;<sp/><ref refid="structaccounts" kindref="compound">accounts</ref><sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;aliceaccount&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;bobbyaccount&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;carolaccount&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;emilyaccount&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;frankaccount&quot;</highlight><highlight class="normal">_n<sp/>};</highlight></codeline>
<codeline lineno="4118"><highlight class="normal"><sp/><sp/><sp/>account_name<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>=<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>[0],<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref><sp/>=<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>[1],<sp/><ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref><sp/>=<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>[2],<sp/>emily<sp/>=<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>[3],<sp/>frank<sp/>=<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>[4];</highlight></codeline>
<codeline lineno="4119"><highlight class="normal"><sp/><sp/><sp/>setup_rex_accounts(<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>,<sp/>init_balance,<sp/>init_net,<sp/>init_cpu,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="4120"><highlight class="normal"></highlight></codeline>
<codeline lineno="4121"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>accounts<sp/>{defproducera,<sp/>defproducerb,<sp/>...,<sp/>defproducerz}<sp/>and<sp/>register<sp/>as<sp/>producers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4122"><highlight class="normal"><sp/><sp/><sp/>std::vector&lt;account_name&gt;<sp/>producer_names;</highlight></codeline>
<codeline lineno="4123"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>producer_names.reserve(</highlight><highlight class="charliteral">&apos;z&apos;</highlight><highlight class="normal"><sp/>-<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal"><sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="4125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>root(</highlight><highlight class="stringliteral">&quot;defproducer&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c<sp/>=<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">;<sp/>c<sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;z&apos;</highlight><highlight class="normal">;<sp/>++c<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>producer_names.emplace_back(root<sp/>+<sp/>std::string(1,<sp/>c));</highlight></codeline>
<codeline lineno="4128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4129"><highlight class="normal"></highlight></codeline>
<codeline lineno="4130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setup_producer_accounts(producer_names);</highlight></codeline>
<codeline lineno="4131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>p:<sp/>producer_names<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>regproducer(p)<sp/>);</highlight></codeline>
<codeline lineno="4133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>0<sp/>==<sp/>get_producer_info(p)[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as&lt;double&gt;()<sp/>);</highlight></codeline>
<codeline lineno="4134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4135"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4136"><highlight class="normal"></highlight></codeline>
<codeline lineno="4137"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>init_cpu_limit<sp/>=<sp/>get_cpu_limit(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>);</highlight></codeline>
<codeline lineno="4138"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>init_net_limit<sp/>=<sp/>get_net_limit(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>);</highlight></codeline>
<codeline lineno="4139"><highlight class="normal"></highlight></codeline>
<codeline lineno="4140"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>net_stake<sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;25.5000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>cpu_stake<sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;12.4000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>tot_stake<sp/>=<sp/>net_stake<sp/>+<sp/>cpu_stake;</highlight></codeline>
<codeline lineno="4144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>init_balance,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_balance(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stake(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/>net_stake,<sp/>cpu_stake<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>get_cpu_limit(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>init_cpu_limit<sp/>+<sp/>cpu_stake.get_amount()<sp/>);</highlight></codeline>
<codeline lineno="4147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>get_net_limit(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>init_net_limit<sp/>+<sp/>net_stake.get_amount()<sp/>);</highlight></codeline>
<codeline lineno="4148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),</highlight></codeline>
<codeline lineno="4149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vote(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/>std::vector&lt;account_name&gt;(producer_names.begin(),<sp/>producer_names.begin()<sp/>+<sp/>20)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;must<sp/>vote<sp/>for<sp/>at<sp/>least<sp/>21<sp/>producers<sp/>or<sp/>for<sp/>a<sp/>proxy<sp/>before<sp/>buying<sp/>REX&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="4151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unstaketorex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/>net_stake,<sp/>cpu_stake<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),</highlight></codeline>
<codeline lineno="4153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vote(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/>std::vector&lt;account_name&gt;(producer_names.begin(),<sp/>producer_names.begin()<sp/>+<sp/>21)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/><ref refid="eosio_8system__tests_8cpp_1a515931a5b18b498f3e1fea3c35f38ce4" kindref="member">init_eosio_stake_balance</ref><sp/>=<sp/>get_balance(<sp/></highlight><highlight class="stringliteral">&quot;eosio.stake&quot;</highlight><highlight class="normal">_n<sp/>);</highlight></codeline>
<codeline lineno="4155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>init_voter_info<sp/>=<sp/>get_voter_info(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>);</highlight></codeline>
<codeline lineno="4156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>init_prod_info<sp/><sp/>=<sp/>get_producer_info(<sp/>producer_names[0]<sp/>);</highlight></codeline>
<codeline lineno="4157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>init_prod_info[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as_double()<sp/>==</highlight></codeline>
<codeline lineno="4158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stake2votes(<sp/>asset(<sp/>init_voter_info[</highlight><highlight class="stringliteral">&quot;staked&quot;</highlight><highlight class="normal">].as&lt;int64_t&gt;(),<sp/>symbol{<ref refid="test__symbol_8hpp_1af288246ded3673b7a516aeaaca84ab01" kindref="member">CORE_SYM</ref>}<sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::days(4)<sp/>);</highlight></codeline>
<codeline lineno="4160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>ratio<sp/>*<sp/>tot_stake.get_amount(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_unstaketorex_result(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/>net_stake,<sp/>cpu_stake<sp/>).get_amount()<sp/>);</highlight></codeline>
<codeline lineno="4161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>get_cpu_limit(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>init_cpu_limit<sp/>);</highlight></codeline>
<codeline lineno="4162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>get_net_limit(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>init_net_limit<sp/>);</highlight></codeline>
<codeline lineno="4163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>ratio<sp/>*<sp/>tot_stake.get_amount(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_rex_balance(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>).get_amount()<sp/>);</highlight></codeline>
<codeline lineno="4164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>tot_stake,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_rex_balance_obj(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>)[</highlight><highlight class="stringliteral">&quot;vote_stake&quot;</highlight><highlight class="normal">].as&lt;asset&gt;()<sp/>);</highlight></codeline>
<codeline lineno="4165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>tot_stake,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_balance(<sp/></highlight><highlight class="stringliteral">&quot;eosio.rex&quot;</highlight><highlight class="normal">_n<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>tot_stake,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a515931a5b18b498f3e1fea3c35f38ce4" kindref="member">init_eosio_stake_balance</ref><sp/>-<sp/>get_balance(<sp/></highlight><highlight class="stringliteral">&quot;eosio.stake&quot;</highlight><highlight class="normal">_n<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>current_voter_info<sp/>=<sp/>get_voter_info(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>);</highlight></codeline>
<codeline lineno="4168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>current_prod_info<sp/><sp/>=<sp/>get_producer_info(<sp/>producer_names[0]<sp/>);</highlight></codeline>
<codeline lineno="4169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>init_voter_info[</highlight><highlight class="stringliteral">&quot;staked&quot;</highlight><highlight class="normal">].as&lt;int64_t&gt;(),<sp/>current_voter_info[</highlight><highlight class="stringliteral">&quot;staked&quot;</highlight><highlight class="normal">].as&lt;int64_t&gt;()<sp/>);</highlight></codeline>
<codeline lineno="4170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>current_prod_info[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as_double()<sp/>==</highlight></codeline>
<codeline lineno="4171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stake2votes(<sp/>asset(<sp/>current_voter_info[</highlight><highlight class="stringliteral">&quot;staked&quot;</highlight><highlight class="normal">].as&lt;int64_t&gt;(),<sp/>symbol{<ref refid="test__symbol_8hpp_1af288246ded3673b7a516aeaaca84ab01" kindref="member">CORE_SYM</ref>}<sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>init_prod_info[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as_double()<sp/>&lt;<sp/>current_prod_info[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="4173"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4174"><highlight class="normal"></highlight></codeline>
<codeline lineno="4175"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>net_stake<sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;200.5000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>cpu_stake<sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;120.0000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>tot_stake<sp/>=<sp/>net_stake<sp/>+<sp/>cpu_stake;</highlight></codeline>
<codeline lineno="4179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stake(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/><ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref>,<sp/>net_stake,<sp/>cpu_stake<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;amount<sp/>exceeds<sp/>tokens<sp/>staked<sp/>for<sp/>net&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="4181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unstaketorex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/><ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref>,<sp/>net_stake<sp/>+<sp/>one_token,<sp/>zero_asset<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;amount<sp/>exceeds<sp/>tokens<sp/>staked<sp/>for<sp/>cpu&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="4183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unstaketorex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/><ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref>,<sp/>zero_asset,<sp/>cpu_stake<sp/>+<sp/>one_token<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;delegated<sp/>bandwidth<sp/>record<sp/>does<sp/>not<sp/>exist&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="4185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unstaketorex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/>emily,<sp/>zero_asset,<sp/>one_token<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;must<sp/>unstake<sp/>a<sp/>positive<sp/>amount<sp/>to<sp/>buy<sp/>rex&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="4187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unstaketorex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/><ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref>,<sp/>zero_asset,<sp/>zero_asset<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;must<sp/>unstake<sp/>a<sp/>positive<sp/>amount<sp/>to<sp/>buy<sp/>rex&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="4189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unstaketorex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/><ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref>,<sp/>neg_asset,<sp/>one_token<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;must<sp/>unstake<sp/>a<sp/>positive<sp/>amount<sp/>to<sp/>buy<sp/>rex&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="4191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unstaketorex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/><ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref>,<sp/>one_token,<sp/>neg_asset<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>init_net_limit<sp/>+<sp/>net_stake.get_amount(),<sp/>get_net_limit(<sp/><ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>init_cpu_limit<sp/>+<sp/>cpu_stake.get_amount(),<sp/>get_cpu_limit(<sp/><ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_dbw_obj(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/><ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref><sp/>).is_null()<sp/>);</highlight></codeline>
<codeline lineno="4195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unstaketorex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/><ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref>,<sp/>net_stake,<sp/>zero_asset<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_dbw_obj(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/><ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref><sp/>).is_null()<sp/>);</highlight></codeline>
<codeline lineno="4197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unstaketorex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/><ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref>,<sp/>zero_asset,<sp/>cpu_stake<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_dbw_obj(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/><ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref><sp/>).is_null()<sp/>);</highlight></codeline>
<codeline lineno="4199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_rex_balance(<sp/><ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref><sp/>).get_amount()<sp/>);</highlight></codeline>
<codeline lineno="4200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>ratio<sp/>*<sp/>tot_stake.get_amount(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_rex_balance(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref><sp/>).get_amount()<sp/>);</highlight></codeline>
<codeline lineno="4201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>init_cpu_limit,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_cpu_limit(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>init_net_limit,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_net_limit(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>init_cpu_limit,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_cpu_limit(<sp/><ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>init_net_limit,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_net_limit(<sp/><ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4205"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4206"><highlight class="normal"></highlight></codeline>
<codeline lineno="4207"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>net_stake<sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;130.5000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>cpu_stake<sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;220.0800&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>tot_stake<sp/>=<sp/>net_stake<sp/>+<sp/>cpu_stake;</highlight></codeline>
<codeline lineno="4211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stake_with_transfer(<sp/>emily,<sp/>frank,<sp/>net_stake,<sp/>cpu_stake<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;delegated<sp/>bandwidth<sp/>record<sp/>does<sp/>not<sp/>exist&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="4213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unstaketorex(<sp/>emily,<sp/>frank,<sp/>net_stake,<sp/>cpu_stake<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unstaketorex(<sp/>frank,<sp/>frank,<sp/>net_stake,<sp/>cpu_stake<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;insufficient<sp/>available<sp/>rex&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="4216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sellrex(<sp/>frank,<sp/>asset::from_string(</highlight><highlight class="stringliteral">&quot;1.0000<sp/>REX&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::days(5)<sp/>);</highlight></codeline>
<codeline lineno="4218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sellrex(<sp/>frank,<sp/>asset::from_string(</highlight><highlight class="stringliteral">&quot;1.0000<sp/>REX&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4219"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4220"><highlight class="normal"></highlight></codeline>
<codeline lineno="4221"><highlight class="normal">}<sp/><ref refid="eosio_8system__tests_8cpp_1a057cb719bfa291fae56dc6ba5fa7a8d1" kindref="member">FC_LOG_AND_RETHROW</ref>()</highlight></codeline>
<codeline lineno="4222"><highlight class="normal"></highlight></codeline>
<codeline lineno="4223"><highlight class="normal"></highlight></codeline>
<codeline lineno="4224"><highlight class="normal"><ref refid="eosio_8system__tests_8cpp_1a8a1841911da283583ec346df954d73a1" kindref="member">BOOST_FIXTURE_TEST_CASE</ref>(<sp/>buy_rent_rex,<sp/><ref refid="classeosio__system_1_1eosio__system__tester" kindref="compound">eosio_system_tester</ref><sp/>)<sp/><ref refid="eosio_8system__tests_8cpp_1ae89aac94d502abdd3c8d055174c221fc" kindref="member">try</ref><sp/>{</highlight></codeline>
<codeline lineno="4225"><highlight class="normal"></highlight></codeline>
<codeline lineno="4226"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>ratio<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>10000;</highlight></codeline>
<codeline lineno="4227"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/><sp/><sp/>init_balance<sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;60000.0000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4228"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/><sp/><sp/>init_net<sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;70.0000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4229"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/><sp/><sp/>init_cpu<sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;90.0000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4230"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;account_name&gt;<sp/><ref refid="structaccounts" kindref="compound">accounts</ref><sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;aliceaccount&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;bobbyaccount&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;carolaccount&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;emilyaccount&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;frankaccount&quot;</highlight><highlight class="normal">_n<sp/>};</highlight></codeline>
<codeline lineno="4231"><highlight class="normal"><sp/><sp/><sp/>account_name<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>=<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>[0],<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref><sp/>=<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>[1],<sp/><ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref><sp/>=<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>[2],<sp/>emily<sp/>=<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>[3],<sp/>frank<sp/>=<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>[4];</highlight></codeline>
<codeline lineno="4232"><highlight class="normal"><sp/><sp/><sp/>setup_rex_accounts(<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>,<sp/>init_balance,<sp/>init_net,<sp/>init_cpu<sp/>);</highlight></codeline>
<codeline lineno="4233"><highlight class="normal"></highlight></codeline>
<codeline lineno="4234"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>init_cpu_limit<sp/>=<sp/>get_cpu_limit(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>);</highlight></codeline>
<codeline lineno="4235"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>init_net_limit<sp/>=<sp/>get_net_limit(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>);</highlight></codeline>
<codeline lineno="4236"><highlight class="normal"></highlight></codeline>
<codeline lineno="4237"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bob<sp/>tries<sp/>to<sp/>rent<sp/>rex</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4238"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;rex<sp/>system<sp/>not<sp/>initialized<sp/>yet&quot;</highlight><highlight class="normal">),<sp/>rentcpu(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/><ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref>,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;5.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4239"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>alice<sp/>lends<sp/>rex</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4240"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>buyrex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;50265.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4241"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>init_balance<sp/>-<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;50265.0000&quot;</highlight><highlight class="normal">),<sp/>get_rex_fund(<ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>)<sp/>);</highlight></codeline>
<codeline lineno="4242"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>rex_pool<sp/>=<sp/>get_rex_pool();</highlight></codeline>
<codeline lineno="4243"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/><sp/><sp/>init_tot_unlent<sp/><sp/><sp/>=<sp/>rex_pool[</highlight><highlight class="stringliteral">&quot;total_unlent&quot;</highlight><highlight class="normal">].as&lt;asset&gt;();</highlight></codeline>
<codeline lineno="4244"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/><sp/><sp/>init_tot_lendable<sp/>=<sp/>rex_pool[</highlight><highlight class="stringliteral">&quot;total_lendable&quot;</highlight><highlight class="normal">].as&lt;asset&gt;();</highlight></codeline>
<codeline lineno="4245"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/><sp/><sp/>init_tot_rent<sp/><sp/><sp/><sp/><sp/>=<sp/>rex_pool[</highlight><highlight class="stringliteral">&quot;total_rent&quot;</highlight><highlight class="normal">].as&lt;asset&gt;();</highlight></codeline>
<codeline lineno="4246"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>init_stake<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>get_voter_info(<ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>)[</highlight><highlight class="stringliteral">&quot;staked&quot;</highlight><highlight class="normal">].as&lt;int64_t&gt;();</highlight></codeline>
<codeline lineno="4247"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;0.0000&quot;</highlight><highlight class="normal">),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rex_pool[</highlight><highlight class="stringliteral">&quot;total_lent&quot;</highlight><highlight class="normal">].as&lt;asset&gt;()<sp/>);</highlight></codeline>
<codeline lineno="4248"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>ratio<sp/>*<sp/>init_tot_lendable.get_amount(),<sp/>rex_pool[</highlight><highlight class="stringliteral">&quot;total_rex&quot;</highlight><highlight class="normal">].as&lt;asset&gt;().get_amount()<sp/>);</highlight></codeline>
<codeline lineno="4249"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>rex_pool[</highlight><highlight class="stringliteral">&quot;total_rex&quot;</highlight><highlight class="normal">].as&lt;asset&gt;(),<sp/><sp/><sp/><sp/><sp/><sp/>get_rex_balance(<ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>)<sp/>);</highlight></codeline>
<codeline lineno="4250"><highlight class="normal"></highlight></codeline>
<codeline lineno="4251"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1ae00c608b8a40d03b8b8dd2daac50185b" kindref="member">BOOST_REQUIRE</ref>(<sp/>get_rex_return_pool().is_null()<sp/>);</highlight></codeline>
<codeline lineno="4252"><highlight class="normal"></highlight></codeline>
<codeline lineno="4253"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bob<sp/>rents<sp/>cpu<sp/>for<sp/>carol</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>fee<sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;17.0000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rentcpu(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/><ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref>,<sp/>fee<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>init_balance<sp/>-<sp/>fee,<sp/>get_rex_fund(<ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>)<sp/>);</highlight></codeline>
<codeline lineno="4258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rex_pool<sp/>=<sp/>get_rex_pool();</highlight></codeline>
<codeline lineno="4259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>init_tot_lendable,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>rex_pool[</highlight><highlight class="stringliteral">&quot;total_lendable&quot;</highlight><highlight class="normal">].as&lt;asset&gt;()<sp/>);<sp/></highlight><highlight class="comment">//<sp/>65</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>init_tot_rent<sp/>+<sp/>fee,<sp/><sp/><sp/><sp/><sp/>rex_pool[</highlight><highlight class="stringliteral">&quot;total_rent&quot;</highlight><highlight class="normal">].as&lt;asset&gt;()<sp/>);<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>100<sp/>+<sp/>17</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>expected_total_lent<sp/>=<sp/>bancor_convert(<sp/>init_tot_rent.get_amount(),<sp/>init_tot_unlent.get_amount(),<sp/>fee.get_amount()<sp/>);</highlight></codeline>
<codeline lineno="4262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>expected_total_lent,</highlight></codeline>
<codeline lineno="4263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rex_pool[</highlight><highlight class="stringliteral">&quot;total_lent&quot;</highlight><highlight class="normal">].as&lt;asset&gt;().get_amount()<sp/>);</highlight></codeline>
<codeline lineno="4264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>rex_pool[</highlight><highlight class="stringliteral">&quot;total_lent&quot;</highlight><highlight class="normal">].as&lt;asset&gt;()<sp/>+<sp/>rex_pool[</highlight><highlight class="stringliteral">&quot;total_unlent&quot;</highlight><highlight class="normal">].as&lt;asset&gt;(),</highlight></codeline>
<codeline lineno="4265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rex_pool[</highlight><highlight class="stringliteral">&quot;total_lendable&quot;</highlight><highlight class="normal">].as&lt;asset&gt;()<sp/>);</highlight></codeline>
<codeline lineno="4266"><highlight class="normal"></highlight></codeline>
<codeline lineno="4267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>rex_return_pool<sp/>=<sp/>get_rex_return_pool();</highlight></codeline>
<codeline lineno="4268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1ae00c608b8a40d03b8b8dd2daac50185b" kindref="member">BOOST_REQUIRE</ref>(<sp/>!rex_return_pool.is_null()<sp/>);</highlight></codeline>
<codeline lineno="4269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rex_return_pool[</highlight><highlight class="stringliteral">&quot;current_rate_of_increase&quot;</highlight><highlight class="normal">].as&lt;int64_t&gt;()<sp/>);</highlight></codeline>
<codeline lineno="4270"><highlight class="normal"></highlight></codeline>
<codeline lineno="4271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>test<sp/>that<sp/>carol&apos;s<sp/>resource<sp/>limits<sp/>have<sp/>been<sp/>updated<sp/>properly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>expected_total_lent,<sp/>get_cpu_limit(<sp/><ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref><sp/>)<sp/>-<sp/>init_cpu_limit<sp/>);</highlight></codeline>
<codeline lineno="4273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_net_limit(<sp/><ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref><sp/>)<sp/>-<sp/>init_net_limit<sp/>);</highlight></codeline>
<codeline lineno="4274"><highlight class="normal"></highlight></codeline>
<codeline lineno="4275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>alice<sp/>tries<sp/>to<sp/>sellrex,<sp/>order<sp/>gets<sp/>scheduled<sp/>then<sp/>she<sp/>cancels<sp/>order</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>cancelrexorder(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;no<sp/>sellrex<sp/>order<sp/>is<sp/>scheduled&quot;</highlight><highlight class="normal">)<sp/>);</highlight></codeline>
<codeline lineno="4277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::days(6)<sp/>);</highlight></codeline>
<codeline lineno="4278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sellrex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/>get_rex_balance(<ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cancelrexorder(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>rex_pool[</highlight><highlight class="stringliteral">&quot;total_rex&quot;</highlight><highlight class="normal">].as&lt;asset&gt;(),<sp/>get_rex_balance(<ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>)<sp/>);</highlight></codeline>
<codeline lineno="4281"><highlight class="normal"></highlight></codeline>
<codeline lineno="4282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::days(20)<sp/>);</highlight></codeline>
<codeline lineno="4283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>sellrex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/>get_rex_balance(<ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>cancelrexorder(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4285"><highlight class="normal"></highlight></codeline>
<codeline lineno="4286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rex_return_pool<sp/>=<sp/>get_rex_return_pool();</highlight></codeline>
<codeline lineno="4287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1ae00c608b8a40d03b8b8dd2daac50185b" kindref="member">BOOST_REQUIRE</ref>(<sp/>!rex_return_pool.is_null()<sp/>);</highlight></codeline>
<codeline lineno="4288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>rate<sp/>=<sp/>fee.get_amount()<sp/>/<sp/>(30<sp/>*<sp/>144);</highlight></codeline>
<codeline lineno="4289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>rate,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rex_return_pool[</highlight><highlight class="stringliteral">&quot;current_rate_of_increase&quot;</highlight><highlight class="normal">].as&lt;int64_t&gt;()<sp/>);</highlight></codeline>
<codeline lineno="4290"><highlight class="normal"></highlight></codeline>
<codeline lineno="4291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::days(10)<sp/>);</highlight></codeline>
<codeline lineno="4292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>alice<sp/>is<sp/>finally<sp/>able<sp/>to<sp/>sellrex,<sp/>she<sp/>gains<sp/>the<sp/>fee<sp/>paid<sp/>by<sp/>bob</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sellrex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/>get_rex_balance(<ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_rex_balance(<ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>).get_amount()<sp/>);</highlight></codeline>
<codeline lineno="4295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>expected_rex_fund<sp/>=<sp/>(init_balance<sp/>+<sp/>fee).get_amount();</highlight></codeline>
<codeline lineno="4296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>actual_rex_fund<sp/><sp/><sp/>=<sp/>get_rex_fund(<ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>).get_amount();</highlight></codeline>
<codeline lineno="4297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>expected_rex_fund,<sp/><sp/>actual_rex_fund<sp/>);</highlight></codeline>
<codeline lineno="4298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>test<sp/>that<sp/>carol&apos;s<sp/>resource<sp/>limits<sp/>have<sp/>been<sp/>updated<sp/>properly<sp/>when<sp/>loan<sp/>expires</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>init_cpu_limit,<sp/><sp/><sp/><sp/><sp/>get_cpu_limit(<sp/><ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>init_net_limit,<sp/><sp/><sp/><sp/><sp/>get_net_limit(<sp/><ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4301"><highlight class="normal"></highlight></codeline>
<codeline lineno="4302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rex_pool<sp/>=<sp/>get_rex_pool();</highlight></codeline>
<codeline lineno="4303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>0,<sp/>rex_pool[</highlight><highlight class="stringliteral">&quot;total_lendable&quot;</highlight><highlight class="normal">].as&lt;asset&gt;().get_amount()<sp/>);</highlight></codeline>
<codeline lineno="4304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>0,<sp/>rex_pool[</highlight><highlight class="stringliteral">&quot;total_unlent&quot;</highlight><highlight class="normal">].as&lt;asset&gt;().get_amount()<sp/>);</highlight></codeline>
<codeline lineno="4305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>0,<sp/>rex_pool[</highlight><highlight class="stringliteral">&quot;total_rex&quot;</highlight><highlight class="normal">].as&lt;asset&gt;().get_amount()<sp/>);</highlight></codeline>
<codeline lineno="4306"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4307"><highlight class="normal"></highlight></codeline>
<codeline lineno="4308"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>init_net_limit<sp/>=<sp/>get_net_limit(<sp/>emily<sp/>);</highlight></codeline>
<codeline lineno="4310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_rex_balance(<ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>).get_amount()<sp/>);</highlight></codeline>
<codeline lineno="4311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>buyrex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;20050.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rex_pool<sp/>=<sp/>get_rex_pool();</highlight></codeline>
<codeline lineno="4313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>fee<sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;0.4560&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>expected_net<sp/>=<sp/>bancor_convert(<sp/>rex_pool[</highlight><highlight class="stringliteral">&quot;total_rent&quot;</highlight><highlight class="normal">].as&lt;asset&gt;().get_amount(),</highlight></codeline>
<codeline lineno="4315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rex_pool[</highlight><highlight class="stringliteral">&quot;total_unlent&quot;</highlight><highlight class="normal">].as&lt;asset&gt;().get_amount(),</highlight></codeline>
<codeline lineno="4316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fee.get_amount()<sp/>);</highlight></codeline>
<codeline lineno="4317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/>rentnet(<sp/>emily,<sp/>emily,<sp/>fee<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>expected_net,<sp/>get_net_limit(<sp/>emily<sp/>)<sp/>-<sp/>init_net_limit<sp/>);</highlight></codeline>
<codeline lineno="4319"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4320"><highlight class="normal"></highlight></codeline>
<codeline lineno="4321"><highlight class="normal">}<sp/><ref refid="eosio_8system__tests_8cpp_1a057cb719bfa291fae56dc6ba5fa7a8d1" kindref="member">FC_LOG_AND_RETHROW</ref>()</highlight></codeline>
<codeline lineno="4322"><highlight class="normal"></highlight></codeline>
<codeline lineno="4323"><highlight class="normal"></highlight></codeline>
<codeline lineno="4324"><highlight class="normal"><ref refid="eosio_8system__tests_8cpp_1a8a1841911da283583ec346df954d73a1" kindref="member">BOOST_FIXTURE_TEST_CASE</ref>(<sp/>buy_sell_sell_rex,<sp/><ref refid="classeosio__system_1_1eosio__system__tester" kindref="compound">eosio_system_tester</ref><sp/>)<sp/><ref refid="eosio_8system__tests_8cpp_1ae89aac94d502abdd3c8d055174c221fc" kindref="member">try</ref><sp/>{</highlight></codeline>
<codeline lineno="4325"><highlight class="normal"></highlight></codeline>
<codeline lineno="4326"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>ratio<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>10000;</highlight></codeline>
<codeline lineno="4327"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/><sp/><sp/>init_balance<sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;40000.0000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4328"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/><sp/><sp/>init_net<sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;70.0000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4329"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/><sp/><sp/>init_cpu<sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;90.0000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4330"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;account_name&gt;<sp/><ref refid="structaccounts" kindref="compound">accounts</ref><sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;aliceaccount&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;bobbyaccount&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;carolaccount&quot;</highlight><highlight class="normal">_n<sp/>};</highlight></codeline>
<codeline lineno="4331"><highlight class="normal"><sp/><sp/><sp/>account_name<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>=<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>[0],<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref><sp/>=<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>[1],<sp/><ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref><sp/>=<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>[2];</highlight></codeline>
<codeline lineno="4332"><highlight class="normal"><sp/><sp/><sp/>setup_rex_accounts(<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>,<sp/>init_balance,<sp/>init_net,<sp/>init_cpu<sp/>);</highlight></codeline>
<codeline lineno="4333"><highlight class="normal"></highlight></codeline>
<codeline lineno="4334"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>init_cpu_limit<sp/>=<sp/>get_cpu_limit(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>);</highlight></codeline>
<codeline lineno="4335"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>init_net_limit<sp/>=<sp/>get_net_limit(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>);</highlight></codeline>
<codeline lineno="4336"><highlight class="normal"></highlight></codeline>
<codeline lineno="4337"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>alice<sp/>lends<sp/>rex</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4338"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>payment<sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;30250.0000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4339"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buyrex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/>payment<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4340"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buyrex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;0.0005&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4341"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>init_balance<sp/>-<sp/>payment,<sp/>get_rex_fund(<ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>)<sp/>);</highlight></codeline>
<codeline lineno="4342"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>rex_pool<sp/>=<sp/>get_rex_pool();</highlight></codeline>
<codeline lineno="4343"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/><sp/><sp/>init_tot_unlent<sp/><sp/><sp/>=<sp/>rex_pool[</highlight><highlight class="stringliteral">&quot;total_unlent&quot;</highlight><highlight class="normal">].as&lt;asset&gt;();</highlight></codeline>
<codeline lineno="4344"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/><sp/><sp/>init_tot_lendable<sp/>=<sp/>rex_pool[</highlight><highlight class="stringliteral">&quot;total_lendable&quot;</highlight><highlight class="normal">].as&lt;asset&gt;();</highlight></codeline>
<codeline lineno="4345"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/><sp/><sp/>init_tot_rent<sp/><sp/><sp/><sp/><sp/>=<sp/>rex_pool[</highlight><highlight class="stringliteral">&quot;total_rent&quot;</highlight><highlight class="normal">].as&lt;asset&gt;();</highlight></codeline>
<codeline lineno="4346"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>init_stake<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>get_voter_info(<ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>)[</highlight><highlight class="stringliteral">&quot;staked&quot;</highlight><highlight class="normal">].as&lt;int64_t&gt;();</highlight></codeline>
<codeline lineno="4347"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;0.0000&quot;</highlight><highlight class="normal">),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rex_pool[</highlight><highlight class="stringliteral">&quot;total_lent&quot;</highlight><highlight class="normal">].as&lt;asset&gt;()<sp/>);</highlight></codeline>
<codeline lineno="4348"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>ratio<sp/>*<sp/>init_tot_lendable.get_amount(),<sp/>rex_pool[</highlight><highlight class="stringliteral">&quot;total_rex&quot;</highlight><highlight class="normal">].as&lt;asset&gt;().get_amount()<sp/>);</highlight></codeline>
<codeline lineno="4349"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>rex_pool[</highlight><highlight class="stringliteral">&quot;total_rex&quot;</highlight><highlight class="normal">].as&lt;asset&gt;(),<sp/><sp/><sp/><sp/><sp/><sp/>get_rex_balance(<ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>)<sp/>+<sp/>get_rex_balance(<ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>)<sp/>);</highlight></codeline>
<codeline lineno="4350"><highlight class="normal"></highlight></codeline>
<codeline lineno="4351"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bob<sp/>rents<sp/>cpu<sp/>for<sp/>carol</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4352"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>fee<sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;7.0000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4353"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rentcpu(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/><ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref>,<sp/>fee<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4354"><highlight class="normal"><sp/><sp/><sp/>rex_pool<sp/>=<sp/>get_rex_pool();</highlight></codeline>
<codeline lineno="4355"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>init_tot_lendable,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>rex_pool[</highlight><highlight class="stringliteral">&quot;total_lendable&quot;</highlight><highlight class="normal">].as&lt;asset&gt;()<sp/>);</highlight></codeline>
<codeline lineno="4356"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>init_tot_rent<sp/>+<sp/>fee,<sp/><sp/><sp/><sp/><sp/>rex_pool[</highlight><highlight class="stringliteral">&quot;total_rent&quot;</highlight><highlight class="normal">].as&lt;asset&gt;()<sp/>);</highlight></codeline>
<codeline lineno="4357"><highlight class="normal"></highlight></codeline>
<codeline lineno="4358"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::days(5)<sp/>);</highlight></codeline>
<codeline lineno="4359"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aa1213f0f2c7a53ea968859f3cab582c3" kindref="member">produce_blocks</ref>(2);</highlight></codeline>
<codeline lineno="4360"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>rex_tok<sp/>=<sp/>asset::from_string(</highlight><highlight class="stringliteral">&quot;1.0000<sp/>REX&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4361"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sellrex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/>get_rex_balance(<ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>)<sp/>-<sp/>rex_tok<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4362"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_rex_order_obj(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>).is_null()<sp/>);</highlight></codeline>
<codeline lineno="4363"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sellrex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/>rex_tok<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4364"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>sellrex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/>rex_tok<sp/>),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;insufficient<sp/>funds<sp/>for<sp/>current<sp/>and<sp/>scheduled<sp/>orders&quot;</highlight><highlight class="normal">)<sp/>);</highlight></codeline>
<codeline lineno="4365"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>ratio<sp/>*<sp/>payment.get_amount()<sp/>-<sp/>rex_tok.get_amount(),<sp/>get_rex_order(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>)[</highlight><highlight class="stringliteral">&quot;rex_requested&quot;</highlight><highlight class="normal">].as&lt;asset&gt;().get_amount()<sp/>);</highlight></codeline>
<codeline lineno="4366"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>consolidate(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4367"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_rex_balance_obj(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>)[</highlight><highlight class="stringliteral">&quot;rex_maturities&quot;</highlight><highlight class="normal">].get_array().size()<sp/>);</highlight></codeline>
<codeline lineno="4368"><highlight class="normal"></highlight></codeline>
<codeline lineno="4369"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::days(26)<sp/>);</highlight></codeline>
<codeline lineno="4370"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aa1213f0f2c7a53ea968859f3cab582c3" kindref="member">produce_blocks</ref>(2);</highlight></codeline>
<codeline lineno="4371"><highlight class="normal"></highlight></codeline>
<codeline lineno="4372"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/>rexexec(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/>2<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4373"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_rex_balance(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>).get_amount()<sp/>);</highlight></codeline>
<codeline lineno="4374"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_rex_balance_obj(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>)[</highlight><highlight class="stringliteral">&quot;matured_rex&quot;</highlight><highlight class="normal">].as&lt;int64_t&gt;()<sp/>);</highlight></codeline>
<codeline lineno="4375"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>init_fund<sp/>=<sp/>get_rex_fund(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>);</highlight></codeline>
<codeline lineno="4376"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/>updaterex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4377"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_rex_balance(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>).get_amount()<sp/>);</highlight></codeline>
<codeline lineno="4378"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_rex_balance_obj(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>)[</highlight><highlight class="stringliteral">&quot;matured_rex&quot;</highlight><highlight class="normal">].as&lt;int64_t&gt;()<sp/>);</highlight></codeline>
<codeline lineno="4379"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1ae00c608b8a40d03b8b8dd2daac50185b" kindref="member">BOOST_REQUIRE</ref><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>init_fund<sp/>&lt;<sp/>get_rex_fund(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4380"><highlight class="normal"></highlight></codeline>
<codeline lineno="4381"><highlight class="normal">}<sp/><ref refid="eosio_8system__tests_8cpp_1a057cb719bfa291fae56dc6ba5fa7a8d1" kindref="member">FC_LOG_AND_RETHROW</ref>()</highlight></codeline>
<codeline lineno="4382"><highlight class="normal"></highlight></codeline>
<codeline lineno="4383"><highlight class="normal"></highlight></codeline>
<codeline lineno="4384"><highlight class="normal"><ref refid="eosio_8system__tests_8cpp_1a8a1841911da283583ec346df954d73a1" kindref="member">BOOST_FIXTURE_TEST_CASE</ref>(<sp/>buy_sell_claim_rex,<sp/><ref refid="classeosio__system_1_1eosio__system__tester" kindref="compound">eosio_system_tester</ref><sp/>)<sp/><ref refid="eosio_8system__tests_8cpp_1ae89aac94d502abdd3c8d055174c221fc" kindref="member">try</ref><sp/>{</highlight></codeline>
<codeline lineno="4385"><highlight class="normal"></highlight></codeline>
<codeline lineno="4386"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>init_balance<sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;3000000.0000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4387"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;account_name&gt;<sp/><ref refid="structaccounts" kindref="compound">accounts</ref><sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;aliceaccount&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;bobbyaccount&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;carolaccount&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;emilyaccount&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;frankaccount&quot;</highlight><highlight class="normal">_n<sp/>};</highlight></codeline>
<codeline lineno="4388"><highlight class="normal"><sp/><sp/><sp/>account_name<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>=<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>[0],<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref><sp/>=<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>[1],<sp/><ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref><sp/>=<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>[2],<sp/>emily<sp/>=<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>[3],<sp/>frank<sp/>=<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>[4];</highlight></codeline>
<codeline lineno="4389"><highlight class="normal"><sp/><sp/><sp/>setup_rex_accounts(<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>,<sp/>init_balance<sp/>);</highlight></codeline>
<codeline lineno="4390"><highlight class="normal"></highlight></codeline>
<codeline lineno="4391"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>purchase1<sp/><sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;50000.0000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4392"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>purchase2<sp/><sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;105500.0000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4393"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>purchase3<sp/><sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;104500.0000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4394"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>init_stake<sp/>=<sp/>get_voter_info(<ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>)[</highlight><highlight class="stringliteral">&quot;staked&quot;</highlight><highlight class="normal">].as&lt;int64_t&gt;();</highlight></codeline>
<codeline lineno="4395"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>buyrex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/>purchase1)<sp/>);</highlight></codeline>
<codeline lineno="4396"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>buyrex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/><sp/><sp/>purchase2)<sp/>);</highlight></codeline>
<codeline lineno="4397"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>buyrex(<sp/><ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref>,<sp/>purchase3)<sp/>);</highlight></codeline>
<codeline lineno="4398"><highlight class="normal"></highlight></codeline>
<codeline lineno="4399"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>init_balance<sp/>-<sp/>purchase1,<sp/>get_rex_fund(<ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>)<sp/>);</highlight></codeline>
<codeline lineno="4400"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>purchase1.get_amount(),<sp/><sp/><sp/>get_voter_info(<ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>)[</highlight><highlight class="stringliteral">&quot;staked&quot;</highlight><highlight class="normal">].as&lt;int64_t&gt;()<sp/>-<sp/>init_stake<sp/>);</highlight></codeline>
<codeline lineno="4401"><highlight class="normal"></highlight></codeline>
<codeline lineno="4402"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>init_balance<sp/>-<sp/>purchase2,<sp/>get_rex_fund(<ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>)<sp/>);</highlight></codeline>
<codeline lineno="4403"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>init_balance<sp/>-<sp/>purchase3,<sp/>get_rex_fund(<ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref>)<sp/>);</highlight></codeline>
<codeline lineno="4404"><highlight class="normal"></highlight></codeline>
<codeline lineno="4405"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>init_alice_rex<sp/>=<sp/>get_rex_balance(<ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>);</highlight></codeline>
<codeline lineno="4406"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>init_bob_rex<sp/><sp/><sp/>=<sp/>get_rex_balance(<ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>);</highlight></codeline>
<codeline lineno="4407"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>init_carol_rex<sp/>=<sp/>get_rex_balance(<ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref>);</highlight></codeline>
<codeline lineno="4408"><highlight class="normal"></highlight></codeline>
<codeline lineno="4409"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;20000.0000&quot;</highlight><highlight class="normal">),<sp/>get_rex_pool()[</highlight><highlight class="stringliteral">&quot;total_rent&quot;</highlight><highlight class="normal">].as&lt;asset&gt;()<sp/>);</highlight></codeline>
<codeline lineno="4410"><highlight class="normal"></highlight></codeline>
<codeline lineno="4411"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint8_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>4;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="4412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>rentcpu(<sp/>emily,<sp/>emily,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;12000.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4413"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4414"><highlight class="normal"></highlight></codeline>
<codeline lineno="4415"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::days(25)<sp/>);</highlight></codeline>
<codeline lineno="4416"><highlight class="normal"></highlight></codeline>
<codeline lineno="4417"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>rent_payment<sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;46000.0000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4418"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>rentcpu(<sp/>frank,<sp/>frank,<sp/>rent_payment,<sp/>rent_payment<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4419"><highlight class="normal"></highlight></codeline>
<codeline lineno="4420"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::days(4)<sp/>);</highlight></codeline>
<codeline lineno="4421"><highlight class="normal"></highlight></codeline>
<codeline lineno="4422"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>rexexec(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/>1<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4423"><highlight class="normal"></highlight></codeline>
<codeline lineno="4424"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>init_rex_pool<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>get_rex_pool();</highlight></codeline>
<codeline lineno="4425"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>total_lendable<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>init_rex_pool[</highlight><highlight class="stringliteral">&quot;total_lendable&quot;</highlight><highlight class="normal">].as&lt;asset&gt;().get_amount();</highlight></codeline>
<codeline lineno="4426"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>total_rex<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>init_rex_pool[</highlight><highlight class="stringliteral">&quot;total_rex&quot;</highlight><highlight class="normal">].as&lt;asset&gt;().get_amount();</highlight></codeline>
<codeline lineno="4427"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>init_alice_rex_stake<sp/>=<sp/>(<sp/>eosio::chain::uint128_t(init_alice_rex.get_amount())<sp/>*<sp/>total_lendable<sp/>)<sp/>/<sp/>total_rex;</highlight></codeline>
<codeline lineno="4428"><highlight class="normal"></highlight></codeline>
<codeline lineno="4429"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>sellrex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/>asset(<sp/>3<sp/>*<sp/>get_rex_balance(<ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>).get_amount()<sp/>/<sp/>4,<sp/>symbol{SY(4,REX)}<sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4430"><highlight class="normal"></highlight></codeline>
<codeline lineno="4431"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/><ref refid="eosio_8system__tests_8cpp_1a2a34c6cca71b9f7b935a3b00648b2b41" kindref="member">within_one</ref>(<sp/>init_alice_rex.get_amount()<sp/>/<sp/>4,<sp/>get_rex_balance(<ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>).get_amount()<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4432"><highlight class="normal"></highlight></codeline>
<codeline lineno="4433"><highlight class="normal"><sp/><sp/><sp/>init_alice_rex<sp/>=<sp/>get_rex_balance(<ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>);</highlight></codeline>
<codeline lineno="4434"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>sellrex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/><sp/><sp/>get_rex_balance(<ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4435"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>sellrex(<sp/><ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref>,<sp/>get_rex_balance(<ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4436"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>sellrex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/>get_rex_balance(<ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4437"><highlight class="normal"></highlight></codeline>
<codeline lineno="4438"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>init_bob_rex,<sp/><sp/><sp/>get_rex_balance(<ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>)<sp/>);</highlight></codeline>
<codeline lineno="4439"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>init_carol_rex,<sp/>get_rex_balance(<ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref>)<sp/>);</highlight></codeline>
<codeline lineno="4440"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>init_alice_rex,<sp/>get_rex_balance(<ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>)<sp/>);</highlight></codeline>
<codeline lineno="4441"><highlight class="normal"></highlight></codeline>
<codeline lineno="4442"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>bob&apos;s,<sp/>carol&apos;s<sp/>and<sp/>alice&apos;s<sp/>sellrex<sp/>orders<sp/>have<sp/>been<sp/>queued</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4443"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_rex_order(<ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>)[</highlight><highlight class="stringliteral">&quot;is_open&quot;</highlight><highlight class="normal">].as&lt;bool&gt;()<sp/>);</highlight></codeline>
<codeline lineno="4444"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>init_alice_rex,<sp/>get_rex_order(<ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>)[</highlight><highlight class="stringliteral">&quot;rex_requested&quot;</highlight><highlight class="normal">].as&lt;asset&gt;()<sp/>);</highlight></codeline>
<codeline lineno="4445"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_rex_order(<ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>)[</highlight><highlight class="stringliteral">&quot;proceeds&quot;</highlight><highlight class="normal">].as&lt;asset&gt;().get_amount()<sp/>);</highlight></codeline>
<codeline lineno="4446"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_rex_order(<ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>)[</highlight><highlight class="stringliteral">&quot;is_open&quot;</highlight><highlight class="normal">].as&lt;bool&gt;()<sp/>);</highlight></codeline>
<codeline lineno="4447"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>init_bob_rex,<sp/><sp/><sp/>get_rex_order(<ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>)[</highlight><highlight class="stringliteral">&quot;rex_requested&quot;</highlight><highlight class="normal">].as&lt;asset&gt;()<sp/>);</highlight></codeline>
<codeline lineno="4448"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_rex_order(<ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>)[</highlight><highlight class="stringliteral">&quot;proceeds&quot;</highlight><highlight class="normal">].as&lt;asset&gt;().get_amount()<sp/>);</highlight></codeline>
<codeline lineno="4449"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_rex_order(<ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref>)[</highlight><highlight class="stringliteral">&quot;is_open&quot;</highlight><highlight class="normal">].as&lt;bool&gt;()<sp/>);</highlight></codeline>
<codeline lineno="4450"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>init_carol_rex,<sp/>get_rex_order(<ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref>)[</highlight><highlight class="stringliteral">&quot;rex_requested&quot;</highlight><highlight class="normal">].as&lt;asset&gt;()<sp/>);</highlight></codeline>
<codeline lineno="4451"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_rex_order(<ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref>)[</highlight><highlight class="stringliteral">&quot;proceeds&quot;</highlight><highlight class="normal">].as&lt;asset&gt;().get_amount()<sp/>);</highlight></codeline>
<codeline lineno="4452"><highlight class="normal"></highlight></codeline>
<codeline lineno="4453"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>wait<sp/>for<sp/>a<sp/>total<sp/>of<sp/>30<sp/>days<sp/>minus<sp/>1<sp/>hour</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4454"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::hours(23)<sp/>);</highlight></codeline>
<codeline lineno="4455"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/>updaterex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4456"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_rex_order(<ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>)[</highlight><highlight class="stringliteral">&quot;is_open&quot;</highlight><highlight class="normal">].as&lt;bool&gt;()<sp/>);</highlight></codeline>
<codeline lineno="4457"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_rex_order(<ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>)[</highlight><highlight class="stringliteral">&quot;is_open&quot;</highlight><highlight class="normal">].as&lt;bool&gt;()<sp/>);</highlight></codeline>
<codeline lineno="4458"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_rex_order(<ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref>)[</highlight><highlight class="stringliteral">&quot;is_open&quot;</highlight><highlight class="normal">].as&lt;bool&gt;()<sp/>);</highlight></codeline>
<codeline lineno="4459"><highlight class="normal"></highlight></codeline>
<codeline lineno="4460"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>wait<sp/>for<sp/>2<sp/>more<sp/>hours,<sp/>by<sp/>now<sp/>frank&apos;s<sp/>loan<sp/>has<sp/>expired<sp/>and<sp/>there<sp/>is<sp/>enough<sp/>balance<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4461"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>total_unlent<sp/>to<sp/>close<sp/>some<sp/>sellrex<sp/>orders.<sp/>only<sp/>two<sp/>are<sp/>processed,<sp/>bob&apos;s<sp/>and<sp/>carol&apos;s.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4462"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>alices&apos;s<sp/>order<sp/>is<sp/>still<sp/>open.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4463"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>an<sp/>action<sp/>is<sp/>needed<sp/>to<sp/>trigger<sp/>queue<sp/>processing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4464"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::hours(2)<sp/>);</highlight></codeline>
<codeline lineno="4465"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;rex<sp/>loans<sp/>are<sp/>currently<sp/>not<sp/>available&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="4466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rentcpu(<sp/>frank,<sp/>frank,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;0.0001&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4467"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="eosio_8msig__tests_8cpp_1a176b44375feec0c1f90f3bde5f1feb2e" kindref="member">trace</ref><sp/>=<sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">base_tester::push_action</ref>(<sp/>config::system_account_name,<sp/></highlight><highlight class="stringliteral">&quot;rexexec&quot;</highlight><highlight class="normal">_n,<sp/>frank,</highlight></codeline>
<codeline lineno="4469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()(</highlight><highlight class="stringliteral">&quot;user&quot;</highlight><highlight class="normal">,<sp/>frank)(</highlight><highlight class="stringliteral">&quot;max&quot;</highlight><highlight class="normal">,<sp/>2)<sp/>);</highlight></codeline>
<codeline lineno="4470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>output<sp/>=<sp/>get_rexorder_result(<sp/><ref refid="eosio_8msig__tests_8cpp_1a176b44375feec0c1f90f3bde5f1feb2e" kindref="member">trace</ref><sp/>);</highlight></codeline>
<codeline lineno="4471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>output.size(),<sp/><sp/><sp/><sp/>1<sp/>);</highlight></codeline>
<codeline lineno="4472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>output[0].first,<sp/><sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref><sp/>);</highlight></codeline>
<codeline lineno="4473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>output[0].second,<sp/>get_rex_order(<ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>)[</highlight><highlight class="stringliteral">&quot;proceeds&quot;</highlight><highlight class="normal">].as&lt;asset&gt;()<sp/>);</highlight></codeline>
<codeline lineno="4474"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4475"><highlight class="normal"></highlight></codeline>
<codeline lineno="4476"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_rex_order(<ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>)[</highlight><highlight class="stringliteral">&quot;is_open&quot;</highlight><highlight class="normal">].as&lt;bool&gt;()<sp/>);</highlight></codeline>
<codeline lineno="4478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>init_bob_rex,<sp/><sp/><sp/>get_rex_order(<ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>)[</highlight><highlight class="stringliteral">&quot;rex_requested&quot;</highlight><highlight class="normal">].as&lt;asset&gt;()<sp/>);</highlight></codeline>
<codeline lineno="4479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref><sp/>(<sp/>0<sp/>&lt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_rex_order(<ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>)[</highlight><highlight class="stringliteral">&quot;proceeds&quot;</highlight><highlight class="normal">].as&lt;asset&gt;().get_amount()<sp/>);</highlight></codeline>
<codeline lineno="4480"><highlight class="normal"></highlight></codeline>
<codeline lineno="4481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_rex_order(<ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>)[</highlight><highlight class="stringliteral">&quot;is_open&quot;</highlight><highlight class="normal">].as&lt;bool&gt;()<sp/>);</highlight></codeline>
<codeline lineno="4482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>init_alice_rex,<sp/>get_rex_order(<ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>)[</highlight><highlight class="stringliteral">&quot;rex_requested&quot;</highlight><highlight class="normal">].as&lt;asset&gt;()<sp/>);</highlight></codeline>
<codeline lineno="4483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_rex_order(<ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>)[</highlight><highlight class="stringliteral">&quot;proceeds&quot;</highlight><highlight class="normal">].as&lt;asset&gt;().get_amount()<sp/>);</highlight></codeline>
<codeline lineno="4484"><highlight class="normal"></highlight></codeline>
<codeline lineno="4485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_rex_order(<ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref>)[</highlight><highlight class="stringliteral">&quot;is_open&quot;</highlight><highlight class="normal">].as&lt;bool&gt;()<sp/>);</highlight></codeline>
<codeline lineno="4486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>init_carol_rex,<sp/>get_rex_order(<ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref>)[</highlight><highlight class="stringliteral">&quot;rex_requested&quot;</highlight><highlight class="normal">].as&lt;asset&gt;()<sp/>);</highlight></codeline>
<codeline lineno="4487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_rex_order(<ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref>)[</highlight><highlight class="stringliteral">&quot;proceeds&quot;</highlight><highlight class="normal">].as&lt;asset&gt;().get_amount()<sp/>);</highlight></codeline>
<codeline lineno="4488"><highlight class="normal"></highlight></codeline>
<codeline lineno="4489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;rex<sp/>loans<sp/>are<sp/>currently<sp/>not<sp/>available&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="4490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rentcpu(<sp/>frank,<sp/>frank,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4491"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4492"><highlight class="normal"></highlight></codeline>
<codeline lineno="4493"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aa1213f0f2c7a53ea968859f3cab582c3" kindref="member">produce_blocks</ref>(2);</highlight></codeline>
<codeline lineno="4494"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::hours(13)<sp/>);</highlight></codeline>
<codeline lineno="4495"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aa1213f0f2c7a53ea968859f3cab582c3" kindref="member">produce_blocks</ref>(2);</highlight></codeline>
<codeline lineno="4496"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::days(30)<sp/>);</highlight></codeline>
<codeline lineno="4497"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aa1213f0f2c7a53ea968859f3cab582c3" kindref="member">produce_blocks</ref>(2);</highlight></codeline>
<codeline lineno="4498"><highlight class="normal"></highlight></codeline>
<codeline lineno="4499"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>trace1<sp/>=<sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">base_tester::push_action</ref>(<sp/>config::system_account_name,<sp/></highlight><highlight class="stringliteral">&quot;updaterex&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()(</highlight><highlight class="stringliteral">&quot;owner&quot;</highlight><highlight class="normal">,<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>)<sp/>);</highlight></codeline>
<codeline lineno="4501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>trace2<sp/>=<sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">base_tester::push_action</ref>(<sp/>config::system_account_name,<sp/></highlight><highlight class="stringliteral">&quot;updaterex&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref>,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()(</highlight><highlight class="stringliteral">&quot;owner&quot;</highlight><highlight class="normal">,<sp/><ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref>)<sp/>);</highlight></codeline>
<codeline lineno="4502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_rex_vote_stake(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref><sp/>).get_amount()<sp/>);</highlight></codeline>
<codeline lineno="4503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>init_stake,<sp/><sp/><sp/><sp/><sp/>get_voter_info(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref><sp/>)[</highlight><highlight class="stringliteral">&quot;staked&quot;</highlight><highlight class="normal">].as&lt;int64_t&gt;()<sp/>);</highlight></codeline>
<codeline lineno="4504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_rex_vote_stake(<sp/><ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref><sp/>).get_amount()<sp/>);</highlight></codeline>
<codeline lineno="4505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>init_stake,<sp/><sp/><sp/><sp/><sp/>get_voter_info(<sp/><ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref><sp/>)[</highlight><highlight class="stringliteral">&quot;staked&quot;</highlight><highlight class="normal">].as&lt;int64_t&gt;()<sp/>);</highlight></codeline>
<codeline lineno="4506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>output1<sp/>=<sp/>get_rexorder_result(<sp/>trace1<sp/>);</highlight></codeline>
<codeline lineno="4507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>output2<sp/>=<sp/>get_rexorder_result(<sp/>trace2<sp/>);</highlight></codeline>
<codeline lineno="4508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output1.size()<sp/>+<sp/>output2.size()<sp/>);</highlight></codeline>
<codeline lineno="4509"><highlight class="normal"></highlight></codeline>
<codeline lineno="4510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_rex_order_obj(<ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>).is_null()<sp/>);</highlight></codeline>
<codeline lineno="4511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_rex_order_obj(<ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>).is_null()<sp/>);</highlight></codeline>
<codeline lineno="4512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_rex_order_obj(<ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref>).is_null()<sp/>);</highlight></codeline>
<codeline lineno="4513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_rex_order(<ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>)[</highlight><highlight class="stringliteral">&quot;is_open&quot;</highlight><highlight class="normal">].as&lt;bool&gt;()<sp/>);</highlight></codeline>
<codeline lineno="4514"><highlight class="normal"></highlight></codeline>
<codeline lineno="4515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>rex_pool<sp/>=<sp/>get_rex_pool();</highlight></codeline>
<codeline lineno="4516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rex_pool[</highlight><highlight class="stringliteral">&quot;total_lendable&quot;</highlight><highlight class="normal">].as&lt;asset&gt;().get_amount()<sp/>);</highlight></codeline>
<codeline lineno="4517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rex_pool[</highlight><highlight class="stringliteral">&quot;total_rex&quot;</highlight><highlight class="normal">].as&lt;asset&gt;().get_amount()<sp/>);</highlight></codeline>
<codeline lineno="4518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;rex<sp/>loans<sp/>are<sp/>currently<sp/>not<sp/>available&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="4519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rentcpu(<sp/>frank,<sp/>frank,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4520"><highlight class="normal"></highlight></codeline>
<codeline lineno="4521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/>buyrex(<sp/>emily,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;22000.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_rex_order_obj(<ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>).is_null()<sp/>);</highlight></codeline>
<codeline lineno="4523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_rex_order(<ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>)[</highlight><highlight class="stringliteral">&quot;is_open&quot;</highlight><highlight class="normal">].as&lt;bool&gt;()<sp/>);</highlight></codeline>
<codeline lineno="4524"><highlight class="normal"></highlight></codeline>
<codeline lineno="4525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/>rentcpu(<sp/>frank,<sp/>frank,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4526"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4527"><highlight class="normal"></highlight></codeline>
<codeline lineno="4528"><highlight class="normal">}<sp/><ref refid="eosio_8system__tests_8cpp_1a057cb719bfa291fae56dc6ba5fa7a8d1" kindref="member">FC_LOG_AND_RETHROW</ref>()</highlight></codeline>
<codeline lineno="4529"><highlight class="normal"></highlight></codeline>
<codeline lineno="4530"><highlight class="normal"></highlight></codeline>
<codeline lineno="4531"><highlight class="normal"><ref refid="eosio_8system__tests_8cpp_1a8a1841911da283583ec346df954d73a1" kindref="member">BOOST_FIXTURE_TEST_CASE</ref>(<sp/>rex_loans,<sp/><ref refid="classeosio__system_1_1eosio__system__tester" kindref="compound">eosio_system_tester</ref><sp/>)<sp/><ref refid="eosio_8system__tests_8cpp_1ae89aac94d502abdd3c8d055174c221fc" kindref="member">try</ref><sp/>{</highlight></codeline>
<codeline lineno="4532"><highlight class="normal"></highlight></codeline>
<codeline lineno="4533"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>ratio<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>10000;</highlight></codeline>
<codeline lineno="4534"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/><sp/><sp/>init_balance<sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;40000.0000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4535"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/><sp/><sp/>one_unit<sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;0.0001&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4536"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;account_name&gt;<sp/><ref refid="structaccounts" kindref="compound">accounts</ref><sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;aliceaccount&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;bobbyaccount&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;carolaccount&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;emilyaccount&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;frankaccount&quot;</highlight><highlight class="normal">_n<sp/>};</highlight></codeline>
<codeline lineno="4537"><highlight class="normal"><sp/><sp/><sp/>account_name<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>=<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>[0],<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref><sp/>=<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>[1],<sp/><ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref><sp/>=<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>[2],<sp/>emily<sp/>=<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>[3],<sp/>frank<sp/>=<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>[4];</highlight></codeline>
<codeline lineno="4538"><highlight class="normal"><sp/><sp/><sp/>setup_rex_accounts(<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>,<sp/>init_balance<sp/><sp/>);</highlight></codeline>
<codeline lineno="4539"><highlight class="normal"></highlight></codeline>
<codeline lineno="4540"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>buyrex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;25000.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4541"><highlight class="normal"></highlight></codeline>
<codeline lineno="4542"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>rex_pool<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>get_rex_pool();</highlight></codeline>
<codeline lineno="4543"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>payment<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;30.0000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4544"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>zero_asset<sp/><sp/><sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;0.0000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4545"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>neg_asset<sp/><sp/><sp/><sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;-1.0000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4546"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>0<sp/>&gt;<sp/>neg_asset.get_amount()<sp/>);</highlight></codeline>
<codeline lineno="4547"><highlight class="normal"><sp/><sp/><sp/>asset<sp/>cur_frank_balance<sp/><sp/>=<sp/>get_rex_fund(<sp/>frank<sp/>);</highlight></codeline>
<codeline lineno="4548"><highlight class="normal"><sp/><sp/><sp/>int64_t<sp/>expected_stake<sp/><sp/><sp/>=<sp/>bancor_convert(<sp/>rex_pool[</highlight><highlight class="stringliteral">&quot;total_rent&quot;</highlight><highlight class="normal">].as&lt;asset&gt;().get_amount(),</highlight></codeline>
<codeline lineno="4549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rex_pool[</highlight><highlight class="stringliteral">&quot;total_unlent&quot;</highlight><highlight class="normal">].as&lt;asset&gt;().get_amount(),</highlight></codeline>
<codeline lineno="4550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>payment.get_amount()<sp/>);</highlight></codeline>
<codeline lineno="4551"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>init_stake<sp/>=<sp/>get_cpu_limit(<sp/>frank<sp/>);</highlight></codeline>
<codeline lineno="4552"><highlight class="normal"></highlight></codeline>
<codeline lineno="4553"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;must<sp/>use<sp/>core<sp/>token&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="4554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rentcpu(<sp/>frank,<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/>asset::from_string(</highlight><highlight class="stringliteral">&quot;10.0000<sp/>RND&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4555"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;must<sp/>use<sp/>core<sp/>token&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="4556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rentcpu(<sp/>frank,<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/>payment,<sp/>asset::from_string(</highlight><highlight class="stringliteral">&quot;10.0000<sp/>RND&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4557"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;must<sp/>use<sp/>positive<sp/>asset<sp/>amount&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="4558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rentcpu(<sp/>frank,<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/>zero_asset<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4559"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;must<sp/>use<sp/>positive<sp/>asset<sp/>amount&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="4560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rentcpu(<sp/>frank,<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/>payment,<sp/>neg_asset<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4561"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;must<sp/>use<sp/>positive<sp/>asset<sp/>amount&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="4562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rentcpu(<sp/>frank,<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/>neg_asset,<sp/>payment<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4563"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>2<sp/>cpu<sp/>and<sp/>3<sp/>net<sp/>loans</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4564"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>rented_tokens{<sp/>expected_stake,<sp/>symbol{<ref refid="test__symbol_8hpp_1af288246ded3673b7a516aeaaca84ab01" kindref="member">CORE_SYM</ref>}<sp/>};</highlight></codeline>
<codeline lineno="4565"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>rented_tokens,<sp/><sp/>get_rentcpu_result(<sp/>frank,<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/>payment<sp/>)<sp/>);<sp/></highlight><highlight class="comment">//<sp/>loan_num<sp/>=<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4566"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/>rentcpu(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/>emily,<sp/>payment<sp/>)<sp/>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>loan_num<sp/>=<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4567"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_last_cpu_loan()[</highlight><highlight class="stringliteral">&quot;loan_num&quot;</highlight><highlight class="normal">].as_uint64()<sp/>);</highlight></codeline>
<codeline lineno="4568"><highlight class="normal"></highlight></codeline>
<codeline lineno="4569"><highlight class="normal"><sp/><sp/><sp/>asset<sp/>expected_rented_net;</highlight></codeline>
<codeline lineno="4570"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>pool<sp/>=<sp/>get_rex_pool();</highlight></codeline>
<codeline lineno="4572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>r<sp/><sp/>=<sp/>bancor_convert(<sp/>pool[</highlight><highlight class="stringliteral">&quot;total_rent&quot;</highlight><highlight class="normal">].as&lt;asset&gt;().get_amount(),</highlight></codeline>
<codeline lineno="4573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pool[</highlight><highlight class="stringliteral">&quot;total_unlent&quot;</highlight><highlight class="normal">].as&lt;asset&gt;().get_amount(),</highlight></codeline>
<codeline lineno="4574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>payment.get_amount()<sp/>);</highlight></codeline>
<codeline lineno="4575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>expected_rented_net<sp/>=<sp/>asset{<sp/>r,<sp/>symbol{<ref refid="test__symbol_8hpp_1af288246ded3673b7a516aeaaca84ab01" kindref="member">CORE_SYM</ref>}<sp/>};</highlight></codeline>
<codeline lineno="4576"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4577"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>expected_rented_net,<sp/>get_rentnet_result(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/>emily,<sp/>payment<sp/>)<sp/>);<sp/></highlight><highlight class="comment">//<sp/>loan_num<sp/>=<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4578"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rentnet(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/>payment<sp/>)<sp/>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>loan_num<sp/>=<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4579"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rentnet(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/>frank,<sp/>payment<sp/>)<sp/>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>loan_num<sp/>=<sp/>5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4580"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>5,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_last_net_loan()[</highlight><highlight class="stringliteral">&quot;loan_num&quot;</highlight><highlight class="normal">].as_uint64()<sp/>);</highlight></codeline>
<codeline lineno="4581"><highlight class="normal"></highlight></codeline>
<codeline lineno="4582"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>loan_info<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>get_cpu_loan(1);</highlight></codeline>
<codeline lineno="4583"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>old_frank_balance<sp/>=<sp/>cur_frank_balance;</highlight></codeline>
<codeline lineno="4584"><highlight class="normal"><sp/><sp/><sp/>cur_frank_balance<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>get_rex_fund(<sp/>frank<sp/>);</highlight></codeline>
<codeline lineno="4585"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>old_frank_balance,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>payment<sp/>+<sp/>cur_frank_balance<sp/>);</highlight></codeline>
<codeline lineno="4586"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>loan_info[</highlight><highlight class="stringliteral">&quot;loan_num&quot;</highlight><highlight class="normal">].as_uint64()<sp/>);</highlight></codeline>
<codeline lineno="4587"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>payment,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>loan_info[</highlight><highlight class="stringliteral">&quot;payment&quot;</highlight><highlight class="normal">].as&lt;asset&gt;()<sp/>);</highlight></codeline>
<codeline lineno="4588"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>loan_info[</highlight><highlight class="stringliteral">&quot;balance&quot;</highlight><highlight class="normal">].as&lt;asset&gt;().get_amount()<sp/>);</highlight></codeline>
<codeline lineno="4589"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>expected_stake,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>loan_info[</highlight><highlight class="stringliteral">&quot;total_staked&quot;</highlight><highlight class="normal">].as&lt;asset&gt;().get_amount()<sp/>);</highlight></codeline>
<codeline lineno="4590"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>expected_stake<sp/>+<sp/>init_stake,<sp/>get_cpu_limit(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4591"><highlight class="normal"></highlight></codeline>
<codeline lineno="4592"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>frank<sp/>funds<sp/>his<sp/>loan<sp/>enough<sp/>to<sp/>be<sp/>renewed<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4593"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>fund<sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;35.0000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4594"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>fundcpuloan(<sp/>frank,<sp/>1,<sp/>cur_frank_balance<sp/>+<sp/>one_unit),<sp/>wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;insufficient<sp/>funds&quot;</highlight><highlight class="normal">)<sp/>);</highlight></codeline>
<codeline lineno="4595"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>fundnetloan(<sp/>frank,<sp/>1,<sp/>fund<sp/>),<sp/>wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;loan<sp/>not<sp/>found&quot;</highlight><highlight class="normal">)<sp/>);</highlight></codeline>
<codeline lineno="4596"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>fundcpuloan(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/>1,<sp/>fund<sp/>),<sp/>wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;user<sp/>must<sp/>be<sp/>loan<sp/>creator&quot;</highlight><highlight class="normal">)<sp/>);</highlight></codeline>
<codeline lineno="4597"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fundcpuloan(<sp/>frank,<sp/>1,<sp/>fund<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4598"><highlight class="normal"><sp/><sp/><sp/>old_frank_balance<sp/>=<sp/>cur_frank_balance;</highlight></codeline>
<codeline lineno="4599"><highlight class="normal"><sp/><sp/><sp/>cur_frank_balance<sp/>=<sp/>get_rex_fund(<sp/>frank<sp/>);</highlight></codeline>
<codeline lineno="4600"><highlight class="normal"><sp/><sp/><sp/>loan_info<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>get_cpu_loan(1);</highlight></codeline>
<codeline lineno="4601"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>old_frank_balance,<sp/>fund<sp/>+<sp/>cur_frank_balance<sp/>);</highlight></codeline>
<codeline lineno="4602"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>fund,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>loan_info[</highlight><highlight class="stringliteral">&quot;balance&quot;</highlight><highlight class="normal">].as&lt;asset&gt;()<sp/>);</highlight></codeline>
<codeline lineno="4603"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>payment,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>loan_info[</highlight><highlight class="stringliteral">&quot;payment&quot;</highlight><highlight class="normal">].as&lt;asset&gt;()<sp/>);</highlight></codeline>
<codeline lineno="4604"><highlight class="normal"></highlight></codeline>
<codeline lineno="4605"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>the<sp/>meantime,<sp/>defund<sp/>then<sp/>fund<sp/>the<sp/>same<sp/>amount<sp/>and<sp/>test<sp/>the<sp/>balances</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4606"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/><ref refid="eosio_8token__tests_8cpp_1aca469ae89ae00a572ad079f6d8515ce1" kindref="member">amount</ref><sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;7.5000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>defundnetloan(<sp/>frank,<sp/>1,<sp/>fund<sp/>),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;loan<sp/>not<sp/>found&quot;</highlight><highlight class="normal">)<sp/>);</highlight></codeline>
<codeline lineno="4609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>defundcpuloan(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/>1,<sp/>fund<sp/>),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;user<sp/>must<sp/>be<sp/>loan<sp/>creator&quot;</highlight><highlight class="normal">)<sp/>);</highlight></codeline>
<codeline lineno="4610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>defundcpuloan(<sp/>frank,<sp/>1,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;75.0000&quot;</highlight><highlight class="normal">)<sp/>),<sp/>wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;insufficent<sp/>loan<sp/>balance&quot;</highlight><highlight class="normal">)<sp/>);</highlight></codeline>
<codeline lineno="4611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>old_frank_balance<sp/>=<sp/>cur_frank_balance;</highlight></codeline>
<codeline lineno="4612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>asset<sp/>old_loan_balance<sp/>=<sp/>get_cpu_loan(1)[</highlight><highlight class="stringliteral">&quot;balance&quot;</highlight><highlight class="normal">].as&lt;asset&gt;();</highlight></codeline>
<codeline lineno="4613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>defundcpuloan(<sp/>frank,<sp/>1,<sp/><ref refid="eosio_8token__tests_8cpp_1aca469ae89ae00a572ad079f6d8515ce1" kindref="member">amount</ref><sp/>),<sp/>success()<sp/>);</highlight></codeline>
<codeline lineno="4614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>old_loan_balance,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_cpu_loan(1)[</highlight><highlight class="stringliteral">&quot;balance&quot;</highlight><highlight class="normal">].as&lt;asset&gt;()<sp/>+<sp/><ref refid="eosio_8token__tests_8cpp_1aca469ae89ae00a572ad079f6d8515ce1" kindref="member">amount</ref><sp/>);</highlight></codeline>
<codeline lineno="4615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cur_frank_balance<sp/>=<sp/>get_rex_fund(<sp/>frank<sp/>);</highlight></codeline>
<codeline lineno="4616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>old_loan_balance<sp/><sp/>=<sp/>get_cpu_loan(1)[</highlight><highlight class="stringliteral">&quot;balance&quot;</highlight><highlight class="normal">].as&lt;asset&gt;();</highlight></codeline>
<codeline lineno="4617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>old_frank_balance<sp/>+<sp/><ref refid="eosio_8token__tests_8cpp_1aca469ae89ae00a572ad079f6d8515ce1" kindref="member">amount</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cur_frank_balance<sp/>);</highlight></codeline>
<codeline lineno="4618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>old_frank_balance<sp/>=<sp/>cur_frank_balance;</highlight></codeline>
<codeline lineno="4619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>fundcpuloan(<sp/>frank,<sp/>1,<sp/><ref refid="eosio_8token__tests_8cpp_1aca469ae89ae00a572ad079f6d8515ce1" kindref="member">amount</ref><sp/>),<sp/><sp/><sp/>success()<sp/>);</highlight></codeline>
<codeline lineno="4620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>old_loan_balance<sp/>+<sp/><ref refid="eosio_8token__tests_8cpp_1aca469ae89ae00a572ad079f6d8515ce1" kindref="member">amount</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_cpu_loan(1)[</highlight><highlight class="stringliteral">&quot;balance&quot;</highlight><highlight class="normal">].as&lt;asset&gt;()<sp/>);</highlight></codeline>
<codeline lineno="4621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cur_frank_balance<sp/>=<sp/>get_rex_fund(<sp/>frank<sp/>);</highlight></codeline>
<codeline lineno="4622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>old_frank_balance<sp/>-<sp/><ref refid="eosio_8token__tests_8cpp_1aca469ae89ae00a572ad079f6d8515ce1" kindref="member">amount</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cur_frank_balance<sp/>);</highlight></codeline>
<codeline lineno="4623"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4624"><highlight class="normal"></highlight></codeline>
<codeline lineno="4625"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>wait<sp/>for<sp/>30<sp/>days,<sp/>frank&apos;s<sp/>loan<sp/>will<sp/>be<sp/>renewed<sp/>at<sp/>the<sp/>current<sp/>price</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4626"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::minutes(30*24*60<sp/>-<sp/>1)<sp/>);</highlight></codeline>
<codeline lineno="4627"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>updaterex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4628"><highlight class="normal"><sp/><sp/><sp/>rex_pool<sp/>=<sp/>get_rex_pool();</highlight></codeline>
<codeline lineno="4629"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>unlent_tokens<sp/>=<sp/>bancor_convert(<sp/>rex_pool[</highlight><highlight class="stringliteral">&quot;total_unlent&quot;</highlight><highlight class="normal">].as&lt;asset&gt;().get_amount(),</highlight></codeline>
<codeline lineno="4631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rex_pool[</highlight><highlight class="stringliteral">&quot;total_rent&quot;</highlight><highlight class="normal">].as&lt;asset&gt;().get_amount(),</highlight></codeline>
<codeline lineno="4632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expected_stake<sp/>);</highlight></codeline>
<codeline lineno="4633"><highlight class="normal"></highlight></codeline>
<codeline lineno="4634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>expected_stake<sp/>=<sp/>bancor_convert(<sp/>rex_pool[</highlight><highlight class="stringliteral">&quot;total_rent&quot;</highlight><highlight class="normal">].as&lt;asset&gt;().get_amount()<sp/>-<sp/>unlent_tokens,</highlight></codeline>
<codeline lineno="4635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rex_pool[</highlight><highlight class="stringliteral">&quot;total_unlent&quot;</highlight><highlight class="normal">].as&lt;asset&gt;().get_amount()<sp/>+<sp/>expected_stake,</highlight></codeline>
<codeline lineno="4636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>payment.get_amount()<sp/>);</highlight></codeline>
<codeline lineno="4637"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4638"><highlight class="normal"></highlight></codeline>
<codeline lineno="4639"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::minutes(2)<sp/>);</highlight></codeline>
<codeline lineno="4640"><highlight class="normal"></highlight></codeline>
<codeline lineno="4641"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>sellrex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/>asset::from_string(</highlight><highlight class="stringliteral">&quot;1.0000<sp/>REX&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4642"><highlight class="normal"></highlight></codeline>
<codeline lineno="4643"><highlight class="normal"><sp/><sp/><sp/>loan_info<sp/>=<sp/>get_cpu_loan(1);</highlight></codeline>
<codeline lineno="4644"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>payment,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>loan_info[</highlight><highlight class="stringliteral">&quot;payment&quot;</highlight><highlight class="normal">].as&lt;asset&gt;()<sp/>);</highlight></codeline>
<codeline lineno="4645"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>fund<sp/>-<sp/>payment,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>loan_info[</highlight><highlight class="stringliteral">&quot;balance&quot;</highlight><highlight class="normal">].as&lt;asset&gt;()<sp/>);</highlight></codeline>
<codeline lineno="4646"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>expected_stake,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>loan_info[</highlight><highlight class="stringliteral">&quot;total_staked&quot;</highlight><highlight class="normal">].as&lt;asset&gt;().get_amount()<sp/>);</highlight></codeline>
<codeline lineno="4647"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>expected_stake<sp/>+<sp/>init_stake,<sp/>get_cpu_limit(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4648"><highlight class="normal"></highlight></codeline>
<codeline lineno="4649"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>that<sp/>loans<sp/>have<sp/>been<sp/>processed<sp/>in<sp/>order</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4650"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>get_cpu_loan(1).is_null()<sp/>);</highlight></codeline>
<codeline lineno="4651"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/><sp/>get_cpu_loan(2).is_null()<sp/>);</highlight></codeline>
<codeline lineno="4652"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/><sp/>get_net_loan(3).is_null()<sp/>);</highlight></codeline>
<codeline lineno="4653"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/><sp/>get_net_loan(4).is_null()<sp/>);</highlight></codeline>
<codeline lineno="4654"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>get_net_loan(5).is_null()<sp/>);</highlight></codeline>
<codeline lineno="4655"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>1,<sp/><sp/><sp/><sp/><sp/>get_last_cpu_loan()[</highlight><highlight class="stringliteral">&quot;loan_num&quot;</highlight><highlight class="normal">].as_uint64()<sp/>);</highlight></codeline>
<codeline lineno="4656"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>5,<sp/><sp/><sp/><sp/><sp/>get_last_net_loan()[</highlight><highlight class="stringliteral">&quot;loan_num&quot;</highlight><highlight class="normal">].as_uint64()<sp/>);</highlight></codeline>
<codeline lineno="4657"><highlight class="normal"></highlight></codeline>
<codeline lineno="4658"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>wait<sp/>for<sp/>another<sp/>month,<sp/>frank&apos;s<sp/>loan<sp/>doesn&apos;t<sp/>have<sp/>enough<sp/>funds<sp/>and<sp/>will<sp/>be<sp/>closed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4659"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::hours(30*24)<sp/>);</highlight></codeline>
<codeline lineno="4660"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/>buyrex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;10.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4661"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_cpu_loan(1).is_null()<sp/>);</highlight></codeline>
<codeline lineno="4662"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>init_stake,<sp/>get_cpu_limit(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4663"><highlight class="normal"><sp/><sp/><sp/>old_frank_balance<sp/>=<sp/>cur_frank_balance;</highlight></codeline>
<codeline lineno="4664"><highlight class="normal"><sp/><sp/><sp/>cur_frank_balance<sp/>=<sp/>get_rex_fund(<sp/>frank<sp/>);</highlight></codeline>
<codeline lineno="4665"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>fund<sp/>-<sp/>payment,<sp/><sp/><sp/><sp/><sp/>cur_frank_balance<sp/>-<sp/>old_frank_balance<sp/>);</highlight></codeline>
<codeline lineno="4666"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1ae00c608b8a40d03b8b8dd2daac50185b" kindref="member">BOOST_REQUIRE</ref><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>old_frank_balance<sp/>&lt;<sp/>cur_frank_balance<sp/>);</highlight></codeline>
<codeline lineno="4667"><highlight class="normal"></highlight></codeline>
<codeline lineno="4668"><highlight class="normal">}<sp/><ref refid="eosio_8system__tests_8cpp_1a057cb719bfa291fae56dc6ba5fa7a8d1" kindref="member">FC_LOG_AND_RETHROW</ref>()</highlight></codeline>
<codeline lineno="4669"><highlight class="normal"></highlight></codeline>
<codeline lineno="4670"><highlight class="normal"></highlight></codeline>
<codeline lineno="4671"><highlight class="normal"><ref refid="eosio_8system__tests_8cpp_1a8a1841911da283583ec346df954d73a1" kindref="member">BOOST_FIXTURE_TEST_CASE</ref>(<sp/>rex_loan_checks,<sp/><ref refid="classeosio__system_1_1eosio__system__tester" kindref="compound">eosio_system_tester</ref><sp/>)<sp/><ref refid="eosio_8system__tests_8cpp_1ae89aac94d502abdd3c8d055174c221fc" kindref="member">try</ref><sp/>{</highlight></codeline>
<codeline lineno="4672"><highlight class="normal"></highlight></codeline>
<codeline lineno="4673"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>ratio<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>10000;</highlight></codeline>
<codeline lineno="4674"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/><sp/><sp/>init_balance<sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;40000.0000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4675"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;account_name&gt;<sp/><ref refid="structaccounts" kindref="compound">accounts</ref><sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;aliceaccount&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;bobbyaccount&quot;</highlight><highlight class="normal">_n<sp/>};</highlight></codeline>
<codeline lineno="4676"><highlight class="normal"><sp/><sp/><sp/>account_name<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>=<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>[0],<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref><sp/>=<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>[1];</highlight></codeline>
<codeline lineno="4677"><highlight class="normal"><sp/><sp/><sp/>setup_rex_accounts(<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>,<sp/>init_balance<sp/>);</highlight></codeline>
<codeline lineno="4678"><highlight class="normal"></highlight></codeline>
<codeline lineno="4679"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>payment1<sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;20000.0000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4680"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>payment2<sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;4.0000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4681"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>fee<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1.0000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4682"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>buyrex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/>payment1<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4683"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;loan<sp/>price<sp/>does<sp/>not<sp/>favor<sp/>renting&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="4684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rentcpu(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/>fee<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4685"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buyrex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/>payment2<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4686"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rentcpu(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/>fee,<sp/>fee<sp/>+<sp/>fee<sp/>+<sp/>fee<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4687"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!get_cpu_loan(1).is_null()<sp/>);</highlight></codeline>
<codeline lineno="4688"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>3<sp/>*<sp/>fee.get_amount(),<sp/>get_last_cpu_loan()[</highlight><highlight class="stringliteral">&quot;balance&quot;</highlight><highlight class="normal">].as&lt;asset&gt;().get_amount()<sp/>);</highlight></codeline>
<codeline lineno="4689"><highlight class="normal"></highlight></codeline>
<codeline lineno="4690"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::days(31)<sp/>);</highlight></codeline>
<codeline lineno="4691"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rexexec(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/>3)<sp/>);</highlight></codeline>
<codeline lineno="4692"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>2<sp/>*<sp/>fee.get_amount(),<sp/>get_last_cpu_loan()[</highlight><highlight class="stringliteral">&quot;balance&quot;</highlight><highlight class="normal">].as&lt;asset&gt;().get_amount()<sp/>);</highlight></codeline>
<codeline lineno="4693"><highlight class="normal"></highlight></codeline>
<codeline lineno="4694"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sellrex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/>asset::from_string(</highlight><highlight class="stringliteral">&quot;1000000.0000<sp/>REX&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4695"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::days(31)<sp/>);</highlight></codeline>
<codeline lineno="4696"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rexexec(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/>3)<sp/>);</highlight></codeline>
<codeline lineno="4697"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_cpu_loan(1).is_null()<sp/>);</highlight></codeline>
<codeline lineno="4698"><highlight class="normal"></highlight></codeline>
<codeline lineno="4699"><highlight class="normal">}<sp/><ref refid="eosio_8system__tests_8cpp_1a057cb719bfa291fae56dc6ba5fa7a8d1" kindref="member">FC_LOG_AND_RETHROW</ref>()</highlight></codeline>
<codeline lineno="4700"><highlight class="normal"></highlight></codeline>
<codeline lineno="4701"><highlight class="normal"></highlight></codeline>
<codeline lineno="4702"><highlight class="normal"><ref refid="eosio_8system__tests_8cpp_1a8a1841911da283583ec346df954d73a1" kindref="member">BOOST_FIXTURE_TEST_CASE</ref>(<sp/>ramfee_namebid_to_rex,<sp/><ref refid="classeosio__system_1_1eosio__system__tester" kindref="compound">eosio_system_tester</ref><sp/>)<sp/><ref refid="eosio_8system__tests_8cpp_1ae89aac94d502abdd3c8d055174c221fc" kindref="member">try</ref><sp/>{</highlight></codeline>
<codeline lineno="4703"><highlight class="normal"></highlight></codeline>
<codeline lineno="4704"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>ratio<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>10000;</highlight></codeline>
<codeline lineno="4705"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/><sp/><sp/>init_balance<sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;10000.0000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4706"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;account_name&gt;<sp/><ref refid="structaccounts" kindref="compound">accounts</ref><sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;aliceaccount&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;bobbyaccount&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;carolaccount&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;emilyaccount&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;frankaccount&quot;</highlight><highlight class="normal">_n<sp/>};</highlight></codeline>
<codeline lineno="4707"><highlight class="normal"><sp/><sp/><sp/>account_name<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>=<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>[0],<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref><sp/>=<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>[1],<sp/><ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref><sp/>=<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>[2],<sp/>emily<sp/>=<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>[3],<sp/>frank<sp/>=<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>[4];</highlight></codeline>
<codeline lineno="4708"><highlight class="normal"><sp/><sp/><sp/>setup_rex_accounts(<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>,<sp/>init_balance,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;80.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;80.0000&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="4709"><highlight class="normal"></highlight></codeline>
<codeline lineno="4710"><highlight class="normal"><sp/><sp/><sp/>asset<sp/>cur_ramfee_balance<sp/>=<sp/>get_balance(<sp/></highlight><highlight class="stringliteral">&quot;eosio.ramfee&quot;</highlight><highlight class="normal">_n<sp/>);</highlight></codeline>
<codeline lineno="4711"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buyram(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;20.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4712"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>get_balance(<sp/></highlight><highlight class="stringliteral">&quot;eosio.ramfee&quot;</highlight><highlight class="normal">_n<sp/>),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;0.1000&quot;</highlight><highlight class="normal">)<sp/>+<sp/>cur_ramfee_balance<sp/>);</highlight></codeline>
<codeline lineno="4713"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;must<sp/>deposit<sp/>to<sp/>REX<sp/>fund<sp/>first&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="4714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buyrex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;350.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4715"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deposit(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;350.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4716"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buyrex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;350.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4717"><highlight class="normal"><sp/><sp/><sp/>cur_ramfee_balance<sp/>=<sp/>get_balance(<sp/></highlight><highlight class="stringliteral">&quot;eosio.ramfee&quot;</highlight><highlight class="normal">_n<sp/>);</highlight></codeline>
<codeline lineno="4718"><highlight class="normal"><sp/><sp/><sp/>asset<sp/>cur_rex_balance<sp/>=<sp/>get_balance(<sp/></highlight><highlight class="stringliteral">&quot;eosio.rex&quot;</highlight><highlight class="normal">_n<sp/>);</highlight></codeline>
<codeline lineno="4719"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;350.0000&quot;</highlight><highlight class="normal">),<sp/>cur_rex_balance<sp/>);</highlight></codeline>
<codeline lineno="4720"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buyram(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/><ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref>,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;70.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4721"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>cur_ramfee_balance,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_balance(<sp/></highlight><highlight class="stringliteral">&quot;eosio.ramfee&quot;</highlight><highlight class="normal">_n<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4722"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>get_balance(<sp/></highlight><highlight class="stringliteral">&quot;eosio.rex&quot;</highlight><highlight class="normal">_n<sp/>),<sp/><sp/><sp/><sp/><sp/><sp/><sp/>cur_rex_balance<sp/>+<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;0.3500&quot;</highlight><highlight class="normal">)<sp/>);</highlight></codeline>
<codeline lineno="4723"><highlight class="normal"></highlight></codeline>
<codeline lineno="4724"><highlight class="normal"><sp/><sp/><sp/>cur_rex_balance<sp/>=<sp/>get_balance(<sp/></highlight><highlight class="stringliteral">&quot;eosio.rex&quot;</highlight><highlight class="normal">_n<sp/>);</highlight></codeline>
<codeline lineno="4725"><highlight class="normal"></highlight></codeline>
<codeline lineno="4726"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aa1213f0f2c7a53ea968859f3cab582c3" kindref="member">produce_blocks</ref>(<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="4727"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::hours(30*24<sp/>+<sp/>12)<sp/>);</highlight></codeline>
<codeline lineno="4728"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aa1213f0f2c7a53ea968859f3cab582c3" kindref="member">produce_blocks</ref>(<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="4729"><highlight class="normal"></highlight></codeline>
<codeline lineno="4730"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/>rexexec(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/>1<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4731"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>cur_rex_pool<sp/>=<sp/>get_rex_pool();</highlight></codeline>
<codeline lineno="4732"><highlight class="normal"></highlight></codeline>
<codeline lineno="4733"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a2a34c6cca71b9f7b935a3b00648b2b41" kindref="member">within_one</ref>(<sp/>cur_rex_balance.get_amount(),<sp/>cur_rex_pool[</highlight><highlight class="stringliteral">&quot;total_unlent&quot;</highlight><highlight class="normal">].as&lt;asset&gt;().get_amount()<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4734"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/><sp/>cur_rex_balance<sp/>&gt;=<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cur_rex_pool[</highlight><highlight class="stringliteral">&quot;total_unlent&quot;</highlight><highlight class="normal">].as&lt;asset&gt;()<sp/>);</highlight></codeline>
<codeline lineno="4735"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cur_rex_pool[</highlight><highlight class="stringliteral">&quot;total_lent&quot;</highlight><highlight class="normal">].as&lt;asset&gt;().get_amount()<sp/>);</highlight></codeline>
<codeline lineno="4736"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a2a34c6cca71b9f7b935a3b00648b2b41" kindref="member">within_one</ref>(<sp/>cur_rex_balance.get_amount(),<sp/>cur_rex_pool[</highlight><highlight class="stringliteral">&quot;total_lendable&quot;</highlight><highlight class="normal">].as&lt;asset&gt;().get_amount()<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4737"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/><sp/>cur_rex_balance<sp/>&gt;=<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cur_rex_pool[</highlight><highlight class="stringliteral">&quot;total_lendable&quot;</highlight><highlight class="normal">].as&lt;asset&gt;()<sp/>);</highlight></codeline>
<codeline lineno="4738"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cur_rex_pool[</highlight><highlight class="stringliteral">&quot;namebid_proceeds&quot;</highlight><highlight class="normal">].as&lt;asset&gt;().get_amount()<sp/>);</highlight></codeline>
<codeline lineno="4739"><highlight class="normal"></highlight></codeline>
<codeline lineno="4740"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>required<sp/>for<sp/>closing<sp/>namebids</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4741"><highlight class="normal"><sp/><sp/><sp/>cross_15_percent_threshold();</highlight></codeline>
<codeline lineno="4742"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::days(14)<sp/>);</highlight></codeline>
<codeline lineno="4743"><highlight class="normal"></highlight></codeline>
<codeline lineno="4744"><highlight class="normal"><sp/><sp/><sp/>cur_rex_balance<sp/>=<sp/>get_balance(<sp/></highlight><highlight class="stringliteral">&quot;eosio.rex&quot;</highlight><highlight class="normal">_n<sp/>);</highlight></codeline>
<codeline lineno="4745"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bidname(<sp/><ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref>,<sp/></highlight><highlight class="stringliteral">&quot;rndmbid&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;23.7000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4746"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;23.7000&quot;</highlight><highlight class="normal">),<sp/>get_balance(<sp/></highlight><highlight class="stringliteral">&quot;eosio.names&quot;</highlight><highlight class="normal">_n<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4747"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bidname(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/></highlight><highlight class="stringliteral">&quot;rndmbid&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;29.3500&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4748"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;29.3500&quot;</highlight><highlight class="normal">),<sp/>get_balance(<sp/></highlight><highlight class="stringliteral">&quot;eosio.names&quot;</highlight><highlight class="normal">_n<sp/>));</highlight></codeline>
<codeline lineno="4749"><highlight class="normal"></highlight></codeline>
<codeline lineno="4750"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::hours(24)<sp/>);</highlight></codeline>
<codeline lineno="4751"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aa1213f0f2c7a53ea968859f3cab582c3" kindref="member">produce_blocks</ref>(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="4752"><highlight class="normal"></highlight></codeline>
<codeline lineno="4753"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;29.3500&quot;</highlight><highlight class="normal">),<sp/>get_rex_pool()[</highlight><highlight class="stringliteral">&quot;namebid_proceeds&quot;</highlight><highlight class="normal">].as&lt;asset&gt;()<sp/>);</highlight></codeline>
<codeline lineno="4754"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deposit(<sp/>frank,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;5.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4755"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buyrex(<sp/>frank,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;5.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4756"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>get_balance(<sp/></highlight><highlight class="stringliteral">&quot;eosio.rex&quot;</highlight><highlight class="normal">_n<sp/>),<sp/><sp/><sp/><sp/><sp/><sp/>cur_rex_balance<sp/>+<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;34.3500&quot;</highlight><highlight class="normal">)<sp/>);</highlight></codeline>
<codeline lineno="4757"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_balance(<sp/></highlight><highlight class="stringliteral">&quot;eosio.names&quot;</highlight><highlight class="normal">_n<sp/>).get_amount()<sp/>);</highlight></codeline>
<codeline lineno="4758"><highlight class="normal"></highlight></codeline>
<codeline lineno="4759"><highlight class="normal"><sp/><sp/><sp/>cur_rex_balance<sp/>=<sp/>get_balance(<sp/></highlight><highlight class="stringliteral">&quot;eosio.rex&quot;</highlight><highlight class="normal">_n<sp/>);</highlight></codeline>
<codeline lineno="4760"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::hours(30*24<sp/>+<sp/>13)<sp/>);</highlight></codeline>
<codeline lineno="4761"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aa1213f0f2c7a53ea968859f3cab582c3" kindref="member">produce_blocks</ref>(<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="4762"><highlight class="normal"></highlight></codeline>
<codeline lineno="4763"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rexexec(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/>1<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4764"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>cur_rex_balance,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_rex_pool()[</highlight><highlight class="stringliteral">&quot;total_lendable&quot;</highlight><highlight class="normal">].as&lt;asset&gt;()<sp/>);</highlight></codeline>
<codeline lineno="4765"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>get_rex_pool()[</highlight><highlight class="stringliteral">&quot;total_lendable&quot;</highlight><highlight class="normal">].as&lt;asset&gt;(),</highlight></codeline>
<codeline lineno="4766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_rex_pool()[</highlight><highlight class="stringliteral">&quot;total_unlent&quot;</highlight><highlight class="normal">].as&lt;asset&gt;()<sp/>);</highlight></codeline>
<codeline lineno="4767"><highlight class="normal"></highlight></codeline>
<codeline lineno="4768"><highlight class="normal">}<sp/><ref refid="eosio_8system__tests_8cpp_1a057cb719bfa291fae56dc6ba5fa7a8d1" kindref="member">FC_LOG_AND_RETHROW</ref>()</highlight></codeline>
<codeline lineno="4769"><highlight class="normal"></highlight></codeline>
<codeline lineno="4770"><highlight class="normal"></highlight></codeline>
<codeline lineno="4771"><highlight class="normal"><ref refid="eosio_8system__tests_8cpp_1a8a1841911da283583ec346df954d73a1" kindref="member">BOOST_FIXTURE_TEST_CASE</ref>(<sp/>rex_maturity,<sp/><ref refid="classeosio__system_1_1eosio__system__tester" kindref="compound">eosio_system_tester</ref><sp/>)<sp/><ref refid="eosio_8system__tests_8cpp_1ae89aac94d502abdd3c8d055174c221fc" kindref="member">try</ref><sp/>{</highlight></codeline>
<codeline lineno="4772"><highlight class="normal"></highlight></codeline>
<codeline lineno="4773"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>init_balance<sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1000000.0000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4774"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;account_name&gt;<sp/><ref refid="structaccounts" kindref="compound">accounts</ref><sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;aliceaccount&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;bobbyaccount&quot;</highlight><highlight class="normal">_n<sp/>};</highlight></codeline>
<codeline lineno="4775"><highlight class="normal"><sp/><sp/><sp/>account_name<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>=<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>[0],<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref><sp/>=<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>[1];</highlight></codeline>
<codeline lineno="4776"><highlight class="normal"><sp/><sp/><sp/>setup_rex_accounts(<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>,<sp/>init_balance<sp/>);</highlight></codeline>
<codeline lineno="4777"><highlight class="normal"></highlight></codeline>
<codeline lineno="4778"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>rex_ratio<sp/>=<sp/>10000;</highlight></codeline>
<codeline lineno="4779"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>symbol<sp/><sp/>rex_sym(<sp/>SY(4,<sp/>REX)<sp/>);</highlight></codeline>
<codeline lineno="4780"><highlight class="normal"></highlight></codeline>
<codeline lineno="4781"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>buyrex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;11.5000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::hours(3)<sp/>);</highlight></codeline>
<codeline lineno="4784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>buyrex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;18.5000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::hours(25)<sp/>);</highlight></codeline>
<codeline lineno="4786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>buyrex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;25.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4787"><highlight class="normal"></highlight></codeline>
<codeline lineno="4788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>rex_balance<sp/>=<sp/>get_rex_balance_obj(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>);</highlight></codeline>
<codeline lineno="4789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>550000<sp/>*<sp/>rex_ratio,<sp/>rex_balance[</highlight><highlight class="stringliteral">&quot;rex_balance&quot;</highlight><highlight class="normal">].as&lt;asset&gt;().get_amount()<sp/>);</highlight></codeline>
<codeline lineno="4790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rex_balance[</highlight><highlight class="stringliteral">&quot;matured_rex&quot;</highlight><highlight class="normal">].as&lt;int64_t&gt;()<sp/>);</highlight></codeline>
<codeline lineno="4791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rex_balance[</highlight><highlight class="stringliteral">&quot;rex_maturities&quot;</highlight><highlight class="normal">].get_array().size()<sp/>);</highlight></codeline>
<codeline lineno="4792"><highlight class="normal"></highlight></codeline>
<codeline lineno="4793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;insufficient<sp/>available<sp/>rex&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="4794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sellrex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/>asset::from_string(</highlight><highlight class="stringliteral">&quot;115000.0000<sp/>REX&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::hours(<sp/>3*24<sp/>+<sp/>20)<sp/>);</highlight></codeline>
<codeline lineno="4796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sellrex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/>asset::from_string(</highlight><highlight class="stringliteral">&quot;300000.0000<sp/>REX&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rex_balance<sp/>=<sp/>get_rex_balance_obj(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>);</highlight></codeline>
<codeline lineno="4798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>250000<sp/>*<sp/>rex_ratio,<sp/>rex_balance[</highlight><highlight class="stringliteral">&quot;rex_balance&quot;</highlight><highlight class="normal">].as&lt;asset&gt;().get_amount()<sp/>);</highlight></codeline>
<codeline lineno="4799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rex_balance[</highlight><highlight class="stringliteral">&quot;matured_rex&quot;</highlight><highlight class="normal">].as&lt;int64_t&gt;()<sp/>);</highlight></codeline>
<codeline lineno="4800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rex_balance[</highlight><highlight class="stringliteral">&quot;rex_maturities&quot;</highlight><highlight class="normal">].get_array().size()<sp/>);</highlight></codeline>
<codeline lineno="4801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::hours(23)<sp/>);</highlight></codeline>
<codeline lineno="4802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;insufficient<sp/>available<sp/>rex&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="4803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sellrex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/>asset::from_string(</highlight><highlight class="stringliteral">&quot;250000.0000<sp/>REX&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::days(1)<sp/>);</highlight></codeline>
<codeline lineno="4805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sellrex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/>asset::from_string(</highlight><highlight class="stringliteral">&quot;130000.0000<sp/>REX&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rex_balance<sp/>=<sp/>get_rex_balance_obj(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>);</highlight></codeline>
<codeline lineno="4807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>1200000000,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rex_balance[</highlight><highlight class="stringliteral">&quot;rex_balance&quot;</highlight><highlight class="normal">].as&lt;asset&gt;().get_amount()<sp/>);</highlight></codeline>
<codeline lineno="4808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>1200000000,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rex_balance[</highlight><highlight class="stringliteral">&quot;matured_rex&quot;</highlight><highlight class="normal">].as&lt;int64_t&gt;()<sp/>);</highlight></codeline>
<codeline lineno="4809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rex_balance[</highlight><highlight class="stringliteral">&quot;rex_maturities&quot;</highlight><highlight class="normal">].get_array().size()<sp/>);</highlight></codeline>
<codeline lineno="4810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;insufficient<sp/>available<sp/>rex&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="4811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sellrex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/>asset::from_string(</highlight><highlight class="stringliteral">&quot;130000.0000<sp/>REX&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sellrex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/>asset::from_string(</highlight><highlight class="stringliteral">&quot;120000.0000<sp/>REX&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rex_balance<sp/>=<sp/>get_rex_balance_obj(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>);</highlight></codeline>
<codeline lineno="4814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rex_balance[</highlight><highlight class="stringliteral">&quot;rex_balance&quot;</highlight><highlight class="normal">].as&lt;asset&gt;().get_amount()<sp/>);</highlight></codeline>
<codeline lineno="4815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rex_balance[</highlight><highlight class="stringliteral">&quot;matured_rex&quot;</highlight><highlight class="normal">].as&lt;int64_t&gt;()<sp/>);</highlight></codeline>
<codeline lineno="4816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rex_balance[</highlight><highlight class="stringliteral">&quot;rex_maturities&quot;</highlight><highlight class="normal">].get_array().size()<sp/>);</highlight></codeline>
<codeline lineno="4817"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4818"><highlight class="normal"></highlight></codeline>
<codeline lineno="4819"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>payment1<sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;14.8000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>payment2<sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;15.2000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>payment<sp/><sp/>=<sp/>payment1<sp/>+<sp/>payment2;</highlight></codeline>
<codeline lineno="4823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>rex_bucket(<sp/>rex_ratio<sp/>*<sp/>payment.get_amount(),<sp/>rex_sym<sp/>);</highlight></codeline>
<codeline lineno="4824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>uint8_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>8;<sp/>++i<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>buyrex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/>payment1<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::hours(2)<sp/>);</highlight></codeline>
<codeline lineno="4827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>buyrex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/>payment2<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::hours(24)<sp/>);</highlight></codeline>
<codeline lineno="4829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4830"><highlight class="normal"></highlight></codeline>
<codeline lineno="4831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>rex_balance<sp/>=<sp/>get_rex_balance_obj(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref><sp/>);</highlight></codeline>
<codeline lineno="4832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>8<sp/>*<sp/>rex_bucket.get_amount(),<sp/>rex_balance[</highlight><highlight class="stringliteral">&quot;rex_balance&quot;</highlight><highlight class="normal">].as&lt;asset&gt;().get_amount()<sp/>);</highlight></codeline>
<codeline lineno="4833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>5,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rex_balance[</highlight><highlight class="stringliteral">&quot;rex_maturities&quot;</highlight><highlight class="normal">].get_array().size()<sp/>);</highlight></codeline>
<codeline lineno="4834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>3<sp/>*<sp/>rex_bucket.get_amount(),<sp/>rex_balance[</highlight><highlight class="stringliteral">&quot;matured_rex&quot;</highlight><highlight class="normal">].as&lt;int64_t&gt;()<sp/>);</highlight></codeline>
<codeline lineno="4835"><highlight class="normal"></highlight></codeline>
<codeline lineno="4836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>updaterex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rex_balance<sp/>=<sp/>get_rex_balance_obj(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref><sp/>);</highlight></codeline>
<codeline lineno="4838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>4,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rex_balance[</highlight><highlight class="stringliteral">&quot;rex_maturities&quot;</highlight><highlight class="normal">].get_array().size()<sp/>);</highlight></codeline>
<codeline lineno="4839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>4<sp/>*<sp/>rex_bucket.get_amount(),<sp/>rex_balance[</highlight><highlight class="stringliteral">&quot;matured_rex&quot;</highlight><highlight class="normal">].as&lt;int64_t&gt;()<sp/>);</highlight></codeline>
<codeline lineno="4840"><highlight class="normal"></highlight></codeline>
<codeline lineno="4841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::hours(2)<sp/>);</highlight></codeline>
<codeline lineno="4842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>updaterex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rex_balance<sp/>=<sp/>get_rex_balance_obj(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref><sp/>);</highlight></codeline>
<codeline lineno="4844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>4,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rex_balance[</highlight><highlight class="stringliteral">&quot;rex_maturities&quot;</highlight><highlight class="normal">].get_array().size()<sp/>);</highlight></codeline>
<codeline lineno="4845"><highlight class="normal"></highlight></codeline>
<codeline lineno="4846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::hours(1)<sp/>);</highlight></codeline>
<codeline lineno="4847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sellrex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/>asset(<sp/>3<sp/>*<sp/>rex_bucket.get_amount(),<sp/>rex_sym<sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rex_balance<sp/>=<sp/>get_rex_balance_obj(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref><sp/>);</highlight></codeline>
<codeline lineno="4849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>4,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rex_balance[</highlight><highlight class="stringliteral">&quot;rex_maturities&quot;</highlight><highlight class="normal">].get_array().size()<sp/>);</highlight></codeline>
<codeline lineno="4850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>rex_bucket.get_amount(),<sp/><sp/><sp/><sp/><sp/>rex_balance[</highlight><highlight class="stringliteral">&quot;matured_rex&quot;</highlight><highlight class="normal">].as&lt;int64_t&gt;()<sp/>);</highlight></codeline>
<codeline lineno="4851"><highlight class="normal"></highlight></codeline>
<codeline lineno="4852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;insufficient<sp/>available<sp/>rex&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="4853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sellrex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/>asset(<sp/>2<sp/>*<sp/>rex_bucket.get_amount(),<sp/>rex_sym<sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sellrex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/>asset(<sp/>rex_bucket.get_amount(),<sp/>rex_sym<sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rex_balance<sp/>=<sp/>get_rex_balance_obj(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref><sp/>);</highlight></codeline>
<codeline lineno="4856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>4<sp/>*<sp/>rex_bucket.get_amount(),<sp/>rex_balance[</highlight><highlight class="stringliteral">&quot;rex_balance&quot;</highlight><highlight class="normal">].as&lt;asset&gt;().get_amount()<sp/>);</highlight></codeline>
<codeline lineno="4857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>4,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rex_balance[</highlight><highlight class="stringliteral">&quot;rex_maturities&quot;</highlight><highlight class="normal">].get_array().size()<sp/>);</highlight></codeline>
<codeline lineno="4858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rex_balance[</highlight><highlight class="stringliteral">&quot;matured_rex&quot;</highlight><highlight class="normal">].as&lt;int64_t&gt;()<sp/>);</highlight></codeline>
<codeline lineno="4859"><highlight class="normal"></highlight></codeline>
<codeline lineno="4860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::hours(23)<sp/>);</highlight></codeline>
<codeline lineno="4861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>updaterex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rex_balance<sp/>=<sp/>get_rex_balance_obj(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref><sp/>);</highlight></codeline>
<codeline lineno="4863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>3,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rex_balance[</highlight><highlight class="stringliteral">&quot;rex_maturities&quot;</highlight><highlight class="normal">].get_array().size()<sp/>);</highlight></codeline>
<codeline lineno="4864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>rex_bucket.get_amount(),<sp/><sp/><sp/><sp/><sp/>rex_balance[</highlight><highlight class="stringliteral">&quot;matured_rex&quot;</highlight><highlight class="normal">].as&lt;int64_t&gt;()<sp/>);</highlight></codeline>
<codeline lineno="4865"><highlight class="normal"></highlight></codeline>
<codeline lineno="4866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>consolidate(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rex_balance<sp/>=<sp/>get_rex_balance_obj(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref><sp/>);</highlight></codeline>
<codeline lineno="4868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rex_balance[</highlight><highlight class="stringliteral">&quot;rex_maturities&quot;</highlight><highlight class="normal">].get_array().size()<sp/>);</highlight></codeline>
<codeline lineno="4869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rex_balance[</highlight><highlight class="stringliteral">&quot;matured_rex&quot;</highlight><highlight class="normal">].as&lt;int64_t&gt;()<sp/>);</highlight></codeline>
<codeline lineno="4870"><highlight class="normal"></highlight></codeline>
<codeline lineno="4871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::days(3)<sp/>);</highlight></codeline>
<codeline lineno="4872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;insufficient<sp/>available<sp/>rex&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="4873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sellrex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/>asset(<sp/>4<sp/>*<sp/>rex_bucket.get_amount(),<sp/>rex_sym<sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::hours(24<sp/>+<sp/>20)<sp/>);</highlight></codeline>
<codeline lineno="4875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sellrex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/>asset(<sp/>4<sp/>*<sp/>rex_bucket.get_amount(),<sp/>rex_sym<sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rex_balance<sp/>=<sp/>get_rex_balance_obj(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref><sp/>);</highlight></codeline>
<codeline lineno="4877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rex_balance[</highlight><highlight class="stringliteral">&quot;rex_balance&quot;</highlight><highlight class="normal">].as&lt;asset&gt;().get_amount()<sp/>);</highlight></codeline>
<codeline lineno="4878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rex_balance[</highlight><highlight class="stringliteral">&quot;rex_maturities&quot;</highlight><highlight class="normal">].get_array().size()<sp/>);</highlight></codeline>
<codeline lineno="4879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rex_balance[</highlight><highlight class="stringliteral">&quot;matured_rex&quot;</highlight><highlight class="normal">].as&lt;int64_t&gt;()<sp/>);</highlight></codeline>
<codeline lineno="4880"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4881"><highlight class="normal"></highlight></codeline>
<codeline lineno="4882"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>payment1<sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;250000.0000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>payment2<sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;10000.0000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>rex_bucket1(<sp/>rex_ratio<sp/>*<sp/>payment1.get_amount(),<sp/>rex_sym<sp/>);</highlight></codeline>
<codeline lineno="4886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>rex_bucket2(<sp/>rex_ratio<sp/>*<sp/>payment2.get_amount(),<sp/>rex_sym<sp/>);</highlight></codeline>
<codeline lineno="4887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>tot_rex<sp/>=<sp/>rex_bucket1<sp/>+<sp/>rex_bucket2;</highlight></codeline>
<codeline lineno="4888"><highlight class="normal"></highlight></codeline>
<codeline lineno="4889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>buyrex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/>payment1<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::days(3)<sp/>);</highlight></codeline>
<codeline lineno="4891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>buyrex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/>payment2<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::days(2)<sp/>);</highlight></codeline>
<codeline lineno="4893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>updaterex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4894"><highlight class="normal"></highlight></codeline>
<codeline lineno="4895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>rex_balance<sp/>=<sp/>get_rex_balance_obj(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref><sp/>);</highlight></codeline>
<codeline lineno="4896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>tot_rex,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rex_balance[</highlight><highlight class="stringliteral">&quot;rex_balance&quot;</highlight><highlight class="normal">].as&lt;asset&gt;()<sp/>);</highlight></codeline>
<codeline lineno="4897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>rex_bucket1.get_amount(),<sp/>rex_balance[</highlight><highlight class="stringliteral">&quot;matured_rex&quot;</highlight><highlight class="normal">].as&lt;int64_t&gt;()<sp/>);</highlight></codeline>
<codeline lineno="4898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rentcpu(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;8000.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sellrex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/>asset(<sp/>rex_bucket1.get_amount()<sp/>-<sp/>20,<sp/>rex_sym<sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rex_balance<sp/>=<sp/>get_rex_balance_obj(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref><sp/>);</highlight></codeline>
<codeline lineno="4901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>rex_bucket1.get_amount(),<sp/>get_rex_order(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref><sp/>)[</highlight><highlight class="stringliteral">&quot;rex_requested&quot;</highlight><highlight class="normal">].as&lt;asset&gt;().get_amount()<sp/>+<sp/>20<sp/>);</highlight></codeline>
<codeline lineno="4902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>tot_rex,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rex_balance[</highlight><highlight class="stringliteral">&quot;rex_balance&quot;</highlight><highlight class="normal">].as&lt;asset&gt;()<sp/>);</highlight></codeline>
<codeline lineno="4903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>rex_bucket1.get_amount(),<sp/>rex_balance[</highlight><highlight class="stringliteral">&quot;matured_rex&quot;</highlight><highlight class="normal">].as&lt;int64_t&gt;()<sp/>);</highlight></codeline>
<codeline lineno="4904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>consolidate(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rex_balance<sp/>=<sp/>get_rex_balance_obj(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref><sp/>);</highlight></codeline>
<codeline lineno="4906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>rex_bucket1.get_amount(),<sp/>rex_balance[</highlight><highlight class="stringliteral">&quot;matured_rex&quot;</highlight><highlight class="normal">].as&lt;int64_t&gt;()<sp/>+<sp/>20<sp/>);</highlight></codeline>
<codeline lineno="4907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cancelrexorder(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>consolidate(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rex_balance<sp/>=<sp/>get_rex_balance_obj(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref><sp/>);</highlight></codeline>
<codeline lineno="4910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rex_balance[</highlight><highlight class="stringliteral">&quot;matured_rex&quot;</highlight><highlight class="normal">].as&lt;int64_t&gt;()<sp/>);</highlight></codeline>
<codeline lineno="4911"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4912"><highlight class="normal"></highlight></codeline>
<codeline lineno="4913"><highlight class="normal">}<sp/><ref refid="eosio_8system__tests_8cpp_1a057cb719bfa291fae56dc6ba5fa7a8d1" kindref="member">FC_LOG_AND_RETHROW</ref>()</highlight></codeline>
<codeline lineno="4914"><highlight class="normal"></highlight></codeline>
<codeline lineno="4915"><highlight class="normal"></highlight></codeline>
<codeline lineno="4916"><highlight class="normal"><ref refid="eosio_8system__tests_8cpp_1a8a1841911da283583ec346df954d73a1" kindref="member">BOOST_FIXTURE_TEST_CASE</ref>(<sp/>rex_savings,<sp/><ref refid="classeosio__system_1_1eosio__system__tester" kindref="compound">eosio_system_tester</ref><sp/>)<sp/><ref refid="eosio_8system__tests_8cpp_1ae89aac94d502abdd3c8d055174c221fc" kindref="member">try</ref><sp/>{</highlight></codeline>
<codeline lineno="4917"><highlight class="normal"></highlight></codeline>
<codeline lineno="4918"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>init_balance<sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;100000.0000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4919"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;account_name&gt;<sp/><ref refid="structaccounts" kindref="compound">accounts</ref><sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;aliceaccount&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;bobbyaccount&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;carolaccount&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;emilyaccount&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;frankaccount&quot;</highlight><highlight class="normal">_n<sp/>};</highlight></codeline>
<codeline lineno="4920"><highlight class="normal"><sp/><sp/><sp/>account_name<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>=<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>[0],<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref><sp/>=<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>[1],<sp/><ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref><sp/>=<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>[2],<sp/>emily<sp/>=<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>[3],<sp/>frank<sp/>=<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>[4];</highlight></codeline>
<codeline lineno="4921"><highlight class="normal"><sp/><sp/><sp/>setup_rex_accounts(<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>,<sp/>init_balance<sp/>);</highlight></codeline>
<codeline lineno="4922"><highlight class="normal"></highlight></codeline>
<codeline lineno="4923"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>rex_ratio<sp/>=<sp/>10000;</highlight></codeline>
<codeline lineno="4924"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>symbol<sp/><sp/>rex_sym(<sp/>SY(4,<sp/>REX)<sp/>);</highlight></codeline>
<codeline lineno="4925"><highlight class="normal"></highlight></codeline>
<codeline lineno="4926"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>payment1<sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;14.8000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>payment2<sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;15.2000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>payment<sp/><sp/>=<sp/>payment1<sp/>+<sp/>payment2;</highlight></codeline>
<codeline lineno="4930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>rex_bucket(<sp/>rex_ratio<sp/>*<sp/>payment.get_amount(),<sp/>rex_sym<sp/>);</highlight></codeline>
<codeline lineno="4931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>uint8_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>8;<sp/>++i<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>buyrex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/>payment1<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::hours(12)<sp/>);</highlight></codeline>
<codeline lineno="4934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>buyrex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/>payment2<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::hours(14)<sp/>);</highlight></codeline>
<codeline lineno="4936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4937"><highlight class="normal"></highlight></codeline>
<codeline lineno="4938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>rex_balance<sp/>=<sp/>get_rex_balance_obj(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>);</highlight></codeline>
<codeline lineno="4939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>8<sp/>*<sp/>rex_bucket.get_amount(),<sp/>rex_balance[</highlight><highlight class="stringliteral">&quot;rex_balance&quot;</highlight><highlight class="normal">].as&lt;asset&gt;().get_amount()<sp/>);</highlight></codeline>
<codeline lineno="4940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>5,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rex_balance[</highlight><highlight class="stringliteral">&quot;rex_maturities&quot;</highlight><highlight class="normal">].get_array().size()<sp/>);</highlight></codeline>
<codeline lineno="4941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>4<sp/>*<sp/>rex_bucket.get_amount(),<sp/>rex_balance[</highlight><highlight class="stringliteral">&quot;matured_rex&quot;</highlight><highlight class="normal">].as&lt;int64_t&gt;()<sp/>);</highlight></codeline>
<codeline lineno="4942"><highlight class="normal"></highlight></codeline>
<codeline lineno="4943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mvtosavings(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/>asset(<sp/>8<sp/>*<sp/>rex_bucket.get_amount(),<sp/>rex_sym<sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rex_balance<sp/>=<sp/>get_rex_balance_obj(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>);</highlight></codeline>
<codeline lineno="4945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rex_balance[</highlight><highlight class="stringliteral">&quot;rex_maturities&quot;</highlight><highlight class="normal">].get_array().size()<sp/>);</highlight></codeline>
<codeline lineno="4946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rex_balance[</highlight><highlight class="stringliteral">&quot;matured_rex&quot;</highlight><highlight class="normal">].as&lt;int64_t&gt;()<sp/>);</highlight></codeline>
<codeline lineno="4947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::days(1000)<sp/>);</highlight></codeline>
<codeline lineno="4948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;insufficient<sp/>available<sp/>rex&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="4949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sellrex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/>asset::from_string(<sp/></highlight><highlight class="stringliteral">&quot;1.0000<sp/>REX&quot;</highlight><highlight class="normal"><sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mvfrsavings(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/>asset::from_string(<sp/></highlight><highlight class="stringliteral">&quot;10.0000<sp/>REX&quot;</highlight><highlight class="normal"><sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rex_balance<sp/>=<sp/>get_rex_balance_obj(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>);</highlight></codeline>
<codeline lineno="4952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rex_balance[</highlight><highlight class="stringliteral">&quot;rex_maturities&quot;</highlight><highlight class="normal">].get_array().size()<sp/>);</highlight></codeline>
<codeline lineno="4953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::days(3)<sp/>);</highlight></codeline>
<codeline lineno="4954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;insufficient<sp/>available<sp/>rex&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="4955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sellrex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/>asset::from_string(<sp/></highlight><highlight class="stringliteral">&quot;1.0000<sp/>REX&quot;</highlight><highlight class="normal"><sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aa1213f0f2c7a53ea968859f3cab582c3" kindref="member">produce_blocks</ref>(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="4957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::days(2)<sp/>);</highlight></codeline>
<codeline lineno="4958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;insufficient<sp/>available<sp/>rex&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="4959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sellrex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/>asset::from_string(<sp/></highlight><highlight class="stringliteral">&quot;10.0001<sp/>REX&quot;</highlight><highlight class="normal"><sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sellrex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/>asset::from_string(<sp/></highlight><highlight class="stringliteral">&quot;10.0000<sp/>REX&quot;</highlight><highlight class="normal"><sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rex_balance<sp/>=<sp/>get_rex_balance_obj(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>);</highlight></codeline>
<codeline lineno="4962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rex_balance[</highlight><highlight class="stringliteral">&quot;rex_maturities&quot;</highlight><highlight class="normal">].get_array().size()<sp/>);</highlight></codeline>
<codeline lineno="4963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::days(100)<sp/>);</highlight></codeline>
<codeline lineno="4964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;insufficient<sp/>available<sp/>rex&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="4965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sellrex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/>asset::from_string(<sp/></highlight><highlight class="stringliteral">&quot;0.0001<sp/>REX&quot;</highlight><highlight class="normal"><sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mvfrsavings(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/>get_rex_balance(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::days(5)<sp/>);</highlight></codeline>
<codeline lineno="4968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sellrex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/>get_rex_balance(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4969"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4970"><highlight class="normal"></highlight></codeline>
<codeline lineno="4971"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>payment<sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;20.0000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>rex_bucket(<sp/>rex_ratio<sp/>*<sp/>payment.get_amount(),<sp/>rex_sym<sp/>);</highlight></codeline>
<codeline lineno="4974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>uint8_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>5;<sp/>++i<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="4975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::hours(24)<sp/>);</highlight></codeline>
<codeline lineno="4976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>buyrex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/>payment<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4978"><highlight class="normal"></highlight></codeline>
<codeline lineno="4979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>rex_balance<sp/>=<sp/>get_rex_balance_obj(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref><sp/>);</highlight></codeline>
<codeline lineno="4980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>5<sp/>*<sp/>rex_bucket.get_amount(),<sp/>rex_balance[</highlight><highlight class="stringliteral">&quot;rex_balance&quot;</highlight><highlight class="normal">].as&lt;asset&gt;().get_amount()<sp/>);</highlight></codeline>
<codeline lineno="4981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>5,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rex_balance[</highlight><highlight class="stringliteral">&quot;rex_maturities&quot;</highlight><highlight class="normal">].get_array().size()<sp/>);</highlight></codeline>
<codeline lineno="4982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rex_balance[</highlight><highlight class="stringliteral">&quot;matured_rex&quot;</highlight><highlight class="normal">].as&lt;int64_t&gt;()<sp/>);</highlight></codeline>
<codeline lineno="4983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mvtosavings(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/>asset(<sp/>rex_bucket.get_amount()<sp/>/<sp/>2,<sp/>rex_sym<sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rex_balance<sp/>=<sp/>get_rex_balance_obj(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref><sp/>);</highlight></codeline>
<codeline lineno="4985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>6,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rex_balance[</highlight><highlight class="stringliteral">&quot;rex_maturities&quot;</highlight><highlight class="normal">].get_array().size()<sp/>);</highlight></codeline>
<codeline lineno="4986"><highlight class="normal"></highlight></codeline>
<codeline lineno="4987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mvtosavings(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/>asset(<sp/>rex_bucket.get_amount()<sp/>/<sp/>2,<sp/>rex_sym<sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rex_balance<sp/>=<sp/>get_rex_balance_obj(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref><sp/>);</highlight></codeline>
<codeline lineno="4989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>5,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rex_balance[</highlight><highlight class="stringliteral">&quot;rex_maturities&quot;</highlight><highlight class="normal">].get_array().size()<sp/>);</highlight></codeline>
<codeline lineno="4990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::days(1)<sp/>);</highlight></codeline>
<codeline lineno="4991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sellrex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/>rex_bucket<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rex_balance<sp/>=<sp/>get_rex_balance_obj(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref><sp/>);</highlight></codeline>
<codeline lineno="4993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>4,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rex_balance[</highlight><highlight class="stringliteral">&quot;rex_maturities&quot;</highlight><highlight class="normal">].get_array().size()<sp/>);</highlight></codeline>
<codeline lineno="4994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rex_balance[</highlight><highlight class="stringliteral">&quot;matured_rex&quot;</highlight><highlight class="normal">].as&lt;int64_t&gt;()<sp/>);</highlight></codeline>
<codeline lineno="4995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>4<sp/>*<sp/>rex_bucket.get_amount(),<sp/>rex_balance[</highlight><highlight class="stringliteral">&quot;rex_balance&quot;</highlight><highlight class="normal">].as&lt;asset&gt;().get_amount()<sp/>);</highlight></codeline>
<codeline lineno="4996"><highlight class="normal"></highlight></codeline>
<codeline lineno="4997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mvtosavings(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/>asset(<sp/>3<sp/>*<sp/>rex_bucket.get_amount()<sp/>/<sp/>2,<sp/>rex_sym<sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rex_balance<sp/>=<sp/>get_rex_balance_obj(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref><sp/>);</highlight></codeline>
<codeline lineno="4999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>3,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rex_balance[</highlight><highlight class="stringliteral">&quot;rex_maturities&quot;</highlight><highlight class="normal">].get_array().size()<sp/>);</highlight></codeline>
<codeline lineno="5000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;insufficient<sp/>available<sp/>rex&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="5001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sellrex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/>rex_bucket<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5002"><highlight class="normal"></highlight></codeline>
<codeline lineno="5003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::days(1)<sp/>);</highlight></codeline>
<codeline lineno="5004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sellrex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/>rex_bucket<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rex_balance<sp/>=<sp/>get_rex_balance_obj(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref><sp/>);</highlight></codeline>
<codeline lineno="5006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rex_balance[</highlight><highlight class="stringliteral">&quot;rex_maturities&quot;</highlight><highlight class="normal">].get_array().size()<sp/>);</highlight></codeline>
<codeline lineno="5007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rex_balance[</highlight><highlight class="stringliteral">&quot;matured_rex&quot;</highlight><highlight class="normal">].as&lt;int64_t&gt;()<sp/>);</highlight></codeline>
<codeline lineno="5008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>3<sp/>*<sp/>rex_bucket.get_amount(),<sp/>rex_balance[</highlight><highlight class="stringliteral">&quot;rex_balance&quot;</highlight><highlight class="normal">].as&lt;asset&gt;().get_amount()<sp/>);</highlight></codeline>
<codeline lineno="5009"><highlight class="normal"></highlight></codeline>
<codeline lineno="5010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::days(1)<sp/>);</highlight></codeline>
<codeline lineno="5011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;insufficient<sp/>available<sp/>rex&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="5012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sellrex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/>rex_bucket<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sellrex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/>asset(<sp/>rex_bucket.get_amount()<sp/>/<sp/>2,<sp/>rex_sym<sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rex_balance<sp/>=<sp/>get_rex_balance_obj(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref><sp/>);</highlight></codeline>
<codeline lineno="5015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rex_balance[</highlight><highlight class="stringliteral">&quot;rex_maturities&quot;</highlight><highlight class="normal">].get_array().size()<sp/>);</highlight></codeline>
<codeline lineno="5016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rex_balance[</highlight><highlight class="stringliteral">&quot;matured_rex&quot;</highlight><highlight class="normal">].as&lt;int64_t&gt;()<sp/>);</highlight></codeline>
<codeline lineno="5017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>5<sp/>*<sp/>rex_bucket.get_amount(),<sp/>2<sp/>*<sp/>rex_balance[</highlight><highlight class="stringliteral">&quot;rex_balance&quot;</highlight><highlight class="normal">].as&lt;asset&gt;().get_amount()<sp/>);</highlight></codeline>
<codeline lineno="5018"><highlight class="normal"></highlight></codeline>
<codeline lineno="5019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::days(20)<sp/>);</highlight></codeline>
<codeline lineno="5020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;insufficient<sp/>available<sp/>rex&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="5021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sellrex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/>rex_bucket<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;insufficient<sp/>REX<sp/>in<sp/>savings&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="5023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mvfrsavings(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/>asset(<sp/>3<sp/>*<sp/>rex_bucket.get_amount(),<sp/>rex_sym<sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mvfrsavings(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/>rex_bucket<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_rex_balance_obj(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref><sp/>)[</highlight><highlight class="stringliteral">&quot;rex_maturities&quot;</highlight><highlight class="normal">].get_array().size()<sp/>);</highlight></codeline>
<codeline lineno="5026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;insufficient<sp/>REX<sp/>balance&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="5027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mvtosavings(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/>asset(<sp/>3<sp/>*<sp/>rex_bucket.get_amount()<sp/>/<sp/>2,<sp/>rex_sym<sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::days(1)<sp/>);</highlight></codeline>
<codeline lineno="5029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mvfrsavings(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/>rex_bucket<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>3,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_rex_balance_obj(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref><sp/>)[</highlight><highlight class="stringliteral">&quot;rex_maturities&quot;</highlight><highlight class="normal">].get_array().size()<sp/>);</highlight></codeline>
<codeline lineno="5031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::days(4)<sp/>);</highlight></codeline>
<codeline lineno="5032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sellrex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/>rex_bucket<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;insufficient<sp/>available<sp/>rex&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="5034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sellrex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/>rex_bucket<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::days(1)<sp/>);</highlight></codeline>
<codeline lineno="5036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sellrex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/>rex_bucket<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rex_balance<sp/>=<sp/>get_rex_balance_obj(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref><sp/>);</highlight></codeline>
<codeline lineno="5038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rex_balance[</highlight><highlight class="stringliteral">&quot;rex_maturities&quot;</highlight><highlight class="normal">].get_array().size()<sp/>);</highlight></codeline>
<codeline lineno="5039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>rex_bucket.get_amount()<sp/>/<sp/>2,<sp/>rex_balance[</highlight><highlight class="stringliteral">&quot;rex_balance&quot;</highlight><highlight class="normal">].as&lt;asset&gt;().get_amount()<sp/>);</highlight></codeline>
<codeline lineno="5040"><highlight class="normal"></highlight></codeline>
<codeline lineno="5041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mvfrsavings(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/>asset(<sp/>rex_bucket.get_amount()<sp/>/<sp/>4,<sp/>rex_sym<sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::days(2)<sp/>);</highlight></codeline>
<codeline lineno="5043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mvfrsavings(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/>asset(<sp/>rex_bucket.get_amount()<sp/>/<sp/>8,<sp/>rex_sym<sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>3,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_rex_balance_obj(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref><sp/>)[</highlight><highlight class="stringliteral">&quot;rex_maturities&quot;</highlight><highlight class="normal">].get_array().size()<sp/>);</highlight></codeline>
<codeline lineno="5045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>consolidate(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_rex_balance_obj(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref><sp/>)[</highlight><highlight class="stringliteral">&quot;rex_maturities&quot;</highlight><highlight class="normal">].get_array().size()<sp/>);</highlight></codeline>
<codeline lineno="5047"><highlight class="normal"></highlight></codeline>
<codeline lineno="5048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::days(5)<sp/>);</highlight></codeline>
<codeline lineno="5049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;insufficient<sp/>available<sp/>rex&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="5050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sellrex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/>asset(<sp/>rex_bucket.get_amount()<sp/>/<sp/>2,<sp/>rex_sym<sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sellrex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/>asset(<sp/>3<sp/>*<sp/>rex_bucket.get_amount()<sp/>/<sp/>8,<sp/>rex_sym<sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rex_balance<sp/>=<sp/>get_rex_balance_obj(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref><sp/>);</highlight></codeline>
<codeline lineno="5053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rex_balance[</highlight><highlight class="stringliteral">&quot;rex_maturities&quot;</highlight><highlight class="normal">].get_array().size()<sp/>);</highlight></codeline>
<codeline lineno="5054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rex_balance[</highlight><highlight class="stringliteral">&quot;matured_rex&quot;</highlight><highlight class="normal">].as&lt;int64_t&gt;()<sp/>);</highlight></codeline>
<codeline lineno="5055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>rex_bucket.get_amount()<sp/>/<sp/>8,<sp/>rex_balance[</highlight><highlight class="stringliteral">&quot;rex_balance&quot;</highlight><highlight class="normal">].as&lt;asset&gt;().get_amount()<sp/>);</highlight></codeline>
<codeline lineno="5056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mvfrsavings(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/>get_rex_balance(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref><sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::days(5)<sp/>);</highlight></codeline>
<codeline lineno="5058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sellrex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/>get_rex_balance(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref><sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5059"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5060"><highlight class="normal"></highlight></codeline>
<codeline lineno="5061"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>payment<sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;40000.0000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>rex_bucket_amount<sp/>=<sp/>rex_ratio<sp/>*<sp/>payment.get_amount();</highlight></codeline>
<codeline lineno="5064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>rex_bucket(<sp/>rex_bucket_amount,<sp/>rex_sym<sp/>);</highlight></codeline>
<codeline lineno="5065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/>buyrex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/>payment<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>rex_bucket,<sp/>get_rex_balance(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>rex_bucket,<sp/>get_rex_pool()[</highlight><highlight class="stringliteral">&quot;total_rex&quot;</highlight><highlight class="normal">].as&lt;asset&gt;()<sp/>);</highlight></codeline>
<codeline lineno="5068"><highlight class="normal"></highlight></codeline>
<codeline lineno="5069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::days(5)<sp/>);</highlight></codeline>
<codeline lineno="5070"><highlight class="normal"></highlight></codeline>
<codeline lineno="5071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rentcpu(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;3000.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sellrex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/>asset(<sp/>9<sp/>*<sp/>rex_bucket_amount<sp/>/<sp/>10,<sp/>rex_sym<sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>rex_bucket,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_rex_balance(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mvtosavings(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/>asset(<sp/>rex_bucket_amount<sp/>/<sp/>10,<sp/>rex_sym<sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;insufficient<sp/>REX<sp/>balance&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="5076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mvtosavings(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/>asset(<sp/>rex_bucket_amount<sp/>/<sp/>10,<sp/>rex_sym<sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cancelrexorder(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mvtosavings(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/>asset(<sp/>rex_bucket_amount<sp/>/<sp/>10,<sp/>rex_sym<sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>rb<sp/>=<sp/>get_rex_balance_obj(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>);</highlight></codeline>
<codeline lineno="5080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>rb[</highlight><highlight class="stringliteral">&quot;matured_rex&quot;</highlight><highlight class="normal">].as&lt;int64_t&gt;(),<sp/>8<sp/>*<sp/>rex_bucket_amount<sp/>/<sp/>10<sp/>);</highlight></codeline>
<codeline lineno="5081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mvfrsavings(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/>asset(<sp/>2<sp/>*<sp/>rex_bucket_amount<sp/>/<sp/>10,<sp/>rex_sym<sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::days(31)<sp/>);</highlight></codeline>
<codeline lineno="5083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sellrex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/>get_rex_balance(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5084"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5085"><highlight class="normal"></highlight></codeline>
<codeline lineno="5086"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/><sp/><sp/>payment<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;250.0000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/><sp/><sp/>half_payment<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;125.0000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>rex_bucket_amount<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>rex_ratio<sp/>*<sp/>payment.get_amount();</highlight></codeline>
<codeline lineno="5090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>half_rex_bucket_amount<sp/>=<sp/>rex_bucket_amount<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="5091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/><sp/><sp/>rex_bucket(<sp/>rex_bucket_amount,<sp/>rex_sym<sp/>);</highlight></codeline>
<codeline lineno="5092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/><sp/><sp/>half_rex_bucket(<sp/>half_rex_bucket_amount,<sp/>rex_sym<sp/>);</highlight></codeline>
<codeline lineno="5093"><highlight class="normal"></highlight></codeline>
<codeline lineno="5094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buyrex(<sp/><ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref>,<sp/>payment<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>rex_bucket,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_rex_balance(<sp/><ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>rex_balance<sp/>=<sp/>get_rex_balance_obj(<sp/><ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref><sp/>);</highlight></codeline>
<codeline lineno="5097"><highlight class="normal"></highlight></codeline>
<codeline lineno="5098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rex_balance[</highlight><highlight class="stringliteral">&quot;rex_maturities&quot;</highlight><highlight class="normal">].get_array().size()<sp/>);</highlight></codeline>
<codeline lineno="5099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rex_balance[</highlight><highlight class="stringliteral">&quot;matured_rex&quot;</highlight><highlight class="normal">].as&lt;int64_t&gt;()<sp/>);</highlight></codeline>
<codeline lineno="5100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::days(1)<sp/>);</highlight></codeline>
<codeline lineno="5101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buyrex(<sp/><ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref>,<sp/>payment<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rex_balance<sp/>=<sp/>get_rex_balance_obj(<sp/><ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref><sp/>);</highlight></codeline>
<codeline lineno="5103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rex_balance[</highlight><highlight class="stringliteral">&quot;rex_maturities&quot;</highlight><highlight class="normal">].get_array().size()<sp/>);</highlight></codeline>
<codeline lineno="5104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rex_balance[</highlight><highlight class="stringliteral">&quot;matured_rex&quot;</highlight><highlight class="normal">].as&lt;int64_t&gt;()<sp/>);</highlight></codeline>
<codeline lineno="5105"><highlight class="normal"></highlight></codeline>
<codeline lineno="5106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mvtosavings(<sp/><ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref>,<sp/>half_rex_bucket<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rex_balance<sp/>=<sp/>get_rex_balance_obj(<sp/><ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref><sp/>);</highlight></codeline>
<codeline lineno="5108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>3,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rex_balance[</highlight><highlight class="stringliteral">&quot;rex_maturities&quot;</highlight><highlight class="normal">].get_array().size()<sp/>);</highlight></codeline>
<codeline lineno="5109"><highlight class="normal"></highlight></codeline>
<codeline lineno="5110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buyrex(<sp/><ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref>,<sp/>half_payment<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rex_balance<sp/>=<sp/>get_rex_balance_obj(<sp/><ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref><sp/>);</highlight></codeline>
<codeline lineno="5112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>3,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rex_balance[</highlight><highlight class="stringliteral">&quot;rex_maturities&quot;</highlight><highlight class="normal">].get_array().size()<sp/>);</highlight></codeline>
<codeline lineno="5113"><highlight class="normal"></highlight></codeline>
<codeline lineno="5114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::days(5)<sp/>);</highlight></codeline>
<codeline lineno="5115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;asset<sp/>must<sp/>be<sp/>a<sp/>positive<sp/>amount<sp/>of<sp/>(REX,<sp/>4)&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="5116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mvfrsavings(<sp/><ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref>,<sp/>asset::from_string(</highlight><highlight class="stringliteral">&quot;0.0000<sp/>REX&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;asset<sp/>must<sp/>be<sp/>a<sp/>positive<sp/>amount<sp/>of<sp/>(REX,<sp/>4)&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="5118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mvfrsavings(<sp/><ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref>,<sp/>asset::from_string(</highlight><highlight class="stringliteral">&quot;1.0000<sp/>RND&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mvfrsavings(<sp/><ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref>,<sp/>half_rex_bucket<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;insufficient<sp/>REX<sp/>in<sp/>savings&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="5121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mvfrsavings(<sp/><ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref>,<sp/>asset::from_string(</highlight><highlight class="stringliteral">&quot;0.0001<sp/>REX&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rex_balance<sp/>=<sp/>get_rex_balance_obj(<sp/><ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref><sp/>);</highlight></codeline>
<codeline lineno="5123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rex_balance[</highlight><highlight class="stringliteral">&quot;rex_maturities&quot;</highlight><highlight class="normal">].get_array().size()<sp/>);</highlight></codeline>
<codeline lineno="5124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>5<sp/>*<sp/>half_rex_bucket_amount,<sp/><sp/>rex_balance[</highlight><highlight class="stringliteral">&quot;rex_balance&quot;</highlight><highlight class="normal">].as&lt;asset&gt;().get_amount()<sp/>);</highlight></codeline>
<codeline lineno="5125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>2<sp/>*<sp/>rex_bucket_amount,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>rex_balance[</highlight><highlight class="stringliteral">&quot;matured_rex&quot;</highlight><highlight class="normal">].as&lt;int64_t&gt;()<sp/>);</highlight></codeline>
<codeline lineno="5126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::days(5)<sp/>);</highlight></codeline>
<codeline lineno="5127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sellrex(<sp/><ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref>,<sp/>get_rex_balance(<sp/><ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5128"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5129"><highlight class="normal"></highlight></codeline>
<codeline lineno="5130"><highlight class="normal">}<sp/><ref refid="eosio_8system__tests_8cpp_1a057cb719bfa291fae56dc6ba5fa7a8d1" kindref="member">FC_LOG_AND_RETHROW</ref>()</highlight></codeline>
<codeline lineno="5131"><highlight class="normal"></highlight></codeline>
<codeline lineno="5132"><highlight class="normal"></highlight></codeline>
<codeline lineno="5133"><highlight class="normal"><ref refid="eosio_8system__tests_8cpp_1a8a1841911da283583ec346df954d73a1" kindref="member">BOOST_FIXTURE_TEST_CASE</ref>(<sp/>update_rex,<sp/><ref refid="classeosio__system_1_1eosio__system__tester" kindref="compound">eosio_system_tester</ref>,<sp/>*<sp/>boost::unit_test::tolerance(1e-10)<sp/>)<sp/><ref refid="eosio_8system__tests_8cpp_1ae89aac94d502abdd3c8d055174c221fc" kindref="member">try</ref><sp/>{</highlight></codeline>
<codeline lineno="5134"><highlight class="normal"></highlight></codeline>
<codeline lineno="5135"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>init_balance<sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;30000.0000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5136"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;account_name&gt;<sp/><ref refid="structaccounts" kindref="compound">accounts</ref><sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;aliceaccount&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;bobbyaccount&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;carolaccount&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;emilyaccount&quot;</highlight><highlight class="normal">_n<sp/>};</highlight></codeline>
<codeline lineno="5137"><highlight class="normal"><sp/><sp/><sp/>account_name<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>=<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>[0],<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref><sp/>=<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>[1],<sp/><ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref><sp/>=<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>[2],<sp/>emily<sp/>=<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>[3];</highlight></codeline>
<codeline lineno="5138"><highlight class="normal"><sp/><sp/><sp/>setup_rex_accounts(<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>,<sp/>init_balance<sp/>);</highlight></codeline>
<codeline lineno="5139"><highlight class="normal"></highlight></codeline>
<codeline lineno="5140"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>init_stake<sp/>=<sp/>get_voter_info(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>)[</highlight><highlight class="stringliteral">&quot;staked&quot;</highlight><highlight class="normal">].as&lt;int64_t&gt;();</highlight></codeline>
<codeline lineno="5141"><highlight class="normal"></highlight></codeline>
<codeline lineno="5142"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>alice<sp/>buys<sp/>rex</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5143"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>payment<sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;25000.0000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5144"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buyrex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/>payment<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5145"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>payment,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_rex_vote_stake(<ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>)<sp/>);</highlight></codeline>
<codeline lineno="5146"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>get_rex_vote_stake(<ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>).get_amount(),<sp/>get_voter_info(<ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>)[</highlight><highlight class="stringliteral">&quot;staked&quot;</highlight><highlight class="normal">].as&lt;int64_t&gt;()<sp/>-<sp/>init_stake<sp/>);</highlight></codeline>
<codeline lineno="5147"><highlight class="normal"></highlight></codeline>
<codeline lineno="5148"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>emily<sp/>rents<sp/>cpu</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5149"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>fee<sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;50.0000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5150"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rentcpu(<sp/>emily,<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/>fee<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5151"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>updaterex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5152"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>payment,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_rex_vote_stake(<ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>)<sp/>);</highlight></codeline>
<codeline lineno="5153"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>get_rex_vote_stake(<ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>).get_amount(),<sp/>get_voter_info(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>)[</highlight><highlight class="stringliteral">&quot;staked&quot;</highlight><highlight class="normal">].as&lt;int64_t&gt;()<sp/>-<sp/>init_stake<sp/>);</highlight></codeline>
<codeline lineno="5154"><highlight class="normal"></highlight></codeline>
<codeline lineno="5155"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>accounts<sp/>{defproducera,<sp/>defproducerb,<sp/>...,<sp/>defproducerz}<sp/>and<sp/>register<sp/>as<sp/>producers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5156"><highlight class="normal"><sp/><sp/><sp/>std::vector&lt;account_name&gt;<sp/>producer_names;</highlight></codeline>
<codeline lineno="5157"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>producer_names.reserve(</highlight><highlight class="charliteral">&apos;z&apos;</highlight><highlight class="normal"><sp/>-<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal"><sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="5159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>root(</highlight><highlight class="stringliteral">&quot;defproducer&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c<sp/>=<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">;<sp/>c<sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;z&apos;</highlight><highlight class="normal">;<sp/>++c<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>producer_names.emplace_back(root<sp/>+<sp/>std::string(1,<sp/>c));</highlight></codeline>
<codeline lineno="5162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5163"><highlight class="normal"></highlight></codeline>
<codeline lineno="5164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setup_producer_accounts(producer_names);</highlight></codeline>
<codeline lineno="5165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>p:<sp/>producer_names<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>regproducer(p)<sp/>);</highlight></codeline>
<codeline lineno="5167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>0<sp/>==<sp/>get_producer_info(p)[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as&lt;double&gt;()<sp/>);</highlight></codeline>
<codeline lineno="5168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5169"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5170"><highlight class="normal"></highlight></codeline>
<codeline lineno="5171"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;voter<sp/>holding<sp/>REX<sp/>tokens<sp/>must<sp/>vote<sp/>for<sp/>at<sp/>least<sp/>21<sp/>producers<sp/>or<sp/>for<sp/>a<sp/>proxy&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="5172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vote(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/>std::vector&lt;account_name&gt;(producer_names.begin(),<sp/>producer_names.begin()<sp/>+<sp/>20)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5173"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),</highlight></codeline>
<codeline lineno="5174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vote(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/>std::vector&lt;account_name&gt;(producer_names.begin(),<sp/>producer_names.begin()<sp/>+<sp/>21)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5175"><highlight class="normal"></highlight></codeline>
<codeline lineno="5176"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>stake2votes(<sp/>asset(<sp/>get_voter_info(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>)[</highlight><highlight class="stringliteral">&quot;staked&quot;</highlight><highlight class="normal">].as&lt;int64_t&gt;(),<sp/>symbol{<ref refid="test__symbol_8hpp_1af288246ded3673b7a516aeaaca84ab01" kindref="member">CORE_SYM</ref>}<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="5177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>==<sp/>get_producer_info(producer_names[0])[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as&lt;double&gt;()<sp/>);</highlight></codeline>
<codeline lineno="5178"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>stake2votes(<sp/>asset(<sp/>get_voter_info(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>)[</highlight><highlight class="stringliteral">&quot;staked&quot;</highlight><highlight class="normal">].as&lt;int64_t&gt;(),<sp/>symbol{<ref refid="test__symbol_8hpp_1af288246ded3673b7a516aeaaca84ab01" kindref="member">CORE_SYM</ref>}<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="5179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>==<sp/>get_producer_info(producer_names[20])[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as&lt;double&gt;()<sp/>);</highlight></codeline>
<codeline lineno="5180"><highlight class="normal"></highlight></codeline>
<codeline lineno="5181"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>updaterex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5182"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::days(10)<sp/>);</highlight></codeline>
<codeline lineno="5183"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>get_producer_info(producer_names[20])[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as&lt;double&gt;()</highlight></codeline>
<codeline lineno="5184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;<sp/>stake2votes(<sp/>asset(<sp/>get_voter_info(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>)[</highlight><highlight class="stringliteral">&quot;staked&quot;</highlight><highlight class="normal">].as&lt;int64_t&gt;(),<sp/>symbol{<ref refid="test__symbol_8hpp_1af288246ded3673b7a516aeaaca84ab01" kindref="member">CORE_SYM</ref>}<sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5185"><highlight class="normal"></highlight></codeline>
<codeline lineno="5186"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>updaterex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5187"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>stake2votes(<sp/>asset(<sp/>get_voter_info(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>)[</highlight><highlight class="stringliteral">&quot;staked&quot;</highlight><highlight class="normal">].as&lt;int64_t&gt;(),<sp/>symbol{<ref refid="test__symbol_8hpp_1af288246ded3673b7a516aeaaca84ab01" kindref="member">CORE_SYM</ref>}<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="5188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>==<sp/>get_producer_info(producer_names[20])[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as&lt;double&gt;()<sp/>);</highlight></codeline>
<codeline lineno="5189"><highlight class="normal"></highlight></codeline>
<codeline lineno="5190"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::hours(19<sp/>*<sp/>24<sp/>+<sp/>23)<sp/>);</highlight></codeline>
<codeline lineno="5191"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rexexec(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/>1<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5192"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/><sp/><sp/>init_rex<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>get_rex_balance(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>);</highlight></codeline>
<codeline lineno="5193"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>current_rex_pool<sp/><sp/><sp/><sp/><sp/>=<sp/>get_rex_pool();</highlight></codeline>
<codeline lineno="5194"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>total_lendable<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>current_rex_pool[</highlight><highlight class="stringliteral">&quot;total_lendable&quot;</highlight><highlight class="normal">].as&lt;asset&gt;().get_amount();</highlight></codeline>
<codeline lineno="5195"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>total_rex<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>current_rex_pool[</highlight><highlight class="stringliteral">&quot;total_rex&quot;</highlight><highlight class="normal">].as&lt;asset&gt;().get_amount();</highlight></codeline>
<codeline lineno="5196"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>init_alice_rex_stake<sp/>=<sp/>(<sp/>eosio::chain::uint128_t(init_rex.get_amount())<sp/>*<sp/>total_lendable<sp/>)<sp/>/<sp/>total_rex;</highlight></codeline>
<codeline lineno="5197"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>rex_sell_amount(<sp/>get_rex_balance(<ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>).get_amount()<sp/>/<sp/>4,<sp/>symbol(<sp/>SY(4,REX)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5198"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sellrex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/>rex_sell_amount<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5199"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>init_rex,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_rex_balance(<ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>)<sp/>+<sp/>rex_sell_amount<sp/>);</highlight></codeline>
<codeline lineno="5200"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>3<sp/>*<sp/>init_alice_rex_stake,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>4<sp/>*<sp/>get_rex_vote_stake(<ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>).get_amount()<sp/>);</highlight></codeline>
<codeline lineno="5201"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>get_voter_info(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>)[</highlight><highlight class="stringliteral">&quot;staked&quot;</highlight><highlight class="normal">].as&lt;int64_t&gt;(),<sp/>init_stake<sp/>+<sp/>get_rex_vote_stake(<ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>).get_amount()<sp/>);</highlight></codeline>
<codeline lineno="5202"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>stake2votes(<sp/>asset(<sp/>get_voter_info(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>)[</highlight><highlight class="stringliteral">&quot;staked&quot;</highlight><highlight class="normal">].as&lt;int64_t&gt;(),<sp/>symbol{<ref refid="test__symbol_8hpp_1af288246ded3673b7a516aeaaca84ab01" kindref="member">CORE_SYM</ref>}<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="5203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>==<sp/>get_producer_info(producer_names[0])[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as&lt;double&gt;()<sp/>);</highlight></codeline>
<codeline lineno="5204"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::days(31)<sp/>);</highlight></codeline>
<codeline lineno="5205"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>sellrex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/>get_rex_balance(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5206"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_rex_balance(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>).get_amount()<sp/>);</highlight></codeline>
<codeline lineno="5207"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>vote(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/>{<sp/>producer_names[0],<sp/>producer_names[4]<sp/>}<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5208"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;must<sp/>vote<sp/>for<sp/>at<sp/>least<sp/>21<sp/>producers<sp/>or<sp/>for<sp/>a<sp/>proxy<sp/>before<sp/>buying<sp/>REX&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="5209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buyrex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5210"><highlight class="normal"></highlight></codeline>
<codeline lineno="5211"><highlight class="normal">}<sp/><ref refid="eosio_8system__tests_8cpp_1a057cb719bfa291fae56dc6ba5fa7a8d1" kindref="member">FC_LOG_AND_RETHROW</ref>()</highlight></codeline>
<codeline lineno="5212"><highlight class="normal"></highlight></codeline>
<codeline lineno="5213"><highlight class="normal"></highlight></codeline>
<codeline lineno="5214"><highlight class="normal"><ref refid="eosio_8system__tests_8cpp_1a8a1841911da283583ec346df954d73a1" kindref="member">BOOST_FIXTURE_TEST_CASE</ref>(<sp/>update_rex_vote,<sp/><ref refid="classeosio__system_1_1eosio__system__tester" kindref="compound">eosio_system_tester</ref>,<sp/>*<sp/>boost::unit_test::tolerance(1e-8)<sp/>)<sp/><ref refid="eosio_8system__tests_8cpp_1ae89aac94d502abdd3c8d055174c221fc" kindref="member">try</ref><sp/>{</highlight></codeline>
<codeline lineno="5215"><highlight class="normal"></highlight></codeline>
<codeline lineno="5216"><highlight class="normal"><sp/><sp/><sp/>cross_15_percent_threshold();</highlight></codeline>
<codeline lineno="5217"><highlight class="normal"></highlight></codeline>
<codeline lineno="5218"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>accounts<sp/>{defproducera,<sp/>defproducerb,<sp/>...,<sp/>defproducerz}<sp/>and<sp/>register<sp/>as<sp/>producers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5219"><highlight class="normal"><sp/><sp/><sp/>std::vector&lt;account_name&gt;<sp/>producer_names;</highlight></codeline>
<codeline lineno="5220"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>producer_names.reserve(</highlight><highlight class="charliteral">&apos;z&apos;</highlight><highlight class="normal"><sp/>-<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal"><sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="5222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>root(</highlight><highlight class="stringliteral">&quot;defproducer&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c<sp/>=<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">;<sp/>c<sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;z&apos;</highlight><highlight class="normal">;<sp/>++c<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>producer_names.emplace_back(root<sp/>+<sp/>std::string(1,<sp/>c));</highlight></codeline>
<codeline lineno="5225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5226"><highlight class="normal"></highlight></codeline>
<codeline lineno="5227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setup_producer_accounts(producer_names);</highlight></codeline>
<codeline lineno="5228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>p:<sp/>producer_names<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>regproducer(p)<sp/>);</highlight></codeline>
<codeline lineno="5230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>0<sp/>==<sp/>get_producer_info(p)[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as&lt;double&gt;()<sp/>);</highlight></codeline>
<codeline lineno="5231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5232"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5233"><highlight class="normal"></highlight></codeline>
<codeline lineno="5234"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>init_balance<sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;30000.0000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5235"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;account_name&gt;<sp/><ref refid="structaccounts" kindref="compound">accounts</ref><sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;aliceaccount&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;bobbyaccount&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;carolaccount&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;emilyaccount&quot;</highlight><highlight class="normal">_n<sp/>};</highlight></codeline>
<codeline lineno="5236"><highlight class="normal"><sp/><sp/><sp/>account_name<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>=<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>[0],<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref><sp/>=<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>[1],<sp/><ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref><sp/>=<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>[2],<sp/>emily<sp/>=<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>[3];</highlight></codeline>
<codeline lineno="5237"><highlight class="normal"><sp/><sp/><sp/>setup_rex_accounts(<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>,<sp/>init_balance<sp/>);</highlight></codeline>
<codeline lineno="5238"><highlight class="normal"></highlight></codeline>
<codeline lineno="5239"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>init_stake_amount<sp/>=<sp/>get_voter_info(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>)[</highlight><highlight class="stringliteral">&quot;staked&quot;</highlight><highlight class="normal">].as&lt;int64_t&gt;();</highlight></codeline>
<codeline lineno="5240"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>init_stake(<sp/>init_stake_amount,<sp/>symbol{<ref refid="test__symbol_8hpp_1af288246ded3673b7a516aeaaca84ab01" kindref="member">CORE_SYM</ref>}<sp/>);</highlight></codeline>
<codeline lineno="5241"><highlight class="normal"></highlight></codeline>
<codeline lineno="5242"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>purchase<sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;25000.0000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5243"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buyrex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/>purchase<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5244"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>purchase,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_rex_pool()[</highlight><highlight class="stringliteral">&quot;total_lendable&quot;</highlight><highlight class="normal">].as&lt;asset&gt;()<sp/>);</highlight></codeline>
<codeline lineno="5245"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>purchase,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_rex_vote_stake(<ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>)<sp/>);</highlight></codeline>
<codeline lineno="5246"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>get_rex_vote_stake(<ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>).get_amount(),<sp/>get_voter_info(<ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>)[</highlight><highlight class="stringliteral">&quot;staked&quot;</highlight><highlight class="normal">].as&lt;int64_t&gt;()<sp/>-<sp/>init_stake_amount<sp/>);</highlight></codeline>
<codeline lineno="5247"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>purchase,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_rex_pool()[</highlight><highlight class="stringliteral">&quot;total_lendable&quot;</highlight><highlight class="normal">].as&lt;asset&gt;()<sp/>);</highlight></codeline>
<codeline lineno="5248"><highlight class="normal"></highlight></codeline>
<codeline lineno="5249"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vote(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/>std::vector&lt;account_name&gt;(producer_names.begin(),<sp/>producer_names.begin()<sp/>+<sp/>21)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5250"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>purchase,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_rex_vote_stake(<ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>)<sp/>);</highlight></codeline>
<codeline lineno="5251"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>purchase.get_amount(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_voter_info(<ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>)[</highlight><highlight class="stringliteral">&quot;staked&quot;</highlight><highlight class="normal">].as&lt;int64_t&gt;()<sp/>-<sp/>init_stake_amount<sp/>);</highlight></codeline>
<codeline lineno="5252"><highlight class="normal"></highlight></codeline>
<codeline lineno="5253"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>init_rex_pool<sp/>=<sp/>get_rex_pool();</highlight></codeline>
<codeline lineno="5254"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>rent<sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;25.0000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5255"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rentcpu(<sp/>emily,<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/>rent<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5256"><highlight class="normal"></highlight></codeline>
<codeline lineno="5257"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::days(31)<sp/>);</highlight></codeline>
<codeline lineno="5258"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rexexec(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/>1<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5259"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>curr_rex_pool<sp/>=<sp/>get_rex_pool();</highlight></codeline>
<codeline lineno="5260"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/><ref refid="eosio_8system__tests_8cpp_1a2a34c6cca71b9f7b935a3b00648b2b41" kindref="member">within_one</ref>(<sp/>curr_rex_pool[</highlight><highlight class="stringliteral">&quot;total_lendable&quot;</highlight><highlight class="normal">].as&lt;asset&gt;().get_amount(),</highlight></codeline>
<codeline lineno="5261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>init_rex_pool[</highlight><highlight class="stringliteral">&quot;total_lendable&quot;</highlight><highlight class="normal">].as&lt;asset&gt;().get_amount()<sp/>+<sp/>rent.get_amount()<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5262"><highlight class="normal"></highlight></codeline>
<codeline lineno="5263"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vote(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/>std::vector&lt;account_name&gt;(producer_names.begin(),<sp/>producer_names.begin()<sp/>+<sp/>21)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5264"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/><ref refid="eosio_8system__tests_8cpp_1a2a34c6cca71b9f7b935a3b00648b2b41" kindref="member">within_one</ref>(<sp/>(purchase<sp/>+<sp/>rent).get_amount(),<sp/>get_voter_info(<ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>)[</highlight><highlight class="stringliteral">&quot;staked&quot;</highlight><highlight class="normal">].as&lt;int64_t&gt;()<sp/>-<sp/>init_stake_amount<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5265"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/><ref refid="eosio_8system__tests_8cpp_1a2a34c6cca71b9f7b935a3b00648b2b41" kindref="member">within_one</ref>(<sp/>(purchase<sp/>+<sp/>rent).get_amount(),<sp/>get_rex_vote_stake(<ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>).get_amount()<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5266"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref><sp/>(<sp/>stake2votes(purchase<sp/>+<sp/>rent<sp/>+<sp/>init_stake)<sp/>==</highlight></codeline>
<codeline lineno="5267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_producer_info(producer_names[0])[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="5268"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref><sp/>(<sp/>stake2votes(purchase<sp/>+<sp/>rent<sp/>+<sp/>init_stake)<sp/>==</highlight></codeline>
<codeline lineno="5269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_producer_info(producer_names[20])[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="5270"><highlight class="normal"></highlight></codeline>
<codeline lineno="5271"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>to_net_stake<sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;60.0000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5272"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>to_cpu_stake<sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;40.0000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5273"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a792dc87878d55cfa11f862e9e6d5cc05" kindref="member">transfer</ref>(<sp/>config::system_account_name,<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/>to_net_stake<sp/>+<sp/>to_cpu_stake,<sp/>config::system_account_name<sp/>);</highlight></codeline>
<codeline lineno="5274"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rentcpu(<sp/>emily,<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/>rent<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5275"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::hours(30<sp/>*<sp/>24<sp/>+<sp/>13)<sp/>);</highlight></codeline>
<codeline lineno="5276"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rexexec(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/>1<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5277"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stake(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/>to_net_stake,<sp/>to_cpu_stake<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5278"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><sp/>purchase<sp/>+<sp/>rent<sp/>+<sp/>rent,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_rex_vote_stake(<ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>)<sp/>);</highlight></codeline>
<codeline lineno="5279"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref><sp/>(<sp/>stake2votes(init_stake<sp/>+<sp/>purchase<sp/>+<sp/>rent<sp/>+<sp/>rent<sp/>+<sp/>to_net_stake<sp/>+<sp/>to_cpu_stake)<sp/>==</highlight></codeline>
<codeline lineno="5280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_producer_info(producer_names[0])[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="5281"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rentcpu(<sp/>emily,<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/>rent<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5282"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::hours(30<sp/>*<sp/>24<sp/>+<sp/>13)<sp/>);</highlight></codeline>
<codeline lineno="5283"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rexexec(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/>1<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5284"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unstake(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/>to_net_stake,<sp/>to_cpu_stake<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5285"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>purchase<sp/>+<sp/>rent<sp/>+<sp/>rent<sp/>+<sp/>rent,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_rex_vote_stake(<ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>)<sp/>);</highlight></codeline>
<codeline lineno="5286"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref><sp/>(<sp/>stake2votes(init_stake<sp/>+<sp/>get_rex_vote_stake(<ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>)<sp/>)<sp/>==</highlight></codeline>
<codeline lineno="5287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_producer_info(producer_names[0])[</highlight><highlight class="stringliteral">&quot;total_votes&quot;</highlight><highlight class="normal">].as_double()<sp/>);</highlight></codeline>
<codeline lineno="5288"><highlight class="normal"></highlight></codeline>
<codeline lineno="5289"><highlight class="normal">}<sp/><ref refid="eosio_8system__tests_8cpp_1a057cb719bfa291fae56dc6ba5fa7a8d1" kindref="member">FC_LOG_AND_RETHROW</ref>()</highlight></codeline>
<codeline lineno="5290"><highlight class="normal"></highlight></codeline>
<codeline lineno="5291"><highlight class="normal"></highlight></codeline>
<codeline lineno="5292"><highlight class="normal"><ref refid="eosio_8system__tests_8cpp_1a8a1841911da283583ec346df954d73a1" kindref="member">BOOST_FIXTURE_TEST_CASE</ref>(<sp/>deposit_rex_fund,<sp/><ref refid="classeosio__system_1_1eosio__system__tester" kindref="compound">eosio_system_tester</ref><sp/>)<sp/><ref refid="eosio_8system__tests_8cpp_1ae89aac94d502abdd3c8d055174c221fc" kindref="member">try</ref><sp/>{</highlight></codeline>
<codeline lineno="5293"><highlight class="normal"></highlight></codeline>
<codeline lineno="5294"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>init_balance<sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1000.0000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5295"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>init_net<sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;70.0000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5296"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>init_cpu<sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;90.0000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5297"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;account_name&gt;<sp/><ref refid="structaccounts" kindref="compound">accounts</ref><sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;aliceaccount&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;bobbyaccount&quot;</highlight><highlight class="normal">_n<sp/>};</highlight></codeline>
<codeline lineno="5298"><highlight class="normal"><sp/><sp/><sp/>account_name<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>=<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>[0],<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref><sp/>=<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>[1];</highlight></codeline>
<codeline lineno="5299"><highlight class="normal"><sp/><sp/><sp/>setup_rex_accounts(<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>,<sp/>init_balance,<sp/>init_net,<sp/>init_cpu,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="5300"><highlight class="normal"></highlight></codeline>
<codeline lineno="5301"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;0.0000&quot;</highlight><highlight class="normal">),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_rex_fund(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5302"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;must<sp/>deposit<sp/>to<sp/>REX<sp/>fund<sp/>first&quot;</highlight><highlight class="normal">),<sp/>withdraw(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;0.0001&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5303"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;overdrawn<sp/>balance&quot;</highlight><highlight class="normal">),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deposit(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/>init_balance<sp/>+<sp/>init_balance<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5304"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;must<sp/>deposit<sp/>core<sp/>token&quot;</highlight><highlight class="normal">),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deposit(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/>asset::from_string(</highlight><highlight class="stringliteral">&quot;1.0000<sp/>RNDM&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5305"><highlight class="normal"></highlight></codeline>
<codeline lineno="5306"><highlight class="normal"><sp/><sp/><sp/>asset<sp/>deposit_quant(<sp/>init_balance.get_amount()<sp/>/<sp/>5,<sp/>init_balance.get_symbol()<sp/>);</highlight></codeline>
<codeline lineno="5307"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deposit(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/>deposit_quant<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5308"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>get_balance(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>init_balance<sp/>-<sp/>deposit_quant<sp/>);</highlight></codeline>
<codeline lineno="5309"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>get_rex_fund(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deposit_quant<sp/>);</highlight></codeline>
<codeline lineno="5310"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deposit(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/>deposit_quant<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5311"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>get_rex_fund(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deposit_quant<sp/>+<sp/>deposit_quant<sp/>);</highlight></codeline>
<codeline lineno="5312"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>get_balance(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>init_balance<sp/>-<sp/>deposit_quant<sp/>-<sp/>deposit_quant<sp/>);</highlight></codeline>
<codeline lineno="5313"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;insufficient<sp/>funds&quot;</highlight><highlight class="normal">),<sp/>withdraw(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/>get_rex_fund(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>)<sp/>+<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;0.0001&quot;</highlight><highlight class="normal">))<sp/>);</highlight></codeline>
<codeline lineno="5314"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>withdraw(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/>deposit_quant<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5315"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>get_rex_fund(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deposit_quant<sp/>);</highlight></codeline>
<codeline lineno="5316"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>get_balance(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>init_balance<sp/>-<sp/>deposit_quant<sp/>);</highlight></codeline>
<codeline lineno="5317"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>withdraw(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/>get_rex_fund(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5318"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>get_rex_fund(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>).get_amount(),<sp/><sp/><sp/><sp/>0<sp/>);</highlight></codeline>
<codeline lineno="5319"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>get_balance(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>init_balance<sp/>);</highlight></codeline>
<codeline lineno="5320"><highlight class="normal"></highlight></codeline>
<codeline lineno="5321"><highlight class="normal">}<sp/><ref refid="eosio_8system__tests_8cpp_1a057cb719bfa291fae56dc6ba5fa7a8d1" kindref="member">FC_LOG_AND_RETHROW</ref>()</highlight></codeline>
<codeline lineno="5322"><highlight class="normal"></highlight></codeline>
<codeline lineno="5323"><highlight class="normal"></highlight></codeline>
<codeline lineno="5324"><highlight class="normal"><ref refid="eosio_8system__tests_8cpp_1a8a1841911da283583ec346df954d73a1" kindref="member">BOOST_FIXTURE_TEST_CASE</ref>(<sp/>rex_lower_bound,<sp/><ref refid="classeosio__system_1_1eosio__system__tester" kindref="compound">eosio_system_tester</ref><sp/>)<sp/><ref refid="eosio_8system__tests_8cpp_1ae89aac94d502abdd3c8d055174c221fc" kindref="member">try</ref><sp/>{</highlight></codeline>
<codeline lineno="5325"><highlight class="normal"></highlight></codeline>
<codeline lineno="5326"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>init_balance<sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;25000.0000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5327"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;account_name&gt;<sp/><ref refid="structaccounts" kindref="compound">accounts</ref><sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;aliceaccount&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;bobbyaccount&quot;</highlight><highlight class="normal">_n<sp/>};</highlight></codeline>
<codeline lineno="5328"><highlight class="normal"><sp/><sp/><sp/>account_name<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>=<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>[0],<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref><sp/>=<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>[1];</highlight></codeline>
<codeline lineno="5329"><highlight class="normal"><sp/><sp/><sp/>setup_rex_accounts(<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>,<sp/>init_balance<sp/>);</highlight></codeline>
<codeline lineno="5330"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>symbol<sp/>rex_sym(<sp/>SY(4,<sp/>REX)<sp/>);</highlight></codeline>
<codeline lineno="5331"><highlight class="normal"></highlight></codeline>
<codeline lineno="5332"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>payment<sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;25000.0000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5333"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>buyrex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/>payment<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5334"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>fee<sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;25.0000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5335"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>rentcpu(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/>fee<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5336"><highlight class="normal"></highlight></codeline>
<codeline lineno="5337"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>rex_pool<sp/>=<sp/>get_rex_pool();</highlight></codeline>
<codeline lineno="5338"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>tot_rex<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>rex_pool[</highlight><highlight class="stringliteral">&quot;total_rex&quot;</highlight><highlight class="normal">].as&lt;asset&gt;().get_amount();</highlight></codeline>
<codeline lineno="5339"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>tot_unlent<sp/><sp/><sp/>=<sp/>rex_pool[</highlight><highlight class="stringliteral">&quot;total_unlent&quot;</highlight><highlight class="normal">].as&lt;asset&gt;().get_amount();</highlight></codeline>
<codeline lineno="5340"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>tot_lent<sp/><sp/><sp/><sp/><sp/>=<sp/>rex_pool[</highlight><highlight class="stringliteral">&quot;total_lent&quot;</highlight><highlight class="normal">].as&lt;asset&gt;().get_amount();</highlight></codeline>
<codeline lineno="5341"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>tot_lendable<sp/>=<sp/>rex_pool[</highlight><highlight class="stringliteral">&quot;total_lendable&quot;</highlight><highlight class="normal">].as&lt;asset&gt;().get_amount();</highlight></codeline>
<codeline lineno="5342"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rex_per_eos<sp/>=<sp/>double(tot_rex)<sp/>/<sp/>double(tot_lendable);</highlight></codeline>
<codeline lineno="5343"><highlight class="normal"><sp/><sp/><sp/>int64_t<sp/>sell_amount<sp/>=<sp/>rex_per_eos<sp/>*<sp/>(<sp/>tot_unlent<sp/>-<sp/>0.09<sp/>*<sp/>tot_lent<sp/>);</highlight></codeline>
<codeline lineno="5344"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::days(5)<sp/>);</highlight></codeline>
<codeline lineno="5345"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>sellrex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/>asset(<sp/>sell_amount,<sp/>rex_sym<sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5346"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>cancelrexorder(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5347"><highlight class="normal"><sp/><sp/><sp/>sell_amount<sp/>=<sp/>rex_per_eos<sp/>*<sp/>(<sp/>tot_unlent<sp/>-<sp/>0.1<sp/>*<sp/>tot_lent<sp/>);</highlight></codeline>
<codeline lineno="5348"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>sellrex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/>asset(<sp/>sell_amount,<sp/>rex_sym<sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5349"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;no<sp/>sellrex<sp/>order<sp/>is<sp/>scheduled&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="5350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cancelrexorder(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5351"><highlight class="normal"></highlight></codeline>
<codeline lineno="5352"><highlight class="normal">}<sp/><ref refid="eosio_8system__tests_8cpp_1a057cb719bfa291fae56dc6ba5fa7a8d1" kindref="member">FC_LOG_AND_RETHROW</ref>()</highlight></codeline>
<codeline lineno="5353"><highlight class="normal"></highlight></codeline>
<codeline lineno="5354"><highlight class="normal"></highlight></codeline>
<codeline lineno="5355"><highlight class="normal"><ref refid="eosio_8system__tests_8cpp_1a8a1841911da283583ec346df954d73a1" kindref="member">BOOST_FIXTURE_TEST_CASE</ref>(<sp/>close_rex,<sp/><ref refid="classeosio__system_1_1eosio__system__tester" kindref="compound">eosio_system_tester</ref><sp/>)<sp/><ref refid="eosio_8system__tests_8cpp_1ae89aac94d502abdd3c8d055174c221fc" kindref="member">try</ref><sp/>{</highlight></codeline>
<codeline lineno="5356"><highlight class="normal"></highlight></codeline>
<codeline lineno="5357"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>init_balance<sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;25000.0000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5358"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;account_name&gt;<sp/><ref refid="structaccounts" kindref="compound">accounts</ref><sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;aliceaccount&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;bobbyaccount&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;carolaccount&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;emilyaccount&quot;</highlight><highlight class="normal">_n<sp/>};</highlight></codeline>
<codeline lineno="5359"><highlight class="normal"><sp/><sp/><sp/>account_name<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>=<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>[0],<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref><sp/>=<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>[1],<sp/><ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref><sp/>=<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>[2],<sp/>emily<sp/>=<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>[3];</highlight></codeline>
<codeline lineno="5360"><highlight class="normal"><sp/><sp/><sp/>setup_rex_accounts(<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>,<sp/>init_balance<sp/>);</highlight></codeline>
<codeline lineno="5361"><highlight class="normal"></highlight></codeline>
<codeline lineno="5362"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!get_rex_fund_obj(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>).is_null()<sp/>);</highlight></codeline>
<codeline lineno="5363"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>init_balance,<sp/><sp/><sp/><sp/><sp/><sp/>get_rex_fund(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5364"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>closerex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5365"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>withdraw(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/>init_balance<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5366"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>closerex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5367"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_rex_fund_obj(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>).is_null()<sp/>);</highlight></codeline>
<codeline lineno="5368"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deposit(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/>init_balance<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5369"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!get_rex_fund_obj(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>).is_null()<sp/>);</highlight></codeline>
<codeline lineno="5370"><highlight class="normal"></highlight></codeline>
<codeline lineno="5371"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_rex_balance_obj(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref><sp/>).is_null()<sp/>);</highlight></codeline>
<codeline lineno="5372"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buyrex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/>init_balance<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5373"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!get_rex_balance_obj(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref><sp/>).is_null()<sp/>);</highlight></codeline>
<codeline lineno="5374"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!get_rex_fund_obj(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref><sp/>).is_null()<sp/>);</highlight></codeline>
<codeline lineno="5375"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_rex_fund(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref><sp/>).get_amount()<sp/>);</highlight></codeline>
<codeline lineno="5376"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>closerex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref><sp/>),<sp/><sp/><sp/>wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;account<sp/>has<sp/>remaining<sp/>REX<sp/>balance,<sp/>must<sp/>sell<sp/>first&quot;</highlight><highlight class="normal">)<sp/>);</highlight></codeline>
<codeline lineno="5377"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::days(5)<sp/>);</highlight></codeline>
<codeline lineno="5378"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sellrex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/>get_rex_balance(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref><sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5379"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>closerex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5380"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>withdraw(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/>get_rex_fund(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref><sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5381"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>closerex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5382"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_rex_balance_obj(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref><sp/>).is_null()<sp/>);</highlight></codeline>
<codeline lineno="5383"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_rex_fund_obj(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref><sp/>).is_null()<sp/>);</highlight></codeline>
<codeline lineno="5384"><highlight class="normal"></highlight></codeline>
<codeline lineno="5385"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deposit(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/>init_balance<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5386"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buyrex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/>init_balance<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5387"><highlight class="normal"></highlight></codeline>
<codeline lineno="5388"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>fee<sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1.0000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5389"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rentcpu(<sp/><ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref>,<sp/>emily,<sp/>fee<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5390"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;insufficient<sp/>funds&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="5391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>withdraw(<sp/><ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref>,<sp/>init_balance<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5392"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>withdraw(<sp/><ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref>,<sp/>init_balance<sp/>-<sp/>fee<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5393"><highlight class="normal"></highlight></codeline>
<codeline lineno="5394"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::days(20)<sp/>);</highlight></codeline>
<codeline lineno="5395"><highlight class="normal"></highlight></codeline>
<codeline lineno="5396"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>closerex(<sp/><ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5397"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!get_rex_fund_obj(<sp/><ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref><sp/>).is_null()<sp/>);</highlight></codeline>
<codeline lineno="5398"><highlight class="normal"></highlight></codeline>
<codeline lineno="5399"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::days(10)<sp/>);</highlight></codeline>
<codeline lineno="5400"><highlight class="normal"></highlight></codeline>
<codeline lineno="5401"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>closerex(<sp/><ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5402"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_rex_balance_obj(<sp/><ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref><sp/>).is_null()<sp/>);</highlight></codeline>
<codeline lineno="5403"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_rex_fund_obj(<sp/><ref refid="eosio_8wrap__tests_8cpp_1a84f3ef531d0454450811683adcd27d01" kindref="member">carol</ref><sp/>).is_null()<sp/>);</highlight></codeline>
<codeline lineno="5404"><highlight class="normal"></highlight></codeline>
<codeline lineno="5405"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rentnet(<sp/>emily,<sp/>emily,<sp/>fee<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5406"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!get_rex_fund_obj(<sp/>emily<sp/>).is_null()<sp/>);</highlight></codeline>
<codeline lineno="5407"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>closerex(<sp/>emily<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5408"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!get_rex_fund_obj(<sp/>emily<sp/>).is_null()<sp/>);</highlight></codeline>
<codeline lineno="5409"><highlight class="normal"></highlight></codeline>
<codeline lineno="5410"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sellrex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/>get_rex_balance(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref><sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5411"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>closerex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref><sp/>),<sp/><sp/><sp/>wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;account<sp/>has<sp/>remaining<sp/>REX<sp/>balance,<sp/>must<sp/>sell<sp/>first&quot;</highlight><highlight class="normal">)<sp/>);</highlight></codeline>
<codeline lineno="5412"><highlight class="normal"></highlight></codeline>
<codeline lineno="5413"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::days(30)<sp/>);</highlight></codeline>
<codeline lineno="5414"><highlight class="normal"></highlight></codeline>
<codeline lineno="5415"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>closerex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref><sp/>),<sp/><sp/><sp/>success()<sp/>);</highlight></codeline>
<codeline lineno="5416"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1ae00c608b8a40d03b8b8dd2daac50185b" kindref="member">BOOST_REQUIRE</ref><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>0<sp/>&lt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_rex_fund(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref><sp/>).get_amount()<sp/>);</highlight></codeline>
<codeline lineno="5417"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>withdraw(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/>get_rex_fund(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref><sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5418"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>closerex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5419"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_rex_balance_obj(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref><sp/>).is_null()<sp/>);</highlight></codeline>
<codeline lineno="5420"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_rex_fund_obj(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref><sp/>).is_null()<sp/>);</highlight></codeline>
<codeline lineno="5421"><highlight class="normal"></highlight></codeline>
<codeline lineno="5422"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_rex_pool()[</highlight><highlight class="stringliteral">&quot;total_rex&quot;</highlight><highlight class="normal">].as&lt;asset&gt;().get_amount()<sp/>);</highlight></codeline>
<codeline lineno="5423"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_rex_pool()[</highlight><highlight class="stringliteral">&quot;total_lendable&quot;</highlight><highlight class="normal">].as&lt;asset&gt;().get_amount()<sp/>);</highlight></codeline>
<codeline lineno="5424"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;rex<sp/>loans<sp/>are<sp/>currently<sp/>not<sp/>available&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="5425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rentcpu(<sp/>emily,<sp/>emily,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1.0000&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5426"><highlight class="normal"></highlight></codeline>
<codeline lineno="5427"><highlight class="normal">}<sp/><ref refid="eosio_8system__tests_8cpp_1a057cb719bfa291fae56dc6ba5fa7a8d1" kindref="member">FC_LOG_AND_RETHROW</ref>()</highlight></codeline>
<codeline lineno="5428"><highlight class="normal"></highlight></codeline>
<codeline lineno="5429"><highlight class="normal"></highlight></codeline>
<codeline lineno="5430"><highlight class="normal"><ref refid="eosio_8system__tests_8cpp_1a8a1841911da283583ec346df954d73a1" kindref="member">BOOST_FIXTURE_TEST_CASE</ref>(<sp/>set_rex,<sp/><ref refid="classeosio__system_1_1eosio__system__tester" kindref="compound">eosio_system_tester</ref><sp/>)<sp/><ref refid="eosio_8system__tests_8cpp_1ae89aac94d502abdd3c8d055174c221fc" kindref="member">try</ref><sp/>{</highlight></codeline>
<codeline lineno="5431"><highlight class="normal"></highlight></codeline>
<codeline lineno="5432"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>init_balance<sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;25000.0000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5433"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;account_name&gt;<sp/><ref refid="structaccounts" kindref="compound">accounts</ref><sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;aliceaccount&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;bobbyaccount&quot;</highlight><highlight class="normal">_n<sp/>};</highlight></codeline>
<codeline lineno="5434"><highlight class="normal"><sp/><sp/><sp/>account_name<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>=<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>[0],<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref><sp/>=<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>[1];</highlight></codeline>
<codeline lineno="5435"><highlight class="normal"><sp/><sp/><sp/>setup_rex_accounts(<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>,<sp/>init_balance<sp/>);</highlight></codeline>
<codeline lineno="5436"><highlight class="normal"></highlight></codeline>
<codeline lineno="5437"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>name<sp/>act_name{<sp/></highlight><highlight class="stringliteral">&quot;setrex&quot;</highlight><highlight class="normal">_n<sp/>};</highlight></codeline>
<codeline lineno="5438"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>init_total_rent<sp/><sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;20000.0000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5439"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>set_total_rent<sp/><sp/><sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;10000.0000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5440"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>negative_balance<sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;-10000.0000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5441"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>different_symbol<sp/>=<sp/>asset::from_string(</highlight><highlight class="stringliteral">&quot;10000.0000<sp/>RND&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5442"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>error(</highlight><highlight class="stringliteral">&quot;missing<sp/>authority<sp/>of<sp/>eosio&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="5443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/>act_name,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()(</highlight><highlight class="stringliteral">&quot;balance&quot;</highlight><highlight class="normal">,<sp/>set_total_rent)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5444"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>error(</highlight><highlight class="stringliteral">&quot;missing<sp/>authority<sp/>of<sp/>eosio&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="5445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/>act_name,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()(</highlight><highlight class="stringliteral">&quot;balance&quot;</highlight><highlight class="normal">,<sp/>set_total_rent)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5446"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;rex<sp/>system<sp/>is<sp/>not<sp/>initialized&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="5447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(<sp/>config::system_account_name,<sp/>act_name,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()(</highlight><highlight class="stringliteral">&quot;balance&quot;</highlight><highlight class="normal">,<sp/>set_total_rent)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5448"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>buyrex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/>init_balance<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5449"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;balance<sp/>must<sp/>be<sp/>set<sp/>to<sp/>have<sp/>a<sp/>positive<sp/>amount&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="5450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(<sp/>config::system_account_name,<sp/>act_name,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()(</highlight><highlight class="stringliteral">&quot;balance&quot;</highlight><highlight class="normal">,<sp/>negative_balance)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5451"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;balance<sp/>symbol<sp/>must<sp/>be<sp/>core<sp/>symbol&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="5452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(<sp/>config::system_account_name,<sp/>act_name,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()(</highlight><highlight class="stringliteral">&quot;balance&quot;</highlight><highlight class="normal">,<sp/>different_symbol)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5453"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>fee<sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;100.0000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5454"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rentcpu(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/>fee<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5455"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>init_rex_pool<sp/>=<sp/>get_rex_pool();</highlight></codeline>
<codeline lineno="5456"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>init_total_rent<sp/>+<sp/>fee,<sp/>init_rex_pool[</highlight><highlight class="stringliteral">&quot;total_rent&quot;</highlight><highlight class="normal">].as&lt;asset&gt;()<sp/>);</highlight></codeline>
<codeline lineno="5457"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>set_total_rent<sp/>!=<sp/>init_rex_pool[</highlight><highlight class="stringliteral">&quot;total_rent&quot;</highlight><highlight class="normal">].as&lt;asset&gt;()<sp/>);</highlight></codeline>
<codeline lineno="5458"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),</highlight></codeline>
<codeline lineno="5459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(<sp/>config::system_account_name,<sp/>act_name,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()(</highlight><highlight class="stringliteral">&quot;balance&quot;</highlight><highlight class="normal">,<sp/>set_total_rent)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5460"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>curr_rex_pool<sp/>=<sp/>get_rex_pool();</highlight></codeline>
<codeline lineno="5461"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>init_rex_pool[</highlight><highlight class="stringliteral">&quot;total_lendable&quot;</highlight><highlight class="normal">].as&lt;asset&gt;(),<sp/><sp/><sp/>curr_rex_pool[</highlight><highlight class="stringliteral">&quot;total_lendable&quot;</highlight><highlight class="normal">].as&lt;asset&gt;()<sp/>);</highlight></codeline>
<codeline lineno="5462"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>init_rex_pool[</highlight><highlight class="stringliteral">&quot;total_lent&quot;</highlight><highlight class="normal">].as&lt;asset&gt;(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/>curr_rex_pool[</highlight><highlight class="stringliteral">&quot;total_lent&quot;</highlight><highlight class="normal">].as&lt;asset&gt;()<sp/>);</highlight></codeline>
<codeline lineno="5463"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>init_rex_pool[</highlight><highlight class="stringliteral">&quot;total_unlent&quot;</highlight><highlight class="normal">].as&lt;asset&gt;(),<sp/><sp/><sp/><sp/><sp/>curr_rex_pool[</highlight><highlight class="stringliteral">&quot;total_unlent&quot;</highlight><highlight class="normal">].as&lt;asset&gt;()<sp/>);</highlight></codeline>
<codeline lineno="5464"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>init_rex_pool[</highlight><highlight class="stringliteral">&quot;namebid_proceeds&quot;</highlight><highlight class="normal">].as&lt;asset&gt;(),<sp/>curr_rex_pool[</highlight><highlight class="stringliteral">&quot;namebid_proceeds&quot;</highlight><highlight class="normal">].as&lt;asset&gt;()<sp/>);</highlight></codeline>
<codeline lineno="5465"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>init_rex_pool[</highlight><highlight class="stringliteral">&quot;loan_num&quot;</highlight><highlight class="normal">].as_uint64(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curr_rex_pool[</highlight><highlight class="stringliteral">&quot;loan_num&quot;</highlight><highlight class="normal">].as_uint64()<sp/>);</highlight></codeline>
<codeline lineno="5466"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>set_total_rent,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curr_rex_pool[</highlight><highlight class="stringliteral">&quot;total_rent&quot;</highlight><highlight class="normal">].as&lt;asset&gt;()<sp/>);</highlight></codeline>
<codeline lineno="5467"><highlight class="normal"></highlight></codeline>
<codeline lineno="5468"><highlight class="normal">}<sp/><ref refid="eosio_8system__tests_8cpp_1a057cb719bfa291fae56dc6ba5fa7a8d1" kindref="member">FC_LOG_AND_RETHROW</ref>()</highlight></codeline>
<codeline lineno="5469"><highlight class="normal"></highlight></codeline>
<codeline lineno="5470"><highlight class="normal"></highlight></codeline>
<codeline lineno="5471"><highlight class="normal"><ref refid="eosio_8system__tests_8cpp_1a8a1841911da283583ec346df954d73a1" kindref="member">BOOST_FIXTURE_TEST_CASE</ref>(<sp/>b1_vesting,<sp/><ref refid="classeosio__system_1_1eosio__system__tester" kindref="compound">eosio_system_tester</ref><sp/>)<sp/><ref refid="eosio_8system__tests_8cpp_1ae89aac94d502abdd3c8d055174c221fc" kindref="member">try</ref><sp/>{</highlight></codeline>
<codeline lineno="5472"><highlight class="normal"></highlight></codeline>
<codeline lineno="5473"><highlight class="normal"><sp/><sp/><sp/>cross_15_percent_threshold();</highlight></codeline>
<codeline lineno="5474"><highlight class="normal"></highlight></codeline>
<codeline lineno="5475"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::days(14)<sp/>);</highlight></codeline>
<codeline lineno="5476"><highlight class="normal"></highlight></codeline>
<codeline lineno="5477"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>init_balance<sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;25000.0000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5478"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;account_name&gt;<sp/><ref refid="structaccounts" kindref="compound">accounts</ref><sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;aliceaccount&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;bobbyaccount&quot;</highlight><highlight class="normal">_n<sp/>};</highlight></codeline>
<codeline lineno="5479"><highlight class="normal"><sp/><sp/><sp/>account_name<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>=<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>[0],<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref><sp/>=<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>[1];</highlight></codeline>
<codeline lineno="5480"><highlight class="normal"><sp/><sp/><sp/>setup_rex_accounts(<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>,<sp/>init_balance<sp/>);</highlight></codeline>
<codeline lineno="5481"><highlight class="normal"></highlight></codeline>
<codeline lineno="5482"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>name<sp/>b1{<sp/></highlight><highlight class="stringliteral">&quot;b1&quot;</highlight><highlight class="normal">_n<sp/>};</highlight></codeline>
<codeline lineno="5483"><highlight class="normal"></highlight></codeline>
<codeline lineno="5484"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a743a21c2e0e86a8aeacc66e5c80c51ef" kindref="member">issue_and_transfer</ref>(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;20000.0000&quot;</highlight><highlight class="normal">),<sp/>config::system_account_name<sp/>);</highlight></codeline>
<codeline lineno="5485"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a743a21c2e0e86a8aeacc66e5c80c51ef" kindref="member">issue_and_transfer</ref>(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/><sp/><sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;20000.0000&quot;</highlight><highlight class="normal">),<sp/>config::system_account_name<sp/>);</highlight></codeline>
<codeline lineno="5486"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>bidname(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/><sp/><sp/>b1,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(<sp/></highlight><highlight class="stringliteral">&quot;0.5000&quot;</highlight><highlight class="normal"><sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5487"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>bidname(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/>b1,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(<sp/></highlight><highlight class="stringliteral">&quot;1.0000&quot;</highlight><highlight class="normal"><sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5488"><highlight class="normal"></highlight></codeline>
<codeline lineno="5489"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::days(1)<sp/>);</highlight></codeline>
<codeline lineno="5490"><highlight class="normal"></highlight></codeline>
<codeline lineno="5491"><highlight class="normal"><sp/><sp/><sp/>create_accounts_with_resources(<sp/>{<sp/>b1<sp/>},<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>);</highlight></codeline>
<codeline lineno="5492"><highlight class="normal"></highlight></codeline>
<codeline lineno="5493"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>stake_amount<sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;50000000.0000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5494"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>final_amount<sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;17664825.5000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5495"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>small_amount<sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1000.0000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5496"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a743a21c2e0e86a8aeacc66e5c80c51ef" kindref="member">issue_and_transfer</ref>(<sp/>b1,<sp/>stake_amount<sp/>+<sp/>stake_amount<sp/>+<sp/>stake_amount,<sp/>config::system_account_name<sp/>);</highlight></codeline>
<codeline lineno="5497"><highlight class="normal"></highlight></codeline>
<codeline lineno="5498"><highlight class="normal"><sp/><sp/><sp/>stake(<sp/>b1,<sp/>b1,<sp/>stake_amount,<sp/>stake_amount<sp/>);</highlight></codeline>
<codeline lineno="5499"><highlight class="normal"></highlight></codeline>
<codeline lineno="5500"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>2<sp/>*<sp/>stake_amount.get_amount(),<sp/>get_voter_info(<sp/>b1<sp/>)[</highlight><highlight class="stringliteral">&quot;staked&quot;</highlight><highlight class="normal">].as&lt;int64_t&gt;()<sp/>);</highlight></codeline>
<codeline lineno="5501"><highlight class="normal"></highlight></codeline>
<codeline lineno="5502"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>unstake(<sp/>b1,<sp/>b1,<sp/>small_amount,<sp/>small_amount<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5503"><highlight class="normal"></highlight></codeline>
<codeline lineno="5504"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::days(4)<sp/>);</highlight></codeline>
<codeline lineno="5505"><highlight class="normal"></highlight></codeline>
<codeline lineno="5506"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(<sp/>b1,<sp/></highlight><highlight class="stringliteral">&quot;refund&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()(</highlight><highlight class="stringliteral">&quot;owner&quot;</highlight><highlight class="normal">,<sp/>b1)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5507"><highlight class="normal"></highlight></codeline>
<codeline lineno="5508"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>2<sp/>*<sp/>(<sp/>stake_amount.get_amount()<sp/>-<sp/>small_amount.get_amount()<sp/>),</highlight></codeline>
<codeline lineno="5509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_voter_info(<sp/>b1<sp/>)[</highlight><highlight class="stringliteral">&quot;staked&quot;</highlight><highlight class="normal">].as&lt;int64_t&gt;()<sp/>);</highlight></codeline>
<codeline lineno="5510"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="5511"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;b1<sp/>can<sp/>only<sp/>claim<sp/>their<sp/>tokens<sp/>over<sp/>10<sp/>years&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="5512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unstake(<sp/>b1,<sp/>b1,<sp/>final_amount,<sp/>final_amount<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5513"><highlight class="normal"></highlight></codeline>
<codeline lineno="5514"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;must<sp/>vote<sp/>for<sp/>at<sp/>least<sp/>21<sp/>producers<sp/>or<sp/>for<sp/>a<sp/>proxy<sp/>before<sp/>buying<sp/>REX&quot;</highlight><highlight class="normal">),<sp/></highlight></codeline>
<codeline lineno="5515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unstaketorex(<sp/>b1,<sp/>b1,<sp/>final_amount<sp/>-<sp/>small_amount,<sp/>final_amount<sp/>-<sp/>small_amount<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5516"><highlight class="normal"></highlight></codeline>
<codeline lineno="5517"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>error(</highlight><highlight class="stringliteral">&quot;missing<sp/>authority<sp/>of<sp/>eosio&quot;</highlight><highlight class="normal">),<sp/>vote(<sp/>b1,<sp/>{<sp/>},<sp/></highlight><highlight class="stringliteral">&quot;proxyaccount&quot;</highlight><highlight class="normal">_n<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5518"><highlight class="normal"></highlight></codeline>
<codeline lineno="5519"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>unstake(<sp/>b1,<sp/>b1,<sp/>final_amount<sp/>-<sp/>small_amount,<sp/>final_amount<sp/>-<sp/>small_amount<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5520"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="5521"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::days(4)<sp/>);</highlight></codeline>
<codeline lineno="5522"><highlight class="normal"></highlight></codeline>
<codeline lineno="5523"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(<sp/>b1,<sp/></highlight><highlight class="stringliteral">&quot;refund&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()(</highlight><highlight class="stringliteral">&quot;owner&quot;</highlight><highlight class="normal">,<sp/>b1)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5524"><highlight class="normal"></highlight></codeline>
<codeline lineno="5525"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::days(<sp/>5<sp/>*<sp/>364<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5526"><highlight class="normal"></highlight></codeline>
<codeline lineno="5527"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;b1<sp/>can<sp/>only<sp/>claim<sp/>their<sp/>tokens<sp/>over<sp/>10<sp/>years&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="5528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unstake(<sp/>b1,<sp/>b1,<sp/>small_amount,<sp/>small_amount<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5529"><highlight class="normal"></highlight></codeline>
<codeline lineno="5530"><highlight class="normal">}<sp/><ref refid="eosio_8system__tests_8cpp_1a057cb719bfa291fae56dc6ba5fa7a8d1" kindref="member">FC_LOG_AND_RETHROW</ref>()</highlight></codeline>
<codeline lineno="5531"><highlight class="normal"></highlight></codeline>
<codeline lineno="5532"><highlight class="normal"></highlight></codeline>
<codeline lineno="5533"><highlight class="normal"><ref refid="eosio_8system__tests_8cpp_1a8a1841911da283583ec346df954d73a1" kindref="member">BOOST_FIXTURE_TEST_CASE</ref>(<sp/>rex_return,<sp/><ref refid="classeosio__system_1_1eosio__system__tester" kindref="compound">eosio_system_tester</ref><sp/>)<sp/><ref refid="eosio_8system__tests_8cpp_1ae89aac94d502abdd3c8d055174c221fc" kindref="member">try</ref><sp/>{</highlight></codeline>
<codeline lineno="5534"><highlight class="normal"></highlight></codeline>
<codeline lineno="5535"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>uint32_t<sp/>total_intervals<sp/>=<sp/>30<sp/>*<sp/>144;</highlight></codeline>
<codeline lineno="5536"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>uint32_t<sp/>dist_interval<sp/><sp/><sp/>=<sp/>10<sp/>*<sp/>60;</highlight></codeline>
<codeline lineno="5537"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_rex_return_pool().is_null()<sp/>);</highlight></codeline>
<codeline lineno="5538"><highlight class="normal"></highlight></codeline>
<codeline lineno="5539"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>init_balance<sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;100000.0000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5540"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;account_name&gt;<sp/><ref refid="structaccounts" kindref="compound">accounts</ref><sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;aliceaccount&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;bobbyaccount&quot;</highlight><highlight class="normal">_n<sp/>};</highlight></codeline>
<codeline lineno="5541"><highlight class="normal"><sp/><sp/><sp/>account_name<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref><sp/>=<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>[0],<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref><sp/>=<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>[1];</highlight></codeline>
<codeline lineno="5542"><highlight class="normal"><sp/><sp/><sp/>setup_rex_accounts(<sp/><ref refid="structaccounts" kindref="compound">accounts</ref>,<sp/>init_balance<sp/>);</highlight></codeline>
<codeline lineno="5543"><highlight class="normal"></highlight></codeline>
<codeline lineno="5544"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>payment<sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;100000.0000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5545"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buyrex(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a579e43b423b454623383471aeb85cd87" kindref="member">alice</ref>,<sp/>payment<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>rex_pool<sp/>=<sp/>get_rex_pool();</highlight></codeline>
<codeline lineno="5548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>payment,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rex_pool[</highlight><highlight class="stringliteral">&quot;total_lendable&quot;</highlight><highlight class="normal">].as&lt;asset&gt;()<sp/>);</highlight></codeline>
<codeline lineno="5549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>payment,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rex_pool[</highlight><highlight class="stringliteral">&quot;total_unlent&quot;</highlight><highlight class="normal">].as&lt;asset&gt;()<sp/>);</highlight></codeline>
<codeline lineno="5550"><highlight class="normal"></highlight></codeline>
<codeline lineno="5551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_rex_return_pool().is_null()<sp/>);</highlight></codeline>
<codeline lineno="5552"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5553"><highlight class="normal"></highlight></codeline>
<codeline lineno="5554"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/><sp/><sp/><sp/>fee<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;30.0000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>bucket_interval_sec<sp/>=<sp/>fc::hours(12).to_seconds();</highlight></codeline>
<codeline lineno="5557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>current_time_sec<sp/><sp/><sp/><sp/>=<sp/>control-&gt;pending_block_time().sec_since_epoch();</highlight></codeline>
<codeline lineno="5558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>time_point_sec<sp/>expected_pending_bucket_time{current_time_sec<sp/>-<sp/>current_time_sec<sp/>%<sp/>bucket_interval_sec<sp/>+<sp/>bucket_interval_sec};</highlight></codeline>
<codeline lineno="5559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rentcpu(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/>fee<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>rex_return_pool<sp/>=<sp/>get_rex_return_pool();</highlight></codeline>
<codeline lineno="5561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rex_return_pool.is_null()<sp/>);</highlight></codeline>
<codeline lineno="5562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rex_return_pool[</highlight><highlight class="stringliteral">&quot;current_rate_of_increase&quot;</highlight><highlight class="normal">].as&lt;int64_t&gt;()<sp/>);</highlight></codeline>
<codeline lineno="5563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_rex_return_buckets()[</highlight><highlight class="stringliteral">&quot;return_buckets&quot;</highlight><highlight class="normal">].get_array().size()<sp/>);</highlight></codeline>
<codeline lineno="5564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>expected_pending_bucket_time.sec_since_epoch(),</highlight></codeline>
<codeline lineno="5565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rex_return_pool[</highlight><highlight class="stringliteral">&quot;pending_bucket_time&quot;</highlight><highlight class="normal">].as&lt;time_point_sec&gt;().sec_since_epoch()<sp/>);</highlight></codeline>
<codeline lineno="5566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>t0<sp/>=<sp/>rex_return_pool[</highlight><highlight class="stringliteral">&quot;pending_bucket_time&quot;</highlight><highlight class="normal">].as&lt;time_point_sec&gt;().sec_since_epoch();</highlight></codeline>
<codeline lineno="5567"><highlight class="normal"></highlight></codeline>
<codeline lineno="5568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::hours(13)<sp/>);</highlight></codeline>
<codeline lineno="5569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rexexec(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/>1<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rex_return_pool<sp/>=<sp/>get_rex_return_pool();</highlight></codeline>
<codeline lineno="5571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>rate<sp/><sp/><sp/><sp/>=<sp/>fee.get_amount()<sp/>/<sp/>total_intervals;</highlight></codeline>
<codeline lineno="5572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>rate,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rex_return_pool[</highlight><highlight class="stringliteral">&quot;current_rate_of_increase&quot;</highlight><highlight class="normal">].as&lt;int64_t&gt;()<sp/>);</highlight></codeline>
<codeline lineno="5573"><highlight class="normal"></highlight></codeline>
<codeline lineno="5574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>t1<sp/>=<sp/>rex_return_pool[</highlight><highlight class="stringliteral">&quot;last_dist_time&quot;</highlight><highlight class="normal">].as&lt;time_point_sec&gt;().sec_since_epoch();</highlight></codeline>
<codeline lineno="5575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/><sp/>change<sp/><sp/><sp/>=<sp/>rate<sp/>*<sp/>((t1-t0)<sp/>/<sp/>dist_interval)<sp/>+<sp/>fee.get_amount()<sp/>%<sp/>total_intervals;</highlight></codeline>
<codeline lineno="5576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/><sp/>expected<sp/>=<sp/>payment.get_amount()<sp/>+<sp/>change;</highlight></codeline>
<codeline lineno="5577"><highlight class="normal"></highlight></codeline>
<codeline lineno="5578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>rex_pool<sp/>=<sp/>get_rex_pool();</highlight></codeline>
<codeline lineno="5579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>expected,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rex_pool[</highlight><highlight class="stringliteral">&quot;total_lendable&quot;</highlight><highlight class="normal">].as&lt;asset&gt;().get_amount()<sp/>);</highlight></codeline>
<codeline lineno="5580"><highlight class="normal"></highlight></codeline>
<codeline lineno="5581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aa1213f0f2c7a53ea968859f3cab582c3" kindref="member">produce_blocks</ref>(<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="5582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::days(25)<sp/>);</highlight></codeline>
<codeline lineno="5583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rexexec(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/>1<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rex_return_pool<sp/>=<sp/>get_rex_return_pool();</highlight></codeline>
<codeline lineno="5585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>rate,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rex_return_pool[</highlight><highlight class="stringliteral">&quot;current_rate_of_increase&quot;</highlight><highlight class="normal">].as&lt;int64_t&gt;()<sp/>);</highlight></codeline>
<codeline lineno="5586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_rex_return_buckets()[</highlight><highlight class="stringliteral">&quot;return_buckets&quot;</highlight><highlight class="normal">].get_array().size()<sp/>);</highlight></codeline>
<codeline lineno="5587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>t2<sp/>=<sp/>rex_return_pool[</highlight><highlight class="stringliteral">&quot;last_dist_time&quot;</highlight><highlight class="normal">].as&lt;time_point_sec&gt;().sec_since_epoch();</highlight></codeline>
<codeline lineno="5588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>change<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>rate<sp/>*<sp/>((t2-t0)<sp/>/<sp/>dist_interval)<sp/>+<sp/>fee.get_amount()<sp/>%<sp/>total_intervals;</highlight></codeline>
<codeline lineno="5589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>expected<sp/><sp/><sp/><sp/>=<sp/>payment.get_amount()<sp/>+<sp/>change;</highlight></codeline>
<codeline lineno="5590"><highlight class="normal"></highlight></codeline>
<codeline lineno="5591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rex_pool<sp/>=<sp/>get_rex_pool();</highlight></codeline>
<codeline lineno="5592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>expected,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rex_pool[</highlight><highlight class="stringliteral">&quot;total_lendable&quot;</highlight><highlight class="normal">].as&lt;asset&gt;().get_amount()<sp/>);</highlight></codeline>
<codeline lineno="5593"><highlight class="normal"></highlight></codeline>
<codeline lineno="5594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aa1213f0f2c7a53ea968859f3cab582c3" kindref="member">produce_blocks</ref>(<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="5595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::days(5)<sp/>);</highlight></codeline>
<codeline lineno="5596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rexexec(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/>1<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5597"><highlight class="normal"></highlight></codeline>
<codeline lineno="5598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rex_return_pool<sp/>=<sp/>get_rex_return_pool();</highlight></codeline>
<codeline lineno="5599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rex_return_pool[</highlight><highlight class="stringliteral">&quot;current_rate_of_increase&quot;</highlight><highlight class="normal">].as&lt;int64_t&gt;()<sp/>);</highlight></codeline>
<codeline lineno="5600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_rex_return_buckets()[</highlight><highlight class="stringliteral">&quot;return_buckets&quot;</highlight><highlight class="normal">].get_array().size()<sp/>);</highlight></codeline>
<codeline lineno="5601"><highlight class="normal"></highlight></codeline>
<codeline lineno="5602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rex_pool<sp/>=<sp/>get_rex_pool();</highlight></codeline>
<codeline lineno="5603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>expected<sp/>=<sp/>payment.get_amount()<sp/>+<sp/>fee.get_amount();</highlight></codeline>
<codeline lineno="5604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>expected,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rex_pool[</highlight><highlight class="stringliteral">&quot;total_lendable&quot;</highlight><highlight class="normal">].as&lt;asset&gt;().get_amount()<sp/>);</highlight></codeline>
<codeline lineno="5605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>rex_pool[</highlight><highlight class="stringliteral">&quot;total_lendable&quot;</highlight><highlight class="normal">].as&lt;asset&gt;(),</highlight></codeline>
<codeline lineno="5606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rex_pool[</highlight><highlight class="stringliteral">&quot;total_unlent&quot;</highlight><highlight class="normal">].as&lt;asset&gt;()<sp/>);</highlight></codeline>
<codeline lineno="5607"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5608"><highlight class="normal"></highlight></codeline>
<codeline lineno="5609"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::hours(1)<sp/>);</highlight></codeline>
<codeline lineno="5610"><highlight class="normal"></highlight></codeline>
<codeline lineno="5611"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>init_lendable<sp/>=<sp/>get_rex_pool()[</highlight><highlight class="stringliteral">&quot;total_lendable&quot;</highlight><highlight class="normal">].as&lt;asset&gt;();</highlight></codeline>
<codeline lineno="5613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>fee<sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;15.0000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rentcpu(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/>fee<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>rex_return_pool<sp/>=<sp/>get_rex_return_pool();</highlight></codeline>
<codeline lineno="5616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>t0<sp/>=<sp/>rex_return_pool[</highlight><highlight class="stringliteral">&quot;last_dist_time&quot;</highlight><highlight class="normal">].as&lt;time_point_sec&gt;().sec_since_epoch();</highlight></codeline>
<codeline lineno="5617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::hours(1)<sp/>);</highlight></codeline>
<codeline lineno="5618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rentnet(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/>fee<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rex_return_pool<sp/>=<sp/>get_rex_return_pool();</highlight></codeline>
<codeline lineno="5620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rex_return_pool[</highlight><highlight class="stringliteral">&quot;current_rate_of_increase&quot;</highlight><highlight class="normal">].as&lt;int64_t&gt;()<sp/>);</highlight></codeline>
<codeline lineno="5621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_rex_return_buckets()[</highlight><highlight class="stringliteral">&quot;return_buckets&quot;</highlight><highlight class="normal">].get_array().size()<sp/>);</highlight></codeline>
<codeline lineno="5622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>t1<sp/>=<sp/>rex_return_pool[</highlight><highlight class="stringliteral">&quot;last_dist_time&quot;</highlight><highlight class="normal">].as&lt;time_point_sec&gt;().sec_since_epoch();</highlight></codeline>
<codeline lineno="5623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>t1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t0<sp/>+<sp/>6<sp/>*<sp/>dist_interval<sp/>);</highlight></codeline>
<codeline lineno="5624"><highlight class="normal"></highlight></codeline>
<codeline lineno="5625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::hours(12)<sp/>);</highlight></codeline>
<codeline lineno="5626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rentnet(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/>fee<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rex_return_pool<sp/>=<sp/>get_rex_return_pool();</highlight></codeline>
<codeline lineno="5628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_rex_return_buckets()[</highlight><highlight class="stringliteral">&quot;return_buckets&quot;</highlight><highlight class="normal">].get_array().size()<sp/>);</highlight></codeline>
<codeline lineno="5629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>rate<sp/>=<sp/>2<sp/>*<sp/>fee.get_amount()<sp/>/<sp/>total_intervals;</highlight></codeline>
<codeline lineno="5630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>rate,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rex_return_pool[</highlight><highlight class="stringliteral">&quot;current_rate_of_increase&quot;</highlight><highlight class="normal">].as&lt;int64_t&gt;()<sp/>);</highlight></codeline>
<codeline lineno="5631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::hours(8)<sp/>);</highlight></codeline>
<codeline lineno="5632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rexexec(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/>1<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rex_return_pool<sp/>=<sp/>get_rex_return_pool();</highlight></codeline>
<codeline lineno="5634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>rate,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rex_return_pool[</highlight><highlight class="stringliteral">&quot;current_rate_of_increase&quot;</highlight><highlight class="normal">].as&lt;int64_t&gt;()<sp/>);</highlight></codeline>
<codeline lineno="5635"><highlight class="normal"></highlight></codeline>
<codeline lineno="5636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::days(30)<sp/>);</highlight></codeline>
<codeline lineno="5637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rexexec(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/>1<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rex_return_pool<sp/>=<sp/>get_rex_return_pool();</highlight></codeline>
<codeline lineno="5639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>fee.get_amount()<sp/>/<sp/>total_intervals,<sp/>rex_return_pool[</highlight><highlight class="stringliteral">&quot;current_rate_of_increase&quot;</highlight><highlight class="normal">].as&lt;int64_t&gt;()<sp/>);</highlight></codeline>
<codeline lineno="5640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>(init_lendable<sp/>+<sp/>fee<sp/>+<sp/>fee).get_amount()<sp/>&lt;<sp/>get_rex_pool()[</highlight><highlight class="stringliteral">&quot;total_lendable&quot;</highlight><highlight class="normal">].as&lt;asset&gt;().get_amount()<sp/>);</highlight></codeline>
<codeline lineno="5641"><highlight class="normal"></highlight></codeline>
<codeline lineno="5642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::days(1)<sp/>);</highlight></codeline>
<codeline lineno="5643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rexexec(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/>1<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rex_return_pool<sp/>=<sp/>get_rex_return_pool();</highlight></codeline>
<codeline lineno="5645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rex_return_pool[</highlight><highlight class="stringliteral">&quot;current_rate_of_increase&quot;</highlight><highlight class="normal">].as&lt;int64_t&gt;()<sp/>);</highlight></codeline>
<codeline lineno="5646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_rex_return_buckets()[</highlight><highlight class="stringliteral">&quot;return_buckets&quot;</highlight><highlight class="normal">].get_array().size()<sp/>);</highlight></codeline>
<codeline lineno="5647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>init_lendable.get_amount()<sp/>+<sp/>3<sp/>*<sp/>fee.get_amount(),</highlight></codeline>
<codeline lineno="5648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_rex_pool()[</highlight><highlight class="stringliteral">&quot;total_lendable&quot;</highlight><highlight class="normal">].as&lt;asset&gt;().get_amount()<sp/>);</highlight></codeline>
<codeline lineno="5649"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5650"><highlight class="normal"></highlight></codeline>
<codeline lineno="5651"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>fee<sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;25.0000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rentcpu(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/>fee<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::hours(13)<sp/>);</highlight></codeline>
<codeline lineno="5655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rexexec(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/>1<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>rex_pool_0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>get_rex_pool();</highlight></codeline>
<codeline lineno="5657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>rex_return_pool_0<sp/>=<sp/>get_rex_return_pool();</highlight></codeline>
<codeline lineno="5658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::minutes(2)<sp/>);</highlight></codeline>
<codeline lineno="5659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rexexec(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/>1<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>rex_pool_1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>get_rex_pool();</highlight></codeline>
<codeline lineno="5661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>rex_return_pool_1<sp/>=<sp/>get_rex_return_pool();</highlight></codeline>
<codeline lineno="5662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>rex_return_pool_0[</highlight><highlight class="stringliteral">&quot;last_dist_time&quot;</highlight><highlight class="normal">].as&lt;time_point_sec&gt;().sec_since_epoch(),</highlight></codeline>
<codeline lineno="5663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rex_return_pool_1[</highlight><highlight class="stringliteral">&quot;last_dist_time&quot;</highlight><highlight class="normal">].as&lt;time_point_sec&gt;().sec_since_epoch()<sp/>);</highlight></codeline>
<codeline lineno="5664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>rex_pool_0[</highlight><highlight class="stringliteral">&quot;total_lendable&quot;</highlight><highlight class="normal">].as&lt;asset&gt;(),</highlight></codeline>
<codeline lineno="5665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rex_pool_1[</highlight><highlight class="stringliteral">&quot;total_lendable&quot;</highlight><highlight class="normal">].as&lt;asset&gt;()<sp/>);</highlight></codeline>
<codeline lineno="5666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::minutes(9)<sp/>);</highlight></codeline>
<codeline lineno="5667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rexexec(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/>1<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>rex_pool_2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>get_rex_pool();</highlight></codeline>
<codeline lineno="5669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>rex_return_pool_2<sp/>=<sp/>get_rex_return_pool();</highlight></codeline>
<codeline lineno="5670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>rex_return_pool_1[</highlight><highlight class="stringliteral">&quot;last_dist_time&quot;</highlight><highlight class="normal">].as&lt;time_point_sec&gt;().sec_since_epoch()<sp/>&lt;</highlight></codeline>
<codeline lineno="5671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rex_return_pool_2[</highlight><highlight class="stringliteral">&quot;last_dist_time&quot;</highlight><highlight class="normal">].as&lt;time_point_sec&gt;().sec_since_epoch()<sp/>);</highlight></codeline>
<codeline lineno="5672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0cbc390d91a035c6e7651a6a0d03f61f" kindref="member">BOOST_TEST_REQUIRE</ref>(<sp/>rex_pool_1[</highlight><highlight class="stringliteral">&quot;total_lendable&quot;</highlight><highlight class="normal">].as&lt;asset&gt;().get_amount()<sp/>&lt;</highlight></codeline>
<codeline lineno="5673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rex_pool_2[</highlight><highlight class="stringliteral">&quot;total_lendable&quot;</highlight><highlight class="normal">].as&lt;asset&gt;().get_amount()<sp/>);</highlight></codeline>
<codeline lineno="5674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::days(31)<sp/>);</highlight></codeline>
<codeline lineno="5675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aa1213f0f2c7a53ea968859f3cab582c3" kindref="member">produce_blocks</ref>(<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="5676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rexexec(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/>1<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_rex_return_buckets()[</highlight><highlight class="stringliteral">&quot;return_buckets&quot;</highlight><highlight class="normal">].get_array().size()<sp/>);</highlight></codeline>
<codeline lineno="5678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_rex_return_pool()[</highlight><highlight class="stringliteral">&quot;current_rate_of_increase&quot;</highlight><highlight class="normal">].as&lt;int64_t&gt;()<sp/>);</highlight></codeline>
<codeline lineno="5679"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5680"><highlight class="normal"></highlight></codeline>
<codeline lineno="5681"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset<sp/>fee<sp/>=<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;30.0000&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>uint8_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>5;<sp/>++i<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rentcpu(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/>fee<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::days(1)<sp/>);</highlight></codeline>
<codeline lineno="5686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rexexec(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/>1<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>5,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_rex_return_buckets()[</highlight><highlight class="stringliteral">&quot;return_buckets&quot;</highlight><highlight class="normal">].get_array().size()<sp/>);</highlight></codeline>
<codeline lineno="5689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a351c378d15285d404d9c767a88dd8ecb" kindref="member">produce_block</ref>(<sp/>fc::days(30)<sp/>);</highlight></codeline>
<codeline lineno="5690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rexexec(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>,<sp/>1<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_rex_return_buckets()[</highlight><highlight class="stringliteral">&quot;return_buckets&quot;</highlight><highlight class="normal">].get_array().size()<sp/>);</highlight></codeline>
<codeline lineno="5692"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5693"><highlight class="normal"></highlight></codeline>
<codeline lineno="5694"><highlight class="normal">}<sp/><ref refid="eosio_8system__tests_8cpp_1a057cb719bfa291fae56dc6ba5fa7a8d1" kindref="member">FC_LOG_AND_RETHROW</ref>()</highlight></codeline>
<codeline lineno="5695"><highlight class="normal"></highlight></codeline>
<codeline lineno="5696"><highlight class="normal"></highlight></codeline>
<codeline lineno="5697"><highlight class="normal"><ref refid="eosio_8powerup__tests_8cpp_1ac6a0c40e40fa78dc772714dae8b97c2e" kindref="member">BOOST_AUTO_TEST_CASE</ref>(<sp/>setabi_bios<sp/>)<sp/><ref refid="eosio_8system__tests_8cpp_1ae89aac94d502abdd3c8d055174c221fc" kindref="member">try</ref><sp/>{</highlight></codeline>
<codeline lineno="5698"><highlight class="normal"><sp/><sp/><sp/>fc::temp_directory<sp/>tempdir;</highlight></codeline>
<codeline lineno="5699"><highlight class="normal"><sp/><sp/><sp/>validating_tester<sp/>t(<sp/>tempdir,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="5700"><highlight class="normal"><sp/><sp/><sp/>t.execute_setup_policy(<sp/>setup_policy::full<sp/>);</highlight></codeline>
<codeline lineno="5701"><highlight class="normal"></highlight></codeline>
<codeline lineno="5702"><highlight class="normal"><sp/><sp/><sp/>abi_serializer<sp/>abi_ser(fc::json::from_string(<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)contracts::bios_abi().data()).</highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>as&lt;abi_def&gt;(),<sp/>abi_serializer::create_yield_function(base_tester::abi_serializer_max_time));</highlight></codeline>
<codeline lineno="5703"><highlight class="normal"><sp/><sp/><sp/>t.set_code(<sp/>config::system_account_name,<sp/>contracts::bios_wasm()<sp/>);</highlight></codeline>
<codeline lineno="5704"><highlight class="normal"><sp/><sp/><sp/>t.set_abi(<sp/>config::system_account_name,<sp/>contracts::bios_abi().data()<sp/>);</highlight></codeline>
<codeline lineno="5705"><highlight class="normal"><sp/><sp/><sp/>t.create_account(</highlight><highlight class="stringliteral">&quot;eosio.token&quot;</highlight><highlight class="normal">_n);</highlight></codeline>
<codeline lineno="5706"><highlight class="normal"><sp/><sp/><sp/>t.set_abi(<sp/></highlight><highlight class="stringliteral">&quot;eosio.token&quot;</highlight><highlight class="normal">_n,<sp/>contracts::token_abi().data()<sp/>);</highlight></codeline>
<codeline lineno="5707"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>res<sp/>=<sp/>t.get_row_by_account(<sp/>config::system_account_name,<sp/>config::system_account_name,<sp/></highlight><highlight class="stringliteral">&quot;abihash&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;eosio.token&quot;</highlight><highlight class="normal">_n<sp/>);</highlight></codeline>
<codeline lineno="5709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__abi__hash" kindref="compound">_abi_hash</ref><sp/>abi_hash;</highlight></codeline>
<codeline lineno="5710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>abi_hash_var<sp/>=<sp/>abi_ser.binary_to_variant(<sp/></highlight><highlight class="stringliteral">&quot;abi_hash&quot;</highlight><highlight class="normal">,<sp/>res,<sp/>abi_serializer::create_yield_function(base_tester::abi_serializer_max_time)<sp/>);</highlight></codeline>
<codeline lineno="5711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>abi_serializer::from_variant(<sp/>abi_hash_var,<sp/>abi_hash,<sp/>t.get_resolver(),<sp/>abi_serializer::create_yield_function(base_tester::abi_serializer_max_time));</highlight></codeline>
<codeline lineno="5712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>abi<sp/>=<sp/>fc::raw::pack(fc::json::from_string(<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)contracts::token_abi().data()).</highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>as&lt;abi_def&gt;());</highlight></codeline>
<codeline lineno="5713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>fc::sha256::hash(<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)abi.data(),<sp/>abi.size()<sp/>);</highlight></codeline>
<codeline lineno="5714"><highlight class="normal"></highlight></codeline>
<codeline lineno="5715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1ae00c608b8a40d03b8b8dd2daac50185b" kindref="member">BOOST_REQUIRE</ref>(<sp/>abi_hash.<ref refid="struct__abi__hash_1a003f02528a5370378b9e6d497116030a" kindref="member">hash</ref><sp/>==<sp/>result<sp/>);</highlight></codeline>
<codeline lineno="5716"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5717"><highlight class="normal"></highlight></codeline>
<codeline lineno="5718"><highlight class="normal"><sp/><sp/><sp/>t.set_abi(<sp/></highlight><highlight class="stringliteral">&quot;eosio.token&quot;</highlight><highlight class="normal">_n,<sp/>contracts::system_abi().data()<sp/>);</highlight></codeline>
<codeline lineno="5719"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>res<sp/>=<sp/>t.get_row_by_account(<sp/>config::system_account_name,<sp/>config::system_account_name,<sp/></highlight><highlight class="stringliteral">&quot;abihash&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;eosio.token&quot;</highlight><highlight class="normal">_n<sp/>);</highlight></codeline>
<codeline lineno="5721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__abi__hash" kindref="compound">_abi_hash</ref><sp/>abi_hash;</highlight></codeline>
<codeline lineno="5722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>abi_hash_var<sp/>=<sp/>abi_ser.binary_to_variant(<sp/></highlight><highlight class="stringliteral">&quot;abi_hash&quot;</highlight><highlight class="normal">,<sp/>res,<sp/>abi_serializer::create_yield_function(base_tester::abi_serializer_max_time)<sp/>);</highlight></codeline>
<codeline lineno="5723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>abi_serializer::from_variant(<sp/>abi_hash_var,<sp/>abi_hash,<sp/>t.get_resolver(),<sp/>abi_serializer::create_yield_function(base_tester::abi_serializer_max_time));</highlight></codeline>
<codeline lineno="5724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>abi<sp/>=<sp/>fc::raw::pack(fc::json::from_string(<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)contracts::system_abi().data()).</highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>as&lt;abi_def&gt;());</highlight></codeline>
<codeline lineno="5725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>fc::sha256::hash(<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)abi.data(),<sp/>abi.size()<sp/>);</highlight></codeline>
<codeline lineno="5726"><highlight class="normal"></highlight></codeline>
<codeline lineno="5727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1ae00c608b8a40d03b8b8dd2daac50185b" kindref="member">BOOST_REQUIRE</ref>(<sp/>abi_hash.<ref refid="struct__abi__hash_1a003f02528a5370378b9e6d497116030a" kindref="member">hash</ref><sp/>==<sp/>result<sp/>);</highlight></codeline>
<codeline lineno="5728"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5729"><highlight class="normal">}<sp/><ref refid="eosio_8system__tests_8cpp_1a057cb719bfa291fae56dc6ba5fa7a8d1" kindref="member">FC_LOG_AND_RETHROW</ref>()</highlight></codeline>
<codeline lineno="5730"><highlight class="normal"></highlight></codeline>
<codeline lineno="5731"><highlight class="normal"><ref refid="eosio_8system__tests_8cpp_1a8a1841911da283583ec346df954d73a1" kindref="member">BOOST_FIXTURE_TEST_CASE</ref>(<sp/>setabi,<sp/><ref refid="classeosio__system_1_1eosio__system__tester" kindref="compound">eosio_system_tester</ref><sp/>)<sp/><ref refid="eosio_8system__tests_8cpp_1ae89aac94d502abdd3c8d055174c221fc" kindref="member">try</ref><sp/>{</highlight></codeline>
<codeline lineno="5732"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0f8cd25d26c0286f6b3a6294bc146f51" kindref="member">set_abi</ref>(<sp/></highlight><highlight class="stringliteral">&quot;eosio.token&quot;</highlight><highlight class="normal">_n,<sp/>contracts::token_abi().data()<sp/>);</highlight></codeline>
<codeline lineno="5733"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>res<sp/>=<sp/>get_row_by_account(<sp/>config::system_account_name,<sp/>config::system_account_name,<sp/></highlight><highlight class="stringliteral">&quot;abihash&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;eosio.token&quot;</highlight><highlight class="normal">_n<sp/>);</highlight></codeline>
<codeline lineno="5735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__abi__hash" kindref="compound">_abi_hash</ref><sp/>abi_hash;</highlight></codeline>
<codeline lineno="5736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>abi_hash_var<sp/>=<sp/>abi_ser.binary_to_variant(<sp/></highlight><highlight class="stringliteral">&quot;abi_hash&quot;</highlight><highlight class="normal">,<sp/>res,<sp/>abi_serializer::create_yield_function(abi_serializer_max_time)<sp/>);</highlight></codeline>
<codeline lineno="5737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>abi_serializer::from_variant(<sp/>abi_hash_var,<sp/>abi_hash,<sp/>get_resolver(),<sp/>abi_serializer::create_yield_function(abi_serializer_max_time));</highlight></codeline>
<codeline lineno="5738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>abi<sp/>=<sp/>fc::raw::pack(fc::json::from_string(<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)contracts::token_abi().data()).</highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>as&lt;abi_def&gt;());</highlight></codeline>
<codeline lineno="5739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>fc::sha256::hash(<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)abi.data(),<sp/>abi.size()<sp/>);</highlight></codeline>
<codeline lineno="5740"><highlight class="normal"></highlight></codeline>
<codeline lineno="5741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1ae00c608b8a40d03b8b8dd2daac50185b" kindref="member">BOOST_REQUIRE</ref>(<sp/>abi_hash.<ref refid="struct__abi__hash_1a003f02528a5370378b9e6d497116030a" kindref="member">hash</ref><sp/>==<sp/>result<sp/>);</highlight></codeline>
<codeline lineno="5742"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5743"><highlight class="normal"></highlight></codeline>
<codeline lineno="5744"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a0f8cd25d26c0286f6b3a6294bc146f51" kindref="member">set_abi</ref>(<sp/></highlight><highlight class="stringliteral">&quot;eosio.token&quot;</highlight><highlight class="normal">_n,<sp/>contracts::system_abi().data()<sp/>);</highlight></codeline>
<codeline lineno="5745"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>res<sp/>=<sp/>get_row_by_account(<sp/>config::system_account_name,<sp/>config::system_account_name,<sp/></highlight><highlight class="stringliteral">&quot;abihash&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;eosio.token&quot;</highlight><highlight class="normal">_n<sp/>);</highlight></codeline>
<codeline lineno="5747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__abi__hash" kindref="compound">_abi_hash</ref><sp/>abi_hash;</highlight></codeline>
<codeline lineno="5748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>abi_hash_var<sp/>=<sp/>abi_ser.binary_to_variant(<sp/></highlight><highlight class="stringliteral">&quot;abi_hash&quot;</highlight><highlight class="normal">,<sp/>res,<sp/>abi_serializer::create_yield_function(abi_serializer_max_time)<sp/>);</highlight></codeline>
<codeline lineno="5749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>abi_serializer::from_variant(<sp/>abi_hash_var,<sp/>abi_hash,<sp/>get_resolver(),<sp/>abi_serializer::create_yield_function(abi_serializer_max_time));</highlight></codeline>
<codeline lineno="5750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>abi<sp/>=<sp/>fc::raw::pack(fc::json::from_string(<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)contracts::system_abi().data()).</highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>as&lt;abi_def&gt;());</highlight></codeline>
<codeline lineno="5751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>fc::sha256::hash(<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)abi.data(),<sp/>abi.size()<sp/>);</highlight></codeline>
<codeline lineno="5752"><highlight class="normal"></highlight></codeline>
<codeline lineno="5753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1ae00c608b8a40d03b8b8dd2daac50185b" kindref="member">BOOST_REQUIRE</ref>(<sp/>abi_hash.<ref refid="struct__abi__hash_1a003f02528a5370378b9e6d497116030a" kindref="member">hash</ref><sp/>==<sp/>result<sp/>);</highlight></codeline>
<codeline lineno="5754"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5755"><highlight class="normal"></highlight></codeline>
<codeline lineno="5756"><highlight class="normal">}<sp/><ref refid="eosio_8system__tests_8cpp_1a057cb719bfa291fae56dc6ba5fa7a8d1" kindref="member">FC_LOG_AND_RETHROW</ref>()</highlight></codeline>
<codeline lineno="5757"><highlight class="normal"></highlight></codeline>
<codeline lineno="5758"><highlight class="normal"><ref refid="eosio_8system__tests_8cpp_1a8a1841911da283583ec346df954d73a1" kindref="member">BOOST_FIXTURE_TEST_CASE</ref>(<sp/>change_limited_account_back_to_unlimited,<sp/><ref refid="classeosio__system_1_1eosio__system__tester" kindref="compound">eosio_system_tester</ref><sp/>)<sp/><ref refid="eosio_8system__tests_8cpp_1ae89aac94d502abdd3c8d055174c221fc" kindref="member">try</ref><sp/>{</highlight></codeline>
<codeline lineno="5759"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1ae00c608b8a40d03b8b8dd2daac50185b" kindref="member">BOOST_REQUIRE</ref>(<sp/>get_total_stake(<sp/></highlight><highlight class="stringliteral">&quot;eosio&quot;</highlight><highlight class="normal"><sp/>).is_null()<sp/>);</highlight></codeline>
<codeline lineno="5760"><highlight class="normal"></highlight></codeline>
<codeline lineno="5761"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a792dc87878d55cfa11f862e9e6d5cc05" kindref="member">transfer</ref>(<sp/></highlight><highlight class="stringliteral">&quot;eosio&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1.0000&quot;</highlight><highlight class="normal">)<sp/>);</highlight></codeline>
<codeline lineno="5762"><highlight class="normal"></highlight></codeline>
<codeline lineno="5763"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>error_msg<sp/>=<sp/>stake(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;eosio&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;0.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1.0000&quot;</highlight><highlight class="normal">)<sp/>);</highlight></codeline>
<codeline lineno="5764"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>semicolon_pos<sp/>=<sp/>error_msg.find(</highlight><highlight class="charliteral">&apos;;&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5765"><highlight class="normal"></highlight></codeline>
<codeline lineno="5766"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>error(</highlight><highlight class="stringliteral">&quot;account<sp/>eosio<sp/>has<sp/>insufficient<sp/>ram&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="5767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error_msg.substr(0,<sp/>semicolon_pos)<sp/>);</highlight></codeline>
<codeline lineno="5768"><highlight class="normal"></highlight></codeline>
<codeline lineno="5769"><highlight class="normal"><sp/><sp/><sp/>int64_t<sp/>ram_bytes_needed<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5770"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::istringstream<sp/>s(<sp/>error_msg<sp/>);</highlight></codeline>
<codeline lineno="5772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s.seekg(<sp/>semicolon_pos<sp/>+<sp/>7,<sp/>std::ios_base::beg<sp/>);</highlight></codeline>
<codeline lineno="5773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>&gt;&gt;<sp/>ram_bytes_needed;</highlight></codeline>
<codeline lineno="5774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ram_bytes_needed<sp/>+=<sp/>256;<sp/></highlight><highlight class="comment">//<sp/>enough<sp/>room<sp/>to<sp/>cover<sp/>total_resources_table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5775"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5776"><highlight class="normal"></highlight></codeline>
<codeline lineno="5777"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(<sp/></highlight><highlight class="stringliteral">&quot;eosio&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;setalimits&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()</highlight></codeline>
<codeline lineno="5778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;account&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;eosio&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="5779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;ram_bytes&quot;</highlight><highlight class="normal">,<sp/>ram_bytes_needed)</highlight></codeline>
<codeline lineno="5780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;net_weight&quot;</highlight><highlight class="normal">,<sp/>-1)</highlight></codeline>
<codeline lineno="5781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;cpu_weight&quot;</highlight><highlight class="normal">,<sp/>-1)</highlight></codeline>
<codeline lineno="5782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="5783"><highlight class="normal"></highlight></codeline>
<codeline lineno="5784"><highlight class="normal"><sp/><sp/><sp/>stake(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;eosio&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;0.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1.0000&quot;</highlight><highlight class="normal">)<sp/>);</highlight></codeline>
<codeline lineno="5785"><highlight class="normal"></highlight></codeline>
<codeline lineno="5786"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1abf3d4eb475605f9a73224e835cd3fb71" kindref="member">REQUIRE_MATCHING_OBJECT</ref>(<sp/>get_total_stake(<sp/></highlight><highlight class="stringliteral">&quot;eosio&quot;</highlight><highlight class="normal"><sp/>),<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()</highlight></codeline>
<codeline lineno="5787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;owner&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;eosio&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="5788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;net_weight&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;0.0000&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="5789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;cpu_weight&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1.0000&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="5790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;ram_bytes&quot;</highlight><highlight class="normal">,<sp/><sp/>0)</highlight></codeline>
<codeline lineno="5791"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="5792"><highlight class="normal"></highlight></codeline>
<codeline lineno="5793"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(<sp/></highlight><highlight class="stringliteral">&quot;only<sp/>supports<sp/>unlimited<sp/>accounts&quot;</highlight><highlight class="normal"><sp/>),</highlight></codeline>
<codeline lineno="5794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(<sp/></highlight><highlight class="stringliteral">&quot;eosio&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;setalimits&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()</highlight></codeline>
<codeline lineno="5795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;account&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;eosio&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="5796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;ram_bytes&quot;</highlight><highlight class="normal">,<sp/>ram_bytes_needed)</highlight></codeline>
<codeline lineno="5797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;net_weight&quot;</highlight><highlight class="normal">,<sp/>-1)</highlight></codeline>
<codeline lineno="5798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;cpu_weight&quot;</highlight><highlight class="normal">,<sp/>-1)</highlight></codeline>
<codeline lineno="5799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="5800"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="5801"><highlight class="normal"></highlight></codeline>
<codeline lineno="5802"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>error(<sp/></highlight><highlight class="stringliteral">&quot;transaction<sp/>net<sp/>usage<sp/>is<sp/>too<sp/>high:<sp/>128<sp/>&gt;<sp/>0&quot;</highlight><highlight class="normal"><sp/>),</highlight></codeline>
<codeline lineno="5803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(<sp/></highlight><highlight class="stringliteral">&quot;eosio&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;setalimits&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()</highlight></codeline>
<codeline lineno="5804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;account&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;eosio.saving&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="5805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;ram_bytes&quot;</highlight><highlight class="normal">,<sp/>-1)</highlight></codeline>
<codeline lineno="5806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;net_weight&quot;</highlight><highlight class="normal">,<sp/>-1)</highlight></codeline>
<codeline lineno="5807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;cpu_weight&quot;</highlight><highlight class="normal">,<sp/>-1)</highlight></codeline>
<codeline lineno="5808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="5809"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="5810"><highlight class="normal"></highlight></codeline>
<codeline lineno="5811"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),</highlight></codeline>
<codeline lineno="5812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(<sp/></highlight><highlight class="stringliteral">&quot;eosio&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;setacctnet&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()</highlight></codeline>
<codeline lineno="5813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;account&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;eosio&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="5814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;net_weight&quot;</highlight><highlight class="normal">,<sp/>-1)</highlight></codeline>
<codeline lineno="5815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="5816"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="5817"><highlight class="normal"></highlight></codeline>
<codeline lineno="5818"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),</highlight></codeline>
<codeline lineno="5819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(<sp/></highlight><highlight class="stringliteral">&quot;eosio&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;setacctcpu&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()</highlight></codeline>
<codeline lineno="5820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;account&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;eosio&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="5821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;cpu_weight&quot;</highlight><highlight class="normal">,<sp/>-1)</highlight></codeline>
<codeline lineno="5822"><highlight class="normal"></highlight></codeline>
<codeline lineno="5823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="5824"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="5825"><highlight class="normal"></highlight></codeline>
<codeline lineno="5826"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),</highlight></codeline>
<codeline lineno="5827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(<sp/></highlight><highlight class="stringliteral">&quot;eosio&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;setalimits&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()</highlight></codeline>
<codeline lineno="5828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;account&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;eosio.saving&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="5829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;ram_bytes&quot;</highlight><highlight class="normal">,<sp/>ram_bytes_needed)</highlight></codeline>
<codeline lineno="5830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;net_weight&quot;</highlight><highlight class="normal">,<sp/>-1)</highlight></codeline>
<codeline lineno="5831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;cpu_weight&quot;</highlight><highlight class="normal">,<sp/>-1)</highlight></codeline>
<codeline lineno="5832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="5833"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="5834"><highlight class="normal"></highlight></codeline>
<codeline lineno="5835"><highlight class="normal">}<sp/><ref refid="eosio_8system__tests_8cpp_1a057cb719bfa291fae56dc6ba5fa7a8d1" kindref="member">FC_LOG_AND_RETHROW</ref>()</highlight></codeline>
<codeline lineno="5836"><highlight class="normal"></highlight></codeline>
<codeline lineno="5837"><highlight class="normal"><ref refid="eosio_8system__tests_8cpp_1a8a1841911da283583ec346df954d73a1" kindref="member">BOOST_FIXTURE_TEST_CASE</ref>(<sp/>buy_pin_sell_ram,<sp/><ref refid="classeosio__system_1_1eosio__system__tester" kindref="compound">eosio_system_tester</ref><sp/>)<sp/><ref refid="eosio_8system__tests_8cpp_1ae89aac94d502abdd3c8d055174c221fc" kindref="member">try</ref><sp/>{</highlight></codeline>
<codeline lineno="5838"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1ae00c608b8a40d03b8b8dd2daac50185b" kindref="member">BOOST_REQUIRE</ref>(<sp/>get_total_stake(<sp/></highlight><highlight class="stringliteral">&quot;eosio&quot;</highlight><highlight class="normal"><sp/>).is_null()<sp/>);</highlight></codeline>
<codeline lineno="5839"><highlight class="normal"></highlight></codeline>
<codeline lineno="5840"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1a792dc87878d55cfa11f862e9e6d5cc05" kindref="member">transfer</ref>(<sp/></highlight><highlight class="stringliteral">&quot;eosio&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;1020.0000&quot;</highlight><highlight class="normal">)<sp/>);</highlight></codeline>
<codeline lineno="5841"><highlight class="normal"></highlight></codeline>
<codeline lineno="5842"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>error_msg<sp/>=<sp/>stake(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;eosio&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;10.0000&quot;</highlight><highlight class="normal">),<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;10.0000&quot;</highlight><highlight class="normal">)<sp/>);</highlight></codeline>
<codeline lineno="5843"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>semicolon_pos<sp/>=<sp/>error_msg.find(</highlight><highlight class="charliteral">&apos;;&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5844"><highlight class="normal"></highlight></codeline>
<codeline lineno="5845"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>error(</highlight><highlight class="stringliteral">&quot;account<sp/>eosio<sp/>has<sp/>insufficient<sp/>ram&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="5846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error_msg.substr(0,<sp/>semicolon_pos)<sp/>);</highlight></codeline>
<codeline lineno="5847"><highlight class="normal"></highlight></codeline>
<codeline lineno="5848"><highlight class="normal"><sp/><sp/><sp/>int64_t<sp/>ram_bytes_needed<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5849"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::istringstream<sp/>s(<sp/>error_msg<sp/>);</highlight></codeline>
<codeline lineno="5851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s.seekg(<sp/>semicolon_pos<sp/>+<sp/>7,<sp/>std::ios_base::beg<sp/>);</highlight></codeline>
<codeline lineno="5852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>&gt;&gt;<sp/>ram_bytes_needed;</highlight></codeline>
<codeline lineno="5853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ram_bytes_needed<sp/>+=<sp/>ram_bytes_needed/10;<sp/></highlight><highlight class="comment">//<sp/>enough<sp/>buffer<sp/>to<sp/>make<sp/>up<sp/>for<sp/>buyrambytes<sp/>estimation<sp/>errors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5854"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5855"><highlight class="normal"></highlight></codeline>
<codeline lineno="5856"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>alice_original_balance<sp/>=<sp/>get_balance(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n<sp/>);</highlight></codeline>
<codeline lineno="5857"><highlight class="normal"></highlight></codeline>
<codeline lineno="5858"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>buyrambytes(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;eosio&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint32_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(ram_bytes_needed)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5859"><highlight class="normal"></highlight></codeline>
<codeline lineno="5860"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tokens_paid_for_ram<sp/>=<sp/>alice_original_balance<sp/>-<sp/>get_balance(<sp/></highlight><highlight class="stringliteral">&quot;alice1111111&quot;</highlight><highlight class="normal">_n<sp/>);</highlight></codeline>
<codeline lineno="5861"><highlight class="normal"></highlight></codeline>
<codeline lineno="5862"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>total_res<sp/>=<sp/>get_total_stake(<sp/></highlight><highlight class="stringliteral">&quot;eosio&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="5863"><highlight class="normal"></highlight></codeline>
<codeline lineno="5864"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1abf3d4eb475605f9a73224e835cd3fb71" kindref="member">REQUIRE_MATCHING_OBJECT</ref>(<sp/>total_res,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()</highlight></codeline>
<codeline lineno="5865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;owner&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;eosio&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="5866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;net_weight&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;0.0000&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="5867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;cpu_weight&quot;</highlight><highlight class="normal">,<sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;0.0000&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="5868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;ram_bytes&quot;</highlight><highlight class="normal">,<sp/><sp/>total_res[</highlight><highlight class="stringliteral">&quot;ram_bytes&quot;</highlight><highlight class="normal">].as_int64()<sp/>)</highlight></codeline>
<codeline lineno="5869"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="5870"><highlight class="normal"></highlight></codeline>
<codeline lineno="5871"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(<sp/></highlight><highlight class="stringliteral">&quot;only<sp/>supports<sp/>unlimited<sp/>accounts&quot;</highlight><highlight class="normal"><sp/>),</highlight></codeline>
<codeline lineno="5872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(<sp/></highlight><highlight class="stringliteral">&quot;eosio&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;setalimits&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()</highlight></codeline>
<codeline lineno="5873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;account&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;eosio&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="5874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;ram_bytes&quot;</highlight><highlight class="normal">,<sp/>ram_bytes_needed)</highlight></codeline>
<codeline lineno="5875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;net_weight&quot;</highlight><highlight class="normal">,<sp/>-1)</highlight></codeline>
<codeline lineno="5876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;cpu_weight&quot;</highlight><highlight class="normal">,<sp/>-1)</highlight></codeline>
<codeline lineno="5877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="5878"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="5879"><highlight class="normal"></highlight></codeline>
<codeline lineno="5880"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),</highlight></codeline>
<codeline lineno="5881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(<sp/></highlight><highlight class="stringliteral">&quot;eosio&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;setacctram&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()</highlight></codeline>
<codeline lineno="5882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;account&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;eosio&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="5883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;ram_bytes&quot;</highlight><highlight class="normal">,<sp/>total_res[</highlight><highlight class="stringliteral">&quot;ram_bytes&quot;</highlight><highlight class="normal">].as_int64()<sp/>)</highlight></codeline>
<codeline lineno="5884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="5885"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="5886"><highlight class="normal"></highlight></codeline>
<codeline lineno="5887"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>eosio_original_balance<sp/>=<sp/>get_balance(<sp/></highlight><highlight class="stringliteral">&quot;eosio&quot;</highlight><highlight class="normal">_n<sp/>);</highlight></codeline>
<codeline lineno="5888"><highlight class="normal"></highlight></codeline>
<codeline lineno="5889"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1aedc81c5070dc48a6b8719cc81130e2cf" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>sellram(<sp/></highlight><highlight class="stringliteral">&quot;eosio&quot;</highlight><highlight class="normal">_n,<sp/>total_res[</highlight><highlight class="stringliteral">&quot;ram_bytes&quot;</highlight><highlight class="normal">].as_int64()<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5890"><highlight class="normal"></highlight></codeline>
<codeline lineno="5891"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tokens_received_by_selling_ram<sp/>=<sp/>get_balance(<sp/></highlight><highlight class="stringliteral">&quot;eosio&quot;</highlight><highlight class="normal">_n<sp/>)<sp/>-<sp/>eosio_original_balance;</highlight></codeline>
<codeline lineno="5892"><highlight class="normal"></highlight></codeline>
<codeline lineno="5893"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1ae00c608b8a40d03b8b8dd2daac50185b" kindref="member">BOOST_REQUIRE</ref>(<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">(tokens_paid_for_ram.get_amount()<sp/>-<sp/>tokens_received_by_selling_ram.get_amount())<sp/>/<sp/>tokens_paid_for_ram.get_amount()<sp/>&lt;<sp/>0.01<sp/>);</highlight></codeline>
<codeline lineno="5894"><highlight class="normal"></highlight></codeline>
<codeline lineno="5895"><highlight class="normal">}<sp/><ref refid="eosio_8system__tests_8cpp_1a057cb719bfa291fae56dc6ba5fa7a8d1" kindref="member">FC_LOG_AND_RETHROW</ref>()</highlight></codeline>
<codeline lineno="5896"><highlight class="normal"></highlight></codeline>
<codeline lineno="5897"><highlight class="normal">BOOST_AUTO_TEST_SUITE_END()</highlight></codeline>
    </programlisting>
    <location file="system/tests/eosio.system_tests.cpp"/>
  </compounddef>
</doxygen>
