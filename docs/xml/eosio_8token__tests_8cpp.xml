<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="eosio_8token__tests_8cpp" kind="file" language="C++">
    <compoundname>eosio.token_tests.cpp</compoundname>
    <includes local="no">boost/test/unit_test.hpp</includes>
    <includes local="no">eosio/testing/tester.hpp</includes>
    <includes local="no">eosio/chain/abi_serializer.hpp</includes>
    <includes refid="eosio_8system__tester_8hpp" local="yes">eosio.system_tester.hpp</includes>
    <includes local="no">fc/variant_object.hpp</includes>
    <incdepgraph>
      <node id="5">
        <label>eosio.system_tester.hpp</label>
        <link refid="eosio_8system__tester_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>system/tests/eosio.token_tests.cpp</label>
        <link refid="eosio_8token__tests_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>test_symbol.hpp</label>
        <link refid="test__symbol_8hpp"/>
      </node>
      <node id="2">
        <label>boost/test/unit_test.hpp</label>
      </node>
      <node id="7">
        <label>contracts.hpp</label>
      </node>
      <node id="4">
        <label>eosio/chain/abi_serializer.hpp</label>
      </node>
      <node id="6">
        <label>eosio/chain/resource_limits.hpp</label>
      </node>
      <node id="3">
        <label>eosio/testing/tester.hpp</label>
      </node>
      <node id="9">
        <label>fc/variant_object.hpp</label>
      </node>
      <node id="10">
        <label>fstream</label>
      </node>
    </incdepgraph>
    <innerclass refid="classeosio__token__tester" prot="public">eosio_token_tester</innerclass>
    <innernamespace refid="namespacestd">std</innernamespace>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="eosio_8token__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" prot="public" static="no">
        <type>fc::mutable_variant_object</type>
        <definition>using mvo =  fc::mutable_variant_object</definition>
        <argsstring></argsstring>
        <name>mvo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.token_tests.cpp" line="15" column="1" bodyfile="system/tests/eosio.token_tests.cpp" bodystart="15" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="eosio_8token__tests_8cpp_1a252a093241881c670c623766dad744a7" prot="public" static="no" mutable="no">
        <type><ref refid="classeosio__token__tester" kindref="compound">eosio_token_tester</ref></type>
        <definition>eosio_token_tester try</definition>
        <argsstring></argsstring>
        <name>try</name>
        <initializer>{

   <ref refid="eosio_8token__tests_8cpp_1a46b29f811a6dedfa9964a853ce91b8aa" kindref="member">BOOST_REQUIRE_EQUAL</ref>( wasm_assert_msg( &quot;max-<ref refid="eosio_8token__tests_8cpp_1ad37587c54682d8fea3f46f4976e16437" kindref="member">supply</ref> must be positive&quot; ),
      create( &quot;alice&quot;_n, asset::from_string(&quot;-1000.000 TKN&quot;))
   )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.token_tests.cpp" line="137" column="23" bodyfile="system/tests/eosio.token_tests.cpp" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="eosio_8token__tests_8cpp_1a87d43fed927b93f47439ba7c2dfa7cc5" prot="public" static="no" mutable="no">
        <type>auto</type>
        <definition>auto stats</definition>
        <argsstring></argsstring>
        <name>stats</name>
        <initializer>= get_stats(&quot;0,TKN&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.token_tests.cpp" line="148" column="9" bodyfile="system/tests/eosio.token_tests.cpp" bodystart="148" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="eosio_8token__tests_8cpp_1ad37587c54682d8fea3f46f4976e16437" prot="public" static="no" mutable="no">
        <type></type>
        <definition>supply</definition>
        <argsstring></argsstring>
        <name>supply</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.token_tests.cpp" line="150" column="7" bodyfile="system/tests/eosio.token_tests.cpp" bodystart="150" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="eosio_8token__tests_8cpp_1a579e43b423b454623383471aeb85cd87" prot="public" static="no" mutable="no">
        <type></type>
        <definition>alice</definition>
        <argsstring></argsstring>
        <name>alice</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.token_tests.cpp" line="152" column="8" bodyfile="system/tests/eosio.token_tests.cpp" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="eosio_8token__tests_8cpp_1aca469ae89ae00a572ad079f6d8515ce1" prot="public" static="no" mutable="no">
        <type>share_type</type>
        <definition>share_type amount</definition>
        <argsstring></argsstring>
        <name>amount</name>
        <initializer>= 4611686018427387904</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.token_tests.cpp" line="174" column="15" bodyfile="system/tests/eosio.token_tests.cpp" bodystart="174" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="eosio_8token__tests_8cpp_1a54bd321d217ff05fcad3aedd0684e86d" prot="public" static="no" mutable="no">
        <type>auto</type>
        <definition>auto alice_balance</definition>
        <argsstring></argsstring>
        <name>alice_balance</name>
        <initializer>= get_account(&quot;alice&quot;_n, &quot;3,TKN&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.token_tests.cpp" line="224" column="9" bodyfile="system/tests/eosio.token_tests.cpp" bodystart="224" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="eosio_8token__tests_8cpp_1a1e7ef09ce66d09456a55c47a8c42f3dc" prot="public" static="no" mutable="no">
        <type></type>
        <definition>balance</definition>
        <argsstring></argsstring>
        <name>balance</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.token_tests.cpp" line="226" column="7" bodyfile="system/tests/eosio.token_tests.cpp" bodystart="226" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="eosio_8token__tests_8cpp_1a27ba645140ec5c88bd61e99209196426" prot="public" static="no" mutable="no">
        <type></type>
        <definition>TKN</definition>
        <argsstring></argsstring>
        <name>TKN</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.token_tests.cpp" line="226" column="16" bodyfile="system/tests/eosio.token_tests.cpp" bodystart="227" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="eosio_8token__tests_8cpp_1aaa96d1624559aa183710c7bf52c5b381" prot="public" static="no" mutable="no">
        <type></type>
        <definition>CERO</definition>
        <argsstring></argsstring>
        <name>CERO</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.token_tests.cpp" line="317" column="16" bodyfile="system/tests/eosio.token_tests.cpp" bodystart="318" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="eosio_8token__tests_8cpp_1a5a019cb4a1bf97a4fc1f6f27fe1c7469" prot="public" static="no" mutable="no">
        <type>auto</type>
        <definition>auto bob_balance</definition>
        <argsstring></argsstring>
        <name>bob_balance</name>
        <initializer>= get_account(&quot;bob&quot;_n, &quot;0,CERO&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.token_tests.cpp" line="329" column="9" bodyfile="system/tests/eosio.token_tests.cpp" bodystart="329" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="eosio_8token__tests_8cpp_1a22ac78b4a13caada70ea38e67eea0e6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_FIXTURE_TEST_CASE</definition>
        <argsstring>(create_tests, eosio_token_tester)</argsstring>
        <name>BOOST_FIXTURE_TEST_CASE</name>
        <param>
          <type>create_tests</type>
        </param>
        <param>
          <type><ref refid="classeosio__token__tester" kindref="compound">eosio_token_tester</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.token_tests.cpp" line="124" column="1" bodyfile="system/tests/eosio.token_tests.cpp" bodystart="124" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8token__tests_8cpp_1af5bf52e9919e348118ed7570478adaac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FC_LOG_AND_RETHROW</definition>
        <argsstring>() BOOST_FIXTURE_TEST_CASE(create_negative_max_supply</argsstring>
        <name>FC_LOG_AND_RETHROW</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.token_tests.cpp" line="135" column="2"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8token__tests_8cpp_1ad0e6fb7a3e85c7795816da82d2af313c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TKN</definition>
        <argsstring>(&quot;max_supply&quot;, &quot;100 TKN&quot;)(&quot;issuer&quot;</argsstring>
        <name>TKN</name>
        <param>
          <type>&quot;max_supply&quot;</type>
        </param>
        <param>
          <type>&quot;100 TKN&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.token_tests.cpp" line="150" column="15"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8token__tests_8cpp_1a95fdc8cfd66a090d82b4c0b12470bce9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>produce_blocks</definition>
        <argsstring>(1)</argsstring>
        <name>produce_blocks</name>
        <param>
          <type>1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.token_tests.cpp" line="154" column="4" declfile="system/tests/eosio.token_tests.cpp" declline="154" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8token__tests_8cpp_1a33ea5666e328012a7aab703d950837d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(wasm_assert_msg(&quot;token with symbol already exists&quot;), create(&quot;alice&quot;_n, asset::from_string(&quot;100 TKN&quot;)))</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type>wasm_assert_msg(&quot;token with symbol already exists&quot;)</type>
        </param>
        <param>
          <type>create(&quot;alice&quot;_n, asset::from_string(&quot;100 TKN&quot;))</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.token_tests.cpp" line="156" column="4" declfile="system/tests/eosio.token_tests.cpp" declline="156" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8token__tests_8cpp_1adf788828ad378b4cdf03de672e18ab49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TKN</definition>
        <argsstring>(&quot;max_supply&quot;, &quot;4611686018427387903 TKN&quot;)(&quot;issuer&quot;</argsstring>
        <name>TKN</name>
        <param>
          <type>&quot;max_supply&quot;</type>
        </param>
        <param>
          <type>&quot;4611686018427387903 TKN&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.token_tests.cpp" line="167" column="15"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8token__tests_8cpp_1a92759dbaf055ca451db93a2d11393122" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>asset</type>
        <definition>asset max</definition>
        <argsstring>(10, symbol(SY(0, NKT)))</argsstring>
        <name>max</name>
        <param>
          <type>10</type>
        </param>
        <param>
          <type>symbol(SY(0, NKT))</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.token_tests.cpp" line="173" column="10" declfile="system/tests/eosio.token_tests.cpp" declline="173" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8token__tests_8cpp_1a198a12b0d692958ae8d6a39e98bcc679" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>memcpy &amp;</type>
        <definition>memcpy &amp; max</definition>
        <argsstring>(share_type)</argsstring>
        <name>max</name>
        <param>
          <type>share_type</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.token_tests.cpp" line="177" column="4" declfile="system/tests/eosio.token_tests.cpp" declline="177" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8token__tests_8cpp_1a370f5e618a9eb0a9f4d8a40786599368" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_CHECK_EXCEPTION</definition>
        <argsstring>(create(&quot;alice&quot;_n, max), asset_type_exception, [](const asset_type_exception &amp;e) { return expect_assert_message(e, &quot;magnitude of asset amount must be less than 2^62&quot;);})</argsstring>
        <name>BOOST_CHECK_EXCEPTION</name>
        <param>
          <type>create(&quot;alice&quot;_n, <ref refid="eosio_8token__tests_8cpp_1a198a12b0d692958ae8d6a39e98bcc679" kindref="member">max</ref>)</type>
        </param>
        <param>
          <type>asset_type_exception</type>
        </param>
        <param>
          <attributes>[]</attributes>
          <type>(const asset_type_exception &amp;e) { return expect_assert_message(e, &quot;magnitude of asset <ref refid="eosio_8token__tests_8cpp_1aca469ae89ae00a572ad079f6d8515ce1" kindref="member">amount</ref> must be less than 2^62&quot;);}</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.token_tests.cpp" line="179" column="4" declfile="system/tests/eosio.token_tests.cpp" declline="179" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8token__tests_8cpp_1a57c390184c0d343329c58308b701bf68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TKN</definition>
        <argsstring>(&quot;max_supply&quot;, &quot;1.000000000000000000 TKN&quot;)(&quot;issuer&quot;</argsstring>
        <name>TKN</name>
        <param>
          <type>&quot;max_supply&quot;</type>
        </param>
        <param>
          <type>&quot;1.000000000000000000 TKN&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.token_tests.cpp" line="191" column="15"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8token__tests_8cpp_1af379481fd03c660605334d2eeac609dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>issue</definition>
        <argsstring>(&quot;alice&quot;_n, asset::from_string(&quot;500.000 TKN&quot;), &quot;hola&quot;)</argsstring>
        <name>issue</name>
        <param>
          <type>&quot;alice&quot;</type>
          <declname>_n</declname>
        </param>
        <param>
          <type>asset::from_string(&quot;500.000 TKN&quot;)</type>
        </param>
        <param>
          <type>&quot;hola&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.token_tests.cpp" line="215" column="4" declfile="system/tests/eosio.token_tests.cpp" declline="215" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8token__tests_8cpp_1afa894af018530a1f00be7857fbe11160" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TKN</definition>
        <argsstring>(&quot;max_supply&quot;, &quot;1000.000 TKN&quot;)(&quot;issuer&quot;</argsstring>
        <name>TKN</name>
        <param>
          <type>&quot;max_supply&quot;</type>
        </param>
        <param>
          <type>&quot;1000.000 TKN&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.token_tests.cpp" line="219" column="15"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8token__tests_8cpp_1afbc07fd5e3c697047ed86c4640d35fc8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(wasm_assert_msg(&quot;quantity exceeds available supply&quot;), issue(&quot;alice&quot;_n, asset::from_string(&quot;500.001 TKN&quot;), &quot;hola&quot;))</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type>wasm_assert_msg(&quot;quantity exceeds available <ref refid="eosio_8token__tests_8cpp_1ad37587c54682d8fea3f46f4976e16437" kindref="member">supply</ref>&quot;)</type>
        </param>
        <param>
          <type><ref refid="eosio_8token__tests_8cpp_1aeded7c36cbd0337bd73dd0f21e77d1d5" kindref="member">issue</ref>(&quot;alice&quot;_n, asset::from_string(&quot;500.001 TKN&quot;), &quot;hola&quot;)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.token_tests.cpp" line="229" column="4" declfile="system/tests/eosio.token_tests.cpp" declline="229" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8token__tests_8cpp_1ac16ac9c628be696d146bb493ff57c892" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(wasm_assert_msg(&quot;must issue positive quantity&quot;), issue(&quot;alice&quot;_n, asset::from_string(&quot;-1.000 TKN&quot;), &quot;hola&quot;))</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type>wasm_assert_msg(&quot;must <ref refid="eosio_8token__tests_8cpp_1aeded7c36cbd0337bd73dd0f21e77d1d5" kindref="member">issue</ref> positive quantity&quot;)</type>
        </param>
        <param>
          <type><ref refid="eosio_8token__tests_8cpp_1aeded7c36cbd0337bd73dd0f21e77d1d5" kindref="member">issue</ref>(&quot;alice&quot;_n, asset::from_string(&quot;-1.000 TKN&quot;), &quot;hola&quot;)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.token_tests.cpp" line="233" column="4" declfile="system/tests/eosio.token_tests.cpp" declline="233" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8token__tests_8cpp_1a4e0f6fb546e1de2cffaa0150833bc02a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(success(), issue(&quot;alice&quot;_n, asset::from_string(&quot;1.000 TKN&quot;), &quot;hola&quot;))</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type>success()</type>
        </param>
        <param>
          <type><ref refid="eosio_8token__tests_8cpp_1aeded7c36cbd0337bd73dd0f21e77d1d5" kindref="member">issue</ref>(&quot;alice&quot;_n, asset::from_string(&quot;1.000 TKN&quot;), &quot;hola&quot;)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.token_tests.cpp" line="237" column="4" declfile="system/tests/eosio.token_tests.cpp" declline="237" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8token__tests_8cpp_1a75b115875cbd90dcfdca08e602ca4e9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(success(), issue(&quot;alice&quot;_n, asset::from_string(&quot;500.000 TKN&quot;), &quot;hola&quot;))</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type>success()</type>
        </param>
        <param>
          <type><ref refid="eosio_8token__tests_8cpp_1aeded7c36cbd0337bd73dd0f21e77d1d5" kindref="member">issue</ref>(&quot;alice&quot;_n, asset::from_string(&quot;500.000 TKN&quot;), &quot;hola&quot;)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.token_tests.cpp" line="249" column="4" declfile="system/tests/eosio.token_tests.cpp" declline="249" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8token__tests_8cpp_1a5de0d126b87c0b7e708587751bde3b74" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(success(), retire(&quot;alice&quot;_n, asset::from_string(&quot;200.000 TKN&quot;), &quot;hola&quot;))</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type>success()</type>
        </param>
        <param>
          <type>retire(&quot;alice&quot;_n, asset::from_string(&quot;200.000 TKN&quot;), &quot;hola&quot;)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.token_tests.cpp" line="263" column="4" declfile="system/tests/eosio.token_tests.cpp" declline="263" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8token__tests_8cpp_1a364f79b45b580f3eba52dc6c0ade5923" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(wasm_assert_msg(&quot;overdrawn balance&quot;), retire(&quot;alice&quot;_n, asset::from_string(&quot;500.000 TKN&quot;), &quot;hola&quot;))</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type>wasm_assert_msg(&quot;overdrawn <ref refid="eosio_8token__tests_8cpp_1a1e7ef09ce66d09456a55c47a8c42f3dc" kindref="member">balance</ref>&quot;)</type>
        </param>
        <param>
          <type>retire(&quot;alice&quot;_n, asset::from_string(&quot;500.000 TKN&quot;), &quot;hola&quot;)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.token_tests.cpp" line="276" column="4" declfile="system/tests/eosio.token_tests.cpp" declline="276" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8token__tests_8cpp_1a303a39a1d55ae31ccad3914fbea27dee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(success(), transfer(&quot;alice&quot;_n, &quot;bob&quot;_n, asset::from_string(&quot;200.000 TKN&quot;), &quot;hola&quot;))</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type>success()</type>
        </param>
        <param>
          <type><ref refid="eosio_8token__tests_8cpp_1a842c5467344efbabdf1da5f8aee477e1" kindref="member">transfer</ref>(&quot;alice&quot;_n, &quot;bob&quot;_n, asset::from_string(&quot;200.000 TKN&quot;), &quot;hola&quot;)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.token_tests.cpp" line="278" column="4" declfile="system/tests/eosio.token_tests.cpp" declline="278" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8token__tests_8cpp_1a89e03fcd565ac9c5b026f35416cdc9ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(wasm_assert_msg(&quot;overdrawn balance&quot;), retire(&quot;alice&quot;_n, asset::from_string(&quot;300.000 TKN&quot;), &quot;hola&quot;))</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type>wasm_assert_msg(&quot;overdrawn <ref refid="eosio_8token__tests_8cpp_1a1e7ef09ce66d09456a55c47a8c42f3dc" kindref="member">balance</ref>&quot;)</type>
        </param>
        <param>
          <type>retire(&quot;alice&quot;_n, asset::from_string(&quot;300.000 TKN&quot;), &quot;hola&quot;)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.token_tests.cpp" line="280" column="4" declfile="system/tests/eosio.token_tests.cpp" declline="280" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8token__tests_8cpp_1acd0b74e95b5cf57f49db994345497108" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(success(), transfer(&quot;bob&quot;_n, &quot;alice&quot;_n, asset::from_string(&quot;200.000 TKN&quot;), &quot;hola&quot;))</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type>success()</type>
        </param>
        <param>
          <type><ref refid="eosio_8token__tests_8cpp_1a842c5467344efbabdf1da5f8aee477e1" kindref="member">transfer</ref>(&quot;bob&quot;_n, &quot;alice&quot;_n, asset::from_string(&quot;200.000 TKN&quot;), &quot;hola&quot;)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.token_tests.cpp" line="282" column="4" declfile="system/tests/eosio.token_tests.cpp" declline="282" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8token__tests_8cpp_1a3cac46723ed13f4373e832d4638c7ef9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(success(), retire(&quot;alice&quot;_n, asset::from_string(&quot;300.000 TKN&quot;), &quot;hola&quot;))</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type>success()</type>
        </param>
        <param>
          <type>retire(&quot;alice&quot;_n, asset::from_string(&quot;300.000 TKN&quot;), &quot;hola&quot;)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.token_tests.cpp" line="284" column="4" declfile="system/tests/eosio.token_tests.cpp" declline="284" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8token__tests_8cpp_1a91675cdea5d98883e162a2a62692f76f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(wasm_assert_msg(&quot;overdrawn balance&quot;), retire(&quot;alice&quot;_n, asset::from_string(&quot;1.000 TKN&quot;), &quot;hola&quot;))</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type>wasm_assert_msg(&quot;overdrawn <ref refid="eosio_8token__tests_8cpp_1a1e7ef09ce66d09456a55c47a8c42f3dc" kindref="member">balance</ref>&quot;)</type>
        </param>
        <param>
          <type>retire(&quot;alice&quot;_n, asset::from_string(&quot;1.000 TKN&quot;), &quot;hola&quot;)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.token_tests.cpp" line="297" column="4" declfile="system/tests/eosio.token_tests.cpp" declline="297" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8token__tests_8cpp_1aeded7c36cbd0337bd73dd0f21e77d1d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>issue</definition>
        <argsstring>(&quot;alice&quot;_n, asset::from_string(&quot;1000 CERO&quot;), &quot;hola&quot;)</argsstring>
        <name>issue</name>
        <param>
          <type>&quot;alice&quot;</type>
          <declname>_n</declname>
        </param>
        <param>
          <type>asset::from_string(&quot;1000 CERO&quot;)</type>
        </param>
        <param>
          <type>&quot;hola&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.token_tests.cpp" line="306" column="4" declfile="system/tests/eosio.token_tests.cpp" declline="306" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8token__tests_8cpp_1a557af8169ceb02745b361bc7ede1d732" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CERO</definition>
        <argsstring>(&quot;max_supply&quot;, &quot;1000 CERO&quot;)(&quot;issuer&quot;</argsstring>
        <name>CERO</name>
        <param>
          <type>&quot;max_supply&quot;</type>
        </param>
        <param>
          <type>&quot;1000 CERO&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.token_tests.cpp" line="310" column="15"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8token__tests_8cpp_1a842c5467344efbabdf1da5f8aee477e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>transfer</definition>
        <argsstring>(&quot;alice&quot;_n, &quot;bob&quot;_n, asset::from_string(&quot;300 CERO&quot;), &quot;hola&quot;)</argsstring>
        <name>transfer</name>
        <param>
          <type>&quot;alice&quot;</type>
          <declname>_n</declname>
        </param>
        <param>
          <type>&quot;bob&quot;</type>
          <declname>_n</declname>
        </param>
        <param>
          <type>asset::from_string(&quot;300 CERO&quot;)</type>
        </param>
        <param>
          <type>&quot;hola&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.token_tests.cpp" line="320" column="4" declfile="system/tests/eosio.token_tests.cpp" declline="320" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8token__tests_8cpp_1ad015de3cd5822c81af828235f57f6f9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CERO</definition>
        <argsstring>(&quot;frozen&quot;, 0)(&quot;whitelist&quot;</argsstring>
        <name>CERO</name>
        <param>
          <type>&quot;frozen&quot;</type>
        </param>
        <param>
          <type>0</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.token_tests.cpp" line="324" column="16"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8token__tests_8cpp_1afcdb9ead271d07032461194c9f4bef42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(wasm_assert_msg(&quot;overdrawn balance&quot;), transfer(&quot;alice&quot;_n, &quot;bob&quot;_n, asset::from_string(&quot;701 CERO&quot;), &quot;hola&quot;))</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type>wasm_assert_msg(&quot;overdrawn <ref refid="eosio_8token__tests_8cpp_1a1e7ef09ce66d09456a55c47a8c42f3dc" kindref="member">balance</ref>&quot;)</type>
        </param>
        <param>
          <type><ref refid="eosio_8token__tests_8cpp_1a842c5467344efbabdf1da5f8aee477e1" kindref="member">transfer</ref>(&quot;alice&quot;_n, &quot;bob&quot;_n, asset::from_string(&quot;701 CERO&quot;), &quot;hola&quot;)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.token_tests.cpp" line="336" column="4" declfile="system/tests/eosio.token_tests.cpp" declline="336" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8token__tests_8cpp_1ae11a1d7dd90fc5f48180ba4c65678bc9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(wasm_assert_msg(&quot;must transfer positive quantity&quot;), transfer(&quot;alice&quot;_n, &quot;bob&quot;_n, asset::from_string(&quot;-1000 CERO&quot;), &quot;hola&quot;))</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type>wasm_assert_msg(&quot;must <ref refid="eosio_8token__tests_8cpp_1a842c5467344efbabdf1da5f8aee477e1" kindref="member">transfer</ref> positive quantity&quot;)</type>
        </param>
        <param>
          <type><ref refid="eosio_8token__tests_8cpp_1a842c5467344efbabdf1da5f8aee477e1" kindref="member">transfer</ref>(&quot;alice&quot;_n, &quot;bob&quot;_n, asset::from_string(&quot;-1000 CERO&quot;), &quot;hola&quot;)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.token_tests.cpp" line="340" column="4" declfile="system/tests/eosio.token_tests.cpp" declline="340" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8token__tests_8cpp_1a4750aee281e0ca3c11107e8df261ebaa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(true, alice_balance.is_null())</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type>true</type>
        </param>
        <param>
          <type>alice_balance.</type>
          <declname>is_null</declname>
          <array>()</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.token_tests.cpp" line="352" column="4" declfile="system/tests/eosio.token_tests.cpp" declline="352" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8token__tests_8cpp_1a310a11b7560b8368043f8d14d5e2304e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(wasm_assert_msg(&quot;tokens can only be issued to issuer account&quot;), push_action(&quot;alice&quot;_n, &quot;issue&quot;_n, mvo()(&quot;to&quot;, &quot;bob&quot;)(&quot;quantity&quot;, asset::from_string(&quot;1000 CERO&quot;))(&quot;memo&quot;, &quot;&quot;)))</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type>wasm_assert_msg(&quot;tokens can only be issued to issuer account&quot;)</type>
        </param>
        <param>
          <type><ref refid="eosio_8msig__tests_8cpp_1a0a4c6f926e5c8b4f845b15a3269c6745" kindref="member">push_action</ref>(&quot;alice&quot;_n, &quot;issue&quot;_n, <ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()(&quot;to&quot;, &quot;<ref refid="eosio_8limitauth__tests_8cpp_1a8a890c5bf7f30e9cea61bc4f1dd4b69e" kindref="member">bob</ref>&quot;)(&quot;quantity&quot;, asset::from_string(&quot;1000 CERO&quot;))(&quot;memo&quot;, &quot;&quot;))</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.token_tests.cpp" line="353" column="4" declfile="system/tests/eosio.token_tests.cpp" declline="353" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8token__tests_8cpp_1a70c96d6ab1b8c31231b8c5ca71d9bd6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(success(), issue(&quot;alice&quot;_n, asset::from_string(&quot;1000 CERO&quot;), &quot;issue&quot;))</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type>success()</type>
        </param>
        <param>
          <type><ref refid="eosio_8token__tests_8cpp_1aeded7c36cbd0337bd73dd0f21e77d1d5" kindref="member">issue</ref>(&quot;alice&quot;_n, asset::from_string(&quot;1000 CERO&quot;), &quot;<ref refid="eosio_8token__tests_8cpp_1aeded7c36cbd0337bd73dd0f21e77d1d5" kindref="member">issue</ref>&quot;)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.token_tests.cpp" line="358" column="4" declfile="system/tests/eosio.token_tests.cpp" declline="358" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8token__tests_8cpp_1a61f61741047fee76a85c0399a79c535f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(true, bob_balance.is_null())</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type>true</type>
        </param>
        <param>
          <type>bob_balance.</type>
          <declname>is_null</declname>
          <array>()</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.token_tests.cpp" line="366" column="4" declfile="system/tests/eosio.token_tests.cpp" declline="366" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8token__tests_8cpp_1afb5956776bd6f5f81d518d78c3805538" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(wasm_assert_msg(&quot;owner account does not exist&quot;), open(&quot;nonexistent&quot;_n, &quot;0,CERO&quot;, &quot;alice&quot;_n))</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type>wasm_assert_msg(&quot;owner account does not exist&quot;)</type>
        </param>
        <param>
          <type>open(&quot;nonexistent&quot;_n, &quot;0,CERO&quot;, &quot;<ref refid="eosio_8msig__tests_8cpp_1a14a7b35c45efb6229adcb679f12a0a1e" kindref="member">alice</ref>&quot;_n)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.token_tests.cpp" line="368" column="4" declfile="system/tests/eosio.token_tests.cpp" declline="368" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8token__tests_8cpp_1a59ac863a8472895e9e1e5f05701bd6f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(success(), open(&quot;bob&quot;_n, &quot;0,CERO&quot;, &quot;alice&quot;_n))</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type>success()</type>
        </param>
        <param>
          <type>open(&quot;bob&quot;_n, &quot;0,CERO&quot;, &quot;<ref refid="eosio_8msig__tests_8cpp_1a14a7b35c45efb6229adcb679f12a0a1e" kindref="member">alice</ref>&quot;_n)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.token_tests.cpp" line="370" column="4" declfile="system/tests/eosio.token_tests.cpp" declline="370" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8token__tests_8cpp_1a8f7996d0b0ee4a755faee8f251b86ec2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(success(), transfer(&quot;alice&quot;_n, &quot;bob&quot;_n, asset::from_string(&quot;200 CERO&quot;), &quot;hola&quot;))</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type>success()</type>
        </param>
        <param>
          <type><ref refid="eosio_8token__tests_8cpp_1a842c5467344efbabdf1da5f8aee477e1" kindref="member">transfer</ref>(&quot;alice&quot;_n, &quot;bob&quot;_n, asset::from_string(&quot;200 CERO&quot;), &quot;hola&quot;)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.token_tests.cpp" line="378" column="4" declfile="system/tests/eosio.token_tests.cpp" declline="378" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8token__tests_8cpp_1acd3d86c275d85ce207ed3126dddcf207" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(wasm_assert_msg(&quot;symbol does not exist&quot;), open(&quot;carol&quot;_n, &quot;0,INVALID&quot;, &quot;alice&quot;_n))</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type>wasm_assert_msg(&quot;symbol does not exist&quot;)</type>
        </param>
        <param>
          <type>open(&quot;carol&quot;_n, &quot;0,INVALID&quot;, &quot;<ref refid="eosio_8msig__tests_8cpp_1a14a7b35c45efb6229adcb679f12a0a1e" kindref="member">alice</ref>&quot;_n)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.token_tests.cpp" line="385" column="4" declfile="system/tests/eosio.token_tests.cpp" declline="385" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8token__tests_8cpp_1a90e9f41746e60eb63c4d3ed32b5f4c8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(wasm_assert_msg(&quot;symbol precision mismatch&quot;), open(&quot;carol&quot;_n, &quot;1,CERO&quot;, &quot;alice&quot;_n))</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type>wasm_assert_msg(&quot;symbol precision mismatch&quot;)</type>
        </param>
        <param>
          <type>open(&quot;carol&quot;_n, &quot;1,CERO&quot;, &quot;<ref refid="eosio_8msig__tests_8cpp_1a14a7b35c45efb6229adcb679f12a0a1e" kindref="member">alice</ref>&quot;_n)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.token_tests.cpp" line="388" column="4" declfile="system/tests/eosio.token_tests.cpp" declline="388" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8token__tests_8cpp_1a15a4402f7166caee5becc218069d0722" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(success(), issue(&quot;alice&quot;_n, asset::from_string(&quot;1000 CERO&quot;), &quot;hola&quot;))</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type>success()</type>
        </param>
        <param>
          <type><ref refid="eosio_8token__tests_8cpp_1aeded7c36cbd0337bd73dd0f21e77d1d5" kindref="member">issue</ref>(&quot;alice&quot;_n, asset::from_string(&quot;1000 CERO&quot;), &quot;hola&quot;)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.token_tests.cpp" line="400" column="4" declfile="system/tests/eosio.token_tests.cpp" declline="400" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8token__tests_8cpp_1a2642918b741f28d425f922ceee43482d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(success(), transfer(&quot;alice&quot;_n, &quot;bob&quot;_n, asset::from_string(&quot;1000 CERO&quot;), &quot;hola&quot;))</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type>success()</type>
        </param>
        <param>
          <type><ref refid="eosio_8token__tests_8cpp_1a842c5467344efbabdf1da5f8aee477e1" kindref="member">transfer</ref>(&quot;alice&quot;_n, &quot;bob&quot;_n, asset::from_string(&quot;1000 CERO&quot;), &quot;hola&quot;)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.token_tests.cpp" line="407" column="4" declfile="system/tests/eosio.token_tests.cpp" declline="407" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8token__tests_8cpp_1a46b29f811a6dedfa9964a853ce91b8aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE_EQUAL</definition>
        <argsstring>(success(), close(&quot;alice&quot;_n, &quot;0,CERO&quot;))</argsstring>
        <name>BOOST_REQUIRE_EQUAL</name>
        <param>
          <type>success()</type>
        </param>
        <param>
          <type>close(&quot;alice&quot;_n, &quot;0,CERO&quot;)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.token_tests.cpp" line="414" column="4" declfile="system/tests/eosio.token_tests.cpp" declline="414" declcolumn="4"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;boost/test/unit_test.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;eosio/testing/tester.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;eosio/chain/abi_serializer.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="eosio_8system__tester_8hpp" kindref="compound">eosio.system_tester.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fc/variant_object.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">eosio::testing;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceeosio" kindref="compound">eosio</ref>;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">eosio::chain;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">eosio::testing;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">fc;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="eosio_8msig__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref><sp/>=<sp/>fc::mutable_variant_object;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="classeosio__token__tester" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classeosio__token__tester" kindref="compound">eosio_token_tester</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>tester<sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><ref refid="classeosio__token__tester_1aa5097dd3c31132c8011d419553a96c5e" kindref="member">eosio_token_tester</ref>()<sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8token__tests_8cpp_1a95fdc8cfd66a090d82b4c0b12470bce9" kindref="member">produce_blocks</ref>(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a67926f84ff8b458db07f5aaddf296176" kindref="member">create_accounts</ref>(<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;alice&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;bob&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;carol&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;eosio.token&quot;</highlight><highlight class="normal">_n<sp/>}<sp/>);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8token__tests_8cpp_1a95fdc8cfd66a090d82b4c0b12470bce9" kindref="member">produce_blocks</ref>(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1af4f93295a7ab104772c663b0dbb1ccf8" kindref="member">set_code</ref>(<sp/></highlight><highlight class="stringliteral">&quot;eosio.token&quot;</highlight><highlight class="normal">_n,<sp/>contracts::token_wasm()<sp/>);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a8a77e98251d23bebd48d6cf91446d3b8" kindref="member">set_abi</ref>(<sp/></highlight><highlight class="stringliteral">&quot;eosio.token&quot;</highlight><highlight class="normal">_n,<sp/>contracts::token_abi().data()<sp/>);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8token__tests_8cpp_1a95fdc8cfd66a090d82b4c0b12470bce9" kindref="member">produce_blocks</ref>();</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>accnt<sp/>=<sp/>control-&gt;db().get&lt;account_object,by_name&gt;(<sp/></highlight><highlight class="stringliteral">&quot;eosio.token&quot;</highlight><highlight class="normal">_n<sp/>);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>abi_def<sp/>abi;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8token__tests_8cpp_1a33ea5666e328012a7aab703d950837d1" kindref="member">BOOST_REQUIRE_EQUAL</ref>(abi_serializer::to_abi(accnt.abi,<sp/>abi),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classeosio__token__tester_1ac4ebd75f3bdd60e208b92dad3103c964" kindref="member">abi_ser</ref>.set_abi(abi,<sp/>abi_serializer::create_yield_function(abi_serializer_max_time));</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/>action_result<sp/><ref refid="classeosio__token__tester_1ad56ce6aae361094e9aa64abcfe1f254d" kindref="member">push_action</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>account_name&amp;<sp/>signer,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>action_name<sp/>&amp;name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>variant_object<sp/>&amp;data<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>action_type_name<sp/>=<sp/><ref refid="classeosio__token__tester_1ac4ebd75f3bdd60e208b92dad3103c964" kindref="member">abi_ser</ref>.get_action_type(name);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>action<sp/><ref refid="eosio_8msig__tests_8cpp_1a7543cef806423d999bdf00434e158dcb" kindref="member">act</ref>;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a7543cef806423d999bdf00434e158dcb" kindref="member">act</ref>.account<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;eosio.token&quot;</highlight><highlight class="normal">_n;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a7543cef806423d999bdf00434e158dcb" kindref="member">act</ref>.name<sp/><sp/><sp/><sp/>=<sp/>name;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a7543cef806423d999bdf00434e158dcb" kindref="member">act</ref>.data<sp/><sp/><sp/><sp/>=<sp/><ref refid="classeosio__token__tester_1ac4ebd75f3bdd60e208b92dad3103c964" kindref="member">abi_ser</ref>.variant_to_binary(<sp/>action_type_name,<sp/>data,<sp/>abi_serializer::create_yield_function(abi_serializer_max_time)<sp/>);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">base_tester::push_action</ref>(<sp/>std::move(<ref refid="eosio_8msig__tests_8cpp_1a7543cef806423d999bdf00434e158dcb" kindref="member">act</ref>),<sp/>signer.to_uint64_t()<sp/>);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/>fc::variant<sp/><ref refid="classeosio__token__tester_1a62cd9713d91f9439f7c44c7d1389dd9c" kindref="member">get_stats</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>symbolname<sp/>)</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>symb<sp/>=<sp/>eosio::chain::symbol::from_string(symbolname);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>symbol_code<sp/>=<sp/>symb.to_symbol_code().value;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;char&gt;<sp/>data<sp/>=<sp/>get_row_by_account(<sp/></highlight><highlight class="stringliteral">&quot;eosio.token&quot;</highlight><highlight class="normal">_n,<sp/>name(symbol_code),<sp/></highlight><highlight class="stringliteral">&quot;stat&quot;</highlight><highlight class="normal">_n,<sp/>account_name(symbol_code)<sp/>);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data.empty()<sp/>?<sp/>fc::variant()<sp/>:<sp/><ref refid="classeosio__token__tester_1ac4ebd75f3bdd60e208b92dad3103c964" kindref="member">abi_ser</ref>.binary_to_variant(<sp/></highlight><highlight class="stringliteral">&quot;currency_stats&quot;</highlight><highlight class="normal">,<sp/>data,<sp/>abi_serializer::create_yield_function(abi_serializer_max_time)<sp/>);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/>fc::variant<sp/><ref refid="classeosio__token__tester_1a06dbdfcb390193a94f9c9913bb27b320" kindref="member">get_account</ref>(<sp/>account_name<sp/>acc,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>symbolname)</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>symb<sp/>=<sp/>eosio::chain::symbol::from_string(symbolname);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>symbol_code<sp/>=<sp/>symb.to_symbol_code().value;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;char&gt;<sp/>data<sp/>=<sp/>get_row_by_account(<sp/></highlight><highlight class="stringliteral">&quot;eosio.token&quot;</highlight><highlight class="normal">_n,<sp/>acc,<sp/></highlight><highlight class="stringliteral">&quot;accounts&quot;</highlight><highlight class="normal">_n,<sp/>account_name(symbol_code)<sp/>);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data.empty()<sp/>?<sp/>fc::variant()<sp/>:<sp/><ref refid="classeosio__token__tester_1ac4ebd75f3bdd60e208b92dad3103c964" kindref="member">abi_ser</ref>.binary_to_variant(<sp/></highlight><highlight class="stringliteral">&quot;account&quot;</highlight><highlight class="normal">,<sp/>data,<sp/>abi_serializer::create_yield_function(abi_serializer_max_time)<sp/>);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/>action_result<sp/><ref refid="classeosio__token__tester_1a54c6aa3f1eba3bd1050d395eea68cfc4" kindref="member">create</ref>(<sp/>account_name<sp/>issuer,</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asset<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maximum_supply<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classeosio__token__tester_1ad56ce6aae361094e9aa64abcfe1f254d" kindref="member">push_action</ref>(<sp/></highlight><highlight class="stringliteral">&quot;eosio.token&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;create&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8token__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/></highlight><highlight class="stringliteral">&quot;issuer&quot;</highlight><highlight class="normal">,<sp/>issuer)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/></highlight><highlight class="stringliteral">&quot;maximum_supply&quot;</highlight><highlight class="normal">,<sp/>maximum_supply)</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/>action_result<sp/><ref refid="classeosio__token__tester_1a5d64656235d5704c14b002a69e8a19ec" kindref="member">issue</ref>(<sp/>account_name<sp/>issuer,<sp/>asset<sp/>quantity,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>memo<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classeosio__token__tester_1ad56ce6aae361094e9aa64abcfe1f254d" kindref="member">push_action</ref>(<sp/>issuer,<sp/></highlight><highlight class="stringliteral">&quot;issue&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8token__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/></highlight><highlight class="stringliteral">&quot;to&quot;</highlight><highlight class="normal">,<sp/>issuer)</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/></highlight><highlight class="stringliteral">&quot;quantity&quot;</highlight><highlight class="normal">,<sp/>quantity)</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/></highlight><highlight class="stringliteral">&quot;memo&quot;</highlight><highlight class="normal">,<sp/>memo)</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/>action_result<sp/><ref refid="classeosio__token__tester_1ad32d6698c6e65beba5973abd80345136" kindref="member">retire</ref>(<sp/>account_name<sp/>issuer,<sp/>asset<sp/>quantity,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>memo<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classeosio__token__tester_1ad56ce6aae361094e9aa64abcfe1f254d" kindref="member">push_action</ref>(<sp/>issuer,<sp/></highlight><highlight class="stringliteral">&quot;retire&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8token__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/></highlight><highlight class="stringliteral">&quot;quantity&quot;</highlight><highlight class="normal">,<sp/>quantity)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/></highlight><highlight class="stringliteral">&quot;memo&quot;</highlight><highlight class="normal">,<sp/>memo)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/>action_result<sp/><ref refid="classeosio__token__tester_1aeaf06091429936efca40ec64a1c2add6" kindref="member">transfer</ref>(<sp/>account_name<sp/>from,</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>account_name<sp/>to,</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asset<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>quantity,</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memo<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classeosio__token__tester_1ad56ce6aae361094e9aa64abcfe1f254d" kindref="member">push_action</ref>(<sp/>from,<sp/></highlight><highlight class="stringliteral">&quot;transfer&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8token__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/></highlight><highlight class="stringliteral">&quot;from&quot;</highlight><highlight class="normal">,<sp/>from)</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/></highlight><highlight class="stringliteral">&quot;to&quot;</highlight><highlight class="normal">,<sp/>to)</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/></highlight><highlight class="stringliteral">&quot;quantity&quot;</highlight><highlight class="normal">,<sp/>quantity)</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/></highlight><highlight class="stringliteral">&quot;memo&quot;</highlight><highlight class="normal">,<sp/>memo)</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/>action_result<sp/><ref refid="classeosio__token__tester_1a9af35c072de8203b1b6edc3cec95b922" kindref="member">open</ref>(<sp/>account_name<sp/><ref refid="eosio_8limitauth__tests_8cpp_1af05624499daa7d1cf22007650e219653" kindref="member">owner</ref>,</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>symbolname,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>account_name<sp/>ram_payer<sp/><sp/><sp/><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classeosio__token__tester_1ad56ce6aae361094e9aa64abcfe1f254d" kindref="member">push_action</ref>(<sp/>ram_payer,<sp/></highlight><highlight class="stringliteral">&quot;open&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8token__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/></highlight><highlight class="stringliteral">&quot;owner&quot;</highlight><highlight class="normal">,<sp/><ref refid="eosio_8limitauth__tests_8cpp_1af05624499daa7d1cf22007650e219653" kindref="member">owner</ref><sp/>)</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/></highlight><highlight class="stringliteral">&quot;symbol&quot;</highlight><highlight class="normal">,<sp/>symbolname<sp/>)</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/></highlight><highlight class="stringliteral">&quot;ram_payer&quot;</highlight><highlight class="normal">,<sp/>ram_payer<sp/>)</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/>action_result<sp/><ref refid="classeosio__token__tester_1aae88a895aa2c9d3d4b479740db234ee7" kindref="member">close</ref>(<sp/>account_name<sp/><ref refid="eosio_8limitauth__tests_8cpp_1af05624499daa7d1cf22007650e219653" kindref="member">owner</ref>,</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>symbolname<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classeosio__token__tester_1ad56ce6aae361094e9aa64abcfe1f254d" kindref="member">push_action</ref>(<sp/><ref refid="eosio_8limitauth__tests_8cpp_1af05624499daa7d1cf22007650e219653" kindref="member">owner</ref>,<sp/></highlight><highlight class="stringliteral">&quot;close&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8token__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/></highlight><highlight class="stringliteral">&quot;owner&quot;</highlight><highlight class="normal">,<sp/><ref refid="eosio_8limitauth__tests_8cpp_1af05624499daa7d1cf22007650e219653" kindref="member">owner</ref><sp/>)</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/></highlight><highlight class="stringliteral">&quot;symbol&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0,CERO&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/>abi_serializer<sp/><ref refid="classeosio__token__tester_1ac4ebd75f3bdd60e208b92dad3103c964" kindref="member">abi_ser</ref>;</highlight></codeline>
<codeline lineno="120"><highlight class="normal">};</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal">BOOST_AUTO_TEST_SUITE(eosio_token_tests)</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><ref refid="eosio_8token__tests_8cpp_1a22ac78b4a13caada70ea38e67eea0e6c" kindref="member">BOOST_FIXTURE_TEST_CASE</ref>(<sp/>create_tests,<sp/><ref refid="classeosio__token__tester" kindref="compound">eosio_token_tester</ref><sp/>)<sp/></highlight><highlight class="keyword">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="classeosio_1_1token" kindref="compound">token</ref><sp/>=<sp/>create(<sp/></highlight><highlight class="stringliteral">&quot;alice&quot;</highlight><highlight class="normal">_n,<sp/>asset::from_string(</highlight><highlight class="stringliteral">&quot;1000.000<sp/>TKN&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="eosio_8token__tests_8cpp_1a87d43fed927b93f47439ba7c2dfa7cc5" kindref="member">stats</ref><sp/>=<sp/>get_stats(</highlight><highlight class="stringliteral">&quot;3,TKN&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1abf3d4eb475605f9a73224e835cd3fb71" kindref="member">REQUIRE_MATCHING_OBJECT</ref>(<sp/><ref refid="eosio_8token__tests_8cpp_1a87d43fed927b93f47439ba7c2dfa7cc5" kindref="member">stats</ref>,<sp/><ref refid="eosio_8token__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;supply&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0.000<sp/>TKN&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;max_supply&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;1000.000<sp/>TKN&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;issuer&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;alice&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8token__tests_8cpp_1a95fdc8cfd66a090d82b4c0b12470bce9" kindref="member">produce_blocks</ref>(1);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal">}<sp/><ref refid="eosio_8token__tests_8cpp_1af5bf52e9919e348118ed7570478adaac" kindref="member">FC_LOG_AND_RETHROW</ref>()</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><ref refid="eosio_8token__tests_8cpp_1a22ac78b4a13caada70ea38e67eea0e6c" kindref="member">BOOST_FIXTURE_TEST_CASE</ref>(<sp/>create_negative_max_supply,<sp/><ref refid="classeosio__token__tester" kindref="compound">eosio_token_tester</ref><sp/>)<sp/><ref refid="eosio_8token__tests_8cpp_1a252a093241881c670c623766dad744a7" kindref="member">try</ref><sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8token__tests_8cpp_1a33ea5666e328012a7aab703d950837d1" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(<sp/></highlight><highlight class="stringliteral">&quot;max-supply<sp/>must<sp/>be<sp/>positive&quot;</highlight><highlight class="normal"><sp/>),</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>create(<sp/></highlight><highlight class="stringliteral">&quot;alice&quot;</highlight><highlight class="normal">_n,<sp/>asset::from_string(</highlight><highlight class="stringliteral">&quot;-1000.000<sp/>TKN&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal">}<sp/><ref refid="eosio_8token__tests_8cpp_1af5bf52e9919e348118ed7570478adaac" kindref="member">FC_LOG_AND_RETHROW</ref>()</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><ref refid="eosio_8token__tests_8cpp_1a22ac78b4a13caada70ea38e67eea0e6c" kindref="member">BOOST_FIXTURE_TEST_CASE</ref>(<sp/>symbol_already_exists,<sp/><ref refid="classeosio__token__tester" kindref="compound">eosio_token_tester</ref><sp/>)<sp/><ref refid="eosio_8token__tests_8cpp_1a252a093241881c670c623766dad744a7" kindref="member">try</ref><sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="classeosio_1_1token" kindref="compound">token</ref><sp/>=<sp/>create(<sp/></highlight><highlight class="stringliteral">&quot;alice&quot;</highlight><highlight class="normal">_n,<sp/>asset::from_string(</highlight><highlight class="stringliteral">&quot;100<sp/>TKN&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="eosio_8token__tests_8cpp_1a87d43fed927b93f47439ba7c2dfa7cc5" kindref="member">stats</ref><sp/>=<sp/>get_stats(</highlight><highlight class="stringliteral">&quot;0,TKN&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1abf3d4eb475605f9a73224e835cd3fb71" kindref="member">REQUIRE_MATCHING_OBJECT</ref>(<sp/><ref refid="eosio_8token__tests_8cpp_1a87d43fed927b93f47439ba7c2dfa7cc5" kindref="member">stats</ref>,<sp/><ref refid="eosio_8token__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;supply&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0<sp/>TKN&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;max_supply&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;100<sp/>TKN&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;issuer&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;alice&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8token__tests_8cpp_1a95fdc8cfd66a090d82b4c0b12470bce9" kindref="member">produce_blocks</ref>(1);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8token__tests_8cpp_1a33ea5666e328012a7aab703d950837d1" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(<sp/></highlight><highlight class="stringliteral">&quot;token<sp/>with<sp/>symbol<sp/>already<sp/>exists&quot;</highlight><highlight class="normal"><sp/>),</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>create(<sp/></highlight><highlight class="stringliteral">&quot;alice&quot;</highlight><highlight class="normal">_n,<sp/>asset::from_string(</highlight><highlight class="stringliteral">&quot;100<sp/>TKN&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal">}<sp/><ref refid="eosio_8token__tests_8cpp_1af5bf52e9919e348118ed7570478adaac" kindref="member">FC_LOG_AND_RETHROW</ref>()</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><ref refid="eosio_8token__tests_8cpp_1a22ac78b4a13caada70ea38e67eea0e6c" kindref="member">BOOST_FIXTURE_TEST_CASE</ref>(<sp/>create_max_supply,<sp/><ref refid="classeosio__token__tester" kindref="compound">eosio_token_tester</ref><sp/>)<sp/><ref refid="eosio_8token__tests_8cpp_1a252a093241881c670c623766dad744a7" kindref="member">try</ref><sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="classeosio_1_1token" kindref="compound">token</ref><sp/>=<sp/>create(<sp/></highlight><highlight class="stringliteral">&quot;alice&quot;</highlight><highlight class="normal">_n,<sp/>asset::from_string(</highlight><highlight class="stringliteral">&quot;4611686018427387903<sp/>TKN&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="eosio_8token__tests_8cpp_1a87d43fed927b93f47439ba7c2dfa7cc5" kindref="member">stats</ref><sp/>=<sp/>get_stats(</highlight><highlight class="stringliteral">&quot;0,TKN&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1abf3d4eb475605f9a73224e835cd3fb71" kindref="member">REQUIRE_MATCHING_OBJECT</ref>(<sp/><ref refid="eosio_8token__tests_8cpp_1a87d43fed927b93f47439ba7c2dfa7cc5" kindref="member">stats</ref>,<sp/><ref refid="eosio_8token__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;supply&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0<sp/>TKN&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;max_supply&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;4611686018427387903<sp/>TKN&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;issuer&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;alice&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8token__tests_8cpp_1a95fdc8cfd66a090d82b4c0b12470bce9" kindref="member">produce_blocks</ref>(1);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/>asset<sp/><ref refid="eosio_8token__tests_8cpp_1a92759dbaf055ca451db93a2d11393122" kindref="member">max</ref>(10,<sp/>symbol(SY(0,<sp/>NKT)));</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/>share_type<sp/><ref refid="eosio_8token__tests_8cpp_1aca469ae89ae00a572ad079f6d8515ce1" kindref="member">amount</ref><sp/>=<sp/>4611686018427387904;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(share_type)<sp/>&lt;=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(asset),<sp/></highlight><highlight class="stringliteral">&quot;asset<sp/>changed<sp/>so<sp/>test<sp/>is<sp/>no<sp/>longer<sp/>valid&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(std::is_trivially_copyable&lt;asset&gt;::value,<sp/></highlight><highlight class="stringliteral">&quot;asset<sp/>is<sp/>not<sp/>trivially<sp/>copyable&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/>memcpy(&amp;<ref refid="eosio_8token__tests_8cpp_1a92759dbaf055ca451db93a2d11393122" kindref="member">max</ref>,<sp/>&amp;<ref refid="eosio_8token__tests_8cpp_1aca469ae89ae00a572ad079f6d8515ce1" kindref="member">amount</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(share_type));<sp/></highlight><highlight class="comment">//<sp/>hack<sp/>in<sp/>an<sp/>invalid<sp/>amount</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8token__tests_8cpp_1a370f5e618a9eb0a9f4d8a40786599368" kindref="member">BOOST_CHECK_EXCEPTION</ref>(<sp/>create(<sp/></highlight><highlight class="stringliteral">&quot;alice&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8token__tests_8cpp_1a92759dbaf055ca451db93a2d11393122" kindref="member">max</ref>)<sp/>,<sp/>asset_type_exception,<sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset_type_exception&amp;<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>expect_assert_message(e,<sp/></highlight><highlight class="stringliteral">&quot;magnitude<sp/>of<sp/>asset<sp/>amount<sp/>must<sp/>be<sp/>less<sp/>than<sp/>2^62&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal">}<sp/><ref refid="eosio_8token__tests_8cpp_1af5bf52e9919e348118ed7570478adaac" kindref="member">FC_LOG_AND_RETHROW</ref>()</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><ref refid="eosio_8token__tests_8cpp_1a22ac78b4a13caada70ea38e67eea0e6c" kindref="member">BOOST_FIXTURE_TEST_CASE</ref>(<sp/>create_max_decimals,<sp/><ref refid="classeosio__token__tester" kindref="compound">eosio_token_tester</ref><sp/>)<sp/><ref refid="eosio_8token__tests_8cpp_1a252a093241881c670c623766dad744a7" kindref="member">try</ref><sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="classeosio_1_1token" kindref="compound">token</ref><sp/>=<sp/>create(<sp/></highlight><highlight class="stringliteral">&quot;alice&quot;</highlight><highlight class="normal">_n,<sp/>asset::from_string(</highlight><highlight class="stringliteral">&quot;1.000000000000000000<sp/>TKN&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="eosio_8token__tests_8cpp_1a87d43fed927b93f47439ba7c2dfa7cc5" kindref="member">stats</ref><sp/>=<sp/>get_stats(</highlight><highlight class="stringliteral">&quot;18,TKN&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1abf3d4eb475605f9a73224e835cd3fb71" kindref="member">REQUIRE_MATCHING_OBJECT</ref>(<sp/><ref refid="eosio_8token__tests_8cpp_1a87d43fed927b93f47439ba7c2dfa7cc5" kindref="member">stats</ref>,<sp/><ref refid="eosio_8token__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;supply&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0.000000000000000000<sp/>TKN&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;max_supply&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;1.000000000000000000<sp/>TKN&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;issuer&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;alice&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8token__tests_8cpp_1a95fdc8cfd66a090d82b4c0b12470bce9" kindref="member">produce_blocks</ref>(1);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/>asset<sp/><ref refid="eosio_8token__tests_8cpp_1a92759dbaf055ca451db93a2d11393122" kindref="member">max</ref>(10,<sp/>symbol(SY(0,<sp/>NKT)));</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//1.0000000000000000000<sp/>=&gt;<sp/>0x8ac7230489e80000L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/>share_type<sp/><ref refid="eosio_8token__tests_8cpp_1aca469ae89ae00a572ad079f6d8515ce1" kindref="member">amount</ref><sp/>=<sp/>0x8ac7230489e80000L;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(share_type)<sp/>&lt;=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(asset),<sp/></highlight><highlight class="stringliteral">&quot;asset<sp/>changed<sp/>so<sp/>test<sp/>is<sp/>no<sp/>longer<sp/>valid&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(std::is_trivially_copyable&lt;asset&gt;::value,<sp/></highlight><highlight class="stringliteral">&quot;asset<sp/>is<sp/>not<sp/>trivially<sp/>copyable&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/>memcpy(&amp;<ref refid="eosio_8token__tests_8cpp_1a92759dbaf055ca451db93a2d11393122" kindref="member">max</ref>,<sp/>&amp;<ref refid="eosio_8token__tests_8cpp_1aca469ae89ae00a572ad079f6d8515ce1" kindref="member">amount</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(share_type));<sp/></highlight><highlight class="comment">//<sp/>hack<sp/>in<sp/>an<sp/>invalid<sp/>amount</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8token__tests_8cpp_1a370f5e618a9eb0a9f4d8a40786599368" kindref="member">BOOST_CHECK_EXCEPTION</ref>(<sp/>create(<sp/></highlight><highlight class="stringliteral">&quot;alice&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8token__tests_8cpp_1a92759dbaf055ca451db93a2d11393122" kindref="member">max</ref>)<sp/>,<sp/>asset_type_exception,<sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset_type_exception&amp;<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>expect_assert_message(e,<sp/></highlight><highlight class="stringliteral">&quot;magnitude<sp/>of<sp/>asset<sp/>amount<sp/>must<sp/>be<sp/>less<sp/>than<sp/>2^62&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal">}<sp/><ref refid="eosio_8token__tests_8cpp_1af5bf52e9919e348118ed7570478adaac" kindref="member">FC_LOG_AND_RETHROW</ref>()</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><ref refid="eosio_8token__tests_8cpp_1a22ac78b4a13caada70ea38e67eea0e6c" kindref="member">BOOST_FIXTURE_TEST_CASE</ref>(<sp/>issue_tests,<sp/><ref refid="classeosio__token__tester" kindref="compound">eosio_token_tester</ref><sp/>)<sp/><ref refid="eosio_8token__tests_8cpp_1a252a093241881c670c623766dad744a7" kindref="member">try</ref><sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="classeosio_1_1token" kindref="compound">token</ref><sp/>=<sp/>create(<sp/></highlight><highlight class="stringliteral">&quot;alice&quot;</highlight><highlight class="normal">_n,<sp/>asset::from_string(</highlight><highlight class="stringliteral">&quot;1000.000<sp/>TKN&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8token__tests_8cpp_1a95fdc8cfd66a090d82b4c0b12470bce9" kindref="member">produce_blocks</ref>(1);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8token__tests_8cpp_1af379481fd03c660605334d2eeac609dc" kindref="member">issue</ref>(<sp/></highlight><highlight class="stringliteral">&quot;alice&quot;</highlight><highlight class="normal">_n,<sp/>asset::from_string(</highlight><highlight class="stringliteral">&quot;500.000<sp/>TKN&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;hola&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="eosio_8token__tests_8cpp_1a87d43fed927b93f47439ba7c2dfa7cc5" kindref="member">stats</ref><sp/>=<sp/>get_stats(</highlight><highlight class="stringliteral">&quot;3,TKN&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1abf3d4eb475605f9a73224e835cd3fb71" kindref="member">REQUIRE_MATCHING_OBJECT</ref>(<sp/><ref refid="eosio_8token__tests_8cpp_1a87d43fed927b93f47439ba7c2dfa7cc5" kindref="member">stats</ref>,<sp/><ref refid="eosio_8token__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;supply&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;500.000<sp/>TKN&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;max_supply&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;1000.000<sp/>TKN&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;issuer&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;alice&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="eosio_8token__tests_8cpp_1a54bd321d217ff05fcad3aedd0684e86d" kindref="member">alice_balance</ref><sp/>=<sp/>get_account(</highlight><highlight class="stringliteral">&quot;alice&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;3,TKN&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1abf3d4eb475605f9a73224e835cd3fb71" kindref="member">REQUIRE_MATCHING_OBJECT</ref>(<sp/><ref refid="eosio_8token__tests_8cpp_1a54bd321d217ff05fcad3aedd0684e86d" kindref="member">alice_balance</ref>,<sp/><ref refid="eosio_8token__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;balance&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;500.000<sp/>TKN&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8token__tests_8cpp_1a33ea5666e328012a7aab703d950837d1" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(<sp/></highlight><highlight class="stringliteral">&quot;quantity<sp/>exceeds<sp/>available<sp/>supply&quot;</highlight><highlight class="normal"><sp/>),</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8token__tests_8cpp_1af379481fd03c660605334d2eeac609dc" kindref="member">issue</ref>(<sp/></highlight><highlight class="stringliteral">&quot;alice&quot;</highlight><highlight class="normal">_n,<sp/>asset::from_string(</highlight><highlight class="stringliteral">&quot;500.001<sp/>TKN&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;hola&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8token__tests_8cpp_1a33ea5666e328012a7aab703d950837d1" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(<sp/></highlight><highlight class="stringliteral">&quot;must<sp/>issue<sp/>positive<sp/>quantity&quot;</highlight><highlight class="normal"><sp/>),</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8token__tests_8cpp_1af379481fd03c660605334d2eeac609dc" kindref="member">issue</ref>(<sp/></highlight><highlight class="stringliteral">&quot;alice&quot;</highlight><highlight class="normal">_n,<sp/>asset::from_string(</highlight><highlight class="stringliteral">&quot;-1.000<sp/>TKN&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;hola&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8token__tests_8cpp_1a33ea5666e328012a7aab703d950837d1" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8token__tests_8cpp_1af379481fd03c660605334d2eeac609dc" kindref="member">issue</ref>(<sp/></highlight><highlight class="stringliteral">&quot;alice&quot;</highlight><highlight class="normal">_n,<sp/>asset::from_string(</highlight><highlight class="stringliteral">&quot;1.000<sp/>TKN&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;hola&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal">}<sp/><ref refid="eosio_8token__tests_8cpp_1af5bf52e9919e348118ed7570478adaac" kindref="member">FC_LOG_AND_RETHROW</ref>()</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><ref refid="eosio_8token__tests_8cpp_1a22ac78b4a13caada70ea38e67eea0e6c" kindref="member">BOOST_FIXTURE_TEST_CASE</ref>(<sp/>retire_tests,<sp/><ref refid="classeosio__token__tester" kindref="compound">eosio_token_tester</ref><sp/>)<sp/><ref refid="eosio_8token__tests_8cpp_1a252a093241881c670c623766dad744a7" kindref="member">try</ref><sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="classeosio_1_1token" kindref="compound">token</ref><sp/>=<sp/>create(<sp/></highlight><highlight class="stringliteral">&quot;alice&quot;</highlight><highlight class="normal">_n,<sp/>asset::from_string(</highlight><highlight class="stringliteral">&quot;1000.000<sp/>TKN&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8token__tests_8cpp_1a95fdc8cfd66a090d82b4c0b12470bce9" kindref="member">produce_blocks</ref>(1);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8token__tests_8cpp_1a33ea5666e328012a7aab703d950837d1" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><ref refid="eosio_8token__tests_8cpp_1af379481fd03c660605334d2eeac609dc" kindref="member">issue</ref>(<sp/></highlight><highlight class="stringliteral">&quot;alice&quot;</highlight><highlight class="normal">_n,<sp/>asset::from_string(</highlight><highlight class="stringliteral">&quot;500.000<sp/>TKN&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;hola&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="eosio_8token__tests_8cpp_1a87d43fed927b93f47439ba7c2dfa7cc5" kindref="member">stats</ref><sp/>=<sp/>get_stats(</highlight><highlight class="stringliteral">&quot;3,TKN&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1abf3d4eb475605f9a73224e835cd3fb71" kindref="member">REQUIRE_MATCHING_OBJECT</ref>(<sp/><ref refid="eosio_8token__tests_8cpp_1a87d43fed927b93f47439ba7c2dfa7cc5" kindref="member">stats</ref>,<sp/><ref refid="eosio_8token__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;supply&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;500.000<sp/>TKN&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;max_supply&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;1000.000<sp/>TKN&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;issuer&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;alice&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="eosio_8token__tests_8cpp_1a54bd321d217ff05fcad3aedd0684e86d" kindref="member">alice_balance</ref><sp/>=<sp/>get_account(</highlight><highlight class="stringliteral">&quot;alice&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;3,TKN&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1abf3d4eb475605f9a73224e835cd3fb71" kindref="member">REQUIRE_MATCHING_OBJECT</ref>(<sp/><ref refid="eosio_8token__tests_8cpp_1a54bd321d217ff05fcad3aedd0684e86d" kindref="member">alice_balance</ref>,<sp/><ref refid="eosio_8token__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;balance&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;500.000<sp/>TKN&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8token__tests_8cpp_1a33ea5666e328012a7aab703d950837d1" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>retire(<sp/></highlight><highlight class="stringliteral">&quot;alice&quot;</highlight><highlight class="normal">_n,<sp/>asset::from_string(</highlight><highlight class="stringliteral">&quot;200.000<sp/>TKN&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;hola&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8token__tests_8cpp_1a87d43fed927b93f47439ba7c2dfa7cc5" kindref="member">stats</ref><sp/>=<sp/>get_stats(</highlight><highlight class="stringliteral">&quot;3,TKN&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1abf3d4eb475605f9a73224e835cd3fb71" kindref="member">REQUIRE_MATCHING_OBJECT</ref>(<sp/><ref refid="eosio_8token__tests_8cpp_1a87d43fed927b93f47439ba7c2dfa7cc5" kindref="member">stats</ref>,<sp/><ref refid="eosio_8token__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;supply&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;300.000<sp/>TKN&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;max_supply&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;1000.000<sp/>TKN&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;issuer&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;alice&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8token__tests_8cpp_1a54bd321d217ff05fcad3aedd0684e86d" kindref="member">alice_balance</ref><sp/>=<sp/>get_account(</highlight><highlight class="stringliteral">&quot;alice&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;3,TKN&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1abf3d4eb475605f9a73224e835cd3fb71" kindref="member">REQUIRE_MATCHING_OBJECT</ref>(<sp/><ref refid="eosio_8token__tests_8cpp_1a54bd321d217ff05fcad3aedd0684e86d" kindref="member">alice_balance</ref>,<sp/><ref refid="eosio_8token__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;balance&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;300.000<sp/>TKN&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//should<sp/>fail<sp/>to<sp/>retire<sp/>more<sp/>than<sp/>current<sp/>supply</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8token__tests_8cpp_1a33ea5666e328012a7aab703d950837d1" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;overdrawn<sp/>balance&quot;</highlight><highlight class="normal">),<sp/>retire(<sp/></highlight><highlight class="stringliteral">&quot;alice&quot;</highlight><highlight class="normal">_n,<sp/>asset::from_string(</highlight><highlight class="stringliteral">&quot;500.000<sp/>TKN&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;hola&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8token__tests_8cpp_1a33ea5666e328012a7aab703d950837d1" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><ref refid="eosio_8token__tests_8cpp_1a842c5467344efbabdf1da5f8aee477e1" kindref="member">transfer</ref>(<sp/></highlight><highlight class="stringliteral">&quot;alice&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;bob&quot;</highlight><highlight class="normal">_n,<sp/>asset::from_string(</highlight><highlight class="stringliteral">&quot;200.000<sp/>TKN&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;hola&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//should<sp/>fail<sp/>to<sp/>retire<sp/>since<sp/>tokens<sp/>are<sp/>not<sp/>on<sp/>the<sp/>issuer&apos;s<sp/>balance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8token__tests_8cpp_1a33ea5666e328012a7aab703d950837d1" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;overdrawn<sp/>balance&quot;</highlight><highlight class="normal">),<sp/>retire(<sp/></highlight><highlight class="stringliteral">&quot;alice&quot;</highlight><highlight class="normal">_n,<sp/>asset::from_string(</highlight><highlight class="stringliteral">&quot;300.000<sp/>TKN&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;hola&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//transfer<sp/>tokens<sp/>back</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8token__tests_8cpp_1a33ea5666e328012a7aab703d950837d1" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><ref refid="eosio_8token__tests_8cpp_1a842c5467344efbabdf1da5f8aee477e1" kindref="member">transfer</ref>(<sp/></highlight><highlight class="stringliteral">&quot;bob&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;alice&quot;</highlight><highlight class="normal">_n,<sp/>asset::from_string(</highlight><highlight class="stringliteral">&quot;200.000<sp/>TKN&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;hola&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8token__tests_8cpp_1a33ea5666e328012a7aab703d950837d1" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>retire(<sp/></highlight><highlight class="stringliteral">&quot;alice&quot;</highlight><highlight class="normal">_n,<sp/>asset::from_string(</highlight><highlight class="stringliteral">&quot;300.000<sp/>TKN&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;hola&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8token__tests_8cpp_1a87d43fed927b93f47439ba7c2dfa7cc5" kindref="member">stats</ref><sp/>=<sp/>get_stats(</highlight><highlight class="stringliteral">&quot;3,TKN&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1abf3d4eb475605f9a73224e835cd3fb71" kindref="member">REQUIRE_MATCHING_OBJECT</ref>(<sp/><ref refid="eosio_8token__tests_8cpp_1a87d43fed927b93f47439ba7c2dfa7cc5" kindref="member">stats</ref>,<sp/><ref refid="eosio_8token__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;supply&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0.000<sp/>TKN&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;max_supply&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;1000.000<sp/>TKN&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;issuer&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;alice&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8token__tests_8cpp_1a54bd321d217ff05fcad3aedd0684e86d" kindref="member">alice_balance</ref><sp/>=<sp/>get_account(</highlight><highlight class="stringliteral">&quot;alice&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;3,TKN&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1abf3d4eb475605f9a73224e835cd3fb71" kindref="member">REQUIRE_MATCHING_OBJECT</ref>(<sp/><ref refid="eosio_8token__tests_8cpp_1a54bd321d217ff05fcad3aedd0684e86d" kindref="member">alice_balance</ref>,<sp/><ref refid="eosio_8token__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;balance&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0.000<sp/>TKN&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//trying<sp/>to<sp/>retire<sp/>tokens<sp/>with<sp/>zero<sp/>supply</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8token__tests_8cpp_1a33ea5666e328012a7aab703d950837d1" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;overdrawn<sp/>balance&quot;</highlight><highlight class="normal">),<sp/>retire(<sp/></highlight><highlight class="stringliteral">&quot;alice&quot;</highlight><highlight class="normal">_n,<sp/>asset::from_string(</highlight><highlight class="stringliteral">&quot;1.000<sp/>TKN&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;hola&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal">}<sp/><ref refid="eosio_8token__tests_8cpp_1af5bf52e9919e348118ed7570478adaac" kindref="member">FC_LOG_AND_RETHROW</ref>()</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><ref refid="eosio_8token__tests_8cpp_1a22ac78b4a13caada70ea38e67eea0e6c" kindref="member">BOOST_FIXTURE_TEST_CASE</ref>(<sp/>transfer_tests,<sp/><ref refid="classeosio__token__tester" kindref="compound">eosio_token_tester</ref><sp/>)<sp/><ref refid="eosio_8token__tests_8cpp_1a252a093241881c670c623766dad744a7" kindref="member">try</ref><sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="classeosio_1_1token" kindref="compound">token</ref><sp/>=<sp/>create(<sp/></highlight><highlight class="stringliteral">&quot;alice&quot;</highlight><highlight class="normal">_n,<sp/>asset::from_string(</highlight><highlight class="stringliteral">&quot;1000<sp/>CERO&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8token__tests_8cpp_1a95fdc8cfd66a090d82b4c0b12470bce9" kindref="member">produce_blocks</ref>(1);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8token__tests_8cpp_1af379481fd03c660605334d2eeac609dc" kindref="member">issue</ref>(<sp/></highlight><highlight class="stringliteral">&quot;alice&quot;</highlight><highlight class="normal">_n,<sp/>asset::from_string(</highlight><highlight class="stringliteral">&quot;1000<sp/>CERO&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;hola&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="eosio_8token__tests_8cpp_1a87d43fed927b93f47439ba7c2dfa7cc5" kindref="member">stats</ref><sp/>=<sp/>get_stats(</highlight><highlight class="stringliteral">&quot;0,CERO&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1abf3d4eb475605f9a73224e835cd3fb71" kindref="member">REQUIRE_MATCHING_OBJECT</ref>(<sp/><ref refid="eosio_8token__tests_8cpp_1a87d43fed927b93f47439ba7c2dfa7cc5" kindref="member">stats</ref>,<sp/><ref refid="eosio_8token__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;supply&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;1000<sp/>CERO&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;max_supply&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;1000<sp/>CERO&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;issuer&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;alice&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="eosio_8token__tests_8cpp_1a54bd321d217ff05fcad3aedd0684e86d" kindref="member">alice_balance</ref><sp/>=<sp/>get_account(</highlight><highlight class="stringliteral">&quot;alice&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;0,CERO&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1abf3d4eb475605f9a73224e835cd3fb71" kindref="member">REQUIRE_MATCHING_OBJECT</ref>(<sp/><ref refid="eosio_8token__tests_8cpp_1a54bd321d217ff05fcad3aedd0684e86d" kindref="member">alice_balance</ref>,<sp/><ref refid="eosio_8token__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;balance&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;1000<sp/>CERO&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8token__tests_8cpp_1a842c5467344efbabdf1da5f8aee477e1" kindref="member">transfer</ref>(<sp/></highlight><highlight class="stringliteral">&quot;alice&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;bob&quot;</highlight><highlight class="normal">_n,<sp/>asset::from_string(</highlight><highlight class="stringliteral">&quot;300<sp/>CERO&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;hola&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8token__tests_8cpp_1a54bd321d217ff05fcad3aedd0684e86d" kindref="member">alice_balance</ref><sp/>=<sp/>get_account(</highlight><highlight class="stringliteral">&quot;alice&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;0,CERO&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1abf3d4eb475605f9a73224e835cd3fb71" kindref="member">REQUIRE_MATCHING_OBJECT</ref>(<sp/><ref refid="eosio_8token__tests_8cpp_1a54bd321d217ff05fcad3aedd0684e86d" kindref="member">alice_balance</ref>,<sp/><ref refid="eosio_8token__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;balance&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;700<sp/>CERO&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;frozen&quot;</highlight><highlight class="normal">,<sp/>0)</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;whitelist&quot;</highlight><highlight class="normal">,<sp/>1)</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="eosio_8token__tests_8cpp_1a5a019cb4a1bf97a4fc1f6f27fe1c7469" kindref="member">bob_balance</ref><sp/>=<sp/>get_account(</highlight><highlight class="stringliteral">&quot;bob&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;0,CERO&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1abf3d4eb475605f9a73224e835cd3fb71" kindref="member">REQUIRE_MATCHING_OBJECT</ref>(<sp/><ref refid="eosio_8token__tests_8cpp_1a5a019cb4a1bf97a4fc1f6f27fe1c7469" kindref="member">bob_balance</ref>,<sp/><ref refid="eosio_8token__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;balance&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;300<sp/>CERO&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;frozen&quot;</highlight><highlight class="normal">,<sp/>0)</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;whitelist&quot;</highlight><highlight class="normal">,<sp/>1)</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8token__tests_8cpp_1a33ea5666e328012a7aab703d950837d1" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(<sp/></highlight><highlight class="stringliteral">&quot;overdrawn<sp/>balance&quot;</highlight><highlight class="normal"><sp/>),</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8token__tests_8cpp_1a842c5467344efbabdf1da5f8aee477e1" kindref="member">transfer</ref>(<sp/></highlight><highlight class="stringliteral">&quot;alice&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;bob&quot;</highlight><highlight class="normal">_n,<sp/>asset::from_string(</highlight><highlight class="stringliteral">&quot;701<sp/>CERO&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;hola&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8token__tests_8cpp_1a33ea5666e328012a7aab703d950837d1" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(<sp/></highlight><highlight class="stringliteral">&quot;must<sp/>transfer<sp/>positive<sp/>quantity&quot;</highlight><highlight class="normal"><sp/>),</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8token__tests_8cpp_1a842c5467344efbabdf1da5f8aee477e1" kindref="member">transfer</ref>(<sp/></highlight><highlight class="stringliteral">&quot;alice&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;bob&quot;</highlight><highlight class="normal">_n,<sp/>asset::from_string(</highlight><highlight class="stringliteral">&quot;-1000<sp/>CERO&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;hola&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal">}<sp/><ref refid="eosio_8token__tests_8cpp_1af5bf52e9919e348118ed7570478adaac" kindref="member">FC_LOG_AND_RETHROW</ref>()</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><ref refid="eosio_8token__tests_8cpp_1a22ac78b4a13caada70ea38e67eea0e6c" kindref="member">BOOST_FIXTURE_TEST_CASE</ref>(<sp/>open_tests,<sp/><ref refid="classeosio__token__tester" kindref="compound">eosio_token_tester</ref><sp/>)<sp/><ref refid="eosio_8token__tests_8cpp_1a252a093241881c670c623766dad744a7" kindref="member">try</ref><sp/>{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="classeosio_1_1token" kindref="compound">token</ref><sp/>=<sp/>create(<sp/></highlight><highlight class="stringliteral">&quot;alice&quot;</highlight><highlight class="normal">_n,<sp/>asset::from_string(</highlight><highlight class="stringliteral">&quot;1000<sp/>CERO&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="eosio_8token__tests_8cpp_1a54bd321d217ff05fcad3aedd0684e86d" kindref="member">alice_balance</ref><sp/>=<sp/>get_account(</highlight><highlight class="stringliteral">&quot;alice&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;0,CERO&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8token__tests_8cpp_1a33ea5666e328012a7aab703d950837d1" kindref="member">BOOST_REQUIRE_EQUAL</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/><ref refid="eosio_8token__tests_8cpp_1a54bd321d217ff05fcad3aedd0684e86d" kindref="member">alice_balance</ref>.is_null()<sp/>);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8token__tests_8cpp_1a33ea5666e328012a7aab703d950837d1" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;tokens<sp/>can<sp/>only<sp/>be<sp/>issued<sp/>to<sp/>issuer<sp/>account&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a42fbaa315b85eaef150483397c76fb62" kindref="member">push_action</ref>(<sp/></highlight><highlight class="stringliteral">&quot;alice&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;issue&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="eosio_8token__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/></highlight><highlight class="stringliteral">&quot;to&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;bob&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/></highlight><highlight class="stringliteral">&quot;quantity&quot;</highlight><highlight class="normal">,<sp/>asset::from_string(</highlight><highlight class="stringliteral">&quot;1000<sp/>CERO&quot;</highlight><highlight class="normal">)<sp/>)</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/></highlight><highlight class="stringliteral">&quot;memo&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8token__tests_8cpp_1a33ea5666e328012a7aab703d950837d1" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><ref refid="eosio_8token__tests_8cpp_1af379481fd03c660605334d2eeac609dc" kindref="member">issue</ref>(<sp/></highlight><highlight class="stringliteral">&quot;alice&quot;</highlight><highlight class="normal">_n,<sp/>asset::from_string(</highlight><highlight class="stringliteral">&quot;1000<sp/>CERO&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;issue&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8token__tests_8cpp_1a54bd321d217ff05fcad3aedd0684e86d" kindref="member">alice_balance</ref><sp/>=<sp/>get_account(</highlight><highlight class="stringliteral">&quot;alice&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;0,CERO&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1abf3d4eb475605f9a73224e835cd3fb71" kindref="member">REQUIRE_MATCHING_OBJECT</ref>(<sp/><ref refid="eosio_8token__tests_8cpp_1a54bd321d217ff05fcad3aedd0684e86d" kindref="member">alice_balance</ref>,<sp/><ref refid="eosio_8token__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;balance&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;1000<sp/>CERO&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="eosio_8token__tests_8cpp_1a5a019cb4a1bf97a4fc1f6f27fe1c7469" kindref="member">bob_balance</ref><sp/>=<sp/>get_account(</highlight><highlight class="stringliteral">&quot;bob&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;0,CERO&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8token__tests_8cpp_1a33ea5666e328012a7aab703d950837d1" kindref="member">BOOST_REQUIRE_EQUAL</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/><ref refid="eosio_8token__tests_8cpp_1a5a019cb4a1bf97a4fc1f6f27fe1c7469" kindref="member">bob_balance</ref>.is_null()<sp/>);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8token__tests_8cpp_1a33ea5666e328012a7aab703d950837d1" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(</highlight><highlight class="stringliteral">&quot;owner<sp/>account<sp/>does<sp/>not<sp/>exist&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>open(<sp/></highlight><highlight class="stringliteral">&quot;nonexistent&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;0,CERO&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;alice&quot;</highlight><highlight class="normal">_n<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8token__tests_8cpp_1a33ea5666e328012a7aab703d950837d1" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>open(<sp/></highlight><highlight class="stringliteral">&quot;bob&quot;</highlight><highlight class="normal">_n,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;0,CERO&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;alice&quot;</highlight><highlight class="normal">_n<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8token__tests_8cpp_1a5a019cb4a1bf97a4fc1f6f27fe1c7469" kindref="member">bob_balance</ref><sp/>=<sp/>get_account(</highlight><highlight class="stringliteral">&quot;bob&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;0,CERO&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1abf3d4eb475605f9a73224e835cd3fb71" kindref="member">REQUIRE_MATCHING_OBJECT</ref>(<sp/><ref refid="eosio_8token__tests_8cpp_1a5a019cb4a1bf97a4fc1f6f27fe1c7469" kindref="member">bob_balance</ref>,<sp/><ref refid="eosio_8token__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;balance&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0<sp/>CERO&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8token__tests_8cpp_1a33ea5666e328012a7aab703d950837d1" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><ref refid="eosio_8token__tests_8cpp_1a842c5467344efbabdf1da5f8aee477e1" kindref="member">transfer</ref>(<sp/></highlight><highlight class="stringliteral">&quot;alice&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;bob&quot;</highlight><highlight class="normal">_n,<sp/>asset::from_string(</highlight><highlight class="stringliteral">&quot;200<sp/>CERO&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;hola&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8token__tests_8cpp_1a5a019cb4a1bf97a4fc1f6f27fe1c7469" kindref="member">bob_balance</ref><sp/>=<sp/>get_account(</highlight><highlight class="stringliteral">&quot;bob&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;0,CERO&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1abf3d4eb475605f9a73224e835cd3fb71" kindref="member">REQUIRE_MATCHING_OBJECT</ref>(<sp/><ref refid="eosio_8token__tests_8cpp_1a5a019cb4a1bf97a4fc1f6f27fe1c7469" kindref="member">bob_balance</ref>,<sp/><ref refid="eosio_8token__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;balance&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;200<sp/>CERO&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8token__tests_8cpp_1a33ea5666e328012a7aab703d950837d1" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(<sp/></highlight><highlight class="stringliteral">&quot;symbol<sp/>does<sp/>not<sp/>exist&quot;</highlight><highlight class="normal"><sp/>),</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>open(<sp/></highlight><highlight class="stringliteral">&quot;carol&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;0,INVALID&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;alice&quot;</highlight><highlight class="normal">_n<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8token__tests_8cpp_1a33ea5666e328012a7aab703d950837d1" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>wasm_assert_msg(<sp/></highlight><highlight class="stringliteral">&quot;symbol<sp/>precision<sp/>mismatch&quot;</highlight><highlight class="normal"><sp/>),</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>open(<sp/></highlight><highlight class="stringliteral">&quot;carol&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;1,CERO&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;alice&quot;</highlight><highlight class="normal">_n<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal">}<sp/><ref refid="eosio_8token__tests_8cpp_1af5bf52e9919e348118ed7570478adaac" kindref="member">FC_LOG_AND_RETHROW</ref>()</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><ref refid="eosio_8token__tests_8cpp_1a22ac78b4a13caada70ea38e67eea0e6c" kindref="member">BOOST_FIXTURE_TEST_CASE</ref>(<sp/>close_tests,<sp/><ref refid="classeosio__token__tester" kindref="compound">eosio_token_tester</ref><sp/>)<sp/><ref refid="eosio_8token__tests_8cpp_1a252a093241881c670c623766dad744a7" kindref="member">try</ref><sp/>{</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="classeosio_1_1token" kindref="compound">token</ref><sp/>=<sp/>create(<sp/></highlight><highlight class="stringliteral">&quot;alice&quot;</highlight><highlight class="normal">_n,<sp/>asset::from_string(</highlight><highlight class="stringliteral">&quot;1000<sp/>CERO&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="eosio_8token__tests_8cpp_1a54bd321d217ff05fcad3aedd0684e86d" kindref="member">alice_balance</ref><sp/>=<sp/>get_account(</highlight><highlight class="stringliteral">&quot;alice&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;0,CERO&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8token__tests_8cpp_1a33ea5666e328012a7aab703d950837d1" kindref="member">BOOST_REQUIRE_EQUAL</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/><ref refid="eosio_8token__tests_8cpp_1a54bd321d217ff05fcad3aedd0684e86d" kindref="member">alice_balance</ref>.is_null()<sp/>);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8token__tests_8cpp_1a33ea5666e328012a7aab703d950837d1" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><ref refid="eosio_8token__tests_8cpp_1af379481fd03c660605334d2eeac609dc" kindref="member">issue</ref>(<sp/></highlight><highlight class="stringliteral">&quot;alice&quot;</highlight><highlight class="normal">_n,<sp/>asset::from_string(</highlight><highlight class="stringliteral">&quot;1000<sp/>CERO&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;hola&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8token__tests_8cpp_1a54bd321d217ff05fcad3aedd0684e86d" kindref="member">alice_balance</ref><sp/>=<sp/>get_account(</highlight><highlight class="stringliteral">&quot;alice&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;0,CERO&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1abf3d4eb475605f9a73224e835cd3fb71" kindref="member">REQUIRE_MATCHING_OBJECT</ref>(<sp/><ref refid="eosio_8token__tests_8cpp_1a54bd321d217ff05fcad3aedd0684e86d" kindref="member">alice_balance</ref>,<sp/><ref refid="eosio_8token__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;balance&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;1000<sp/>CERO&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8token__tests_8cpp_1a33ea5666e328012a7aab703d950837d1" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/><ref refid="eosio_8token__tests_8cpp_1a842c5467344efbabdf1da5f8aee477e1" kindref="member">transfer</ref>(<sp/></highlight><highlight class="stringliteral">&quot;alice&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;bob&quot;</highlight><highlight class="normal">_n,<sp/>asset::from_string(</highlight><highlight class="stringliteral">&quot;1000<sp/>CERO&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;hola&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8token__tests_8cpp_1a54bd321d217ff05fcad3aedd0684e86d" kindref="member">alice_balance</ref><sp/>=<sp/>get_account(</highlight><highlight class="stringliteral">&quot;alice&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;0,CERO&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__tests_8cpp_1abf3d4eb475605f9a73224e835cd3fb71" kindref="member">REQUIRE_MATCHING_OBJECT</ref>(<sp/><ref refid="eosio_8token__tests_8cpp_1a54bd321d217ff05fcad3aedd0684e86d" kindref="member">alice_balance</ref>,<sp/><ref refid="eosio_8token__tests_8cpp_1a9ce1cc08f10fbc96c3b7c68675653163" kindref="member">mvo</ref>()</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;balance&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0<sp/>CERO&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8token__tests_8cpp_1a33ea5666e328012a7aab703d950837d1" kindref="member">BOOST_REQUIRE_EQUAL</ref>(<sp/>success(),<sp/>close(<sp/></highlight><highlight class="stringliteral">&quot;alice&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;0,CERO&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8token__tests_8cpp_1a54bd321d217ff05fcad3aedd0684e86d" kindref="member">alice_balance</ref><sp/>=<sp/>get_account(</highlight><highlight class="stringliteral">&quot;alice&quot;</highlight><highlight class="normal">_n,<sp/></highlight><highlight class="stringliteral">&quot;0,CERO&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8token__tests_8cpp_1a33ea5666e328012a7aab703d950837d1" kindref="member">BOOST_REQUIRE_EQUAL</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/><ref refid="eosio_8token__tests_8cpp_1a54bd321d217ff05fcad3aedd0684e86d" kindref="member">alice_balance</ref>.is_null()<sp/>);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal">}<sp/><ref refid="eosio_8token__tests_8cpp_1af5bf52e9919e348118ed7570478adaac" kindref="member">FC_LOG_AND_RETHROW</ref>()</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal">BOOST_AUTO_TEST_SUITE_END()</highlight></codeline>
    </programlisting>
    <location file="system/tests/eosio.token_tests.cpp"/>
  </compounddef>
</doxygen>
