<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="eosio_8system__blockinfo__tests_8cpp" kind="file" language="C++">
    <compoundname>eosio.system_blockinfo_tests.cpp</compoundname>
    <includes local="no">functional</includes>
    <includes local="no">limits</includes>
    <includes local="no">boost/test/unit_test.hpp</includes>
    <includes local="no">eosio/chain/config.hpp</includes>
    <includes local="no">eosio/chain/contract_table_objects.hpp</includes>
    <includes local="no">eosio/testing/tester.hpp</includes>
    <includes local="no">fc/io/datastream.hpp</includes>
    <includes local="no">fc/io/raw.hpp</includes>
    <includes local="no">fc/log/logger.hpp</includes>
    <includes local="no">fc/time.hpp</includes>
    <includes refid="eosio_8system__tester_8hpp" local="yes">eosio.system_tester.hpp</includes>
    <includes refid="blockinfo__tester_8hpp" local="yes">../contracts/test_contracts/blockinfo_tester/include/blockinfo_tester/blockinfo_tester.hpp</includes>
    <incdepgraph>
      <node id="22">
        <label>eosio.system/block_info.hpp</label>
        <link refid="block__info_8hpp"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>../contracts/test_contracts/blockinfo_tester/include/blockinfo_tester/blockinfo_tester.hpp</label>
        <link refid="blockinfo__tester_8hpp"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>system/tests/eosio.system_blockinfo_tests.cpp</label>
        <link refid="eosio_8system__blockinfo__tests_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>eosio.system_tester.hpp</label>
        <link refid="eosio_8system__tester_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>test_symbol.hpp</label>
        <link refid="test__symbol_8hpp"/>
      </node>
      <node id="4">
        <label>boost/test/unit_test.hpp</label>
      </node>
      <node id="15">
        <label>contracts.hpp</label>
      </node>
      <node id="26">
        <label>cstdint</label>
      </node>
      <node id="13">
        <label>eosio/chain/abi_serializer.hpp</label>
      </node>
      <node id="5">
        <label>eosio/chain/config.hpp</label>
      </node>
      <node id="6">
        <label>eosio/chain/contract_table_objects.hpp</label>
      </node>
      <node id="14">
        <label>eosio/chain/resource_limits.hpp</label>
      </node>
      <node id="23">
        <label>eosio/multi_index.hpp</label>
      </node>
      <node id="24">
        <label>eosio/name.hpp</label>
      </node>
      <node id="7">
        <label>eosio/testing/tester.hpp</label>
      </node>
      <node id="20">
        <label>eosio/time.hpp</label>
      </node>
      <node id="21">
        <label>eosio/varint.hpp</label>
      </node>
      <node id="8">
        <label>fc/io/datastream.hpp</label>
      </node>
      <node id="9">
        <label>fc/io/raw.hpp</label>
      </node>
      <node id="10">
        <label>fc/log/logger.hpp</label>
      </node>
      <node id="11">
        <label>fc/time.hpp</label>
      </node>
      <node id="17">
        <label>fc/variant_object.hpp</label>
      </node>
      <node id="18">
        <label>fstream</label>
      </node>
      <node id="2">
        <label>functional</label>
      </node>
      <node id="3">
        <label>limits</label>
      </node>
      <node id="25">
        <label>optional</label>
      </node>
      <node id="27">
        <label>variant</label>
      </node>
    </incdepgraph>
    <innerclass refid="structanonymous__namespace_02eosio_8system__blockinfo__tests_8cpp_03_1_1block__info__record" prot="public">anonymous_namespace{eosio.system_blockinfo_tests.cpp}::block_info_record</innerclass>
    <innernamespace refid="namespaceanonymous__namespace_02eosio_8system__blockinfo__tests_8cpp_03">anonymous_namespace{eosio.system_blockinfo_tests.cpp}</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="eosio_8system__blockinfo__tests_8cpp_1afe9656fa7a33eb511ad71853ee74445f" prot="public" static="no">
        <name>TEST_INCLUDE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_blockinfo_tests.cpp" line="16" column="9" bodyfile="system/tests/eosio.system_blockinfo_tests.cpp" bodystart="16" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="eosio_8system__blockinfo__tests_8cpp_1abe4cc9788f52e49485473dc699537388" prot="public" static="no" mutable="no">
        <type></type>
        <definition>try</definition>
        <argsstring></argsstring>
        <name>try</name>
        <initializer>{
   static_assert(rolling_window_size &gt;= 2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_blockinfo_tests.cpp" line="256" column="1" bodyfile="system/tests/eosio.system_blockinfo_tests.cpp" bodystart="256" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="eosio_8system__blockinfo__tests_8cpp_1a6369f71c4b84b10d58345619fec31fee" prot="public" static="no" mutable="no">
        <type>auto</type>
        <definition>auto start_block_height</definition>
        <argsstring></argsstring>
        <name>start_block_height</name>
        <initializer>= control-&gt;head_block_num()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_blockinfo_tests.cpp" line="261" column="9" bodyfile="system/tests/eosio.system_blockinfo_tests.cpp" bodystart="261" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="eosio_8system__blockinfo__tests_8cpp_1ae8e35c55d12712562a8a5d9345e64f1c" prot="public" static="no" mutable="no">
        <type>auto</type>
        <definition>auto start_block_timestamp</definition>
        <argsstring></argsstring>
        <name>start_block_timestamp</name>
        <initializer>= control-&gt;head_block_time()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_blockinfo_tests.cpp" line="262" column="9" bodyfile="system/tests/eosio.system_blockinfo_tests.cpp" bodystart="262" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="eosio_8system__blockinfo__tests_8cpp_1a52dcaa62cbf75da019544765096f5223" prot="public" static="no" mutable="no">
        <type>std::vector&lt; block_info_record &gt;</type>
        <definition>std::vector&lt;block_info_record&gt; expected_table</definition>
        <argsstring></argsstring>
        <name>expected_table</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_blockinfo_tests.cpp" line="264" column="16" bodyfile="system/tests/eosio.system_blockinfo_tests.cpp" bodystart="264" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="eosio_8system__blockinfo__tests_8cpp_1a606e24772d6361fa36da671b89088c3e" prot="public" static="no" mutable="no">
        <type>auto</type>
        <definition>auto add_to_expected_table</definition>
        <argsstring></argsstring>
        <name>add_to_expected_table</name>
        <initializer>= [&amp;<ref refid="eosio_8system__blockinfo__tests_8cpp_1a52dcaa62cbf75da019544765096f5223" kindref="member">expected_table</ref>](uint32_t block_height, fc::time_point block_timestamp) {
      <ref refid="eosio_8system__tests_8cpp_1a9c6420019dd660bcebd494562d4d55c4" kindref="member">expected_table.push_back</ref>(block_info_record{
         .block_height    = block_height,
         .block_timestamp = block_timestamp,
      });
   }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_blockinfo_tests.cpp" line="265" column="9" bodyfile="system/tests/eosio.system_blockinfo_tests.cpp" bodystart="265" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="eosio_8system__blockinfo__tests_8cpp_1a42754b2e6f416c61253896f83953535d" prot="public" static="no" mutable="no">
        <type>auto</type>
        <definition>actual_table</definition>
        <argsstring></argsstring>
        <name>actual_table</name>
        <initializer>= get_blockinfo_table()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_blockinfo_tests.cpp" line="274" column="9" bodyfile="system/tests/eosio.system_blockinfo_tests.cpp" bodystart="274" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="eosio_8system__blockinfo__tests_8cpp_1a5691386f78599c28782c81b13fc68f09" prot="public" static="no" mutable="no">
        <type>auto</type>
        <definition>auto block_time_delta</definition>
        <argsstring></argsstring>
        <name>block_time_delta</name>
        <initializer>= fc::milliseconds(eosio::chain::config::block_interval_ms)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_blockinfo_tests.cpp" line="281" column="9" bodyfile="system/tests/eosio.system_blockinfo_tests.cpp" bodystart="281" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="eosio_8system__blockinfo__tests_8cpp_1a7e16ff9e8ecdc3cedca030bb339fd24d" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t cur_block_height</definition>
        <argsstring></argsstring>
        <name>cur_block_height</name>
        <initializer>= <ref refid="eosio_8system__blockinfo__tests_8cpp_1a6369f71c4b84b10d58345619fec31fee" kindref="member">start_block_height</ref> + 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_blockinfo_tests.cpp" line="283" column="13" bodyfile="system/tests/eosio.system_blockinfo_tests.cpp" bodystart="283" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="eosio_8system__blockinfo__tests_8cpp_1a7a45f253270dfac5878067abeda33b7c" prot="public" static="no" mutable="no">
        <type>auto</type>
        <definition>auto cur_block_timestamp</definition>
        <argsstring></argsstring>
        <name>cur_block_timestamp</name>
        <initializer>= <ref refid="eosio_8system__blockinfo__tests_8cpp_1ae8e35c55d12712562a8a5d9345e64f1c" kindref="member">start_block_timestamp</ref> + <ref refid="eosio_8system__blockinfo__tests_8cpp_1a5691386f78599c28782c81b13fc68f09" kindref="member">block_time_delta</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_blockinfo_tests.cpp" line="284" column="13" bodyfile="system/tests/eosio.system_blockinfo_tests.cpp" bodystart="284" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="eosio_8system__blockinfo__tests_8cpp_1acb3b40cb14a16b925c7347b2030578ed" prot="public" static="no" mutable="no">
        <type>auto</type>
        <definition>advance_cur_block</definition>
        <argsstring></argsstring>
        <name>advance_cur_block</name>
        <initializer>= [&amp;<ref refid="eosio_8system__blockinfo__tests_8cpp_1a7e16ff9e8ecdc3cedca030bb339fd24d" kindref="member">cur_block_height</ref>, &amp;<ref refid="eosio_8system__blockinfo__tests_8cpp_1a7a45f253270dfac5878067abeda33b7c" kindref="member">cur_block_timestamp</ref>, <ref refid="eosio_8system__blockinfo__tests_8cpp_1a5691386f78599c28782c81b13fc68f09" kindref="member">block_time_delta</ref>]() {
      ++<ref refid="eosio_8system__blockinfo__tests_8cpp_1a7e16ff9e8ecdc3cedca030bb339fd24d" kindref="member">cur_block_height</ref>;
      <ref refid="eosio_8system__blockinfo__tests_8cpp_1a7a45f253270dfac5878067abeda33b7c" kindref="member">cur_block_timestamp</ref> += <ref refid="eosio_8system__blockinfo__tests_8cpp_1a5691386f78599c28782c81b13fc68f09" kindref="member">block_time_delta</ref>;
   }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_blockinfo_tests.cpp" line="286" column="9" bodyfile="system/tests/eosio.system_blockinfo_tests.cpp" bodystart="286" bodyend="-1" declfile="system/tests/eosio.system_blockinfo_tests.cpp" declline="308" declcolumn="4"/>
      </memberdef>
      <memberdef kind="variable" id="eosio_8system__blockinfo__tests_8cpp_1a95f94ed60768eb5ac104d28aed9262cb" prot="public" static="no" mutable="no">
        <type>auto</type>
        <definition>auto latest_block_batch_info</definition>
        <argsstring></argsstring>
        <name>latest_block_batch_info</name>
        <initializer>= [this](uint32_t batch_start_height_offset,
                                         uint32_t batch_size) -&gt; blockinfo_tester::latest_block_batch_info_result 
   {
      auto result = get_latest_block_batch_info(blockinfo_tester::get_latest_block_batch_info{
         .batch_start_height_offset = batch_start_height_offset,
         .batch_size                = batch_size,
      });
      <ref refid="eosio_8system__tests_8cpp_1a020e67667b720177b3b9f825306965f5" kindref="member">if</ref> (!result.first.has_value()) {
         const eosio::chain::transaction_trace&amp; <ref refid="eosio_8wrap__tests_8cpp_1a176b44375feec0c1f90f3bde5f1feb2e" kindref="member">trace</ref> = *result.second;
         <ref refid="eosio_8system__tests_8cpp_1a020e67667b720177b3b9f825306965f5" kindref="member">if</ref> (trace.except.has_value()) {
            elog(trace.except-&gt;to_detail_string());
         }
      }
      <ref refid="eosio_8system__tests_8cpp_1ae00c608b8a40d03b8b8dd2daac50185b" kindref="member">BOOST_REQUIRE</ref>(result.first.has_value());
      return *result.first;
   }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_blockinfo_tests.cpp" line="325" column="9" bodyfile="system/tests/eosio.system_blockinfo_tests.cpp" bodystart="325" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="eosio_8system__blockinfo__tests_8cpp_1a06e7d3a467934b48346b45c920193ca5" prot="public" static="no" mutable="no">
        <type>auto</type>
        <definition>auto require_latest_block_batch_info</definition>
        <argsstring></argsstring>
        <name>require_latest_block_batch_info</name>
        <initializer>=
      [<ref refid="eosio_8system__blockinfo__tests_8cpp_1a95f94ed60768eb5ac104d28aed9262cb" kindref="member">latest_block_batch_info</ref>](uint32_t batch_start_height_offset,
                                uint32_t batch_size) -&gt; blockinfo_tester::block_batch_info 
   {
      auto result = <ref refid="eosio_8system__blockinfo__tests_8cpp_1a95f94ed60768eb5ac104d28aed9262cb" kindref="member">latest_block_batch_info</ref>(batch_start_height_offset, batch_size);
      <ref refid="eosio_8system__tests_8cpp_1a020e67667b720177b3b9f825306965f5" kindref="member">if</ref> (result.has_error()) {
         elog(&quot;require_latest_block_batch_info returned error: ${err}&quot;, (&quot;err&quot;, result.get_error()));
      }
      <ref refid="eosio_8system__tests_8cpp_1ae00c608b8a40d03b8b8dd2daac50185b" kindref="member">BOOST_REQUIRE</ref>(!result.has_error());

      return *result.result;
   }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_blockinfo_tests.cpp" line="342" column="9" bodyfile="system/tests/eosio.system_blockinfo_tests.cpp" bodystart="342" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="eosio_8system__blockinfo__tests_8cpp_1abec503f718282cf8b966eeaa60b33695" prot="public" static="no" mutable="no">
        <type>auto</type>
        <definition>auto expected_batch_start_timestamp</definition>
        <argsstring></argsstring>
        <name>expected_batch_start_timestamp</name>
        <initializer>= <ref refid="eosio_8system__blockinfo__tests_8cpp_1ae8e35c55d12712562a8a5d9345e64f1c" kindref="member">start_block_timestamp</ref> + <ref refid="eosio_8system__blockinfo__tests_8cpp_1a5691386f78599c28782c81b13fc68f09" kindref="member">block_time_delta</ref>(1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_blockinfo_tests.cpp" line="455" column="12" bodyfile="system/tests/eosio.system_blockinfo_tests.cpp" bodystart="455" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="eosio_8system__blockinfo__tests_8cpp_1ab9f9ce5e1154f7e29d1aeea4a1f96444" prot="public" static="no" mutable="no">
        <type>auto</type>
        <definition>auto expected_batch_current_end_timestamp</definition>
        <argsstring></argsstring>
        <name>expected_batch_current_end_timestamp</name>
        <initializer>= <ref refid="eosio_8system__blockinfo__tests_8cpp_1ae8e35c55d12712562a8a5d9345e64f1c" kindref="member">start_block_timestamp</ref> + <ref refid="eosio_8system__blockinfo__tests_8cpp_1a5691386f78599c28782c81b13fc68f09" kindref="member">block_time_delta</ref>(2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_blockinfo_tests.cpp" line="456" column="12" bodyfile="system/tests/eosio.system_blockinfo_tests.cpp" bodystart="456" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="eosio_8system__blockinfo__tests_8cpp_1a476f5ce4da004fbf486836a28856f1cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FC_REFLECT</definition>
        <argsstring>(block_info_record,(version)(block_height)(block_timestamp)) namespace</argsstring>
        <name>FC_REFLECT</name>
        <param>
          <type>block_info_record</type>
        </param>
        <param>
          <type>(version)(block_height)(block_timestamp)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Scans filtered rows in blockinfo table in order of ascending block height where filtering only picks rows corresponding to block heights in the closed interval [start_block_height, end_block_height].</para>
<para>For each row visited, its deserialized block_info_record structure is passed into the visitor function. If a call to the visitor function returns false, scanning will stop and this function will return.</para>
<para><simplesect kind="pre"><para>start_block_height &lt;= end_block_height </para>
</simplesect>
<simplesect kind="return"><para>number of rows visited</para>
</simplesect>
</para>
        </inbodydescription>
        <location file="system/tests/eosio.system_blockinfo_tests.cpp" line="39" column="1" bodyfile="system/tests/eosio.system_blockinfo_tests.cpp" bodystart="39" bodyend="251"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__blockinfo__tests_8cpp_1a95fdc8cfd66a090d82b4c0b12470bce9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>produce_blocks</definition>
        <argsstring>(1)</argsstring>
        <name>produce_blocks</name>
        <param>
          <type>1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_blockinfo_tests.cpp" line="259" column="4" declfile="system/tests/eosio.system_blockinfo_tests.cpp" declline="259" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__blockinfo__tests_8cpp_1ad6e8251cfab108de26bcbfe67caea153" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>add_to_expected_table</definition>
        <argsstring>(start_block_height, start_block_timestamp)</argsstring>
        <name>add_to_expected_table</name>
        <param>
          <type><ref refid="eosio_8system__blockinfo__tests_8cpp_1a6369f71c4b84b10d58345619fec31fee" kindref="member">start_block_height</ref></type>
        </param>
        <param>
          <type><ref refid="eosio_8system__blockinfo__tests_8cpp_1ae8e35c55d12712562a8a5d9345e64f1c" kindref="member">start_block_timestamp</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_blockinfo_tests.cpp" line="272" column="4" declfile="system/tests/eosio.system_blockinfo_tests.cpp" declline="272" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__blockinfo__tests_8cpp_1a471c6cb052d56a242d74b9e9d0fa9375" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE</definition>
        <argsstring>(check_tables_match(expected_table, actual_table))</argsstring>
        <name>BOOST_REQUIRE</name>
        <param>
          <type>check_tables_match(<ref refid="eosio_8system__blockinfo__tests_8cpp_1a52dcaa62cbf75da019544765096f5223" kindref="member">expected_table</ref>, <ref refid="eosio_8system__blockinfo__tests_8cpp_1a42754b2e6f416c61253896f83953535d" kindref="member">actual_table</ref>)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_blockinfo_tests.cpp" line="275" column="4" declfile="system/tests/eosio.system_blockinfo_tests.cpp" declline="275" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__blockinfo__tests_8cpp_1a9254d3a439e45c854ee21c789430a904" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>produce_blocks</definition>
        <argsstring>(rolling_window_size - 1)</argsstring>
        <name>produce_blocks</name>
        <param>
          <type>rolling_window_size -</type>
          <declname>1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_blockinfo_tests.cpp" line="279" column="4" declfile="system/tests/eosio.system_blockinfo_tests.cpp" declline="279" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__blockinfo__tests_8cpp_1a33208b97b72a5c9529da7213df41fb6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>for</definition>
        <argsstring>(uint32_t end_block_height=start_block_height+rolling_window_size - 1;cur_block_height&lt;=end_block_height;advance_cur_block())</argsstring>
        <name>for</name>
        <param>
          <type>uint32_t</type>
          <declname>end_block_height</declname>
          <defval><ref refid="eosio_8system__blockinfo__tests_8cpp_1a6369f71c4b84b10d58345619fec31fee" kindref="member">start_block_height</ref>+rolling_window_size - 1;<ref refid="eosio_8system__blockinfo__tests_8cpp_1a7e16ff9e8ecdc3cedca030bb339fd24d" kindref="member">cur_block_height</ref>&lt;=end_block_height;<ref refid="eosio_8system__blockinfo__tests_8cpp_1acb3b40cb14a16b925c7347b2030578ed" kindref="member">advance_cur_block</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_blockinfo_tests.cpp" line="291" column="4" bodyfile="system/tests/eosio.system_blockinfo_tests.cpp" bodystart="291" bodyend="296"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__blockinfo__tests_8cpp_1a2495b4e23b5fcc416a80f6aea86bda2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_CHECK</definition>
        <argsstring>(rolling_window_size==actual_table.size())</argsstring>
        <name>BOOST_CHECK</name>
        <param>
          <type>rolling_window_size</type>
          <defval>=actual_table.size()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_blockinfo_tests.cpp" line="299" column="4" declfile="system/tests/eosio.system_blockinfo_tests.cpp" declline="299" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__blockinfo__tests_8cpp_1ad56a1021d27d25834a71c228653965dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_CHECK</definition>
        <argsstring>(check_tables_match(expected_table, actual_table))</argsstring>
        <name>BOOST_CHECK</name>
        <param>
          <type>check_tables_match(<ref refid="eosio_8system__blockinfo__tests_8cpp_1a52dcaa62cbf75da019544765096f5223" kindref="member">expected_table</ref>, <ref refid="eosio_8system__blockinfo__tests_8cpp_1a42754b2e6f416c61253896f83953535d" kindref="member">actual_table</ref>)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_blockinfo_tests.cpp" line="300" column="4" declfile="system/tests/eosio.system_blockinfo_tests.cpp" declline="300" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__blockinfo__tests_8cpp_1a94549b8e5cd43ffaf0c3f07ab82b401b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="eosio_8system__blockinfo__tests_8cpp_1a52dcaa62cbf75da019544765096f5223" kindref="member">expected_table</ref></type>
        <definition>expected_table erase</definition>
        <argsstring>(expected_table.begin())</argsstring>
        <name>erase</name>
        <param>
          <type>expected_table.</type>
          <declname>begin</declname>
          <array>()</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_blockinfo_tests.cpp" line="306" column="18" declfile="system/tests/eosio.system_blockinfo_tests.cpp" declline="306" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__blockinfo__tests_8cpp_1a9c6e0d4a05a7e57c14fe8ef548297f49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>add_to_expected_table</definition>
        <argsstring>(cur_block_height, cur_block_timestamp)</argsstring>
        <name>add_to_expected_table</name>
        <param>
          <type><ref refid="eosio_8system__blockinfo__tests_8cpp_1a7e16ff9e8ecdc3cedca030bb339fd24d" kindref="member">cur_block_height</ref></type>
        </param>
        <param>
          <type><ref refid="eosio_8system__blockinfo__tests_8cpp_1a7a45f253270dfac5878067abeda33b7c" kindref="member">cur_block_timestamp</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_blockinfo_tests.cpp" line="307" column="4" declfile="system/tests/eosio.system_blockinfo_tests.cpp" declline="307" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__blockinfo__tests_8cpp_1ad6a515ee9857a59bd933ac9a613c3897" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>create_account_with_resources</definition>
        <argsstring>(blockinfo_tester_account_name, config::system_account_name, core_sym::from_string(&quot;10.0000&quot;), false)</argsstring>
        <name>create_account_with_resources</name>
        <param>
          <type>blockinfo_tester_account_name</type>
        </param>
        <param>
          <type>config::system_account_name</type>
        </param>
        <param>
          <type><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(&quot;10.0000&quot;)</type>
        </param>
        <param>
          <type>false</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_blockinfo_tests.cpp" line="321" column="4" declfile="system/tests/eosio.system_blockinfo_tests.cpp" declline="321" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__blockinfo__tests_8cpp_1a21d5e40c00e07c83846725fb72d668cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>set_code</definition>
        <argsstring>(blockinfo_tester_account_name, test_contracts::blockinfo_tester_wasm())</argsstring>
        <name>set_code</name>
        <param>
          <type>blockinfo_tester_account_name</type>
        </param>
        <param>
          <type>test_contracts::blockinfo_tester_wasm()</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_blockinfo_tests.cpp" line="323" column="4" declfile="system/tests/eosio.system_blockinfo_tests.cpp" declline="323" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__blockinfo__tests_8cpp_1a4b0de63b5a7fc006c114033820f4494c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_CHECK</definition>
        <argsstring>(result.has_error())</argsstring>
        <name>BOOST_CHECK</name>
        <param>
          <type>result.</type>
          <declname>has_error</declname>
          <array>()</array>
        </param>
        <initializer>{
      auto result = <ref refid="eosio_8system__blockinfo__tests_8cpp_1a95f94ed60768eb5ac104d28aed9262cb" kindref="member">latest_block_batch_info</ref>(0, 1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_blockinfo_tests.cpp" line="358" column="7" declfile="system/tests/eosio.system_blockinfo_tests.cpp" declline="358" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__blockinfo__tests_8cpp_1aefac43c555a8e3a09b07519e6f2f1a8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_REQUIRE</definition>
        <argsstring>(8&lt; start_block_height)</argsstring>
        <name>BOOST_REQUIRE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_blockinfo_tests.cpp" line="376" column="4" declfile="system/tests/eosio.system_blockinfo_tests.cpp" declline="376" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__blockinfo__tests_8cpp_1aeb0c10efe394d4075a99b388385ea9c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_CHECK</definition>
        <argsstring>(info.batch_start_height==info.batch_current_end_height)</argsstring>
        <name>BOOST_CHECK</name>
        <param>
          <type>info.</type>
          <declname>batch_start_height</declname>
          <defval>=info.batch_current_end_height</defval>
        </param>
        <initializer>{
      auto <ref refid="eosio_8system__tests_8cpp_1a0ecaa1862f168e8a31db8236916a811e" kindref="member">info</ref> = <ref refid="eosio_8system__blockinfo__tests_8cpp_1a06e7d3a467934b48346b45c920193ca5" kindref="member">require_latest_block_batch_info</ref>(<ref refid="eosio_8system__blockinfo__tests_8cpp_1a6369f71c4b84b10d58345619fec31fee" kindref="member">start_block_height</ref>, std::numeric_limits&lt;uint32_t&gt;<ref refid="eosio_8token__tests_8cpp_1a198a12b0d692958ae8d6a39e98bcc679" kindref="member">::max</ref>())</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_blockinfo_tests.cpp" line="385" column="7" declfile="system/tests/eosio.system_blockinfo_tests.cpp" declline="385" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="eosio_8system__blockinfo__tests_8cpp_1a89420b9accc777683e61e0b899aa75f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>produce_blocks</definition>
        <argsstring>(2)</argsstring>
        <name>produce_blocks</name>
        <param>
          <type>2</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="system/tests/eosio.system_blockinfo_tests.cpp" line="425" column="4" declfile="system/tests/eosio.system_blockinfo_tests.cpp" declline="425" declcolumn="4"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;functional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;limits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/test/unit_test.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;eosio/chain/config.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;eosio/chain/contract_table_objects.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;eosio/testing/tester.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fc/io/datastream.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fc/io/raw.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fc/log/logger.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fc/time.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="eosio_8system__tester_8hpp" kindref="compound">eosio.system_tester.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TEST_INCLUDE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../contracts/test_contracts/blockinfo_tester/include/blockinfo_tester/blockinfo_tester.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="namespaceanonymous__namespace_02eosio_8system__blockinfo__tests_8cpp_03" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="structanonymous__namespace_02eosio_8system__blockinfo__tests_8cpp_03_1_1block__info__record" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structanonymous__namespace_02eosio_8system__blockinfo__tests_8cpp_03_1_1block__info__record" kindref="compound">block_info_record</ref></highlight></codeline>
<codeline lineno="23"><highlight class="normal">{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>version<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/>block_height;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><ref refid="namespacesystem__contracts_1_1testing_1_1test__contracts_1_1blockinfo__tester_1aada4f815458e881f7140c74078089f01" kindref="member">fc::time_point</ref><sp/>block_timestamp;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator==(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structanonymous__namespace_02eosio_8system__blockinfo__tests_8cpp_03_1_1block__info__record" kindref="compound">block_info_record</ref>&amp;<sp/>lhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structanonymous__namespace_02eosio_8system__blockinfo__tests_8cpp_03_1_1block__info__record" kindref="compound">block_info_record</ref>&amp;<sp/>rhs)</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::tie(lhs.<ref refid="structanonymous__namespace_02eosio_8system__blockinfo__tests_8cpp_03_1_1block__info__record_1a9b175e30fcaf561319e39ee48d014602" kindref="member">version</ref>,<sp/>lhs.<ref refid="structanonymous__namespace_02eosio_8system__blockinfo__tests_8cpp_03_1_1block__info__record_1ab1c2e57742392fbba0afae1d1331dcc5" kindref="member">block_height</ref>,<sp/>lhs.<ref refid="structanonymous__namespace_02eosio_8system__blockinfo__tests_8cpp_03_1_1block__info__record_1aac121c92ab118a1eeae949d180eda364" kindref="member">block_timestamp</ref>)<sp/>==</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::tie(rhs.<ref refid="structanonymous__namespace_02eosio_8system__blockinfo__tests_8cpp_03_1_1block__info__record_1a9b175e30fcaf561319e39ee48d014602" kindref="member">version</ref>,<sp/>rhs.<ref refid="structanonymous__namespace_02eosio_8system__blockinfo__tests_8cpp_03_1_1block__info__record_1ab1c2e57742392fbba0afae1d1331dcc5" kindref="member">block_height</ref>,<sp/>rhs.<ref refid="structanonymous__namespace_02eosio_8system__blockinfo__tests_8cpp_03_1_1block__info__record_1aac121c92ab118a1eeae949d180eda364" kindref="member">block_timestamp</ref>);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="33"><highlight class="normal">};</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="namespaceanonymous__namespace_02eosio_8system__blockinfo__tests_8cpp_03_1a8af8482f663883a74d851f6e286ac4b9" kindref="member">rolling_window_size</ref><sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><ref refid="eosio_8system__blockinfo__tests_8cpp_1a476f5ce4da004fbf486836a28856f1cd" kindref="member">FC_REFLECT</ref>(block_info_record,<sp/>(version)(block_height)(block_timestamp))</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceeosio__system" kindref="compound">eosio_system</ref>;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacesystem__contracts_1_1testing" kindref="compound">system_contracts::testing</ref>;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">blockinfo_tester<sp/>=<sp/>test_contracts::blockinfo_tester;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eosio::chain::name<sp/>blockinfo_table_name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;blockinfo&quot;</highlight><highlight class="normal">_n;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">//<sp/>cspell:disable-next-line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eosio::chain::name<sp/>blockinfo_tester_account_name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;binfotester&quot;</highlight><highlight class="normal">_n;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">block_info_tester<sp/>:<sp/><ref refid="classeosio__system_1_1eosio__system__tester" kindref="compound">eosio_system::eosio_system_tester</ref></highlight></codeline>
<codeline lineno="54"><highlight class="normal">{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/>std::optional&lt;eosio::chain::table_id_object::id_type&gt;<sp/>get_blockinfo_table_id()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="57"><highlight class="keyword"><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">*<sp/>table_id_itr<sp/>=<sp/>control-&gt;db().find&lt;eosio::chain::table_id_object,<sp/>eosio::chain::by_code_scope_table&gt;(</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::make_tuple(eosio::chain::config::system_account_name,<sp/>eosio::chain::name{0},<sp/>blockinfo_table_name));</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!table_id_itr)<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>blockinfo<sp/>table<sp/>exists.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{};</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::optional&lt;eosio::chain::table_id_object::id_type&gt;(table_id_itr-&gt;id);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/>block_info_tester()<sp/>:<sp/><ref refid="classeosio__system_1_1eosio__system__tester" kindref="compound">eosio_system_tester</ref>(<ref refid="classeosio__system_1_1eosio__system__tester" kindref="compound">eosio_system_tester</ref>::setup_level::deploy_contract)<sp/>{}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scan_blockinfo_table(uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a6369f71c4b84b10d58345619fec31fee" kindref="member">start_block_height</ref>,</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end_block_height,</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::function&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">(block_info_record)&gt;<sp/>visitor)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="85"><highlight class="keyword"><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>FC_ASSERT(<ref refid="eosio_8system__blockinfo__tests_8cpp_1a6369f71c4b84b10d58345619fec31fee" kindref="member">start_block_height</ref><sp/>&lt;=<sp/>end_block_height,<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>inputs&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>t_id<sp/>=<sp/>get_blockinfo_table_id();</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!t_id)<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>blockinfo<sp/>table<sp/>exists,<sp/>so<sp/>there<sp/>is<sp/>nothing<sp/>to<sp/>scan<sp/>through.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>idx<sp/>=<sp/>control-&gt;db().get_index&lt;eosio::chain::key_value_index,<sp/>eosio::chain::by_scope_primary&gt;();</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rows_visited<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>block_info_record<sp/>r;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>itr<sp/>=<sp/>idx.lower_bound(boost::make_tuple(*t_id,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint64_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="eosio_8system__blockinfo__tests_8cpp_1a6369f71c4b84b10d58345619fec31fee" kindref="member">start_block_height</ref>)));</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itr<sp/>!=<sp/>idx.end()<sp/>&amp;&amp;<sp/>itr-&gt;t_id<sp/>==<sp/>*t_id<sp/>&amp;&amp;<sp/>itr-&gt;primary_key<sp/>&lt;=<sp/>end_block_height;<sp/>++itr)<sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fc::datastream&lt;const<sp/>char*&gt;<sp/>ds(itr-&gt;value.data(),<sp/>itr-&gt;value.size());</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fc::raw::unpack(ds,<sp/>r);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++rows_visited;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!visitor(std::move(r)))<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rows_visited;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/>std::vector&lt;block_info_record&gt;<sp/>get_blockinfo_table()</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;block_info_record&gt;<sp/>result;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>scan_blockinfo_table(0,<sp/><ref refid="eosio_8token__tests_8cpp_1a92759dbaf055ca451db93a2d11393122" kindref="member">std::numeric_limits&lt;uint32_t&gt;::max</ref>(),<sp/>[&amp;result](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>block_info_record&amp;<sp/>r)<sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.push_back(r);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/>std::pair&lt;std::optional&lt;blockinfo_tester::latest_block_batch_info_result&gt;,<sp/>eosio::chain::transaction_trace_ptr&gt;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><ref refid="namespaceeosiosystem_1_1block__info_1a2874613dc8993ab1cc70301c121823c6" kindref="member">get_latest_block_batch_info</ref>(<ref refid="namespaceeosiosystem_1_1block__info_1a2874613dc8993ab1cc70301c121823c6" kindref="member">blockinfo_tester::get_latest_block_batch_info</ref><sp/>request)</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::pair&lt;std::optional&lt;blockinfo_tester::latest_block_batch_info_result&gt;,<sp/>eosio::chain::transaction_trace_ptr&gt;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>signed_transaction<sp/><ref refid="eosio_8msig__tests_8cpp_1a6935d36f50fec547a188728bc39593b6" kindref="member">trx</ref>;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a6935d36f50fec547a188728bc39593b6" kindref="member">trx</ref>.actions.emplace_back(std::vector&lt;permission_level&gt;{{config::system_account_name,<sp/>config::active_name}},</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blockinfo_tester_account_name,<sp/></highlight><highlight class="stringliteral">&quot;call&quot;</highlight><highlight class="normal">_n,</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fc::raw::pack(<ref refid="namespacesystem__contracts_1_1testing_1_1test__contracts_1_1blockinfo__tester_1a401279c7208232bcb2a66175b597ba44" kindref="member">blockinfo_tester::input_type</ref>{std::move(request)}));</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a6935d36f50fec547a188728bc39593b6" kindref="member">trx</ref>.actions.emplace_back(std::vector&lt;permission_level&gt;{},<sp/>blockinfo_tester_account_name,<sp/></highlight><highlight class="stringliteral">&quot;abort&quot;</highlight><highlight class="normal">_n,</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;char&gt;{});</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>set_transaction_headers(<ref refid="eosio_8msig__tests_8cpp_1a6935d36f50fec547a188728bc39593b6" kindref="member">trx</ref>);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8msig__tests_8cpp_1a6935d36f50fec547a188728bc39593b6" kindref="member">trx</ref>.sign(get_private_key(config::system_account_name,<sp/></highlight><highlight class="stringliteral">&quot;active&quot;</highlight><highlight class="normal">),<sp/>control-&gt;get_chain_id());</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result.second<sp/>=</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>push_transaction(<ref refid="eosio_8msig__tests_8cpp_1a6935d36f50fec547a188728bc39593b6" kindref="member">trx</ref>,<sp/>fc::time_point::maximum(),<sp/>DEFAULT_BILLED_CPU_TIME_US,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>no_throw<sp/>set<sp/>to<sp/>true</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>action_traces<sp/>=<sp/>result.second-&gt;action_traces;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(action_traces.size()<sp/>&lt;<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>validate_action<sp/>=<sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eosio::chain::action_trace&amp;<sp/>a,<sp/>eosio::chain::name<sp/>action_name)<sp/>-&gt;<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a.receiver<sp/>!=<sp/>blockinfo_tester_account_name<sp/>||<sp/>a.act.account<sp/>!=<sp/>a.receiver)<sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>match<sp/>on<sp/>direct<sp/>actions<sp/>to<sp/>blockinfo_tester_account_name.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a.act.name<sp/>!=<sp/>action_name)<sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>match<sp/>on<sp/>specified<sp/>action<sp/>name.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>first<sp/>action<sp/>in<sp/>action_traces<sp/>should<sp/>be<sp/>the<sp/>call<sp/>action.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!validate_action(action_traces[0],<sp/></highlight><highlight class="stringliteral">&quot;call&quot;</highlight><highlight class="normal">_n))<sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>should<sp/>never<sp/>mismatch,<sp/>but<sp/>is<sp/>here<sp/>just<sp/>to<sp/>be<sp/>sure.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>addition,<sp/>ensure<sp/>the<sp/>call<sp/>action<sp/>has<sp/>not<sp/>failed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!action_traces[0].receipt.has_value())<sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>call_action_ordinal<sp/>=<sp/>action_traces[0].action_ordinal.value;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!validate_action(action_traces[1],<sp/></highlight><highlight class="stringliteral">&quot;abort&quot;</highlight><highlight class="normal">_n))<sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>second<sp/>action<sp/>in<sp/>action_traces<sp/>should<sp/>be<sp/>the<sp/>call<sp/>action.<sp/>This<sp/>should<sp/>never<sp/>mismatch,<sp/>but<sp/>is<sp/>here<sp/>just</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>be<sp/>sure.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>addition,<sp/>this<sp/>action<sp/>should<sp/>always<sp/>fail.<sp/>However,<sp/>something<sp/>else<sp/>may<sp/>have<sp/>aborted<sp/>the<sp/>transaction<sp/>earlier</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>the<sp/>execution.<sp/>If<sp/>that<sp/>happened,<sp/>we<sp/>want<sp/>to<sp/>detect<sp/>that<sp/>and<sp/>return<sp/>the<sp/>empty<sp/>optional<sp/>from<sp/>this<sp/>function<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>indicate<sp/>something<sp/>went<sp/>wrong.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(action_traces[1].receipt.has_value()<sp/>||<sp/>!action_traces[1].error_code.has_value()<sp/>||</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*action_traces[1].error_code<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Something<sp/>also<sp/>went<sp/>wrong<sp/>if<sp/>it<sp/>the<sp/>abort<sp/>action<sp/>did<sp/>not<sp/>return<sp/>an<sp/>error<sp/>code<sp/>or<sp/>returned<sp/>an<sp/>error<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>other<sp/>than<sp/>0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>first<sp/>return<sp/>action<sp/>generated<sp/>by<sp/>the<sp/>above<sp/>call<sp/>action.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>i<sp/>&lt;<sp/>action_traces.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(validate_action(action_traces[i],<sp/></highlight><highlight class="stringliteral">&quot;return&quot;</highlight><highlight class="normal">_n))<sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ensure<sp/>this<sp/>action<sp/>was<sp/>in<sp/>fact<sp/>sent<sp/>by<sp/>the<sp/>call<sp/>action<sp/>and<sp/>not<sp/>anything<sp/>else.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(action_traces[i].creator_action_ordinal.value<sp/>==<sp/>call_action_ordinal)<sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!action_traces[i].receipt.has_value())<sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>transaction<sp/>should<sp/>not<sp/>fail<sp/>at<sp/>the<sp/>return<sp/>action.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>it<sp/>has,<sp/>something<sp/>has<sp/>gone<sp/>wrong<sp/>in<sp/>the<sp/>contract.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>return<sp/>action<sp/>was<sp/>found.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>action_traces.size())<sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>returned_payload<sp/>=<sp/>action_traces[i].act.data;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ilog(&quot;returned_payload:<sp/>${data}&quot;,<sp/>(&quot;data&quot;,<sp/>returned_payload));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ilog(&quot;call<sp/>action<sp/>console:\n<sp/>${console}&quot;,<sp/>(&quot;console&quot;,<sp/>action_traces[0].console));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacesystem__contracts_1_1testing_1_1test__contracts_1_1blockinfo__tester_1a78d9b5e57a0feb8412c06a95236fb12f" kindref="member">blockinfo_tester::output_type</ref><sp/>output;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fc::datastream&lt;const<sp/>char*&gt;<sp/>ds(returned_payload.data(),<sp/>returned_payload.size());</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fc::raw::unpack(ds,<sp/>output);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ensure<sp/>the<sp/>expected<sp/>return<sp/>type<sp/>is<sp/>returned<sp/>by<sp/>the<sp/>contract.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>response_ptr<sp/>=<sp/>std::get_if&lt;blockinfo_tester::latest_block_batch_info_result&gt;(&amp;output))<sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.first.emplace(std::move(*response_ptr));</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Otherwise,<sp/>something<sp/>has<sp/>gone<sp/>wrong.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="234"><highlight class="normal">};</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>check_tables_match(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;block_info_record&gt;&amp;<sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a52dcaa62cbf75da019544765096f5223" kindref="member">expected_table</ref>,</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;block_info_record&gt;&amp;<sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a42754b2e6f416c61253896f83953535d" kindref="member">actual_table</ref>)</highlight></codeline>
<codeline lineno="238"><highlight class="normal">{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="eosio_8system__blockinfo__tests_8cpp_1a52dcaa62cbf75da019544765096f5223" kindref="member">expected_table</ref>.size()<sp/>!=<sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a42754b2e6f416c61253896f83953535d" kindref="member">actual_table</ref>.size())<sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>match<sp/>=<sp/>std::equal(<ref refid="eosio_8system__blockinfo__tests_8cpp_1a52dcaa62cbf75da019544765096f5223" kindref="member">expected_table</ref>.cbegin(),<sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a52dcaa62cbf75da019544765096f5223" kindref="member">expected_table</ref>.cend(),<sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a42754b2e6f416c61253896f83953535d" kindref="member">actual_table</ref>.cbegin(),</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[&amp;](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>block_info_record&amp;<sp/>expected_row,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>block_info_record&amp;<sp/>actual_row)<sp/>-&gt;<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>expected_row<sp/>==<sp/>actual_row;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>match;</highlight></codeline>
<codeline lineno="249"><highlight class="normal">}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal">BOOST_AUTO_TEST_SUITE(eosio_system_blockinfo_tests)</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><ref refid="eosio_8limitauth__tests_8cpp_1a6a329c40fcf7f67a10f8c684a5bc5c34" kindref="member">BOOST_FIXTURE_TEST_CASE</ref>(blockinfo_table_tests,<sp/>block_info_tester)</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="keyword">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(<ref refid="namespaceanonymous__namespace_02eosio_8system__blockinfo__tests_8cpp_03_1a8af8482f663883a74d851f6e286ac4b9" kindref="member">rolling_window_size</ref><sp/>&gt;=<sp/>2);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a95fdc8cfd66a090d82b4c0b12470bce9" kindref="member">produce_blocks</ref>(1);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a6369f71c4b84b10d58345619fec31fee" kindref="member">start_block_height</ref><sp/><sp/><sp/><sp/>=<sp/>control-&gt;head_block_num();</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1ae8e35c55d12712562a8a5d9345e64f1c" kindref="member">start_block_timestamp</ref><sp/>=<sp/>control-&gt;head_block_time();</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/>std::vector&lt;block_info_record&gt;<sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a52dcaa62cbf75da019544765096f5223" kindref="member">expected_table</ref>;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a606e24772d6361fa36da671b89088c3e" kindref="member">add_to_expected_table</ref><sp/>=<sp/>[&amp;<ref refid="eosio_8system__blockinfo__tests_8cpp_1a52dcaa62cbf75da019544765096f5223" kindref="member">expected_table</ref>](uint32_t<sp/>block_height,<sp/><ref refid="namespacesystem__contracts_1_1testing_1_1test__contracts_1_1blockinfo__tester_1aada4f815458e881f7140c74078089f01" kindref="member">fc::time_point</ref><sp/>block_timestamp)<sp/>{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a52dcaa62cbf75da019544765096f5223" kindref="member">expected_table</ref>.push_back(block_info_record{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.block_height<sp/><sp/><sp/><sp/>=<sp/>block_height,</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.block_timestamp<sp/>=<sp/>block_timestamp,</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a606e24772d6361fa36da671b89088c3e" kindref="member">add_to_expected_table</ref>(<ref refid="eosio_8system__blockinfo__tests_8cpp_1a6369f71c4b84b10d58345619fec31fee" kindref="member">start_block_height</ref>,<sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1ae8e35c55d12712562a8a5d9345e64f1c" kindref="member">start_block_timestamp</ref>);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a42754b2e6f416c61253896f83953535d" kindref="member">actual_table</ref><sp/>=<sp/>get_blockinfo_table();</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a471c6cb052d56a242d74b9e9d0fa9375" kindref="member">BOOST_REQUIRE</ref>(check_tables_match(<ref refid="eosio_8system__blockinfo__tests_8cpp_1a52dcaa62cbf75da019544765096f5223" kindref="member">expected_table</ref>,<sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a42754b2e6f416c61253896f83953535d" kindref="member">actual_table</ref>));</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Produce<sp/>enough<sp/>blocks<sp/>to<sp/>fill<sp/>up<sp/>to<sp/>(but<sp/>not<sp/>beyond)<sp/>rolling<sp/>window<sp/>size.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a95fdc8cfd66a090d82b4c0b12470bce9" kindref="member">produce_blocks</ref>(<ref refid="namespaceanonymous__namespace_02eosio_8system__blockinfo__tests_8cpp_03_1a8af8482f663883a74d851f6e286ac4b9" kindref="member">rolling_window_size</ref><sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a5691386f78599c28782c81b13fc68f09" kindref="member">block_time_delta</ref><sp/>=<sp/>fc::milliseconds(eosio::chain::config::block_interval_ms);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/>uint32_t<sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a7e16ff9e8ecdc3cedca030bb339fd24d" kindref="member">cur_block_height</ref><sp/><sp/><sp/><sp/>=<sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a6369f71c4b84b10d58345619fec31fee" kindref="member">start_block_height</ref><sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a7a45f253270dfac5878067abeda33b7c" kindref="member">cur_block_timestamp</ref><sp/>=<sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1ae8e35c55d12712562a8a5d9345e64f1c" kindref="member">start_block_timestamp</ref><sp/>+<sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a5691386f78599c28782c81b13fc68f09" kindref="member">block_time_delta</ref>;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1acb3b40cb14a16b925c7347b2030578ed" kindref="member">advance_cur_block</ref><sp/>=<sp/>[&amp;<ref refid="eosio_8system__blockinfo__tests_8cpp_1a7e16ff9e8ecdc3cedca030bb339fd24d" kindref="member">cur_block_height</ref>,<sp/>&amp;<ref refid="eosio_8system__blockinfo__tests_8cpp_1a7a45f253270dfac5878067abeda33b7c" kindref="member">cur_block_timestamp</ref>,<sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a5691386f78599c28782c81b13fc68f09" kindref="member">block_time_delta</ref>]()<sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++<ref refid="eosio_8system__blockinfo__tests_8cpp_1a7e16ff9e8ecdc3cedca030bb339fd24d" kindref="member">cur_block_height</ref>;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a7a45f253270dfac5878067abeda33b7c" kindref="member">cur_block_timestamp</ref><sp/>+=<sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a5691386f78599c28782c81b13fc68f09" kindref="member">block_time_delta</ref>;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint32_t<sp/>end_block_height<sp/>=<sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a6369f71c4b84b10d58345619fec31fee" kindref="member">start_block_height</ref><sp/>+<sp/><ref refid="namespaceanonymous__namespace_02eosio_8system__blockinfo__tests_8cpp_03_1a8af8482f663883a74d851f6e286ac4b9" kindref="member">rolling_window_size</ref><sp/>-<sp/>1;<sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a7e16ff9e8ecdc3cedca030bb339fd24d" kindref="member">cur_block_height</ref><sp/>&lt;=<sp/>end_block_height;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1acb3b40cb14a16b925c7347b2030578ed" kindref="member">advance_cur_block</ref>())<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a606e24772d6361fa36da671b89088c3e" kindref="member">add_to_expected_table</ref>(<ref refid="eosio_8system__blockinfo__tests_8cpp_1a7e16ff9e8ecdc3cedca030bb339fd24d" kindref="member">cur_block_height</ref>,<sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a7a45f253270dfac5878067abeda33b7c" kindref="member">cur_block_timestamp</ref>);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a42754b2e6f416c61253896f83953535d" kindref="member">actual_table</ref><sp/>=<sp/>get_blockinfo_table();</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a2495b4e23b5fcc416a80f6aea86bda2a" kindref="member">BOOST_CHECK</ref>(<ref refid="namespaceanonymous__namespace_02eosio_8system__blockinfo__tests_8cpp_03_1a8af8482f663883a74d851f6e286ac4b9" kindref="member">rolling_window_size</ref><sp/>==<sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a42754b2e6f416c61253896f83953535d" kindref="member">actual_table</ref>.size());</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a2495b4e23b5fcc416a80f6aea86bda2a" kindref="member">BOOST_CHECK</ref>(check_tables_match(<ref refid="eosio_8system__blockinfo__tests_8cpp_1a52dcaa62cbf75da019544765096f5223" kindref="member">expected_table</ref>,<sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a42754b2e6f416c61253896f83953535d" kindref="member">actual_table</ref>));</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Producing<sp/>one<sp/>more<sp/>block<sp/>should<sp/>erase<sp/>the<sp/>start<sp/>block<sp/>from<sp/>the<sp/>table.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a95fdc8cfd66a090d82b4c0b12470bce9" kindref="member">produce_blocks</ref>(1);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a52dcaa62cbf75da019544765096f5223" kindref="member">expected_table</ref>.erase(<ref refid="eosio_8system__blockinfo__tests_8cpp_1a52dcaa62cbf75da019544765096f5223" kindref="member">expected_table</ref>.begin());</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a606e24772d6361fa36da671b89088c3e" kindref="member">add_to_expected_table</ref>(<ref refid="eosio_8system__blockinfo__tests_8cpp_1a7e16ff9e8ecdc3cedca030bb339fd24d" kindref="member">cur_block_height</ref>,<sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a7a45f253270dfac5878067abeda33b7c" kindref="member">cur_block_timestamp</ref>);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1acb3b40cb14a16b925c7347b2030578ed" kindref="member">advance_cur_block</ref>();</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a42754b2e6f416c61253896f83953535d" kindref="member">actual_table</ref><sp/>=<sp/>get_blockinfo_table();</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a2495b4e23b5fcc416a80f6aea86bda2a" kindref="member">BOOST_CHECK</ref>(<ref refid="namespaceanonymous__namespace_02eosio_8system__blockinfo__tests_8cpp_03_1a8af8482f663883a74d851f6e286ac4b9" kindref="member">rolling_window_size</ref><sp/>==<sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a42754b2e6f416c61253896f83953535d" kindref="member">actual_table</ref>.size());</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a2495b4e23b5fcc416a80f6aea86bda2a" kindref="member">BOOST_CHECK</ref>(check_tables_match(<ref refid="eosio_8system__blockinfo__tests_8cpp_1a52dcaa62cbf75da019544765096f5223" kindref="member">expected_table</ref>,<sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a42754b2e6f416c61253896f83953535d" kindref="member">actual_table</ref>));</highlight></codeline>
<codeline lineno="313"><highlight class="normal">}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><ref refid="eosio_8msig__tests_8cpp_1a669274b5451894bbce51c457655f0768" kindref="member">FC_LOG_AND_RETHROW</ref>()</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><ref refid="eosio_8limitauth__tests_8cpp_1a6a329c40fcf7f67a10f8c684a5bc5c34" kindref="member">BOOST_FIXTURE_TEST_CASE</ref>(get_latest_block_batch_info_tests,<sp/>block_info_tester)</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><ref refid="eosio_8system__blockinfo__tests_8cpp_1abe4cc9788f52e49485473dc699537388" kindref="member">try</ref><sp/>{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(5<sp/>&lt;=<sp/><ref refid="namespaceanonymous__namespace_02eosio_8system__blockinfo__tests_8cpp_03_1a8af8482f663883a74d851f6e286ac4b9" kindref="member">rolling_window_size</ref><sp/>&amp;&amp;<sp/><ref refid="namespaceanonymous__namespace_02eosio_8system__blockinfo__tests_8cpp_03_1a8af8482f663883a74d851f6e286ac4b9" kindref="member">rolling_window_size</ref><sp/>&lt;=<sp/>100000);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Deploy<sp/>the<sp/>blockinfo_tester<sp/>contract.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1ad6a515ee9857a59bd933ac9a613c3897" kindref="member">create_account_with_resources</ref>(blockinfo_tester_account_name,<sp/>config::system_account_name,</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structcore__sym_1a3e6ce4f2125788d8fd56a9e1b1ef9353" kindref="member">core_sym::from_string</ref>(</highlight><highlight class="stringliteral">&quot;10.0000&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a21d5e40c00e07c83846725fb72d668cc" kindref="member">set_code</ref>(blockinfo_tester_account_name,<sp/>test_contracts::blockinfo_tester_wasm());</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a95f94ed60768eb5ac104d28aed9262cb" kindref="member">latest_block_batch_info</ref><sp/>=<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">](uint32_t<sp/>batch_start_height_offset,</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>batch_size)<sp/>-&gt;<sp/>blockinfo_tester::latest_block_batch_info_result<sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>result<sp/>=<sp/><ref refid="namespaceeosiosystem_1_1block__info_1a2874613dc8993ab1cc70301c121823c6" kindref="member">get_latest_block_batch_info</ref>(<ref refid="namespaceeosiosystem_1_1block__info_1a2874613dc8993ab1cc70301c121823c6" kindref="member">blockinfo_tester::get_latest_block_batch_info</ref>{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.batch_start_height_offset<sp/>=<sp/>batch_start_height_offset,</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.batch_size<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>batch_size,</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!result.first.has_value())<sp/>{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eosio::chain::transaction_trace&amp;<sp/><ref refid="eosio_8msig__tests_8cpp_1a176b44375feec0c1f90f3bde5f1feb2e" kindref="member">trace</ref><sp/>=<sp/>*result.second;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="eosio_8msig__tests_8cpp_1a176b44375feec0c1f90f3bde5f1feb2e" kindref="member">trace</ref>.except.has_value())<sp/>{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elog(<ref refid="eosio_8msig__tests_8cpp_1a176b44375feec0c1f90f3bde5f1feb2e" kindref="member">trace</ref>.except-&gt;to_detail_string());</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a471c6cb052d56a242d74b9e9d0fa9375" kindref="member">BOOST_REQUIRE</ref>(result.first.has_value());</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*result.first;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a06e7d3a467934b48346b45c920193ca5" kindref="member">require_latest_block_batch_info</ref><sp/>=</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>[<ref refid="eosio_8system__blockinfo__tests_8cpp_1a95f94ed60768eb5ac104d28aed9262cb" kindref="member">latest_block_batch_info</ref>](uint32_t<sp/>batch_start_height_offset,</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>batch_size)<sp/>-&gt;<sp/>blockinfo_tester::block_batch_info<sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>result<sp/>=<sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a95f94ed60768eb5ac104d28aed9262cb" kindref="member">latest_block_batch_info</ref>(batch_start_height_offset,<sp/>batch_size);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result.has_error())<sp/>{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elog(</highlight><highlight class="stringliteral">&quot;require_latest_block_batch_info<sp/>returned<sp/>error:<sp/>${err}&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="stringliteral">&quot;err&quot;</highlight><highlight class="normal">,<sp/>result.get_error()));</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a471c6cb052d56a242d74b9e9d0fa9375" kindref="member">BOOST_REQUIRE</ref>(!result.has_error());</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*result.result;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Cannot<sp/>call<sp/>get_latest_block_batch_info<sp/>with<sp/>a<sp/>batch_size<sp/>of<sp/>0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>result<sp/>=<sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a95f94ed60768eb5ac104d28aed9262cb" kindref="member">latest_block_batch_info</ref>(0,<sp/>0);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a2495b4e23b5fcc416a80f6aea86bda2a" kindref="member">BOOST_CHECK</ref>(result.has_error());</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a2495b4e23b5fcc416a80f6aea86bda2a" kindref="member">BOOST_CHECK</ref>(result.get_error()<sp/>==</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blockinfo_tester::latest_block_batch_info_result::error_code_enum::invalid_input);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Insufficient<sp/>data<sp/>if<sp/>blockinfo<sp/>table<sp/>is<sp/>empty.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>result<sp/>=<sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a95f94ed60768eb5ac104d28aed9262cb" kindref="member">latest_block_batch_info</ref>(0,<sp/>1);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a2495b4e23b5fcc416a80f6aea86bda2a" kindref="member">BOOST_CHECK</ref>(result.has_error());</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a2495b4e23b5fcc416a80f6aea86bda2a" kindref="member">BOOST_CHECK</ref>(result.get_error()<sp/>==</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blockinfo_tester::latest_block_batch_info_result::error_code_enum::insufficient_data);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a95fdc8cfd66a090d82b4c0b12470bce9" kindref="member">produce_blocks</ref>(1);<sp/></highlight><highlight class="comment">//<sp/>Now<sp/>there<sp/>should<sp/>be<sp/>one<sp/>entry<sp/>in<sp/>blockinfo<sp/>table.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a6369f71c4b84b10d58345619fec31fee" kindref="member">start_block_height</ref><sp/><sp/><sp/><sp/>=<sp/>control-&gt;head_block_num();</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1ae8e35c55d12712562a8a5d9345e64f1c" kindref="member">start_block_timestamp</ref><sp/>=<sp/>control-&gt;head_block_time();</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a471c6cb052d56a242d74b9e9d0fa9375" kindref="member">BOOST_REQUIRE</ref>(8<sp/>&lt;<sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a6369f71c4b84b10d58345619fec31fee" kindref="member">start_block_height</ref>);<sp/></highlight><highlight class="comment">//<sp/>Test<sp/>assumes<sp/>it<sp/>is<sp/>safe<sp/>to<sp/>subtract<sp/>8<sp/>from<sp/>start_block_height.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a5691386f78599c28782c81b13fc68f09" kindref="member">block_time_delta</ref><sp/>=<sp/>[](</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_blocks)<sp/>-&gt;<sp/>fc::microseconds<sp/>{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fc::milliseconds(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">int64_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(num_blocks)<sp/>*<sp/>eosio::chain::config::block_interval_ms);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>block<sp/>info<sp/>of<sp/>latest<sp/>recorded<sp/>block.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="eosio_8system__tests_8cpp_1a0ecaa1862f168e8a31db8236916a811e" kindref="member">info</ref><sp/>=<sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a06e7d3a467934b48346b45c920193ca5" kindref="member">require_latest_block_batch_info</ref>(0,<sp/>1);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a2495b4e23b5fcc416a80f6aea86bda2a" kindref="member">BOOST_CHECK</ref>(<ref refid="eosio_8system__tests_8cpp_1a0ecaa1862f168e8a31db8236916a811e" kindref="member">info</ref>.batch_start_height<sp/>==<sp/><ref refid="eosio_8system__tests_8cpp_1a0ecaa1862f168e8a31db8236916a811e" kindref="member">info</ref>.batch_current_end_height);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a2495b4e23b5fcc416a80f6aea86bda2a" kindref="member">BOOST_CHECK</ref>(<ref refid="eosio_8system__tests_8cpp_1a0ecaa1862f168e8a31db8236916a811e" kindref="member">info</ref>.batch_start_timestamp<sp/>==<sp/><ref refid="eosio_8system__tests_8cpp_1a0ecaa1862f168e8a31db8236916a811e" kindref="member">info</ref>.batch_current_end_timestamp);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a2495b4e23b5fcc416a80f6aea86bda2a" kindref="member">BOOST_CHECK</ref>(<ref refid="eosio_8system__tests_8cpp_1a0ecaa1862f168e8a31db8236916a811e" kindref="member">info</ref>.batch_start_height<sp/>==<sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a6369f71c4b84b10d58345619fec31fee" kindref="member">start_block_height</ref>);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a2495b4e23b5fcc416a80f6aea86bda2a" kindref="member">BOOST_CHECK</ref>(<ref refid="eosio_8system__tests_8cpp_1a0ecaa1862f168e8a31db8236916a811e" kindref="member">info</ref>.batch_start_timestamp<sp/>==<sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1ae8e35c55d12712562a8a5d9345e64f1c" kindref="member">start_block_timestamp</ref>);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>block<sp/>info<sp/>of<sp/>block<sp/>looked<sp/>up<sp/>by<sp/>block<sp/>height.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="eosio_8system__tests_8cpp_1a0ecaa1862f168e8a31db8236916a811e" kindref="member">info</ref><sp/>=<sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a06e7d3a467934b48346b45c920193ca5" kindref="member">require_latest_block_batch_info</ref>(<ref refid="eosio_8system__blockinfo__tests_8cpp_1a6369f71c4b84b10d58345619fec31fee" kindref="member">start_block_height</ref>,<sp/><ref refid="eosio_8token__tests_8cpp_1a92759dbaf055ca451db93a2d11393122" kindref="member">std::numeric_limits&lt;uint32_t&gt;::max</ref>());</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a2495b4e23b5fcc416a80f6aea86bda2a" kindref="member">BOOST_CHECK</ref>(<ref refid="eosio_8system__tests_8cpp_1a0ecaa1862f168e8a31db8236916a811e" kindref="member">info</ref>.batch_start_height<sp/>==<sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a6369f71c4b84b10d58345619fec31fee" kindref="member">start_block_height</ref>);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a2495b4e23b5fcc416a80f6aea86bda2a" kindref="member">BOOST_CHECK</ref>(<ref refid="eosio_8system__tests_8cpp_1a0ecaa1862f168e8a31db8236916a811e" kindref="member">info</ref>.batch_start_timestamp<sp/>==<sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1ae8e35c55d12712562a8a5d9345e64f1c" kindref="member">start_block_timestamp</ref>);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fields<sp/>batch_current_end_height<sp/>and<sp/>batch_current_end_timestamp<sp/>are<sp/>not<sp/>relevant<sp/>for<sp/>this<sp/>request.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>But<sp/>we<sp/>will<sp/>check<sp/>them<sp/>anyway<sp/>given<sp/>what<sp/>is<sp/>expected<sp/>to<sp/>be<sp/>true<sp/>about<sp/>the<sp/>state<sp/>of<sp/>the<sp/>blockinfo<sp/>table.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a2495b4e23b5fcc416a80f6aea86bda2a" kindref="member">BOOST_CHECK</ref>(<ref refid="eosio_8system__tests_8cpp_1a0ecaa1862f168e8a31db8236916a811e" kindref="member">info</ref>.batch_current_end_height<sp/>==<sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a6369f71c4b84b10d58345619fec31fee" kindref="member">start_block_height</ref>);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a2495b4e23b5fcc416a80f6aea86bda2a" kindref="member">BOOST_CHECK</ref>(<ref refid="eosio_8system__tests_8cpp_1a0ecaa1862f168e8a31db8236916a811e" kindref="member">info</ref>.batch_current_end_timestamp<sp/>==<sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1ae8e35c55d12712562a8a5d9345e64f1c" kindref="member">start_block_timestamp</ref>);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Insufficient<sp/>data<sp/>to<sp/>get<sp/>block<sp/>info<sp/>for<sp/>block<sp/>past<sp/>the<sp/>last<sp/>recorded<sp/>block.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>result<sp/>=<sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a95f94ed60768eb5ac104d28aed9262cb" kindref="member">latest_block_batch_info</ref>(<ref refid="eosio_8system__blockinfo__tests_8cpp_1a6369f71c4b84b10d58345619fec31fee" kindref="member">start_block_height</ref><sp/>+<sp/>1,<sp/>1);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a2495b4e23b5fcc416a80f6aea86bda2a" kindref="member">BOOST_CHECK</ref>(result.has_error());</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a2495b4e23b5fcc416a80f6aea86bda2a" kindref="member">BOOST_CHECK</ref>(result.get_error()<sp/>==</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blockinfo_tester::latest_block_batch_info_result::error_code_enum::insufficient_data);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>result<sp/>=<sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a95f94ed60768eb5ac104d28aed9262cb" kindref="member">latest_block_batch_info</ref>(<ref refid="eosio_8system__blockinfo__tests_8cpp_1a6369f71c4b84b10d58345619fec31fee" kindref="member">start_block_height</ref><sp/>+<sp/>1,<sp/><ref refid="eosio_8token__tests_8cpp_1a92759dbaf055ca451db93a2d11393122" kindref="member">std::numeric_limits&lt;uint32_t&gt;::max</ref>());</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a2495b4e23b5fcc416a80f6aea86bda2a" kindref="member">BOOST_CHECK</ref>(result.has_error());</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a2495b4e23b5fcc416a80f6aea86bda2a" kindref="member">BOOST_CHECK</ref>(result.get_error()<sp/>==</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blockinfo_tester::latest_block_batch_info_result::error_code_enum::insufficient_data);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Insufficient<sp/>data<sp/>to<sp/>get<sp/>block<sp/>info<sp/>for<sp/>block<sp/>prior<sp/>to<sp/>start<sp/>block.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>result<sp/>=<sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a95f94ed60768eb5ac104d28aed9262cb" kindref="member">latest_block_batch_info</ref>(<ref refid="eosio_8system__blockinfo__tests_8cpp_1a6369f71c4b84b10d58345619fec31fee" kindref="member">start_block_height</ref><sp/>-<sp/>1,<sp/><ref refid="eosio_8token__tests_8cpp_1a92759dbaf055ca451db93a2d11393122" kindref="member">std::numeric_limits&lt;uint32_t&gt;::max</ref>());</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a2495b4e23b5fcc416a80f6aea86bda2a" kindref="member">BOOST_CHECK</ref>(result.has_error());</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a2495b4e23b5fcc416a80f6aea86bda2a" kindref="member">BOOST_CHECK</ref>(result.get_error()<sp/>==</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blockinfo_tester::latest_block_batch_info_result::error_code_enum::insufficient_data);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a95fdc8cfd66a090d82b4c0b12470bce9" kindref="member">produce_blocks</ref>(2);<sp/></highlight><highlight class="comment">//<sp/>Now<sp/>there<sp/>should<sp/>be<sp/>three<sp/>entries<sp/>in<sp/>the<sp/>blockinfo<sp/>table.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Still<sp/>insufficient<sp/>data<sp/>to<sp/>get<sp/>block<sp/>info<sp/>for<sp/>block<sp/>prior<sp/>to<sp/>start<sp/>block.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>result<sp/>=<sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a95f94ed60768eb5ac104d28aed9262cb" kindref="member">latest_block_batch_info</ref>(<ref refid="eosio_8system__blockinfo__tests_8cpp_1a6369f71c4b84b10d58345619fec31fee" kindref="member">start_block_height</ref><sp/>-<sp/>1,<sp/><ref refid="eosio_8token__tests_8cpp_1a92759dbaf055ca451db93a2d11393122" kindref="member">std::numeric_limits&lt;uint32_t&gt;::max</ref>());</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a2495b4e23b5fcc416a80f6aea86bda2a" kindref="member">BOOST_CHECK</ref>(result.has_error());</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a2495b4e23b5fcc416a80f6aea86bda2a" kindref="member">BOOST_CHECK</ref>(result.get_error()<sp/>==</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blockinfo_tester::latest_block_batch_info_result::error_code_enum::insufficient_data);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Also<sp/>it<sp/>does<sp/>not<sp/>help<sp/>to<sp/>choose<sp/>a<sp/>reasonable<sp/>sized<sp/>batch_size<sp/>if<sp/>the<sp/>chosen<sp/>batch_size<sp/>is<sp/>still<sp/>large<sp/>enough<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>when<sp/>added<sp/>to<sp/>the<sp/>batch_start_height_offset<sp/>the<sp/>sum<sp/>exceeds<sp/>the<sp/>last<sp/>recorded<sp/>block<sp/>height.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>result<sp/>=<sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a95f94ed60768eb5ac104d28aed9262cb" kindref="member">latest_block_batch_info</ref>(<ref refid="eosio_8system__blockinfo__tests_8cpp_1a6369f71c4b84b10d58345619fec31fee" kindref="member">start_block_height</ref><sp/>-<sp/>1,<sp/>4);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a2495b4e23b5fcc416a80f6aea86bda2a" kindref="member">BOOST_CHECK</ref>(result.has_error());</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a2495b4e23b5fcc416a80f6aea86bda2a" kindref="member">BOOST_CHECK</ref>(result.get_error()<sp/>==</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blockinfo_tester::latest_block_batch_info_result::error_code_enum::insufficient_data);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>However,<sp/>with<sp/>an<sp/>*appropriate*<sp/>batch_size,<sp/>batch_start_height_offset<sp/>can<sp/>be<sp/>less<sp/>than<sp/>block<sp/>height<sp/>of<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>earliest<sp/>recorded<sp/>block<sp/>since<sp/>get_latest_block_batch_info<sp/>returns<sp/>information<sp/>about<sp/>the<sp/>*latest*<sp/>batch<sp/>which<sp/>does</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>need<sp/>to<sp/>start<sp/>at<sp/>batch_start_height_offset.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note:<sp/>Assuming<sp/>no<sp/>missed<sp/>blocks<sp/>due<sp/>to<sp/>onblock<sp/>failure<sp/>and<sp/>assuming<sp/>enough<sp/>blocks<sp/>have<sp/>been<sp/>generated<sp/>since<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>updated<sp/>system<sp/>contract<sp/>was<sp/>first<sp/>deployed<sp/>to<sp/>allow<sp/>the<sp/>number<sp/>of<sp/>entries<sp/>in<sp/>the<sp/>blockinfo<sp/>table<sp/>to<sp/>reach</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>rolling_window_size,<sp/>then<sp/>a<sp/>batch_size<sp/>between<sp/>1<sp/>and<sp/>rolling_window_size,<sp/>inclusively,<sp/>should<sp/>always<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>*appropriate*<sp/>in<sp/>the<sp/>sense<sp/>of<sp/>avoiding<sp/>the<sp/>insufficient_data<sp/>error.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="eosio_8system__tests_8cpp_1a0ecaa1862f168e8a31db8236916a811e" kindref="member">info</ref><sp/>=<sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a06e7d3a467934b48346b45c920193ca5" kindref="member">require_latest_block_batch_info</ref>(<ref refid="eosio_8system__blockinfo__tests_8cpp_1a6369f71c4b84b10d58345619fec31fee" kindref="member">start_block_height</ref><sp/>-<sp/>1,<sp/>2);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1abec503f718282cf8b966eeaa60b33695" kindref="member">expected_batch_start_timestamp</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1ae8e35c55d12712562a8a5d9345e64f1c" kindref="member">start_block_timestamp</ref><sp/>+<sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a5691386f78599c28782c81b13fc68f09" kindref="member">block_time_delta</ref>(1);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1ab9f9ce5e1154f7e29d1aeea4a1f96444" kindref="member">expected_batch_current_end_timestamp</ref><sp/>=<sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1ae8e35c55d12712562a8a5d9345e64f1c" kindref="member">start_block_timestamp</ref><sp/>+<sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a5691386f78599c28782c81b13fc68f09" kindref="member">block_time_delta</ref>(2);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a2495b4e23b5fcc416a80f6aea86bda2a" kindref="member">BOOST_CHECK</ref>(<ref refid="eosio_8system__tests_8cpp_1a0ecaa1862f168e8a31db8236916a811e" kindref="member">info</ref>.batch_start_height<sp/>==<sp/>(<ref refid="eosio_8system__blockinfo__tests_8cpp_1a6369f71c4b84b10d58345619fec31fee" kindref="member">start_block_height</ref><sp/>+<sp/>1));</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a2495b4e23b5fcc416a80f6aea86bda2a" kindref="member">BOOST_CHECK</ref>(<ref refid="eosio_8system__tests_8cpp_1a0ecaa1862f168e8a31db8236916a811e" kindref="member">info</ref>.batch_start_timestamp<sp/>==<sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1abec503f718282cf8b966eeaa60b33695" kindref="member">expected_batch_start_timestamp</ref>);</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a2495b4e23b5fcc416a80f6aea86bda2a" kindref="member">BOOST_CHECK</ref>(<ref refid="eosio_8system__tests_8cpp_1a0ecaa1862f168e8a31db8236916a811e" kindref="member">info</ref>.batch_current_end_height<sp/>==<sp/>(<ref refid="eosio_8system__blockinfo__tests_8cpp_1a6369f71c4b84b10d58345619fec31fee" kindref="member">start_block_height</ref><sp/>+<sp/>2));</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a2495b4e23b5fcc416a80f6aea86bda2a" kindref="member">BOOST_CHECK</ref>(<ref refid="eosio_8system__tests_8cpp_1a0ecaa1862f168e8a31db8236916a811e" kindref="member">info</ref>.batch_current_end_timestamp<sp/>==<sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1ab9f9ce5e1154f7e29d1aeea4a1f96444" kindref="member">expected_batch_current_end_timestamp</ref>);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Also<sp/>there<sp/>is<sp/>no<sp/>need<sp/>for<sp/>the<sp/>found<sp/>batch<sp/>to<sp/>be<sp/>complete.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="eosio_8system__tests_8cpp_1a0ecaa1862f168e8a31db8236916a811e" kindref="member">info</ref><sp/>=<sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a06e7d3a467934b48346b45c920193ca5" kindref="member">require_latest_block_batch_info</ref>(<ref refid="eosio_8system__blockinfo__tests_8cpp_1a6369f71c4b84b10d58345619fec31fee" kindref="member">start_block_height</ref><sp/>-<sp/>2,<sp/>3);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1abec503f718282cf8b966eeaa60b33695" kindref="member">expected_batch_start_timestamp</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1ae8e35c55d12712562a8a5d9345e64f1c" kindref="member">start_block_timestamp</ref><sp/>+<sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a5691386f78599c28782c81b13fc68f09" kindref="member">block_time_delta</ref>(1);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1ab9f9ce5e1154f7e29d1aeea4a1f96444" kindref="member">expected_batch_current_end_timestamp</ref><sp/>=<sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1ae8e35c55d12712562a8a5d9345e64f1c" kindref="member">start_block_timestamp</ref><sp/>+<sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a5691386f78599c28782c81b13fc68f09" kindref="member">block_time_delta</ref>(2);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a2495b4e23b5fcc416a80f6aea86bda2a" kindref="member">BOOST_CHECK</ref>(<ref refid="eosio_8system__tests_8cpp_1a0ecaa1862f168e8a31db8236916a811e" kindref="member">info</ref>.batch_start_height<sp/>==<sp/>(<ref refid="eosio_8system__blockinfo__tests_8cpp_1a6369f71c4b84b10d58345619fec31fee" kindref="member">start_block_height</ref><sp/>+<sp/>1));</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a2495b4e23b5fcc416a80f6aea86bda2a" kindref="member">BOOST_CHECK</ref>(<ref refid="eosio_8system__tests_8cpp_1a0ecaa1862f168e8a31db8236916a811e" kindref="member">info</ref>.batch_start_timestamp<sp/>==<sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1abec503f718282cf8b966eeaa60b33695" kindref="member">expected_batch_start_timestamp</ref>);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a2495b4e23b5fcc416a80f6aea86bda2a" kindref="member">BOOST_CHECK</ref>(<ref refid="eosio_8system__tests_8cpp_1a0ecaa1862f168e8a31db8236916a811e" kindref="member">info</ref>.batch_current_end_height<sp/>==<sp/>(<ref refid="eosio_8system__blockinfo__tests_8cpp_1a6369f71c4b84b10d58345619fec31fee" kindref="member">start_block_height</ref><sp/>+<sp/>2));</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a2495b4e23b5fcc416a80f6aea86bda2a" kindref="member">BOOST_CHECK</ref>(<ref refid="eosio_8system__tests_8cpp_1a0ecaa1862f168e8a31db8236916a811e" kindref="member">info</ref>.batch_current_end_timestamp<sp/>==<sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1ab9f9ce5e1154f7e29d1aeea4a1f96444" kindref="member">expected_batch_current_end_timestamp</ref>);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>block<sp/>info<sp/>for<sp/>the<sp/>second<sp/>recorded<sp/>block<sp/>by<sp/>looking<sp/>up<sp/>using<sp/>block<sp/>height.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="eosio_8system__tests_8cpp_1a0ecaa1862f168e8a31db8236916a811e" kindref="member">info</ref><sp/>=<sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a06e7d3a467934b48346b45c920193ca5" kindref="member">require_latest_block_batch_info</ref>(<ref refid="eosio_8system__blockinfo__tests_8cpp_1a6369f71c4b84b10d58345619fec31fee" kindref="member">start_block_height</ref><sp/>+<sp/>1,<sp/><ref refid="eosio_8token__tests_8cpp_1a92759dbaf055ca451db93a2d11393122" kindref="member">std::numeric_limits&lt;uint32_t&gt;::max</ref>());</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1abec503f718282cf8b966eeaa60b33695" kindref="member">expected_batch_start_timestamp</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1ae8e35c55d12712562a8a5d9345e64f1c" kindref="member">start_block_timestamp</ref><sp/>+<sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a5691386f78599c28782c81b13fc68f09" kindref="member">block_time_delta</ref>(1);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1ab9f9ce5e1154f7e29d1aeea4a1f96444" kindref="member">expected_batch_current_end_timestamp</ref><sp/>=<sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1ae8e35c55d12712562a8a5d9345e64f1c" kindref="member">start_block_timestamp</ref><sp/>+<sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a5691386f78599c28782c81b13fc68f09" kindref="member">block_time_delta</ref>(2);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a2495b4e23b5fcc416a80f6aea86bda2a" kindref="member">BOOST_CHECK</ref>(<ref refid="eosio_8system__tests_8cpp_1a0ecaa1862f168e8a31db8236916a811e" kindref="member">info</ref>.batch_start_height<sp/>==<sp/>(<ref refid="eosio_8system__blockinfo__tests_8cpp_1a6369f71c4b84b10d58345619fec31fee" kindref="member">start_block_height</ref><sp/>+<sp/>1));</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a2495b4e23b5fcc416a80f6aea86bda2a" kindref="member">BOOST_CHECK</ref>(<ref refid="eosio_8system__tests_8cpp_1a0ecaa1862f168e8a31db8236916a811e" kindref="member">info</ref>.batch_start_timestamp<sp/>==<sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1abec503f718282cf8b966eeaa60b33695" kindref="member">expected_batch_start_timestamp</ref>);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fields<sp/>batch_current_end_height<sp/>and<sp/>batch_current_end_timestamp<sp/>are<sp/>not<sp/>relevant<sp/>for<sp/>this<sp/>request.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>But<sp/>we<sp/>will<sp/>check<sp/>them<sp/>anyway<sp/>given<sp/>what<sp/>is<sp/>expected<sp/>to<sp/>be<sp/>true<sp/>about<sp/>the<sp/>state<sp/>of<sp/>the<sp/>blockinfo<sp/>table.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a2495b4e23b5fcc416a80f6aea86bda2a" kindref="member">BOOST_CHECK</ref>(<ref refid="eosio_8system__tests_8cpp_1a0ecaa1862f168e8a31db8236916a811e" kindref="member">info</ref>.batch_current_end_height<sp/>==<sp/>(<ref refid="eosio_8system__blockinfo__tests_8cpp_1a6369f71c4b84b10d58345619fec31fee" kindref="member">start_block_height</ref><sp/>+<sp/>2));</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a2495b4e23b5fcc416a80f6aea86bda2a" kindref="member">BOOST_CHECK</ref>(<ref refid="eosio_8system__tests_8cpp_1a0ecaa1862f168e8a31db8236916a811e" kindref="member">info</ref>.batch_current_end_timestamp<sp/>==<sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1ab9f9ce5e1154f7e29d1aeea4a1f96444" kindref="member">expected_batch_current_end_timestamp</ref>);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a95fdc8cfd66a090d82b4c0b12470bce9" kindref="member">produce_blocks</ref>(<ref refid="namespaceanonymous__namespace_02eosio_8system__blockinfo__tests_8cpp_03_1a8af8482f663883a74d851f6e286ac4b9" kindref="member">rolling_window_size</ref><sp/>-<sp/>3);<sp/></highlight><highlight class="comment">//<sp/>Now<sp/>there<sp/>should<sp/>be<sp/>rolling_window_size<sp/>entries<sp/>in<sp/>the<sp/>blockinfo<sp/>table.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Assuming<sp/>the<sp/>batches<sp/>of<sp/>5<sp/>started<sp/>at<sp/>block<sp/>height<sp/>(start_block_height<sp/>-<sp/>8),<sp/>find<sp/>the<sp/>info<sp/>on<sp/>the<sp/>latest<sp/>batch.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="eosio_8system__tests_8cpp_1a0ecaa1862f168e8a31db8236916a811e" kindref="member">info</ref><sp/>=<sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a06e7d3a467934b48346b45c920193ca5" kindref="member">require_latest_block_batch_info</ref>(<ref refid="eosio_8system__blockinfo__tests_8cpp_1a6369f71c4b84b10d58345619fec31fee" kindref="member">start_block_height</ref><sp/>-<sp/>8,<sp/>5);</highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1abec503f718282cf8b966eeaa60b33695" kindref="member">expected_batch_start_timestamp</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1ae8e35c55d12712562a8a5d9345e64f1c" kindref="member">start_block_timestamp</ref><sp/>+<sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a5691386f78599c28782c81b13fc68f09" kindref="member">block_time_delta</ref>(7);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1ab9f9ce5e1154f7e29d1aeea4a1f96444" kindref="member">expected_batch_current_end_timestamp</ref><sp/>=<sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1ae8e35c55d12712562a8a5d9345e64f1c" kindref="member">start_block_timestamp</ref><sp/>+<sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a5691386f78599c28782c81b13fc68f09" kindref="member">block_time_delta</ref>(9);</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a2495b4e23b5fcc416a80f6aea86bda2a" kindref="member">BOOST_CHECK</ref>(<ref refid="eosio_8system__tests_8cpp_1a0ecaa1862f168e8a31db8236916a811e" kindref="member">info</ref>.batch_start_height<sp/>==<sp/>(<ref refid="eosio_8system__blockinfo__tests_8cpp_1a6369f71c4b84b10d58345619fec31fee" kindref="member">start_block_height</ref><sp/>+<sp/>7));</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a2495b4e23b5fcc416a80f6aea86bda2a" kindref="member">BOOST_CHECK</ref>(<ref refid="eosio_8system__tests_8cpp_1a0ecaa1862f168e8a31db8236916a811e" kindref="member">info</ref>.batch_start_timestamp<sp/>==<sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1abec503f718282cf8b966eeaa60b33695" kindref="member">expected_batch_start_timestamp</ref>);</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a2495b4e23b5fcc416a80f6aea86bda2a" kindref="member">BOOST_CHECK</ref>(<ref refid="eosio_8system__tests_8cpp_1a0ecaa1862f168e8a31db8236916a811e" kindref="member">info</ref>.batch_current_end_height<sp/>==<sp/>(<ref refid="eosio_8system__blockinfo__tests_8cpp_1a6369f71c4b84b10d58345619fec31fee" kindref="member">start_block_height</ref><sp/>+<sp/>9));</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a2495b4e23b5fcc416a80f6aea86bda2a" kindref="member">BOOST_CHECK</ref>(<ref refid="eosio_8system__tests_8cpp_1a0ecaa1862f168e8a31db8236916a811e" kindref="member">info</ref>.batch_current_end_timestamp<sp/>==<sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1ab9f9ce5e1154f7e29d1aeea4a1f96444" kindref="member">expected_batch_current_end_timestamp</ref>);</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Notice<sp/>that<sp/>this<sp/>latest<sp/>batch<sp/>is<sp/>not<sp/>yet<sp/>complete.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a95fdc8cfd66a090d82b4c0b12470bce9" kindref="member">produce_blocks</ref>(2);<sp/></highlight><highlight class="comment">//<sp/>This<sp/>should<sp/>cause<sp/>the<sp/>first<sp/>two<sp/>entries<sp/>in<sp/>the<sp/>blockinfo<sp/>table<sp/>to<sp/>be<sp/>removed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>there<sp/>should<sp/>be<sp/>insufficient<sp/>data<sp/>to<sp/>look<sp/>up<sp/>the<sp/>block<sp/>info<sp/>for<sp/>the<sp/>second<sp/>block<sp/>that<sp/>was<sp/>originally<sp/>recorded</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>since<sp/>it<sp/>has<sp/>now<sp/>been<sp/>pruned.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>result<sp/>=<sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a95f94ed60768eb5ac104d28aed9262cb" kindref="member">latest_block_batch_info</ref>(<ref refid="eosio_8system__blockinfo__tests_8cpp_1a6369f71c4b84b10d58345619fec31fee" kindref="member">start_block_height</ref><sp/>+<sp/>1,<sp/><ref refid="eosio_8token__tests_8cpp_1a92759dbaf055ca451db93a2d11393122" kindref="member">std::numeric_limits&lt;uint32_t&gt;::max</ref>());</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a2495b4e23b5fcc416a80f6aea86bda2a" kindref="member">BOOST_CHECK</ref>(result.has_error());</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a2495b4e23b5fcc416a80f6aea86bda2a" kindref="member">BOOST_CHECK</ref>(result.get_error()<sp/>==</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blockinfo_tester::latest_block_batch_info_result::error_code_enum::insufficient_data);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Still<sp/>assuming<sp/>the<sp/>batches<sp/>of<sp/>5<sp/>started<sp/>at<sp/>block<sp/>height<sp/>(start_block_height<sp/>-<sp/>8),<sp/>find<sp/>the<sp/>info<sp/>on<sp/>the<sp/>latest</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>batch<sp/>again.<sp/>It<sp/>should<sp/>be<sp/>the<sp/>same<sp/>batch<sp/>as<sp/>last<sp/>time<sp/>except<sp/>now<sp/>completed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="eosio_8system__tests_8cpp_1a0ecaa1862f168e8a31db8236916a811e" kindref="member">info</ref><sp/>=<sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a06e7d3a467934b48346b45c920193ca5" kindref="member">require_latest_block_batch_info</ref>(<ref refid="eosio_8system__blockinfo__tests_8cpp_1a6369f71c4b84b10d58345619fec31fee" kindref="member">start_block_height</ref><sp/>-<sp/>8,<sp/>5);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1abec503f718282cf8b966eeaa60b33695" kindref="member">expected_batch_start_timestamp</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1ae8e35c55d12712562a8a5d9345e64f1c" kindref="member">start_block_timestamp</ref><sp/>+<sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a5691386f78599c28782c81b13fc68f09" kindref="member">block_time_delta</ref>(7);</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1ab9f9ce5e1154f7e29d1aeea4a1f96444" kindref="member">expected_batch_current_end_timestamp</ref><sp/>=<sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1ae8e35c55d12712562a8a5d9345e64f1c" kindref="member">start_block_timestamp</ref><sp/>+<sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a5691386f78599c28782c81b13fc68f09" kindref="member">block_time_delta</ref>(11);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a2495b4e23b5fcc416a80f6aea86bda2a" kindref="member">BOOST_CHECK</ref>(<ref refid="eosio_8system__tests_8cpp_1a0ecaa1862f168e8a31db8236916a811e" kindref="member">info</ref>.batch_start_height<sp/>==<sp/>(<ref refid="eosio_8system__blockinfo__tests_8cpp_1a6369f71c4b84b10d58345619fec31fee" kindref="member">start_block_height</ref><sp/>+<sp/>7));</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a2495b4e23b5fcc416a80f6aea86bda2a" kindref="member">BOOST_CHECK</ref>(<ref refid="eosio_8system__tests_8cpp_1a0ecaa1862f168e8a31db8236916a811e" kindref="member">info</ref>.batch_start_timestamp<sp/>==<sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1abec503f718282cf8b966eeaa60b33695" kindref="member">expected_batch_start_timestamp</ref>);</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a2495b4e23b5fcc416a80f6aea86bda2a" kindref="member">BOOST_CHECK</ref>(<ref refid="eosio_8system__tests_8cpp_1a0ecaa1862f168e8a31db8236916a811e" kindref="member">info</ref>.batch_current_end_height<sp/>==<sp/>(<ref refid="eosio_8system__blockinfo__tests_8cpp_1a6369f71c4b84b10d58345619fec31fee" kindref="member">start_block_height</ref><sp/>+<sp/>11));</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a2495b4e23b5fcc416a80f6aea86bda2a" kindref="member">BOOST_CHECK</ref>(<ref refid="eosio_8system__tests_8cpp_1a0ecaa1862f168e8a31db8236916a811e" kindref="member">info</ref>.batch_current_end_timestamp<sp/>==<sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1ab9f9ce5e1154f7e29d1aeea4a1f96444" kindref="member">expected_batch_current_end_timestamp</ref>);</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>But<sp/>if<sp/>one<sp/>more<sp/>block<sp/>is<sp/>added,<sp/>this<sp/>causes<sp/>the<sp/>previous<sp/>query<sp/>to<sp/>instead<sp/>return<sp/>information<sp/>on<sp/>the<sp/>next<sp/>batch.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a95fdc8cfd66a090d82b4c0b12470bce9" kindref="member">produce_blocks</ref>(1);</highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="eosio_8system__tests_8cpp_1a0ecaa1862f168e8a31db8236916a811e" kindref="member">info</ref><sp/>=<sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a06e7d3a467934b48346b45c920193ca5" kindref="member">require_latest_block_batch_info</ref>(<ref refid="eosio_8system__blockinfo__tests_8cpp_1a6369f71c4b84b10d58345619fec31fee" kindref="member">start_block_height</ref><sp/>-<sp/>8,<sp/>5);</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1abec503f718282cf8b966eeaa60b33695" kindref="member">expected_batch_start_timestamp</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1ae8e35c55d12712562a8a5d9345e64f1c" kindref="member">start_block_timestamp</ref><sp/>+<sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a5691386f78599c28782c81b13fc68f09" kindref="member">block_time_delta</ref>(12);</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1ab9f9ce5e1154f7e29d1aeea4a1f96444" kindref="member">expected_batch_current_end_timestamp</ref><sp/>=<sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1ae8e35c55d12712562a8a5d9345e64f1c" kindref="member">start_block_timestamp</ref><sp/>+<sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a5691386f78599c28782c81b13fc68f09" kindref="member">block_time_delta</ref>(12);</highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a2495b4e23b5fcc416a80f6aea86bda2a" kindref="member">BOOST_CHECK</ref>(<ref refid="eosio_8system__tests_8cpp_1a0ecaa1862f168e8a31db8236916a811e" kindref="member">info</ref>.batch_start_height<sp/>==<sp/>(<ref refid="eosio_8system__blockinfo__tests_8cpp_1a6369f71c4b84b10d58345619fec31fee" kindref="member">start_block_height</ref><sp/>+<sp/>12));</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a2495b4e23b5fcc416a80f6aea86bda2a" kindref="member">BOOST_CHECK</ref>(<ref refid="eosio_8system__tests_8cpp_1a0ecaa1862f168e8a31db8236916a811e" kindref="member">info</ref>.batch_start_timestamp<sp/>==<sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1abec503f718282cf8b966eeaa60b33695" kindref="member">expected_batch_start_timestamp</ref>);</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a2495b4e23b5fcc416a80f6aea86bda2a" kindref="member">BOOST_CHECK</ref>(<ref refid="eosio_8system__tests_8cpp_1a0ecaa1862f168e8a31db8236916a811e" kindref="member">info</ref>.batch_current_end_height<sp/>==<sp/>(<ref refid="eosio_8system__blockinfo__tests_8cpp_1a6369f71c4b84b10d58345619fec31fee" kindref="member">start_block_height</ref><sp/>+<sp/>12));</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1a2495b4e23b5fcc416a80f6aea86bda2a" kindref="member">BOOST_CHECK</ref>(<ref refid="eosio_8system__tests_8cpp_1a0ecaa1862f168e8a31db8236916a811e" kindref="member">info</ref>.batch_current_end_timestamp<sp/>==<sp/><ref refid="eosio_8system__blockinfo__tests_8cpp_1ab9f9ce5e1154f7e29d1aeea4a1f96444" kindref="member">expected_batch_current_end_timestamp</ref>);</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="550"><highlight class="normal">}</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><ref refid="eosio_8msig__tests_8cpp_1a669274b5451894bbce51c457655f0768" kindref="member">FC_LOG_AND_RETHROW</ref>()</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal">BOOST_AUTO_TEST_SUITE_END()</highlight></codeline>
    </programlisting>
    <location file="system/tests/eosio.system_blockinfo_tests.cpp"/>
  </compounddef>
</doxygen>
