<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="ru">
  <compounddef id="powerup_8cpp" kind="file" language="C++">
    <compoundname>powerup.cpp</compoundname>
    <includes refid="eosio_8system_8hpp" local="no">eosio.system/eosio.system.hpp</includes>
    <includes local="no">eosio/action.hpp</includes>
    <includes refid="powerup_8results_8hpp" local="no">eosio.system/powerup.results.hpp</includes>
    <includes local="no">algorithm</includes>
    <includes local="no">cmath</includes>
    <incdepgraph>
      <node id="23">
        <label>../../../../../common/consts.hpp</label>
        <link refid="consts_8hpp"/>
      </node>
      <node id="2">
        <label>eosio.system/eosio.system.hpp</label>
        <link refid="eosio_8system_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>eosio.system/exchange_state.hpp</label>
        <link refid="exchange__state_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>eosio.system/native.hpp</label>
        <link refid="native_8hpp"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>eosio.system/powerup.results.hpp</label>
        <link refid="powerup_8results_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>system/contracts/eosio.system/src/powerup.cpp</label>
        <link refid="powerup_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>algorithm</label>
      </node>
      <node id="28">
        <label>cmath</label>
      </node>
      <node id="19">
        <label>deque</label>
      </node>
      <node id="13">
        <label>eosio/action.hpp</label>
      </node>
      <node id="3">
        <label>eosio/asset.hpp</label>
      </node>
      <node id="4">
        <label>eosio/binary_extension.hpp</label>
      </node>
      <node id="14">
        <label>eosio/contract.hpp</label>
      </node>
      <node id="15">
        <label>eosio/crypto.hpp</label>
      </node>
      <node id="25">
        <label>eosio/eosio.hpp</label>
      </node>
      <node id="16">
        <label>eosio/fixed_bytes.hpp</label>
      </node>
      <node id="17">
        <label>eosio/ignore.hpp</label>
      </node>
      <node id="11">
        <label>eosio/multi_index.hpp</label>
      </node>
      <node id="26">
        <label>eosio/name.hpp</label>
      </node>
      <node id="18">
        <label>eosio/print.hpp</label>
      </node>
      <node id="5">
        <label>eosio/privileged.hpp</label>
      </node>
      <node id="6">
        <label>eosio/producer_schedule.hpp</label>
      </node>
      <node id="7">
        <label>eosio/singleton.hpp</label>
      </node>
      <node id="8">
        <label>eosio/system.hpp</label>
      </node>
      <node id="9">
        <label>eosio/time.hpp</label>
      </node>
      <node id="20">
        <label>optional</label>
      </node>
      <node id="21">
        <label>string</label>
      </node>
      <node id="22">
        <label>type_traits</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceeosiosystem">eosiosystem</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;<ref refid="eosio_8system_8hpp" kindref="compound">eosio.system/eosio.system.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;eosio/action.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="powerup_8results_8hpp" kindref="compound">eosio.system/powerup.results.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceeosiosystem" kindref="compound">eosiosystem</ref><sp/>{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceeosiosystem_1a72862b8240cb5b6ca4a64d8b93156229" kindref="member">update_weight</ref>(time_point_sec<sp/>now,<sp/>powerup_state_resource&amp;<sp/>res,<sp/>int64_t&amp;<sp/>delta_available);</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceeosiosystem_1a600c42d1fe52a8337535ef7fe420ad2b" kindref="member">update_utilization</ref>(time_point_sec<sp/>now,<sp/>powerup_state_resource&amp;<sp/>res);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classeosiosystem_1_1system__contract_1a0746514c7d241fa865fcc0a03d954ce1" kindref="member">system_contract::adjust_resources</ref>(name<sp/>payer,<sp/>name<sp/>account,<sp/>symbol<sp/>core_symbol,<sp/>int64_t<sp/>net_delta,</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>cpu_delta,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>must_not_be_managed)<sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!net_delta<sp/>&amp;&amp;<sp/>!cpu_delta)</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><ref refid="namespaceeosiosystem_1a392bb6f33cd89eca7b90ee378a7ac8e3" kindref="member">user_resources_table</ref><sp/>totals_tbl(get_self(),<sp/>account.value);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tot_itr<sp/>=<sp/>totals_tbl.find(account.value);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tot_itr<sp/>==<sp/>totals_tbl.end())<sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tot_itr<sp/>=<sp/>totals_tbl.emplace(payer,<sp/>[&amp;](</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>tot)<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tot.owner<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>account;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tot.net_weight<sp/>=<sp/>asset{<sp/>net_delta,<sp/><ref refid="classeosiosystem_1_1system__contract_1a32504695292c0e9c2171987821bc3857" kindref="member">core_symbol</ref><sp/>};</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tot.cpu_weight<sp/>=<sp/>asset{<sp/>cpu_delta,<sp/><ref refid="classeosiosystem_1_1system__contract_1a32504695292c0e9c2171987821bc3857" kindref="member">core_symbol</ref><sp/>};</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totals_tbl.modify(tot_itr,<sp/>same_payer,<sp/>[&amp;](</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>tot)<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tot.net_weight.amount<sp/>+=<sp/>net_delta;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tot.cpu_weight.amount<sp/>+=<sp/>cpu_delta;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/>check(0<sp/>&lt;=<sp/>tot_itr-&gt;net_weight.amount,<sp/></highlight><highlight class="stringliteral">&quot;insufficient<sp/>staked<sp/>total<sp/>net<sp/>bandwidth&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/>check(0<sp/>&lt;=<sp/>tot_itr-&gt;cpu_weight.amount,<sp/></highlight><highlight class="stringliteral">&quot;insufficient<sp/>staked<sp/>total<sp/>cpu<sp/>bandwidth&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ram_managed<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>net_managed<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>cpu_managed<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>voter_itr<sp/>=<sp/><ref refid="classeosiosystem_1_1system__contract_1a41105c20306ae2478d91e0fab56f2e58" kindref="member">_voters</ref>.find(account.value);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(voter_itr<sp/>!=<sp/><ref refid="classeosiosystem_1_1system__contract_1a41105c20306ae2478d91e0fab56f2e58" kindref="member">_voters</ref>.end())<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ram_managed<sp/>=<sp/><ref refid="namespaceeosiosystem_1a6c407cd2889dff2a2fd87aa6ff808b0e" kindref="member">has_field</ref>(voter_itr-&gt;flags1,<sp/><ref refid="structeosiosystem_1_1voter__info_1a6bb7318b053ad6dbbde3a0f4415d2cf5ae149b497807ee78e9e5180d213e5a402" kindref="member">voter_info::flags1_fields::ram_managed</ref>);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>net_managed<sp/>=<sp/><ref refid="namespaceeosiosystem_1a6c407cd2889dff2a2fd87aa6ff808b0e" kindref="member">has_field</ref>(voter_itr-&gt;flags1,<sp/><ref refid="structeosiosystem_1_1voter__info_1a6bb7318b053ad6dbbde3a0f4415d2cf5a944559ad694d4c0fc4bf286864caf2a2" kindref="member">voter_info::flags1_fields::net_managed</ref>);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cpu_managed<sp/>=<sp/><ref refid="namespaceeosiosystem_1a6c407cd2889dff2a2fd87aa6ff808b0e" kindref="member">has_field</ref>(voter_itr-&gt;flags1,<sp/><ref refid="structeosiosystem_1_1voter__info_1a6bb7318b053ad6dbbde3a0f4415d2cf5ace319c6a1aa0ced6ea5a02270d863f4c" kindref="member">voter_info::flags1_fields::cpu_managed</ref>);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(must_not_be_managed)</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eosio::check(!net_managed<sp/>&amp;&amp;<sp/>!cpu_managed,<sp/></highlight><highlight class="stringliteral">&quot;something<sp/>is<sp/>managed<sp/>which<sp/>shouldn&apos;t<sp/>be&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(net_managed<sp/>&amp;&amp;<sp/>cpu_managed))<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>ram_bytes,<sp/>net,<sp/>cpu;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_resource_limits(account,<sp/>ram_bytes,<sp/>net,<sp/>cpu);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set_resource_limits(</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>account,<sp/>ram_managed<sp/>?<sp/>ram_bytes<sp/>:<sp/>std::max(tot_itr-&gt;ram_bytes<sp/>+<sp/><ref refid="namespaceeosiosystem_1a0843661bca3ab2494b8a85111041f078" kindref="member">ram_gift_bytes</ref>,<sp/>ram_bytes),</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>net_managed<sp/>?<sp/>net<sp/>:<sp/>tot_itr-&gt;net_weight.amount,<sp/>cpu_managed<sp/>?<sp/>cpu<sp/>:<sp/>tot_itr-&gt;cpu_weight.amount);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tot_itr-&gt;is_empty())<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totals_tbl.erase(tot_itr);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>system_contract::adjust_resources</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classeosiosystem_1_1system__contract_1a5917101bfc856af43a5d29578aeec707" kindref="member">system_contract::process_powerup_queue</ref>(time_point_sec<sp/>now,<sp/>symbol<sp/>core_symbol,<sp/>powerup_state&amp;<sp/>state,</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceeosiosystem_1ab020b27ad4ebc87d910cb31fbcf9e7ac" kindref="member">powerup_order_table</ref>&amp;<sp/>orders,<sp/>uint32_t<sp/>max_items,<sp/>int64_t&amp;<sp/>net_delta_available,</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t&amp;<sp/>cpu_delta_available)<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><ref refid="namespaceeosiosystem_1a600c42d1fe52a8337535ef7fe420ad2b" kindref="member">update_utilization</ref>(now,<sp/>state.net);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><ref refid="namespaceeosiosystem_1a600c42d1fe52a8337535ef7fe420ad2b" kindref="member">update_utilization</ref>(now,<sp/>state.cpu);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>idx<sp/>=<sp/>orders.get_index&lt;</highlight><highlight class="stringliteral">&quot;byexpires&quot;</highlight><highlight class="normal">_n&gt;();</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(max_items--)<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>idx.begin();</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>==<sp/>idx.end()<sp/>||<sp/>it-&gt;expires<sp/>&gt;<sp/>now)</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>net_delta_available<sp/>+=<sp/>it-&gt;net_weight;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cpu_delta_available<sp/>+=<sp/>it-&gt;cpu_weight;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classeosiosystem_1_1system__contract_1a0746514c7d241fa865fcc0a03d954ce1" kindref="member">adjust_resources</ref>(get_self(),<sp/>it-&gt;owner,<sp/><ref refid="classeosiosystem_1_1system__contract_1a32504695292c0e9c2171987821bc3857" kindref="member">core_symbol</ref>,<sp/>-it-&gt;net_weight,<sp/>-it-&gt;cpu_weight);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>idx.erase(it);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/>state.net.utilization<sp/>-=<sp/>net_delta_available;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/>state.cpu.utilization<sp/>-=<sp/>cpu_delta_available;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><ref refid="namespaceeosiosystem_1a72862b8240cb5b6ca4a64d8b93156229" kindref="member">update_weight</ref>(now,<sp/>state.net,<sp/>net_delta_available);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><ref refid="namespaceeosiosystem_1a72862b8240cb5b6ca4a64d8b93156229" kindref="member">update_weight</ref>(now,<sp/>state.cpu,<sp/>cpu_delta_available);</highlight></codeline>
<codeline lineno="89"><highlight class="normal">}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceeosiosystem_1a72862b8240cb5b6ca4a64d8b93156229" kindref="member">update_weight</ref>(time_point_sec<sp/>now,<sp/>powerup_state_resource&amp;<sp/>res,<sp/>int64_t&amp;<sp/>delta_available)<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(now<sp/>&gt;=<sp/>res.target_timestamp)<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>res.weight_ratio<sp/>=<sp/>res.target_weight_ratio;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>res.weight_ratio<sp/>=<sp/>res.initial_weight_ratio<sp/>+<sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int128_t(res.target_weight_ratio<sp/>-<sp/>res.initial_weight_ratio)<sp/>*</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(now.utc_seconds<sp/>-<sp/>res.initial_timestamp.utc_seconds)<sp/>/</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(res.target_timestamp.utc_seconds<sp/>-<sp/>res.initial_timestamp.utc_seconds);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/>int64_t<sp/>new_weight<sp/><sp/><sp/><sp/>=<sp/>res.assumed_stake_weight<sp/>*<sp/>int128_t(<ref refid="namespaceeosiosystem_1ad71bd6c8c9f27a07f389e6a3ff365692" kindref="member">powerup_frac</ref>)<sp/>/<sp/>res.weight_ratio<sp/>-<sp/>res.assumed_stake_weight;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/>delta_available<sp/>+=<sp/>new_weight<sp/>-<sp/>res.weight;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/>res.weight<sp/>=<sp/>new_weight;</highlight></codeline>
<codeline lineno="103"><highlight class="normal">}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceeosiosystem_1a600c42d1fe52a8337535ef7fe420ad2b" kindref="member">update_utilization</ref>(time_point_sec<sp/>now,<sp/>powerup_state_resource&amp;<sp/>res)<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(now<sp/>&lt;=<sp/>res.utilization_timestamp)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res.utilization<sp/>&gt;=<sp/>res.adjusted_utilization)<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>res.adjusted_utilization<sp/>=<sp/>res.utilization;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>diff<sp/><sp/>=<sp/>res.adjusted_utilization<sp/>-<sp/>res.utilization;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>delta<sp/>=<sp/>diff<sp/>*<sp/>std::exp(-</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">(now.utc_seconds<sp/>-<sp/>res.utilization_timestamp.utc_seconds)<sp/>/<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">(res.decay_secs));</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>delta<sp/>=<sp/>std::clamp(<sp/>delta,<sp/>0ll,<sp/>diff);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>res.adjusted_utilization<sp/>=<sp/>res.utilization<sp/>+<sp/>delta;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/>res.utilization_timestamp<sp/>=<sp/>now;</highlight></codeline>
<codeline lineno="117"><highlight class="normal">}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classeosiosystem_1_1system__contract_1ae71212071f747832a2a56eb4868d9c81" kindref="member">system_contract::cfgpowerup</ref>(powerup_config&amp;<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/>require_auth(get_self());</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/>time_point_sec<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>now<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>eosio::current_time_point();</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classeosiosystem_1_1system__contract_1a32504695292c0e9c2171987821bc3857" kindref="member">core_symbol</ref><sp/>=<sp/><ref refid="classeosiosystem_1_1system__contract_1a50976d2a74593cdd840662159dc21ab1" kindref="member">get_core_symbol</ref>();</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><ref refid="namespaceeosiosystem_1abd7889c011c61f31f7a50f0fe8229bdf" kindref="member">powerup_state_singleton</ref><sp/>state_sing{<sp/>get_self(),<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state<sp/>=<sp/>state_sing.get_or_default();</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/>eosio::check(eosio::is_account(<ref refid="classeosiosystem_1_1system__contract_1a6574c237dbe1df9698e0e63be5b20cd9" kindref="member">reserve_account</ref>),<sp/></highlight><highlight class="stringliteral">&quot;eosio.reserv<sp/>account<sp/>must<sp/>first<sp/>be<sp/>created&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>cspell:disable-line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/>int64_t<sp/>net_delta_available<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/>int64_t<sp/>cpu_delta_available<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state_sing.exists())<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceeosiosystem_1a600c42d1fe52a8337535ef7fe420ad2b" kindref="member">update_utilization</ref>(now,<sp/>state.net);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceeosiosystem_1a600c42d1fe52a8337535ef7fe420ad2b" kindref="member">update_utilization</ref>(now,<sp/>state.cpu);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceeosiosystem_1a72862b8240cb5b6ca4a64d8b93156229" kindref="member">update_weight</ref>(now,<sp/>state.net,<sp/>net_delta_available);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceeosiosystem_1a72862b8240cb5b6ca4a64d8b93156229" kindref="member">update_weight</ref>(now,<sp/>state.cpu,<sp/>cpu_delta_available);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>state.net.utilization_timestamp<sp/>=<sp/>now;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>state.cpu.utilization_timestamp<sp/>=<sp/>now;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>is_default_asset<sp/>=<sp/>[](<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eosio::asset&amp;<sp/>a<sp/>)<sp/>-&gt;<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a.amount<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>a.symbol<sp/>==<sp/>symbol{};</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>update<sp/>=<sp/>[&amp;](</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>state,<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!args.current_weight_ratio)<sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state.weight_ratio)<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*args.current_weight_ratio<sp/>=<sp/>state.weight_ratio;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*args.current_weight_ratio<sp/>=<sp/>state.initial_weight_ratio;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!args.target_weight_ratio)<sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*args.target_weight_ratio<sp/>=<sp/>state.target_weight_ratio;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!args.assumed_stake_weight)<sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eosio::check(state.assumed_stake_weight<sp/>!=<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;assumed_stake_weight<sp/>does<sp/>not<sp/>have<sp/>a<sp/>default<sp/>value&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*args.assumed_stake_weight<sp/>=<sp/>state.assumed_stake_weight;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*args.current_weight_ratio<sp/>==<sp/>*args.target_weight_ratio)<sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*args.target_timestamp<sp/>=<sp/>now;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!args.target_timestamp)<sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eosio::check(state.target_timestamp.utc_seconds<sp/>!=<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;target_timestamp<sp/>does<sp/>not<sp/>have<sp/>a<sp/>default<sp/>value&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*args.target_timestamp<sp/>=<sp/>state.target_timestamp;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eosio::check(*args.target_timestamp<sp/>&gt;<sp/>now,<sp/></highlight><highlight class="stringliteral">&quot;target_timestamp<sp/>must<sp/>be<sp/>in<sp/>the<sp/>future&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!args.exponent)<sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*args.exponent<sp/>=<sp/>state.exponent;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!args.decay_secs)<sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*args.decay_secs<sp/>=<sp/>state.decay_secs;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!args.max_price)<sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eosio::check(!is_default_asset(state.max_price),<sp/></highlight><highlight class="stringliteral">&quot;max_price<sp/>does<sp/>not<sp/>have<sp/>a<sp/>default<sp/>value&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*args.max_price<sp/>=<sp/>state.max_price;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!args.min_price)<sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_default_asset(state.min_price))<sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*args.min_price<sp/>=<sp/>*args.max_price;<sp/></highlight><highlight class="comment">//<sp/>just<sp/>to<sp/>copy<sp/>symbol<sp/>of<sp/>max_price</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args.min_price-&gt;amount<sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>min_price<sp/>has<sp/>a<sp/>default<sp/>of<sp/>zero.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*args.min_price<sp/>=<sp/>state.min_price;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>eosio::check(*args.current_weight_ratio<sp/>&gt;<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;current_weight_ratio<sp/>is<sp/>too<sp/>small&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>eosio::check(*args.current_weight_ratio<sp/>&lt;=<sp/><ref refid="namespaceeosiosystem_1ad71bd6c8c9f27a07f389e6a3ff365692" kindref="member">powerup_frac</ref>,<sp/></highlight><highlight class="stringliteral">&quot;current_weight_ratio<sp/>is<sp/>too<sp/>large&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>eosio::check(*args.target_weight_ratio<sp/>&gt;<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;target_weight_ratio<sp/>is<sp/>too<sp/>small&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>eosio::check(*args.target_weight_ratio<sp/>&lt;=<sp/>*args.current_weight_ratio,<sp/></highlight><highlight class="stringliteral">&quot;weight<sp/>can&apos;t<sp/>grow<sp/>over<sp/>time&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>eosio::check(*args.assumed_stake_weight<sp/>&gt;=<sp/>1,</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;assumed_stake_weight<sp/>must<sp/>be<sp/>at<sp/>least<sp/>1;<sp/>a<sp/>much<sp/>larger<sp/>value<sp/>is<sp/>recommended&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>eosio::check(*args.assumed_stake_weight<sp/>*<sp/>int128_t(<ref refid="namespaceeosiosystem_1ad71bd6c8c9f27a07f389e6a3ff365692" kindref="member">powerup_frac</ref>)<sp/>/<sp/>*args.target_weight_ratio<sp/>&lt;=</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::numeric_limits&lt;int64_t&gt;::max(),</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;assumed_stake_weight/target_weight_ratio<sp/>is<sp/>too<sp/>large&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>eosio::check(*args.exponent<sp/>&gt;=<sp/>1.0,<sp/></highlight><highlight class="stringliteral">&quot;exponent<sp/>must<sp/>be<sp/>&gt;=<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>eosio::check(*args.decay_secs<sp/>&gt;=<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;decay_secs<sp/>must<sp/>be<sp/>&gt;=<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>eosio::check(args.max_price-&gt;symbol<sp/>==<sp/><ref refid="classeosiosystem_1_1system__contract_1a32504695292c0e9c2171987821bc3857" kindref="member">core_symbol</ref>,<sp/></highlight><highlight class="stringliteral">&quot;max_price<sp/>doesn&apos;t<sp/>match<sp/>core<sp/>symbol&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>eosio::check(args.max_price-&gt;amount<sp/>&gt;<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;max_price<sp/>must<sp/>be<sp/>positive&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>eosio::check(args.min_price-&gt;symbol<sp/>==<sp/><ref refid="classeosiosystem_1_1system__contract_1a32504695292c0e9c2171987821bc3857" kindref="member">core_symbol</ref>,<sp/></highlight><highlight class="stringliteral">&quot;min_price<sp/>doesn&apos;t<sp/>match<sp/>core<sp/>symbol&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>eosio::check(args.min_price-&gt;amount<sp/>&gt;=<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;min_price<sp/>must<sp/>be<sp/>non-negative&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>eosio::check(args.min_price-&gt;amount<sp/>&lt;=<sp/>args.max_price-&gt;amount,<sp/></highlight><highlight class="stringliteral">&quot;min_price<sp/>cannot<sp/>exceed<sp/>max_price&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*args.exponent<sp/>==<sp/>1.0)<sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eosio::check(args.min_price-&gt;amount<sp/>==<sp/>args.max_price-&gt;amount,<sp/></highlight><highlight class="stringliteral">&quot;min_price<sp/>and<sp/>max_price<sp/>must<sp/>be<sp/>the<sp/>same<sp/>if<sp/>the<sp/>exponent<sp/>is<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>state.assumed_stake_weight<sp/>=<sp/>*args.assumed_stake_weight;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>state.initial_weight_ratio<sp/>=<sp/>*args.current_weight_ratio;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>state.target_weight_ratio<sp/><sp/>=<sp/>*args.target_weight_ratio;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>state.initial_timestamp<sp/><sp/><sp/><sp/>=<sp/>now;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>state.target_timestamp<sp/><sp/><sp/><sp/><sp/>=<sp/>*args.target_timestamp;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>state.exponent<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>*args.exponent;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>state.decay_secs<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>*args.decay_secs;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>state.min_price<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>*args.min_price;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>state.max_price<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>*args.max_price;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!args.powerup_days)<sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*args.powerup_days<sp/>=<sp/>state.powerup_days;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!args.min_powerup_fee)<sp/>{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>eosio::check(!is_default_asset(state.min_powerup_fee),<sp/></highlight><highlight class="stringliteral">&quot;min_powerup_fee<sp/>does<sp/>not<sp/>have<sp/>a<sp/>default<sp/>value&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*args.min_powerup_fee<sp/>=<sp/>state.min_powerup_fee;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/>eosio::check(*args.powerup_days<sp/>&gt;<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;powerup_days<sp/>must<sp/>be<sp/>&gt;<sp/>0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/>eosio::check(args.min_powerup_fee-&gt;symbol<sp/>==<sp/><ref refid="classeosiosystem_1_1system__contract_1a32504695292c0e9c2171987821bc3857" kindref="member">core_symbol</ref>,<sp/></highlight><highlight class="stringliteral">&quot;min_powerup_fee<sp/>doesn&apos;t<sp/>match<sp/>core<sp/>symbol&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/>eosio::check(args.min_powerup_fee-&gt;amount<sp/>&gt;<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;min_powerup_fee<sp/>must<sp/>be<sp/>positive&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/>state.powerup_days<sp/><sp/><sp/><sp/>=<sp/>*args.powerup_days;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/>state.min_powerup_fee<sp/>=<sp/>*args.min_powerup_fee;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/>update(state.net,<sp/>args.net);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/>update(state.cpu,<sp/>args.cpu);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><ref refid="namespaceeosiosystem_1a72862b8240cb5b6ca4a64d8b93156229" kindref="member">update_weight</ref>(now,<sp/>state.net,<sp/>net_delta_available);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><ref refid="namespaceeosiosystem_1a72862b8240cb5b6ca4a64d8b93156229" kindref="member">update_weight</ref>(now,<sp/>state.cpu,<sp/>cpu_delta_available);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/>eosio::check(state.net.weight<sp/>&gt;=<sp/>state.net.utilization,<sp/></highlight><highlight class="stringliteral">&quot;weight<sp/>can&apos;t<sp/>shrink<sp/>below<sp/>utilization&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/>eosio::check(state.cpu.weight<sp/>&gt;=<sp/>state.cpu.utilization,<sp/></highlight><highlight class="stringliteral">&quot;weight<sp/>can&apos;t<sp/>shrink<sp/>below<sp/>utilization&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/>state.net.adjusted_utilization<sp/>=<sp/>std::min(state.net.adjusted_utilization,<sp/>state.net.weight);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/>state.cpu.adjusted_utilization<sp/>=<sp/>std::min(state.cpu.adjusted_utilization,<sp/>state.cpu.weight);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><ref refid="classeosiosystem_1_1system__contract_1a0746514c7d241fa865fcc0a03d954ce1" kindref="member">adjust_resources</ref>(get_self(),<sp/><ref refid="classeosiosystem_1_1system__contract_1a6574c237dbe1df9698e0e63be5b20cd9" kindref="member">reserve_account</ref>,<sp/><ref refid="classeosiosystem_1_1system__contract_1a32504695292c0e9c2171987821bc3857" kindref="member">core_symbol</ref>,<sp/>net_delta_available,<sp/>cpu_delta_available,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/>state_sing.set(state,<sp/>get_self());</highlight></codeline>
<codeline lineno="253"><highlight class="normal">}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal">int64_t<sp/><ref refid="namespaceeosiosystem_1aa9c28f07fb58db2bebdc04a0003d7954" kindref="member">calc_powerup_fee</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>powerup_state_resource&amp;<sp/>state,<sp/>int64_t<sp/>utilization_increase)<sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>utilization_increase<sp/>&lt;=<sp/>0<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Let<sp/>p(u)<sp/>=<sp/>price<sp/>as<sp/>a<sp/>function<sp/>of<sp/>the<sp/>utilization<sp/>fraction<sp/>u<sp/>which<sp/>is<sp/>defined<sp/>for<sp/>u<sp/>in<sp/>[0.0,<sp/>1.0].</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Let<sp/>f(u)<sp/>=<sp/>integral<sp/>of<sp/>the<sp/>price<sp/>function<sp/>p(x)<sp/>from<sp/>x<sp/>=<sp/>0.0<sp/>to<sp/>x<sp/>=<sp/>u,<sp/>again<sp/>defined<sp/>for<sp/>u<sp/>in<sp/>[0.0,<sp/>1.0].</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>particular<sp/>we<sp/>choose<sp/>f(u)<sp/>=<sp/>min_price<sp/>*<sp/>u<sp/>+<sp/>((max_price<sp/>-<sp/>min_price)<sp/>/<sp/>exponent)<sp/>*<sp/>(u<sp/>^<sp/>exponent).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>And<sp/>so<sp/>p(u)<sp/>=<sp/>min_price<sp/>+<sp/>(max_price<sp/>-<sp/>min_price)<sp/>*<sp/>(u<sp/>^<sp/>(exponent<sp/>-<sp/>1.0)).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>f(double(end_utilization)/state.weight)<sp/>-<sp/>f(double(start_utilization)/state.weight)<sp/>which<sp/>is<sp/>equivalent<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>integral<sp/>of<sp/>p(x)<sp/>from<sp/>x<sp/>=<sp/>double(start_utilization)/state.weight<sp/>to<sp/>x<sp/>=<sp/>double(end_utilization)/state.weight.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>@pre<sp/>0<sp/>&lt;=<sp/>start_utilization<sp/>&lt;=<sp/>end_utilization<sp/>&lt;=<sp/>state.weight</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>price_integral_delta<sp/>=<sp/>[&amp;state](int64_t<sp/>start_utilization,<sp/>int64_t<sp/>end_utilization)<sp/>-&gt;<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>coefficient<sp/>=<sp/>(state.max_price.amount<sp/>-<sp/>state.min_price.amount)<sp/>/<sp/>state.exponent;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>start_u<sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">(start_utilization)<sp/>/<sp/>state.weight;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>end_u<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>double(end_utilization)<sp/>/<sp/>state.weight;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>state.min_price.amount<sp/>*<sp/>end_u<sp/>-<sp/>state.min_price.amount<sp/>*<sp/>start_u<sp/>+</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coefficient<sp/>*<sp/>std::pow(end_u,<sp/>state.exponent)<sp/>-<sp/>coefficient<sp/>*<sp/>std::pow(start_u,<sp/>state.exponent);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>p(double(utilization)/state.weight).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>@pre<sp/>0<sp/>&lt;=<sp/>utilization<sp/>&lt;=<sp/>state.weight</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>price_function<sp/>=<sp/>[&amp;state](int64_t<sp/>utilization)<sp/>-&gt;<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>price<sp/>=<sp/>state.min_price.amount;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>state.exponent<sp/>&gt;=<sp/>1.0,<sp/>therefore<sp/>the<sp/>exponent<sp/>passed<sp/>into<sp/>std::pow<sp/>is<sp/>&gt;=<sp/>0.0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Since<sp/>the<sp/>exponent<sp/>passed<sp/>into<sp/>std::pow<sp/>could<sp/>be<sp/>0.0<sp/>and<sp/>simultaneously<sp/>so<sp/>could<sp/>double(utilization)/state.weight,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>safest<sp/>thing<sp/>to<sp/>do<sp/>is<sp/>handle<sp/>that<sp/>as<sp/>a<sp/>special<sp/>case<sp/>explicitly<sp/>rather<sp/>than<sp/>relying<sp/>on<sp/>std::pow<sp/>to<sp/>return<sp/>1.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>instead<sp/>of<sp/>triggering<sp/>a<sp/>domain<sp/>error.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>new_exponent<sp/>=<sp/>state.exponent<sp/>-<sp/>1.0;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(new_exponent<sp/>&lt;=<sp/>0.0)<sp/>{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>state.max_price.amount;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>price<sp/>+=<sp/>(state.max_price.amount<sp/>-<sp/>state.min_price.amount)<sp/>*<sp/>std::pow(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">(utilization)<sp/>/<sp/>state.weight,<sp/>new_exponent);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>price;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/>fee<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/>int64_t<sp/>start_utilization<sp/>=<sp/>state.utilization;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/>int64_t<sp/>end_utilization<sp/><sp/><sp/>=<sp/>start_utilization<sp/>+<sp/>utilization_increase;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(start_utilization<sp/>&lt;<sp/>state.adjusted_utilization)<sp/>{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fee<sp/>+=<sp/>price_function(state.adjusted_utilization)<sp/>*</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::min(utilization_increase,<sp/>state.adjusted_utilization<sp/>-<sp/>start_utilization)<sp/>/<sp/>state.weight;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>start_utilization<sp/>=<sp/>state.adjusted_utilization;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(start_utilization<sp/>&lt;<sp/>end_utilization)<sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fee<sp/>+=<sp/>price_integral_delta(start_utilization,<sp/>end_utilization);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::ceil(fee);</highlight></codeline>
<codeline lineno="315"><highlight class="normal">}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classeosiosystem_1_1system__contract_1aa573d628b237c167aa99fc71cb150736" kindref="member">system_contract::powerupexec</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>name&amp;<sp/>user,<sp/>uint16_t<sp/>max)<sp/>{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/>require_auth(user);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><ref refid="namespaceeosiosystem_1abd7889c011c61f31f7a50f0fe8229bdf" kindref="member">powerup_state_singleton</ref><sp/>state_sing{<sp/>get_self(),<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><ref refid="namespaceeosiosystem_1ab020b27ad4ebc87d910cb31fbcf9e7ac" kindref="member">powerup_order_table</ref><sp/><sp/><sp/><sp/><sp/>orders{<sp/>get_self(),<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/>eosio::check(state_sing.exists(),<sp/></highlight><highlight class="stringliteral">&quot;powerup<sp/>hasn&apos;t<sp/>been<sp/>initialized&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>state_sing.get();</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/>time_point_sec<sp/>now<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>eosio::current_time_point();</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classeosiosystem_1_1system__contract_1a32504695292c0e9c2171987821bc3857" kindref="member">core_symbol</ref><sp/>=<sp/><ref refid="classeosiosystem_1_1system__contract_1a50976d2a74593cdd840662159dc21ab1" kindref="member">get_core_symbol</ref>();</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/>int64_t<sp/>net_delta_available<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/>int64_t<sp/>cpu_delta_available<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><ref refid="classeosiosystem_1_1system__contract_1a5917101bfc856af43a5d29578aeec707" kindref="member">process_powerup_queue</ref>(now,<sp/><ref refid="classeosiosystem_1_1system__contract_1a32504695292c0e9c2171987821bc3857" kindref="member">core_symbol</ref>,<sp/>state,<sp/>orders,<sp/>max,<sp/>net_delta_available,<sp/>cpu_delta_available);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><ref refid="classeosiosystem_1_1system__contract_1a0746514c7d241fa865fcc0a03d954ce1" kindref="member">adjust_resources</ref>(get_self(),<sp/><ref refid="classeosiosystem_1_1system__contract_1a6574c237dbe1df9698e0e63be5b20cd9" kindref="member">reserve_account</ref>,<sp/><ref refid="classeosiosystem_1_1system__contract_1a32504695292c0e9c2171987821bc3857" kindref="member">core_symbol</ref>,<sp/>net_delta_available,<sp/>cpu_delta_available,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/>state_sing.set(state,<sp/>get_self());</highlight></codeline>
<codeline lineno="332"><highlight class="normal">}</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classeosiosystem_1_1system__contract_1a998b5936930f7ce0f60df2b6a8404926" kindref="member">system_contract::powerup</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>name&amp;<sp/>payer,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>name&amp;<sp/>receiver,<sp/>uint32_t<sp/>days,<sp/>int64_t<sp/>net_frac,<sp/>int64_t<sp/>cpu_frac,</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset&amp;<sp/>max_payment)<sp/>{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/>require_auth(payer);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><ref refid="namespaceeosiosystem_1abd7889c011c61f31f7a50f0fe8229bdf" kindref="member">powerup_state_singleton</ref><sp/>state_sing{<sp/>get_self(),<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><ref refid="namespaceeosiosystem_1ab020b27ad4ebc87d910cb31fbcf9e7ac" kindref="member">powerup_order_table</ref><sp/><sp/><sp/><sp/><sp/>orders{<sp/>get_self(),<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/>eosio::check(state_sing.exists(),<sp/></highlight><highlight class="stringliteral">&quot;powerup<sp/>hasn&apos;t<sp/>been<sp/>initialized&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>state_sing.get();</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/>time_point_sec<sp/>now<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>eosio::current_time_point();</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classeosiosystem_1_1system__contract_1a32504695292c0e9c2171987821bc3857" kindref="member">core_symbol</ref><sp/>=<sp/><ref refid="classeosiosystem_1_1system__contract_1a50976d2a74593cdd840662159dc21ab1" kindref="member">get_core_symbol</ref>();</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/>eosio::check(max_payment.symbol<sp/>==<sp/><ref refid="classeosiosystem_1_1system__contract_1a32504695292c0e9c2171987821bc3857" kindref="member">core_symbol</ref>,<sp/></highlight><highlight class="stringliteral">&quot;max_payment<sp/>doesn&apos;t<sp/>match<sp/>core<sp/>symbol&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/>eosio::check(days<sp/>==<sp/>state.powerup_days,<sp/></highlight><highlight class="stringliteral">&quot;days<sp/>doesn&apos;t<sp/>match<sp/>configuration&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/>eosio::check(net_frac<sp/>&gt;=<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;net_frac<sp/>can&apos;t<sp/>be<sp/>negative&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/>eosio::check(cpu_frac<sp/>&gt;=<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;cpu_frac<sp/>can&apos;t<sp/>be<sp/>negative&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/>eosio::check(net_frac<sp/>&lt;=<sp/><ref refid="namespaceeosiosystem_1ad71bd6c8c9f27a07f389e6a3ff365692" kindref="member">powerup_frac</ref>,<sp/></highlight><highlight class="stringliteral">&quot;net<sp/>can&apos;t<sp/>be<sp/>more<sp/>than<sp/>100%&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/>eosio::check(cpu_frac<sp/>&lt;=<sp/><ref refid="namespaceeosiosystem_1ad71bd6c8c9f27a07f389e6a3ff365692" kindref="member">powerup_frac</ref>,<sp/></highlight><highlight class="stringliteral">&quot;cpu<sp/>can&apos;t<sp/>be<sp/>more<sp/>than<sp/>100%&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/>int64_t<sp/>net_delta_available<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/>int64_t<sp/>cpu_delta_available<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><ref refid="classeosiosystem_1_1system__contract_1a5917101bfc856af43a5d29578aeec707" kindref="member">process_powerup_queue</ref>(now,<sp/><ref refid="classeosiosystem_1_1system__contract_1a32504695292c0e9c2171987821bc3857" kindref="member">core_symbol</ref>,<sp/>state,<sp/>orders,<sp/>2,<sp/>net_delta_available,<sp/>cpu_delta_available);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/>eosio::asset<sp/>fee{<sp/>0,<sp/><ref refid="classeosiosystem_1_1system__contract_1a32504695292c0e9c2171987821bc3857" kindref="member">core_symbol</ref><sp/>};</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacesystem__contracts_1_1testing_1_1test__contracts_1_1blockinfo__tester_1a705f35a783c6830287ee92b4f8146d49" kindref="member">process</ref><sp/>=<sp/>[&amp;](int64_t<sp/>frac,<sp/>int64_t&amp;<sp/>amount,<sp/>powerup_state_resource&amp;<sp/>state)<sp/>{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!frac)</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>amount<sp/>=<sp/>int128_t(frac)<sp/>*<sp/>state.weight<sp/>/<sp/><ref refid="namespaceeosiosystem_1ad71bd6c8c9f27a07f389e6a3ff365692" kindref="member">powerup_frac</ref>;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>eosio::check(state.weight,<sp/></highlight><highlight class="stringliteral">&quot;market<sp/>doesn&apos;t<sp/>have<sp/>resources<sp/>available&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>eosio::check(state.utilization<sp/>+<sp/>amount<sp/>&lt;=<sp/>state.weight,<sp/></highlight><highlight class="stringliteral">&quot;market<sp/>doesn&apos;t<sp/>have<sp/>enough<sp/>resources<sp/>available&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>f<sp/>=<sp/><ref refid="namespaceeosiosystem_1aa9c28f07fb58db2bebdc04a0003d7954" kindref="member">calc_powerup_fee</ref>(state,<sp/>amount);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>eosio::check(f<sp/>&gt;<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;calculated<sp/>fee<sp/>is<sp/>below<sp/>minimum;<sp/>try<sp/>powering<sp/>up<sp/>with<sp/>more<sp/>resources&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fee.amount<sp/>+=<sp/>f;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>state.utilization<sp/>+=<sp/>amount;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/>int64_t<sp/>net_amount<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/>int64_t<sp/>cpu_amount<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><ref refid="namespacesystem__contracts_1_1testing_1_1test__contracts_1_1blockinfo__tester_1a705f35a783c6830287ee92b4f8146d49" kindref="member">process</ref>(net_frac,<sp/>net_amount,<sp/>state.net);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><ref refid="namespacesystem__contracts_1_1testing_1_1test__contracts_1_1blockinfo__tester_1a705f35a783c6830287ee92b4f8146d49" kindref="member">process</ref>(cpu_frac,<sp/>cpu_amount,<sp/>state.cpu);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fee<sp/>&gt;<sp/>max_payment)<sp/>{</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>error_msg<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;max_payment<sp/>is<sp/>less<sp/>than<sp/>calculated<sp/>fee:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>error_msg<sp/>+=<sp/>fee.to_string();</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>eosio::check(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>error_msg);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/>eosio::check(fee<sp/>&gt;=<sp/>state.min_powerup_fee,<sp/></highlight><highlight class="stringliteral">&quot;calculated<sp/>fee<sp/>is<sp/>below<sp/>minimum;<sp/>try<sp/>powering<sp/>up<sp/>with<sp/>more<sp/>resources&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/>orders.emplace(payer,<sp/>[&amp;](</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>order)<sp/>{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>order.id<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>orders.available_primary_key();</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>order.owner<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>receiver;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>order.net_weight<sp/>=<sp/>net_amount;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>order.cpu_weight<sp/>=<sp/>cpu_amount;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>order.expires<sp/><sp/><sp/><sp/>=<sp/>now<sp/>+<sp/>eosio::days(days);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/>net_delta_available<sp/>-=<sp/>net_amount;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/>cpu_delta_available<sp/>-=<sp/>cpu_amount;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><ref refid="classeosiosystem_1_1system__contract_1a0746514c7d241fa865fcc0a03d954ce1" kindref="member">adjust_resources</ref>(payer,<sp/>receiver,<sp/><ref refid="classeosiosystem_1_1system__contract_1a32504695292c0e9c2171987821bc3857" kindref="member">core_symbol</ref>,<sp/>net_amount,<sp/>cpu_amount,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><ref refid="classeosiosystem_1_1system__contract_1a0746514c7d241fa865fcc0a03d954ce1" kindref="member">adjust_resources</ref>(get_self(),<sp/><ref refid="classeosiosystem_1_1system__contract_1a6574c237dbe1df9698e0e63be5b20cd9" kindref="member">reserve_account</ref>,<sp/><ref refid="classeosiosystem_1_1system__contract_1a32504695292c0e9c2171987821bc3857" kindref="member">core_symbol</ref>,<sp/>net_delta_available,<sp/>cpu_delta_available,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><ref refid="classeosiosystem_1_1system__contract_1ad6ba033cdb66fc3e66790f4bfde91455" kindref="member">channel_to_rex</ref>(payer,<sp/>fee,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/>state_sing.set(state,<sp/>get_self());</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>inline<sp/>noop<sp/>action</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><ref refid="classpowup__results_1ad9f92d7d14262016aa90efa04e433646" kindref="member">powup_results::powupresult_action</ref><sp/>powupresult_act{<sp/><ref refid="classeosiosystem_1_1system__contract_1a6574c237dbe1df9698e0e63be5b20cd9" kindref="member">reserve_account</ref>,<sp/>std::vector&lt;eosio::permission_level&gt;{<sp/>}<sp/>};</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/>powupresult_act.send(<sp/>fee,<sp/>net_amount,<sp/>cpu_amount<sp/>);</highlight></codeline>
<codeline lineno="396"><highlight class="normal">}</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>eosiosystem</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="system/contracts/eosio.system/src/powerup.cpp"/>
  </compounddef>
</doxygen>
