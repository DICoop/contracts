<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="ru">
  <compounddef id="chairman_8cpp" kind="file" language="C++">
    <compoundname>chairman.cpp</compoundname>
    <includedby refid="soviet_2soviet_8cpp" local="yes">soviet/soviet.cpp</includedby>
    <invincdepgraph>
      <node id="2">
        <label>soviet/soviet.cpp</label>
        <link refid="soviet_2soviet_8cpp"/>
      </node>
      <node id="1">
        <label>soviet/src/chairman.cpp</label>
        <link refid="chairman_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceeosio" kindref="compound">eosio</ref>;</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>soviet::authorize(eosio::name<sp/>coop_username,<sp/>eosio::name<sp/>chairman,<sp/>uint64_t<sp/>decision_id)<sp/>{<sp/></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/>require_auth(chairman);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><ref refid="coops_8hpp_1a78302821fd10bd5b552f1c9cf16d57f7" kindref="member">boards_index</ref><sp/><ref refid="structboards" kindref="compound">boards</ref>(<ref refid="group__public__consts_1gaf3f1171b99c198fbeb3ab6a3d8c091d9" kindref="member">_soviet</ref>,<sp/>coop_username.value);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><ref refid="namespaceeosio_1acf5ac0eb7a5a29eebbe8289c11fc3768" kindref="member">autosigner_index</ref><sp/><ref refid="structeosio_1_1autosigner" kindref="compound">autosigner</ref>(<ref refid="group__public__consts_1gaf3f1171b99c198fbeb3ab6a3d8c091d9" kindref="member">_soviet</ref>,<sp/>coop_username.value);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><ref refid="coops_8hpp_1a72a45f6b0b38d457b6995be901b3a86a" kindref="member">decisions_index</ref><sp/><ref refid="structdecisions" kindref="compound">decisions</ref>(<ref refid="group__public__consts_1gaf3f1171b99c198fbeb3ab6a3d8c091d9" kindref="member">_soviet</ref>,<sp/>coop_username.value);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>decision<sp/>=<sp/><ref refid="structdecisions" kindref="compound">decisions</ref>.find(decision_id);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/>eosio::check(decision<sp/>!=<sp/><ref refid="structdecisions" kindref="compound">decisions</ref>.end(),<sp/></highlight><highlight class="stringliteral">&quot;Документ<sp/>не<sp/>найден&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>board<sp/>=<sp/><ref refid="coops_8hpp_1aa8eecd06a1a4c3332c69d66864d67ed8" kindref="member">get_board_by_type_or_fail</ref>(coop_username,<sp/></highlight><highlight class="stringliteral">&quot;soviet&quot;</highlight><highlight class="normal">_n);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>eosio::check(board.is_valid_chairman(chairman),<sp/></highlight><highlight class="stringliteral">&quot;Только<sp/>председатель<sp/>совета<sp/>может<sp/>авторизовать<sp/>решение&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><ref refid="structdecisions" kindref="compound">decisions</ref>.modify(decision,<sp/>chairman,<sp/>[&amp;](</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;d){</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>d.authorized<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>signer<sp/>=<sp/><ref refid="structeosio_1_1autosigner" kindref="compound">autosigner</ref>.find(decision<sp/>-&gt;<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(signer<sp/>!=<sp/><ref refid="structeosio_1_1autosigner" kindref="compound">autosigner</ref>.end())</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structeosio_1_1autosigner" kindref="compound">autosigner</ref>.erase(signer);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal">}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__public__actions_1gad1fc0777d9b64aeaeb1cde7f413222cb" kindref="member">soviet::createboard</ref>(eosio::name<sp/>coop_username,<sp/>eosio::name<sp/>chairman,<sp/>eosio::name<sp/>type,<sp/>std::vector&lt;board_member&gt;<sp/><ref refid="structmembers" kindref="compound">members</ref>,<sp/>std::string<sp/>name,<sp/>std::string<sp/>description){</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>require_auth(chairman);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><ref refid="users_8hpp_1ae5d8441e9ce3796ced45ba843f58c327" kindref="member">orgs_index</ref><sp/><ref refid="structorgs" kindref="compound">orgs</ref>(<ref refid="group__public__consts_1gae4d59ec28af0642e3072dd36dd0a537b" kindref="member">_registrator</ref>,<sp/><ref refid="group__public__consts_1gae4d59ec28af0642e3072dd36dd0a537b" kindref="member">_registrator</ref>.value);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>org<sp/>=<sp/><ref refid="structorgs" kindref="compound">orgs</ref>.find(coop_username.value);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>eosio::check(org<sp/>!=<sp/><ref refid="structorgs" kindref="compound">orgs</ref>.end(),<sp/></highlight><highlight class="stringliteral">&quot;Организация<sp/>не<sp/>найдена&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>eosio::check(org<sp/>-&gt;<sp/>is_coop(),<sp/></highlight><highlight class="stringliteral">&quot;Организация<sp/>-<sp/>не<sp/>кооператив&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;soviet&quot;</highlight><highlight class="normal">_n)<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_exist<sp/>=<sp/><ref refid="coops_8hpp_1a21eb5cb68c5e59f071d35c1ef42bc0e5" kindref="member">check_for_exist_board_by_type</ref>(coop_username,<sp/></highlight><highlight class="stringliteral">&quot;soviet&quot;</highlight><highlight class="normal">_n);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>eosio::check(is_exist<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Совет<sp/>кооператива<sp/>уже<sp/>создан&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>has_chairman<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Проверка<sp/>на<sp/>наличие<sp/>председателя<sp/>в<sp/>списке<sp/>членов<sp/>совета</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>m<sp/>:<sp/><ref refid="structmembers" kindref="compound">members</ref>)<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m.position<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;chairman&quot;</highlight><highlight class="normal">_n)<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eosio::check(m.username<sp/>==<sp/>chairman,<sp/></highlight><highlight class="stringliteral">&quot;Только<sp/>председатель<sp/>может<sp/>создать<sp/>совет<sp/>кооператива&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>has_chairman<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>eosio::check(has_chairman,<sp/></highlight><highlight class="stringliteral">&quot;Председатель<sp/>кооператива<sp/>должен<sp/>быть<sp/>указан<sp/>в<sp/>членах<sp/>совета&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="classeosio_1_1soviet" kindref="compound">soviet</ref><sp/>=<sp/><ref refid="coops_8hpp_1aa8eecd06a1a4c3332c69d66864d67ed8" kindref="member">get_board_by_type_or_fail</ref>(coop_username,<sp/></highlight><highlight class="stringliteral">&quot;soviet&quot;</highlight><highlight class="normal">_n);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>eosio::check(<ref refid="classeosio_1_1soviet" kindref="compound">soviet</ref>.is_valid_chairman(chairman),<sp/></highlight><highlight class="stringliteral">&quot;Только<sp/>председатель<sp/>кооператива<sp/>может<sp/>создать<sp/>совет&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><ref refid="coops_8hpp_1a78302821fd10bd5b552f1c9cf16d57f7" kindref="member">boards_index</ref><sp/><ref refid="structboards" kindref="compound">boards</ref>(<ref refid="group__public__consts_1gaf3f1171b99c198fbeb3ab6a3d8c091d9" kindref="member">_soviet</ref>,<sp/>coop_username.value);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><ref refid="structboards" kindref="compound">boards</ref>.emplace(chairman,<sp/>[&amp;](</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;b)<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>b.id<sp/>=<sp/><ref refid="structboards" kindref="compound">boards</ref>.available_primary_key();</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>b.<ref refid="structboards_1a277bb2ea397a8b6076584f07f2c4432f" kindref="member">type</ref><sp/>=<sp/>type;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>b.members<sp/>=<sp/><ref refid="structmembers" kindref="compound">members</ref>;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>b.name<sp/>=<sp/>name;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>b.description<sp/>=<sp/>description;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>b.<ref refid="structmembers_1a0a998eeaf1a01f48301c8ab90355891f" kindref="member">created_at</ref><sp/>=<sp/>eosio::time_point_sec(eosio::current_time_point().sec_since_epoch());</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>b.last_update<sp/>=<sp/>eosio::time_point_sec(eosio::current_time_point().sec_since_epoch());</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="soviet/src/chairman.cpp"/>
  </compounddef>
</doxygen>
