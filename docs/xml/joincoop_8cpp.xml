<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="ru">
  <compounddef id="joincoop_8cpp" kind="file" language="C++">
    <compoundname>joincoop.cpp</compoundname>
    <includedby refid="soviet_2soviet_8cpp" local="yes">soviet/soviet.cpp</includedby>
    <invincdepgraph>
      <node id="2">
        <label>soviet/soviet.cpp</label>
        <link refid="soviet_2soviet_8cpp"/>
      </node>
      <node id="1">
        <label>soviet/src/joincoop.cpp</label>
        <link refid="joincoop_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceeosio" kindref="compound">eosio</ref>;</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>soviet::joincoop(eosio::name<sp/>coop_username,<sp/>eosio::name<sp/>username,<sp/>std::string<sp/>position_title,<sp/>eosio::name<sp/>position)<sp/>{<sp/></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/>require_auth(<ref refid="group__public__consts_1gae4d59ec28af0642e3072dd36dd0a537b" kindref="member">_registrator</ref>);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><ref refid="namespaceeosio_1ad3c1abebeb51a91ae0b8ea806e93729f" kindref="member">joincoops_index</ref><sp/><ref refid="structeosio_1_1joincoops" kindref="compound">joincoops</ref>(<ref refid="group__public__consts_1gaf3f1171b99c198fbeb3ab6a3d8c091d9" kindref="member">_soviet</ref>,<sp/>coop_username.value);<sp/></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>card_id<sp/>=<sp/><ref refid="counts_8hpp_1aeb06beaf4402f0222167ef9d12eacd5c" kindref="member">get_global_id</ref>(<ref refid="group__public__consts_1gaf3f1171b99c198fbeb3ab6a3d8c091d9" kindref="member">_soviet</ref>,<sp/></highlight><highlight class="stringliteral">&quot;joincoops&quot;</highlight><highlight class="normal">_n);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><ref refid="structeosio_1_1joincoops" kindref="compound">joincoops</ref>.emplace(<ref refid="group__public__consts_1gae4d59ec28af0642e3072dd36dd0a537b" kindref="member">_registrator</ref>,<sp/>[&amp;](</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;a){</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>a.id<sp/>=<sp/>card_id;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>a.username<sp/>=<sp/>username;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>a.is_paid<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><ref refid="coops_8hpp_1a72a45f6b0b38d457b6995be901b3a86a" kindref="member">decisions_index</ref><sp/><ref refid="structdecisions" kindref="compound">decisions</ref>(<ref refid="group__public__consts_1gaf3f1171b99c198fbeb3ab6a3d8c091d9" kindref="member">_soviet</ref>,<sp/>coop_username.value);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/><ref refid="counts_8hpp_1aeb06beaf4402f0222167ef9d12eacd5c" kindref="member">get_global_id</ref>(<ref refid="group__public__consts_1gaf3f1171b99c198fbeb3ab6a3d8c091d9" kindref="member">_soviet</ref>,<sp/></highlight><highlight class="stringliteral">&quot;decisions&quot;</highlight><highlight class="normal">_n);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><ref refid="structdecisions" kindref="compound">decisions</ref>.emplace(<ref refid="group__public__consts_1gaf3f1171b99c198fbeb3ab6a3d8c091d9" kindref="member">_soviet</ref>,<sp/>[&amp;](</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;d){</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>d.id<sp/>=<sp/>id;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>d.type<sp/>=<sp/><ref refid="group__public__consts_1gace206e4d1676c54066a8ed734347d072" kindref="member">_regaccount_action</ref>;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>d.card_id<sp/>=<sp/>card_id;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>action(</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>permission_level{<sp/><ref refid="group__public__consts_1gaf3f1171b99c198fbeb3ab6a3d8c091d9" kindref="member">_soviet</ref>,<sp/></highlight><highlight class="stringliteral">&quot;active&quot;</highlight><highlight class="normal">_n},</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__public__consts_1gaf3f1171b99c198fbeb3ab6a3d8c091d9" kindref="member">_soviet</ref>,</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;newid&quot;</highlight><highlight class="normal">_n,</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>std::make_tuple(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>).send();</highlight></codeline>
<codeline lineno="42"><highlight class="normal">};</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classeosio_1_1soviet_1ac5ed92ff962a4e9b879b0df3984fa282" kindref="member">soviet::joincoop_effect</ref>(eosio::name<sp/>executer,<sp/>eosio::name<sp/>coop_username,<sp/>uint64_t<sp/>decision_id,<sp/>uint64_t<sp/>card_id)<sp/>{<sp/></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><ref refid="coops_8hpp_1a72a45f6b0b38d457b6995be901b3a86a" kindref="member">decisions_index</ref><sp/><ref refid="structdecisions" kindref="compound">decisions</ref>(<ref refid="group__public__consts_1gaf3f1171b99c198fbeb3ab6a3d8c091d9" kindref="member">_soviet</ref>,<sp/><ref refid="group__public__consts_1gaf3f1171b99c198fbeb3ab6a3d8c091d9" kindref="member">_soviet</ref>.value);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>decision<sp/>=<sp/><ref refid="structdecisions" kindref="compound">decisions</ref>.find(decision_id);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><ref refid="namespaceeosio_1ad3c1abebeb51a91ae0b8ea806e93729f" kindref="member">joincoops_index</ref><sp/><ref refid="structeosio_1_1joincoops" kindref="compound">joincoops</ref>(<ref refid="group__public__consts_1gaf3f1171b99c198fbeb3ab6a3d8c091d9" kindref="member">_soviet</ref>,<sp/>coop_username.value);<sp/></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>joincoop_action<sp/>=<sp/><ref refid="structeosio_1_1joincoops" kindref="compound">joincoops</ref>.find(decision-&gt;card_id);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>action(</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>permission_level{<sp/><ref refid="group__public__consts_1gaf3f1171b99c198fbeb3ab6a3d8c091d9" kindref="member">_soviet</ref>,<sp/></highlight><highlight class="stringliteral">&quot;active&quot;</highlight><highlight class="normal">_n},</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;registrator&quot;</highlight><highlight class="normal">_n,</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;confirmreg&quot;</highlight><highlight class="normal">_n,</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::make_tuple(joincoop_action<sp/>-&gt;<sp/>username)</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>).send();</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><ref refid="structdecisions" kindref="compound">decisions</ref>.modify(decision,<sp/>executer,<sp/>[&amp;](</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;d){</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>d.executed<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><ref refid="structeosio_1_1joincoops" kindref="compound">joincoops</ref>.erase(joincoop_action);</highlight></codeline>
<codeline lineno="65"><highlight class="normal">};</highlight></codeline>
    </programlisting>
    <location file="soviet/src/joincoop.cpp"/>
  </compounddef>
</doxygen>
